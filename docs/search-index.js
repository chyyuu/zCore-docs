var searchIndex = JSON.parse('{\
"acpi":{"doc":"A library for parsing ACPI tables. This crate can be used …","i":[[0,"handler","acpi","",null,null],[3,"PhysicalMapping","acpi::handler","Describes a physical mapping created by …",null,null],[12,"physical_start","","",0,null],[12,"virtual_start","","",0,null],[12,"region_length","","",0,null],[12,"mapped_length","","",0,null],[8,"AcpiHandler","","An implementation of this trait must be provided to allow …",null,null],[10,"map_physical_region","","Given a starting physical address and a size, map a …",1,[[["usize",15]],["physicalmapping",3]]],[10,"unmap_physical_region","","Unmap the given physical mapping. Safe because we consume …",1,[[["physicalmapping",3]]]],[0,"interrupt","acpi","",null,null],[3,"IoApic","acpi::interrupt","",null,null],[12,"id","","",2,null],[12,"address","","",2,null],[12,"global_system_interrupt_base","","",2,null],[3,"NmiLine","","",null,null],[12,"processor","","",3,null],[12,"line","","",3,null],[4,"LocalInterruptLine","","",null,null],[13,"Lint0","","",4,null],[13,"Lint1","","",4,null],[4,"NmiProcessor","","",null,null],[13,"All","","",5,null],[13,"ProcessorUid","","Refers to a processor with the given UID. This is stored …",5,null],[4,"Polarity","","",null,null],[13,"SameAsBus","","",6,null],[13,"ActiveHigh","","",6,null],[13,"ActiveLow","","",6,null],[4,"TriggerMode","","",null,null],[13,"SameAsBus","","",7,null],[13,"Edge","","",7,null],[13,"Level","","",7,null],[3,"InterruptSourceOverride","","Describes a difference in the mapping of an ISA interrupt …",null,null],[12,"isa_source","","",8,null],[12,"global_system_interrupt","","",8,null],[12,"polarity","","",8,null],[12,"trigger_mode","","",8,null],[3,"NmiSource","","Describes a Global System Interrupt that should be …",null,null],[12,"global_system_interrupt","","",9,null],[12,"polarity","","",9,null],[12,"trigger_mode","","",9,null],[3,"Apic","","",null,null],[12,"local_apic_address","","",10,null],[12,"io_apics","","",10,null],[12,"local_apic_nmi_lines","","",10,null],[12,"interrupt_source_overrides","","",10,null],[12,"nmi_sources","","",10,null],[12,"also_has_legacy_pics","","If this field is set, you must remap and mask all the …",10,null],[4,"InterruptModel","","",null,null],[13,"Pic","","This model is only chosen when a newer one can not be …",11,null],[13,"Apic","","Describes an interrupt controller based around the …",11,null],[4,"PowerProfile","acpi","",null,null],[13,"Unspecified","","",12,null],[13,"Desktop","","",12,null],[13,"Mobile","","",12,null],[13,"Workstation","","",12,null],[13,"EnterpriseServer","","",12,null],[13,"SohoServer","","",12,null],[13,"AppliancePc","","",12,null],[13,"PerformanceServer","","",12,null],[13,"Tablet","","",12,null],[13,"Reserved","","",12,null],[3,"HpetInfo","","Information about the High Precision Event Timer",null,null],[12,"event_timer_block_id","","",13,null],[12,"base_address","","",13,null],[12,"hpet_number","","",13,null],[12,"clock_tick_unit","","The minimum number of clock ticks that can be set without …",13,null],[12,"page_protection","","",13,null],[4,"MadtError","","",null,null],[13,"UnexpectedEntry","","",14,null],[13,"InterruptOverrideEntryHasInvalidBus","","",14,null],[13,"InvalidLocalNmiLine","","",14,null],[13,"MpsIntiInvalidPolarity","","",14,null],[13,"MpsIntiInvalidTriggerMode","","",14,null],[3,"PciConfigRegions","","Describes a set of regions of physical memory used to …",null,null],[5,"search_for_rsdp_bios","","This is the entry point of <code>acpi</code> if you have no …",null,[[],[["acpi",3],["acpierror",4],["result",4]]]],[4,"AcpiError","","",null,null],[13,"RsdpIncorrectSignature","","",15,null],[13,"RsdpInvalidOemId","","",15,null],[13,"RsdpInvalidChecksum","","",15,null],[13,"NoValidRsdp","","",15,null],[13,"SdtInvalidSignature","","",15,null],[13,"SdtInvalidOemId","","",15,null],[13,"SdtInvalidTableId","","",15,null],[13,"SdtInvalidChecksum","","",15,null],[13,"InvalidMadt","","",15,null],[4,"ProcessorState","","",null,null],[13,"Disabled","","A processor in this state is unusable, and you must not …",16,null],[13,"WaitingForSipi","","A processor waiting for a SIPI (Startup Inter-processor …",16,null],[13,"Running","","A Running processor is currently brought up and running …",16,null],[3,"Processor","","",null,null],[12,"processor_uid","","",17,null],[12,"local_apic_id","","",17,null],[12,"state","","The state of this processor. Always check that the …",17,null],[12,"is_ap","","Whether this processor is the Bootstrap Processor (BSP), …",17,null],[3,"AmlTable","","",null,null],[12,"address","","Physical address of the start of the AML stream …",18,null],[12,"length","","Length (in bytes) of the AML stream.",18,null],[3,"Acpi","","",null,null],[12,"acpi_revision","","",19,null],[12,"boot_processor","","The boot processor. Until you bring up any APs, this is …",19,null],[12,"application_processors","","Application processes. These are not brought up until you …",19,null],[12,"interrupt_model","","ACPI theoretically allows for more than one interrupt …",19,null],[12,"hpet","","",19,null],[12,"power_profile","","",19,null],[12,"dsdt","","Info about the DSDT, if we find it.",19,null],[12,"ssdts","","Info about any SSDTs, if there are any.",19,null],[12,"pci_config_regions","","Info about the PCI-E configuration memory regions, …",19,null],[5,"parse_rsdp","","This is the entry point of <code>acpi</code> if you have the <strong>physical</strong> …",null,[[["usize",15]],[["acpi",3],["acpierror",4],["result",4]]]],[5,"parse_rsdt","","This is the entry point of <code>acpi</code> if you already have the <strong>…",null,[[["usize",15],["u8",15]],[["acpi",3],["acpierror",4],["result",4]]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","acpi::handler","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","acpi","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","acpi::interrupt","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","acpi","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"deref","acpi::handler","",0,[[]]],[11,"fmt","acpi","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","acpi::interrupt","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","acpi","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"eq","","",12,[[["powerprofile",4]],["bool",15]]],[11,"ne","","",12,[[["powerprofile",4]],["bool",15]]],[11,"eq","","",16,[[["processorstate",4]],["bool",15]]],[11,"eq","","",17,[[["processor",3]],["bool",15]]],[11,"ne","","",17,[[["processor",3]],["bool",15]]],[11,"clone","","",12,[[],["powerprofile",4]]],[11,"clone","","",20,[[],["pciconfigregions",3]]],[11,"clone","","",16,[[],["processorstate",4]]],[11,"clone","","",17,[[],["processor",3]]],[11,"physical_address","","Get the physical address of the start of the …",20,[[["u16",15],["u8",15]],[["option",4],["u64",15]]]]],"p":[[3,"PhysicalMapping"],[8,"AcpiHandler"],[3,"IoApic"],[3,"NmiLine"],[4,"LocalInterruptLine"],[4,"NmiProcessor"],[4,"Polarity"],[4,"TriggerMode"],[3,"InterruptSourceOverride"],[3,"NmiSource"],[3,"Apic"],[4,"InterruptModel"],[4,"PowerProfile"],[3,"HpetInfo"],[4,"MadtError"],[4,"AcpiError"],[4,"ProcessorState"],[3,"Processor"],[3,"AmlTable"],[3,"Acpi"],[3,"PciConfigRegions"]]},\
"ahash":{"doc":"aHashThis hashing algorithm is intended to be a high …","i":[[3,"AHasher","ahash","A <code>Hasher</code> for hashing an arbitrary stream of bytes.",null,null],[3,"RandomState","","Provides a Hasher factory. This is typically used (e.g. …",null,null],[8,"CallHasher","","Provides a way to get an optimized hasher for a given …",null,null],[10,"get_hash","","",0,[[["hasher",8]],["u64",15]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"write_u8","","",1,[[["u8",15]]]],[11,"write_u16","","",1,[[["u16",15]]]],[11,"write_u32","","",1,[[["u32",15]]]],[11,"write_u64","","",1,[[["u64",15]]]],[11,"write_u128","","",1,[[["u128",15]]]],[11,"write_usize","","",1,[[["usize",15]]]],[11,"write","","",1,[[]]],[11,"finish","","",1,[[],["u64",15]]],[11,"build_hasher","","Constructs a new [AHasher] with keys based on compile …",2,[[],["ahasher",3]]],[11,"clone","","",1,[[],["ahasher",3]]],[11,"clone","","",2,[[],["randomstate",3]]],[11,"default","","",2,[[]]],[11,"default","","Constructs a new [AHasher] with compile time generated …",1,[[],["ahasher",3]]],[11,"new_with_keys","","Creates a new hasher keyed to the provided key.",1,[[["u128",15]],["ahasher",3]]],[11,"new","","",2,[[],["randomstate",3]]],[11,"with_seeds","","Allows for explicitly setting the seeds to used.",2,[[["u64",15]],["randomstate",3]]]],"p":[[8,"CallHasher"],[3,"AHasher"],[3,"RandomState"]]},\
"aho_corasick":{"doc":"A library for finding occurrences of many patterns at …","i":[[0,"packed","aho_corasick","A lower level API for packed multiple substring search, …",null,null],[3,"Builder","aho_corasick::packed","A builder for constructing a packed searcher from a …",null,null],[3,"Config","","The configuration for a packed multiple pattern searcher.",null,null],[3,"FindIter","","An iterator over non-overlapping matches from a packed …",null,null],[4,"MatchKind","","A knob for controlling the match semantics of a packed …",null,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports …",0,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports …",0,null],[3,"Searcher","","A packed searcher for quickly finding occurrences of …",null,null],[3,"AhoCorasick","aho_corasick","An automaton for searching multiple strings in linear …",null,null],[3,"AhoCorasickBuilder","","A builder for configuring an Aho-Corasick automaton.",null,null],[3,"FindIter","","An iterator of non-overlapping matches in a particular …",null,null],[3,"FindOverlappingIter","","An iterator of overlapping matches in a particular …",null,null],[4,"MatchKind","","A knob for controlling the match semantics of an …",null,null],[13,"Standard","","Use standard match semantics, which support overlapping …",1,null],[13,"LeftmostFirst","","Use leftmost-first match semantics, which reports …",1,null],[13,"LeftmostLongest","","Use leftmost-longest match semantics, which reports …",1,null],[3,"StreamFindIter","","An iterator that reports Aho-Corasick matches in a stream.",null,null],[3,"Error","","An error that occurred during the construction of an …",null,null],[4,"ErrorKind","","The kind of error that occurred.",null,null],[13,"StateIDOverflow","","An error that occurs when constructing an automaton would …",2,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state ID.",3,null],[13,"PremultiplyOverflow","aho_corasick","An error that occurs when premultiplication of state IDs …",2,null],[12,"max","aho_corasick::ErrorKind","The maximum possible state id.",4,null],[12,"requested_max","","The maximum ID required by premultiplication.",4,null],[8,"StateID","aho_corasick","A trait describing the representation of an automaton’s …",null,null],[10,"from_usize","","Convert from a <code>usize</code> to this implementation’s …",5,[[["usize",15]]]],[10,"to_usize","","Convert this implementation’s representation to a <code>usize</code>.",5,[[],["usize",15]]],[10,"max_id","","Return the maximum state identifier supported by this …",5,[[],["usize",15]]],[3,"Match","","A representation of a match reported by an Aho-Corasick …",null,null],[11,"pattern","","Returns the identifier of the pattern that matched.",6,[[],["usize",15]]],[11,"start","","The starting position of the match.",6,[[],["usize",15]]],[11,"end","","The ending position of the match.",6,[[],["usize",15]]],[11,"is_empty","","Returns true if and only if this match is empty. That is, …",6,[[],["bool",15]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","aho_corasick::packed","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","aho_corasick","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"next","","",8,[[],[["option",4],["match",3]]]],[11,"next","","",9,[[],[["option",4],["match",3]]]],[11,"next","","",10,[[],[["result",6],["option",4]]]],[11,"next","aho_corasick::packed","",16,[[],[["option",4],["match",3]]]],[11,"clone","aho_corasick","",7,[[],["ahocorasick",3]]],[11,"clone","","",11,[[],["ahocorasickbuilder",3]]],[11,"clone","","",1,[[],["matchkind",4]]],[11,"clone","","",12,[[],["error",3]]],[11,"clone","","",2,[[],["errorkind",4]]],[11,"clone","aho_corasick::packed","",0,[[],["matchkind",4]]],[11,"clone","","",13,[[],["config",3]]],[11,"clone","","",14,[[],["builder",3]]],[11,"clone","","",15,[[],["searcher",3]]],[11,"clone","aho_corasick","",6,[[],["match",3]]],[11,"default","","",11,[[],["ahocorasickbuilder",3]]],[11,"default","","",1,[[],["matchkind",4]]],[11,"default","aho_corasick::packed","",0,[[],["matchkind",4]]],[11,"default","","",13,[[],["config",3]]],[11,"default","","",14,[[],["builder",3]]],[11,"eq","aho_corasick","",1,[[["matchkind",4]],["bool",15]]],[11,"eq","aho_corasick::packed","",0,[[["matchkind",4]],["bool",15]]],[11,"eq","aho_corasick","",6,[[["match",3]],["bool",15]]],[11,"ne","","",6,[[["match",3]],["bool",15]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","aho_corasick::packed","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","aho_corasick","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"hash","","",6,[[]]],[11,"description","","",12,[[],["str",15]]],[11,"new","","Create a new Aho-Corasick automaton using the default …",7,[[],["ahocorasick",3]]],[11,"new_auto_configured","","Build an Aho-Corasick automaton with an automatically …",7,[[],["ahocorasick",3]]],[11,"is_match","","Returns true if and only if this automaton matches the …",7,[[["asref",8]],["bool",15]]],[11,"earliest_find","","Returns the location of the first detected match in …",7,[[["asref",8]],[["option",4],["match",3]]]],[11,"find","","Returns the location of the first match according to the …",7,[[["asref",8]],[["option",4],["match",3]]]],[11,"find_iter","","Returns an iterator of non-overlapping matches, using the …",7,[[],["finditer",3]]],[11,"find_overlapping_iter","","Returns an iterator of overlapping matches in the given …",7,[[],["findoverlappingiter",3]]],[11,"replace_all","","Replace all matches with a corresponding value in the …",7,[[["str",15]],["string",3]]],[11,"replace_all_bytes","","Replace all matches using raw bytes with a corresponding …",7,[[],[["u8",15],["vec",3]]]],[11,"replace_all_with","","Replace all matches using a closure called on each match. …",7,[[["string",3],["str",15]]]],[11,"replace_all_with_bytes","","Replace all matches using raw bytes with a closure called …",7,[[["vec",3]]]],[11,"stream_find_iter","","Returns an iterator of non-overlapping matches in the …",7,[[["read",8]],[["streamfinditer",3],["read",8]]]],[11,"stream_replace_all","","Search for and replace all matches of this automaton in …",7,[[],["result",6]]],[11,"stream_replace_all_with","","Search the given reader and replace all matches of this …",7,[[],["result",6]]],[11,"match_kind","","Returns the match kind used by this automaton.",7,[[],["matchkind",4]]],[11,"max_pattern_len","","Returns the length of the longest pattern matched by this …",7,[[],["usize",15]]],[11,"pattern_count","","Return the total number of patterns matched by this …",7,[[],["usize",15]]],[11,"supports_overlapping","","Returns true if and only if this automaton supports …",7,[[],["bool",15]]],[11,"supports_stream","","Returns true if and only if this automaton supports …",7,[[],["bool",15]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this …",7,[[],["usize",15]]],[11,"new","","Create a new builder for configuring an Aho-Corasick …",11,[[],["ahocorasickbuilder",3]]],[11,"build","","Build an Aho-Corasick automaton using the configuration …",11,[[],["ahocorasick",3]]],[11,"build_with_size","","Build an Aho-Corasick automaton using the configuration …",11,[[],[["error",3],["ahocorasick",3],["result",4]]]],[11,"auto_configure","","Automatically configure the settings on this builder …",11,[[],["ahocorasickbuilder",3]]],[11,"match_kind","","Set the desired match semantics.",11,[[["matchkind",4]],["ahocorasickbuilder",3]]],[11,"anchored","","Enable anchored mode, which requires all matches to start …",11,[[["bool",15]],["ahocorasickbuilder",3]]],[11,"ascii_case_insensitive","","Enable ASCII-aware case insensitive matching.",11,[[["bool",15]],["ahocorasickbuilder",3]]],[11,"dense_depth","","Set the limit on how many NFA states use a dense …",11,[[["usize",15]],["ahocorasickbuilder",3]]],[11,"dfa","","Compile the standard Aho-Corasick automaton into a …",11,[[["bool",15]],["ahocorasickbuilder",3]]],[11,"prefilter","","Enable heuristic prefilter optimizations.",11,[[["bool",15]],["ahocorasickbuilder",3]]],[11,"byte_classes","","Shrink the size of the transition alphabet by mapping …",11,[[["bool",15]],["ahocorasickbuilder",3]]],[11,"premultiply","","Premultiply state identifiers in the transition table. …",11,[[["bool",15]],["ahocorasickbuilder",3]]],[11,"kind","","Return the kind of this error.",12,[[],["errorkind",4]]],[11,"new","aho_corasick::packed","Create a new default configuration. A default …",13,[[],["config",3]]],[11,"builder","","Create a packed builder from this configuration. The …",13,[[],["builder",3]]],[11,"match_kind","","Set the match semantics for this configuration.",13,[[["matchkind",4]],["config",3]]],[11,"new","","Create a new builder for constructing a multi-pattern …",14,[[],["builder",3]]],[11,"build","","Build a searcher from the patterns added to this builder …",14,[[],[["searcher",3],["option",4]]]],[11,"add","","Add the given pattern to this set to match.",14,[[["asref",8]],["builder",3]]],[11,"extend","","Add the given iterator of patterns to this set to match.",14,[[],["builder",3]]],[11,"new","","A convenience function for constructing a searcher from …",15,[[],[["searcher",3],["option",4]]]],[11,"find","","Return the first occurrence of any of the patterns in …",15,[[["asref",8]],[["option",4],["match",3]]]],[11,"find_at","","Return the first occurrence of any of the patterns in …",15,[[["asref",8],["usize",15]],[["option",4],["match",3]]]],[11,"find_iter","","Return an iterator of non-overlapping occurrences of the …",15,[[],["finditer",3]]],[11,"match_kind","","Returns the match kind used by this packed searcher.",15,[[],["matchkind",4]]],[11,"minimum_len","","Returns the minimum length of a haystack that is required …",15,[[],["usize",15]]],[11,"heap_bytes","","Returns the approximate total amount of heap used by this …",15,[[],["usize",15]]]],"p":[[4,"MatchKind"],[4,"MatchKind"],[4,"ErrorKind"],[13,"StateIDOverflow"],[13,"PremultiplyOverflow"],[8,"StateID"],[3,"Match"],[3,"AhoCorasick"],[3,"FindIter"],[3,"FindOverlappingIter"],[3,"StreamFindIter"],[3,"AhoCorasickBuilder"],[3,"Error"],[3,"Config"],[3,"Builder"],[3,"Searcher"],[3,"FindIter"]]},\
"async_attributes":{"doc":"Experimental language-level polyfills for Async Rust.","i":[[23,"main","async_attributes","Enables an async main function.",null,null],[23,"test","","Enables an async test function.",null,null],[23,"bench","","Enables an async benchmark function.",null,null]],"p":[]},\
"async_channel":{"doc":"An async multi-producer multi-consumer channel.","i":[[5,"bounded","async_channel","Creates a bounded channel.",null,[[["usize",15]]]],[5,"unbounded","","Creates an unbounded channel.",null,[[]]],[3,"Sender","","The sending side of a channel.",null,null],[11,"try_send","","Attempts to send a message into the channel.",0,[[],[["trysenderror",4],["result",4]]]],[11,"send","","Sends a message into the channel.",0,[[]]],[11,"close","","Closes the channel.",0,[[],["bool",15]]],[11,"is_closed","","Returns <code>true</code> if the channel is closed.",0,[[],["bool",15]]],[11,"is_empty","","Returns <code>true</code> if the channel is empty.",0,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if the channel is full.",0,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",0,[[],["usize",15]]],[11,"capacity","","Returns the channel capacity if it’s bounded.",0,[[],[["usize",15],["option",4]]]],[11,"receiver_count","","Returns the number of receivers for the channel.",0,[[],["usize",15]]],[11,"sender_count","","Returns the number of senders for the channel.",0,[[],["usize",15]]],[3,"Receiver","","The receiving side of a channel.",null,null],[11,"try_recv","","Attempts to receive a message from the channel.",1,[[],[["result",4],["tryrecverror",4]]]],[11,"recv","","Receives a message from the channel.",1,[[]]],[11,"close","","Closes the channel.",1,[[],["bool",15]]],[11,"is_closed","","Returns <code>true</code> if the channel is closed.",1,[[],["bool",15]]],[11,"is_empty","","Returns <code>true</code> if the channel is empty.",1,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if the channel is full.",1,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",1,[[],["usize",15]]],[11,"capacity","","Returns the channel capacity if it’s bounded.",1,[[],[["usize",15],["option",4]]]],[11,"receiver_count","","Returns the number of receivers for the channel.",1,[[],["usize",15]]],[11,"sender_count","","Returns the number of senders for the channel.",1,[[],["usize",15]]],[3,"SendError","","An error returned from [<code>Sender::send()</code>].",null,null],[12,"0","","",2,null],[11,"into_inner","","Unwraps the message that couldn’t be sent.",2,[[]]],[4,"TrySendError","","An error returned from [<code>Sender::try_send()</code>].",null,null],[13,"Full","","The channel is full but not closed.",3,null],[13,"Closed","","The channel is closed.",3,null],[11,"into_inner","","Unwraps the message that couldn’t be sent.",3,[[]]],[11,"is_full","","Returns <code>true</code> if the channel is full but not closed.",3,[[],["bool",15]]],[11,"is_closed","","Returns <code>true</code> if the channel is closed.",3,[[],["bool",15]]],[3,"RecvError","","An error returned from [<code>Receiver::recv()</code>].",null,null],[4,"TryRecvError","","An error returned from [<code>Receiver::try_recv()</code>].",null,null],[13,"Empty","","The channel is empty but not closed.",4,null],[13,"Closed","","The channel is empty and closed.",4,null],[11,"is_empty","","Returns <code>true</code> if the channel is empty but not closed.",4,[[],["bool",15]]],[11,"is_closed","","Returns <code>true</code> if the channel is empty and closed.",4,[[],["bool",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"try_poll_next","","",1,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"drop","","",1,[[]]],[11,"clone","","",0,[[],["sender",3]]],[11,"clone","","",1,[[],["receiver",3]]],[11,"clone","","",2,[[],["senderror",3]]],[11,"clone","","",3,[[],["trysenderror",4]]],[11,"clone","","",5,[[],["recverror",3]]],[11,"clone","","",4,[[],["tryrecverror",4]]],[11,"eq","","",2,[[["senderror",3]],["bool",15]]],[11,"ne","","",2,[[["senderror",3]],["bool",15]]],[11,"eq","","",3,[[["trysenderror",4]],["bool",15]]],[11,"ne","","",3,[[["trysenderror",4]],["bool",15]]],[11,"eq","","",5,[[["recverror",3]],["bool",15]]],[11,"eq","","",4,[[["tryrecverror",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"poll_next","","",1,[[["pin",3],["context",3]],[["option",4],["poll",4]]]]],"p":[[3,"Sender"],[3,"Receiver"],[3,"SendError"],[4,"TrySendError"],[4,"TryRecvError"],[3,"RecvError"]]},\
"async_executor":{"doc":"Async executors.","i":[[3,"Executor","async_executor","An async executor.",null,null],[11,"new","","Creates a new executor.",0,[[],["executor",3]]],[11,"is_empty","","Returns <code>true</code> if there are no unfinished tasks.",0,[[],["bool",15]]],[11,"spawn","","Spawns a task onto the executor.",0,[[],[["send",8],["task",3]]]],[11,"try_tick","","Attempts to run a task if at least one is scheduled.",0,[[],["bool",15]]],[11,"tick","","Runs a single task.",0,[[]]],[11,"run","","Runs the executor until the given future completes.",0,[[]]],[3,"LocalExecutor","","A thread-local executor.",null,null],[11,"new","","Creates a single-threaded executor.",1,[[],["localexecutor",3]]],[11,"is_empty","","Returns <code>true</code> if there are no unfinished tasks.",1,[[],["bool",15]]],[11,"spawn","","Spawns a task onto the executor.",1,[[],["task",3]]],[11,"try_tick","","Attempts to run a task if at least one is scheduled.",1,[[],["bool",15]]],[11,"tick","","Runs a single task.",1,[[]]],[11,"run","","Runs the executor until the given future completes.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"default","","",0,[[],["executor",3]]],[11,"default","","",1,[[],["localexecutor",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"Executor"],[3,"LocalExecutor"]]},\
"async_global_executor":{"doc":"A global executor built on top of async-executor and …","i":[[3,"Task","async_global_executor","A spawned task.",null,null],[3,"GlobalExecutorConfig","","Configuration to init the thread pool for the …",null,null],[5,"block_on","","Runs the global and the local executor on the current …",null,[[["future",8]]]],[5,"spawn","","Spawns a task onto the multi-threaded global executor.",null,[[["future",8],["send",8]],[["task",3],["send",8]]]],[5,"spawn_blocking","","Runs blocking code on a thread pool.",null,[[["fnonce",8],["send",8]]]],[5,"spawn_local","","Spawns a task onto the local executor.",null,[[["future",8]],["task",3]]],[5,"init","","Init the global executor, spawning as many threads as the …",null,[[]]],[5,"init_with_config","","Init the global executor, spawning as many threads as …",null,[[["globalexecutorconfig",3]]]],[5,"spawn_more_threads","","Spawn more executor threads, up to configured max value.",null,[[["usize",15]]]],[5,"stop_current_thread","","Stop the current executor thread, if we exceed the …",null,[[],[["task",3],["bool",15]]]],[5,"stop_thread","","Stop one of the executor threads, down to configured min …",null,[[],[["task",3],["bool",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_future","","",1,[[]]],[11,"try_poll","","",1,[[["pin",3],["context",3]],["poll",4]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"drop","","",1,[[]]],[11,"poll","","",1,[[["task",3],["pin",3],["context",3]],["poll",4]]],[11,"default","","",0,[[],["globalexecutorconfig",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"with_env_var","","Use the specified environment variable to find the number …",0,[[["str",15]]]],[11,"with_min_threads","","Use the specified value as the minimum number of threads.",0,[[["usize",15]]]],[11,"with_max_threads","","Use the specified value as the maximum number of threads.",0,[[["usize",15]]]],[11,"with_thread_name_fn","","Use the specified prefix to name the threads.",0,[[]]],[11,"detach","","Detaches the task to let it keep running in the …",1,[[]]],[11,"cancel","","Cancels the task and waits for it to stop running.",1,[[]]]],"p":[[3,"GlobalExecutorConfig"],[3,"Task"]]},\
"async_io":{"doc":"Async I/O and timers.","i":[[5,"block_on","async_io","Blocks the current thread on a future, processing I/O …",null,[[]]],[3,"Timer","","A future or stream that emits timed events.",null,null],[11,"after","","Creates a timer that emits an event once after the given …",0,[[["duration",3]],["timer",3]]],[11,"at","","Creates a timer that emits an event once at the given …",0,[[["instant",3]],["timer",3]]],[11,"interval","","Creates a timer that emits events periodically.",0,[[["duration",3]],["timer",3]]],[11,"interval_at","","Creates a timer that emits events periodically, starting …",0,[[["instant",3],["duration",3]],["timer",3]]],[11,"set_after","","Sets the timer to emit an en event once after the given …",0,[[["duration",3]]]],[11,"set_at","","Sets the timer to emit an event once at the given time …",0,[[["instant",3]]]],[11,"set_interval","","Sets the timer to emit events periodically.",0,[[["duration",3]]]],[11,"set_interval_at","","Sets the timer to emit events periodically, starting at …",0,[[["instant",3],["duration",3]]]],[3,"Async","","Async adapter for I/O types.",null,null],[11,"new","","Creates an async I/O handle.",1,[[],[["async",3],["result",6]]]],[11,"get_ref","","Gets a reference to the inner I/O handle.",1,[[]]],[11,"get_mut","","Gets a mutable reference to the inner I/O handle.",1,[[]]],[11,"into_inner","","Unwraps the inner I/O handle.",1,[[],["result",6]]],[11,"readable","","Waits until the I/O handle is readable.",1,[[]]],[11,"writable","","Waits until the I/O handle is writable.",1,[[]]],[11,"poll_readable","","Polls the I/O handle for readability.",1,[[["context",3]],[["result",6],["poll",4]]]],[11,"poll_writable","","Polls the I/O handle for writability.",1,[[["context",3]],[["result",6],["poll",4]]]],[11,"read_with","","Performs a read operation asynchronously.",1,[[]]],[11,"read_with_mut","","Performs a read operation asynchronously.",1,[[]]],[11,"write_with","","Performs a write operation asynchronously.",1,[[]]],[11,"write_with_mut","","Performs a write operation asynchronously.",1,[[]]],[11,"bind","","Creates a TCP listener bound to the specified address.",1,[[["socketaddr",4],["into",8]],[["result",6],["async",3]]]],[11,"accept","","Accepts a new incoming TCP connection.",1,[[]]],[11,"incoming","","Returns a stream of incoming TCP connections.",1,[[]]],[11,"connect","","Creates a TCP connection to the specified address.",1,[[["socketaddr",4],["into",8]]]],[11,"peek","","Reads data from the stream without removing it from the …",1,[[]]],[11,"bind","","Creates a UDP socket bound to the specified address.",1,[[["socketaddr",4],["into",8]],[["async",3],["result",6]]]],[11,"recv_from","","Receives a single datagram message.",1,[[]]],[11,"peek_from","","Receives a single datagram message without removing it …",1,[[]]],[11,"send_to","","Sends data to the specified address.",1,[[["socketaddr",4],["into",8]]]],[11,"recv","","Receives a single datagram message from the connected …",1,[[]]],[11,"peek","","Receives a single datagram message from the connected …",1,[[]]],[11,"send","","Sends data to the connected peer.",1,[[]]],[11,"bind","","Creates a UDS listener bound to the specified path.",1,[[["asref",8],["path",3]],[["async",3],["result",6]]]],[11,"accept","","Accepts a new incoming UDS stream connection.",1,[[]]],[11,"incoming","","Returns a stream of incoming UDS connections.",1,[[]]],[11,"connect","","Creates a UDS stream connected to the specified path.",1,[[["asref",8],["path",3]]]],[11,"pair","","Creates an unnamed pair of connected UDS stream sockets.",1,[[],["result",6]]],[11,"bind","","Creates a UDS datagram socket bound to the specified path.",1,[[["asref",8],["path",3]],[["result",6],["async",3]]]],[11,"unbound","","Creates a UDS datagram socket not bound to any address.",1,[[],[["result",6],["async",3]]]],[11,"pair","","Creates an unnamed pair of connected Unix datagram …",1,[[],["result",6]]],[11,"recv_from","","Receives data from the socket.",1,[[]]],[11,"send_to","","Sends data to the specified address.",1,[[["asref",8],["path",3]]]],[11,"recv","","Receives data from the connected peer.",1,[[]]],[11,"send","","Sends data to the connected peer.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_future","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"drop","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"try_from","","",1,[[["tcplistener",3]],["result",6]]],[11,"try_from","","",1,[[["tcpstream",3]],["result",6]]],[11,"try_from","","",1,[[["udpsocket",3]],["result",6]]],[11,"try_from","","",1,[[["unixlistener",3]],["result",6]]],[11,"try_from","","",1,[[["unixstream",3]],["result",6]]],[11,"try_from","","",1,[[["unixdatagram",3]],["result",6]]],[11,"as_raw_fd","","",1,[[],["rawfd",6]]],[11,"poll","","",0,[[["context",3],["pin",3]],["poll",4]]],[11,"poll_next","","",0,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_read","","",1,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",1,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",1,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",1,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",1,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",1,[[["context",3],["pin",3]],[["result",6],["poll",4]]]]],"p":[[3,"Timer"],[3,"Async"]]},\
"async_lock":{"doc":"Async synchronization primitives.","i":[[3,"Barrier","async_lock","A counter to synchronize multiple tasks at the same time.",null,null],[3,"BarrierWaitResult","","Returned by [<code>Barrier::wait()</code>] when all tasks have called …",null,null],[3,"Mutex","","An async mutex.",null,null],[3,"MutexGuard","","A guard that releases the mutex when dropped.",null,null],[3,"MutexGuardArc","","An owned guard that releases the mutex when dropped.",null,null],[3,"RwLock","","An async reader-writer lock.",null,null],[3,"RwLockReadGuard","","A guard that releases the read lock when dropped.",null,null],[3,"RwLockUpgradableReadGuard","","A guard that releases the upgradable read lock when …",null,null],[3,"RwLockWriteGuard","","A guard that releases the write lock when dropped.",null,null],[3,"Semaphore","","A counter for limiting the number of concurrent …",null,null],[3,"SemaphoreGuard","","A guard that releases the acquired permit.",null,null],[3,"SemaphoreGuardArc","","An owned guard that releases the acquired permit.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"drop","","",3,[[]]],[11,"drop","","",4,[[]]],[11,"drop","","",6,[[]]],[11,"drop","","",10,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",2,[[],["mutex",3]]],[11,"from","","",5,[[],["rwlock",3]]],[11,"clone","","",1,[[],["barrierwaitresult",3]]],[11,"default","","",2,[[],["mutex",3]]],[11,"default","","",5,[[],["rwlock",3]]],[11,"deref","","",3,[[]]],[11,"deref","","",4,[[]]],[11,"deref","","",6,[[]]],[11,"deref","","",7,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",3,[[]]],[11,"deref_mut","","",4,[[]]],[11,"deref_mut","","",8,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"new","","Creates a barrier that can block the given number of …",0,[[["usize",15]],["barrier",3]]],[11,"wait","","Blocks the current task until all tasks reach this point.",0,[[]]],[11,"is_leader","","Returns <code>true</code> if this task was the last to call to […",1,[[],["bool",15]]],[11,"new","","Creates a new async mutex.",2,[[],["mutex",3]]],[11,"into_inner","","Consumes the mutex, returning the underlying data.",2,[[]]],[11,"lock","","Acquires the mutex.",2,[[]]],[11,"try_lock","","Attempts to acquire the mutex.",2,[[],[["mutexguard",3],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",2,[[]]],[11,"lock_arc","","Acquires the mutex and clones a reference to it.",2,[[["arc",3]]]],[11,"try_lock_arc","","Attempts to acquire the mutex and clone a reference to it.",2,[[["arc",3]],[["option",4],["mutexguardarc",3]]]],[11,"source","","Returns a reference to the mutex a guard came from.",3,[[["mutexguard",3]],["mutex",3]]],[11,"source","","Returns a reference to the mutex a guard came from.",4,[[["mutexguardarc",3]],["arc",3]]],[11,"new","","Creates a new reader-writer lock.",5,[[],["rwlock",3]]],[11,"into_inner","","Unwraps the lock and returns the inner value.",5,[[]]],[11,"try_read","","Attempts to acquire a read lock.",5,[[],[["option",4],["rwlockreadguard",3]]]],[11,"read","","Acquires a read lock.",5,[[]]],[11,"try_upgradable_read","","Attempts to acquire a read lock with the possiblity to …",5,[[],[["rwlockupgradablereadguard",3],["option",4]]]],[11,"upgradable_read","","Attempts to acquire a read lock with the possiblity to …",5,[[]]],[11,"try_write","","Attempts to acquire a write lock.",5,[[],[["rwlockwriteguard",3],["option",4]]]],[11,"write","","Acquires a write lock.",5,[[]]],[11,"get_mut","","Returns a mutable reference to the inner value.",5,[[]]],[11,"downgrade","","Downgrades into a regular reader guard.",7,[[],["rwlockreadguard",3]]],[11,"try_upgrade","","Attempts to upgrade into a write lock.",7,[[],[["result",4],["rwlockwriteguard",3]]]],[11,"upgrade","","Upgrades into a write lock.",7,[[]]],[11,"downgrade","","Downgrades into a regular reader guard.",8,[[],["rwlockreadguard",3]]],[11,"downgrade_to_upgradable","","Downgrades into an upgradable reader guard.",8,[[],["rwlockupgradablereadguard",3]]],[11,"new","","Creates a new semaphore with a limit of <code>n</code> concurrent …",9,[[["usize",15]],["semaphore",3]]],[11,"try_acquire","","Attempts to get a permit for a concurrent operation.",9,[[],[["semaphoreguard",3],["option",4]]]],[11,"acquire","","Waits for a permit for a concurrent operation.",9,[[]]],[11,"try_acquire_arc","","Attempts to get an owned permit for a concurrent …",9,[[["arc",3]],[["option",4],["semaphoreguardarc",3]]]],[11,"acquire_arc","","Waits for an owned permit for a concurrent operation.",9,[[["arc",3]]]]],"p":[[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Mutex"],[3,"MutexGuard"],[3,"MutexGuardArc"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockUpgradableReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"SemaphoreGuardArc"]]},\
"async_mutex":{"doc":"An async mutex.","i":[[3,"Mutex","async_mutex","An async mutex.",null,null],[11,"new","","Creates a new async mutex.",0,[[],["mutex",3]]],[11,"into_inner","","Consumes the mutex, returning the underlying data.",0,[[]]],[11,"lock","","Acquires the mutex.",0,[[]]],[11,"try_lock","","Attempts to acquire the mutex.",0,[[],[["mutexguard",3],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,[[]]],[11,"lock_arc","","Acquires the mutex and clones a reference to it.",0,[[["arc",3]]]],[11,"try_lock_arc","","Attempts to acquire the mutex and clone a reference to it.",0,[[["arc",3]],[["mutexguardarc",3],["option",4]]]],[3,"MutexGuard","","A guard that releases the mutex when dropped.",null,null],[11,"source","","Returns a reference to the mutex a guard came from.",1,[[["mutexguard",3]],["mutex",3]]],[3,"MutexGuardArc","","An owned guard that releases the mutex when dropped.",null,null],[11,"source","","Returns a reference to the mutex a guard came from.",2,[[["mutexguardarc",3]],["arc",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"drop","","",1,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",0,[[],["mutex",3]]],[11,"default","","",0,[[],["mutex",3]]],[11,"deref","","",1,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",1,[[]]],[11,"deref_mut","","",2,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[3,"Mutex"],[3,"MutexGuard"],[3,"MutexGuardArc"]]},\
"async_std":{"doc":"Async version of the Rust standard library<code>async-std</code> is a …","i":[[0,"task","async_std","Types and traits for working with asynchronous tasks.",null,null],[3,"Context","async_std::task","The <code>Context</code> of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current …",null,null],[13,"Ready","","Represents that a value is immediately ready.",0,null],[13,"Pending","","Represents that a value is not ready yet.",0,null],[3,"Waker","","A <code>Waker</code> is a handle for waking up a task by notifying its …",null,null],[14,"ready","","Extracts the successful type of a <code>Poll<T></code>.",null,null],[5,"yield_now","","Cooperatively gives up a timeslice to the task scheduler.",null,[[]]],[5,"block_on","","Spawns a task and blocks the current thread on its result.",null,[[]]],[3,"Builder","","Task builder that configures the settings of a new task.",null,null],[5,"current","","Returns a handle to the current task.",null,[[],["task",3]]],[3,"Task","","A handle to a task.",null,null],[3,"TaskId","","A unique identifier for a task.",null,null],[3,"JoinHandle","","A handle that awaits the result of a task.",null,null],[5,"sleep","","Sleeps for the specified amount of time.",null,[[["duration",3]]]],[5,"spawn","","Spawns a task.",null,[[],["joinhandle",3]]],[3,"AccessError","","An error returned by <code>LocalKey::try_with</code>.",null,null],[3,"LocalKey","","The key for accessing a task-local value.",null,null],[0,"future","async_std","Asynchronous values.",null,null],[8,"Future","async_std::future","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",1,null],[10,"poll","","Attempt to resolve the future to a final value, …",1,[[["pin",3],["context",3]],["poll",4]]],[5,"pending","","Never resolves to a value.",null,[[]]],[5,"poll_fn","","Creates a new future wrapping around a function returning …",null,[[]]],[5,"ready","","Resolves to the provided value.",null,[[]]],[5,"timeout","","Awaits a future or times out after a duration of time.",null,[[["duration",3]]]],[3,"TimeoutError","","An error returned when a future times out.",null,null],[0,"stream","async_std","Composable asynchronous iteration.",null,null],[5,"empty","async_std::stream","Creates a stream that doesn’t yield any items.",null,[[],["empty",3]]],[3,"Empty","","A stream that doesn’t yield any items.",null,null],[5,"from_fn","","Creates a new stream where to produce each new element a …",null,[[],["fromfn",3]]],[3,"FromFn","","A stream that yields elements by calling a closure.",null,null],[5,"from_iter","","Converts an iterator into a stream.",null,[[["intoiterator",8]],["fromiter",3]]],[3,"FromIter","","A stream that was created from iterator.",null,null],[5,"once","","Creates a stream that yields a single item.",null,[[],["once",3]]],[3,"Once","","A stream that yields a single item.",null,null],[5,"repeat","","Creates a stream that yields the same item repeatedly.",null,[[],["repeat",3]]],[3,"Repeat","","A stream that yields the same item repeatedly.",null,null],[5,"repeat_with","","Creates a new stream that repeats elements of type <code>A</code> …",null,[[],["repeatwith",3]]],[3,"RepeatWith","","A stream that repeats elements of type <code>T</code> endlessly by …",null,null],[3,"Chain","","A stream that chains two streams one after another.",null,null],[3,"Cloned","","A stream that clones the elements of an underlying stream.",null,null],[3,"Copied","","A stream that copies the elements of an underlying stream.",null,null],[3,"Filter","","A stream to filter elements of another stream with a …",null,null],[3,"Fuse","","A stream that yields <code>None</code> forever after the underlying …",null,null],[3,"Inspect","","A stream that does something with each element of another …",null,null],[3,"Map","","A stream that maps value of another stream with a …",null,null],[3,"Scan","","A stream to maintain state while polling another stream.",null,null],[3,"Skip","","A stream to skip first n elements of another stream.",null,null],[3,"SkipWhile","","A stream to skip elements of another stream based on a …",null,null],[3,"StepBy","","A stream that steps a given amount of elements of another …",null,null],[3,"Take","","A stream that yields the first <code>n</code> items of another stream.",null,null],[3,"TakeWhile","","A stream that yields elements based on a predicate.",null,null],[3,"Zip","","A stream that takes items from two other streams …",null,null],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",2,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",2,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",2,[[]]],[8,"StreamExt","","Extension methods for <code>Stream</code>.",null,null],[11,"next","","Advances the stream and returns the next value.",3,[[],["nextfuture",3]]],[11,"take","","Creates a stream that yields its first <code>n</code> elements.",3,[[["usize",15]],["take",3]]],[11,"take_while","","Creates a stream that yields elements based on a …",3,[[],["takewhile",3]]],[11,"step_by","","Creates a stream that yields each <code>step</code>th element.",3,[[["usize",15]],["stepby",3]]],[11,"chain","","Takes two streams and creates a new stream over both in …",3,[[],["chain",3]]],[11,"cloned","","Creates an stream which copies all of its elements.",3,[[],["cloned",3]]],[11,"copied","","Creates an stream which copies all of its elements.",3,[[],["copied",3]]],[11,"cycle","","Creates a stream that yields the provided values …",3,[[],["cycle",3]]],[11,"enumerate","","Creates a stream that gives the current element’s count …",3,[[],["enumerate",3]]],[11,"map","","Takes a closure and creates a stream that calls that …",3,[[],["map",3]]],[11,"inspect","","A combinator that does something with each element in the …",3,[[],["inspect",3]]],[11,"last","","Returns the last element of the stream.",3,[[],["lastfuture",3]]],[11,"fuse","","Creates a stream which ends after the first <code>None</code>.",3,[[],["fuse",3]]],[11,"filter","","Creates a stream that uses a predicate to determine if an …",3,[[],["filter",3]]],[11,"filter_map","","Both filters and maps a stream.",3,[[],["filtermap",3]]],[11,"min_by_key","","Returns the element that gives the minimum value with …",3,[[],["minbykeyfuture",3]]],[11,"max_by_key","","Returns the element that gives the maximum value with …",3,[[],["maxbykeyfuture",3]]],[11,"min_by","","Returns the element that gives the minimum value with …",3,[[],["minbyfuture",3]]],[11,"max","","Returns the element that gives the maximum value. If …",3,[[],["maxfuture",3]]],[11,"min","","Returns the element that gives the minimum value. If …",3,[[],["minfuture",3]]],[11,"max_by","","Returns the element that gives the maximum value with …",3,[[],["maxbyfuture",3]]],[11,"nth","","Returns the nth element of the stream.",3,[[["usize",15]],["nthfuture",3]]],[11,"all","","Tests if every element of the stream matches a predicate.",3,[[],["allfuture",3]]],[11,"find","","Searches for an element in a stream that satisfies a …",3,[[],["findfuture",3]]],[11,"find_map","","Applies function to the elements of stream and returns …",3,[[],["findmapfuture",3]]],[11,"fold","","A combinator that applies a function to every element in …",3,[[],["foldfuture",3]]],[11,"for_each","","Call a closure on each element of the stream.",3,[[],["foreachfuture",3]]],[11,"any","","Tests if any element of the stream matches a predicate.",3,[[],["anyfuture",3]]],[11,"scan","","A stream adaptor similar to <code>fold</code> that holds internal …",3,[[],["scan",3]]],[11,"skip_while","","Combinator that <code>skip</code>s elements based on a predicate.",3,[[],["skipwhile",3]]],[11,"skip","","Creates a combinator that skips the first <code>n</code> elements.",3,[[["usize",15]],["skip",3]]],[11,"try_fold","","A combinator that applies a function as long as it …",3,[[],["tryfoldfuture",3]]],[11,"try_for_each","","Applies a falliable function to each element in a stream, …",3,[[],["tryforeachfuture",3]]],[11,"zip","","‘Zips up’ two streams into a single stream of pairs.",3,[[],["zip",3]]],[11,"partial_cmp","","Lexicographically compares the elements of this <code>Stream</code> …",3,[[],["partialcmpfuture",3]]],[11,"position","","Searches for an element in a Stream that satisfies a …",3,[[],["positionfuture",3]]],[11,"cmp","","Lexicographically compares the elements of this <code>Stream</code> …",3,[[],["cmpfuture",3]]],[11,"ne","","Determines if the elements of this <code>Stream</code> are …",3,[[],["nefuture",3]]],[11,"ge","","Determines if the elements of this <code>Stream</code> are …",3,[[],["gefuture",3]]],[11,"eq","","Determines if the elements of this <code>Stream</code> are …",3,[[],["eqfuture",3]]],[11,"gt","","Determines if the elements of this <code>Stream</code> are …",3,[[],["gtfuture",3]]],[11,"le","","Determines if the elements of this <code>Stream</code> are …",3,[[],["lefuture",3]]],[11,"lt","","Determines if the elements of this <code>Stream</code> are …",3,[[],["ltfuture",3]]],[0,"io","async_std","Traits, helpers, and type definitions for core I/O …",null,null],[0,"prelude","async_std::io","The async I/O prelude.",null,null],[8,"BufReadExt","async_std::io::prelude","Extension methods for <code>BufRead</code>.",null,null],[11,"read_until","","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …",4,[[["vec",3],["u8",15]],["readuntilfuture",3]]],[11,"read_line","","Reads all bytes and appends them into <code>buf</code> until a newline …",4,[[["string",3]],["readlinefuture",3]]],[11,"lines","","Returns a stream over the lines of this byte stream.",4,[[],["lines",3]]],[11,"split","","Returns a stream over the contents of this reader split …",4,[[["u8",15]],["split",3]]],[8,"ReadExt","","Extension methods for <code>Read</code>.",null,null],[11,"read","","Reads some bytes from the byte stream.",5,[[],["readfuture",3]]],[11,"read_vectored","","Like <code>read</code>, except that it reads into a slice of buffers.",5,[[],["readvectoredfuture",3]]],[11,"read_to_end","","Reads all bytes from the byte stream.",5,[[["vec",3]],["readtoendfuture",3]]],[11,"read_to_string","","Reads all bytes from the byte stream and appends them …",5,[[["string",3]],["readtostringfuture",3]]],[11,"read_exact","","Reads the exact number of bytes required to fill <code>buf</code>.",5,[[],["readexactfuture",3]]],[11,"take","","Creates an adaptor which will read at most <code>limit</code> bytes …",5,[[["u64",15]],["take",3]]],[11,"by_ref","","Creates a “by reference” adaptor for this instance of …",5,[[]]],[11,"bytes","","Transforms this <code>Read</code> instance to a <code>Stream</code> over its bytes.",5,[[],["bytes",3]]],[11,"chain","","Creates an adaptor which will chain this stream with …",5,[[["read",8]],[["chain",3],["read",8]]]],[8,"SeekExt","","Extension methods for <code>Seek</code>.",null,null],[11,"seek","","Seeks to a new position in a byte stream.",6,[[["seekfrom",4]],["seekfuture",3]]],[8,"WriteExt","","Extension methods for <code>Write</code>.",null,null],[11,"write","","Writes some bytes into the byte stream.",7,[[],["writefuture",3]]],[11,"flush","","Flushes the stream to ensure that all buffered contents …",7,[[],["flushfuture",3]]],[11,"write_vectored","","Like <code>write</code>, except that it writes from a slice of buffers.",7,[[],["writevectoredfuture",3]]],[11,"write_all","","Writes an entire buffer into the byte stream.",7,[[],["writeallfuture",3]]],[11,"write_fmt","","Writes a formatted string into this writer, returning any …",7,[[["arguments",3]],["writefmtfuture",3]]],[11,"read_until","","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …",4,[[["vec",3],["u8",15]],["readuntilfuture",3]]],[11,"read_line","","Reads all bytes and appends them into <code>buf</code> until a newline …",4,[[["string",3]],["readlinefuture",3]]],[11,"lines","","Returns a stream over the lines of this byte stream.",4,[[],["lines",3]]],[11,"split","","Returns a stream over the contents of this reader split …",4,[[["u8",15]],["split",3]]],[11,"read","","Reads some bytes from the byte stream.",5,[[],["readfuture",3]]],[11,"read_vectored","","Like <code>read</code>, except that it reads into a slice of buffers.",5,[[],["readvectoredfuture",3]]],[11,"read_to_end","","Reads all bytes from the byte stream.",5,[[["vec",3]],["readtoendfuture",3]]],[11,"read_to_string","","Reads all bytes from the byte stream and appends them …",5,[[["string",3]],["readtostringfuture",3]]],[11,"read_exact","","Reads the exact number of bytes required to fill <code>buf</code>.",5,[[],["readexactfuture",3]]],[11,"take","","Creates an adaptor which will read at most <code>limit</code> bytes …",5,[[["u64",15]],["take",3]]],[11,"by_ref","","Creates a “by reference” adaptor for this instance of …",5,[[]]],[11,"bytes","","Transforms this <code>Read</code> instance to a <code>Stream</code> over its bytes.",5,[[],["bytes",3]]],[11,"chain","","Creates an adaptor which will chain this stream with …",5,[[["read",8]],[["chain",3],["read",8]]]],[11,"seek","","Seeks to a new position in a byte stream.",6,[[["seekfrom",4]],["seekfuture",3]]],[11,"write","","Writes some bytes into the byte stream.",7,[[],["writefuture",3]]],[11,"flush","","Flushes the stream to ensure that all buffered contents …",7,[[],["flushfuture",3]]],[11,"write_vectored","","Like <code>write</code>, except that it writes from a slice of buffers.",7,[[],["writevectoredfuture",3]]],[11,"write_all","","Writes an entire buffer into the byte stream.",7,[[],["writeallfuture",3]]],[11,"write_fmt","","Writes a formatted string into this writer, returning any …",7,[[["arguments",3]],["writefmtfuture",3]]],[3,"Error","async_std::io","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",8,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",8,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",8,null],[13,"ConnectionReset","","The connection was reset by the remote server.",8,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote …",8,null],[13,"NotConnected","","The network operation failed because it was not connected …",8,null],[13,"AddrInUse","","A socket address could not be bound because the address …",8,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested …",8,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",8,null],[13,"AlreadyExists","","An entity already exists, often a file.",8,null],[13,"WouldBlock","","The operation needs to block to complete, but the …",8,null],[13,"InvalidInput","","A parameter was incorrect.",8,null],[13,"InvalidData","","Data not valid for the operation were encountered.",8,null],[13,"TimedOut","","The I/O operation’s timeout expired, causing it to be …",8,null],[13,"WriteZero","","An error returned when an operation could not be …",8,null],[13,"Interrupted","","This operation was interrupted.",8,null],[13,"Other","","Any I/O error not part of this list.",8,null],[13,"UnexpectedEof","","An error returned when an operation could not be …",8,null],[3,"IoSlice","","A buffer type used with <code>Write::write_vectored</code>.",null,null],[3,"IoSliceMut","","A buffer type used with <code>Read::read_vectored</code>.",null,null],[6,"Result","","A specialized <code>Result</code> type for I/O operations.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O …",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",9,null],[13,"End","","Sets the offset to the size of this object plus the …",9,null],[13,"Current","","Sets the offset to the current position plus the …",9,null],[8,"BufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer, …",10,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",10,[[["usize",15],["pin",3]]]],[3,"Lines","","A stream of lines in a byte stream.",null,null],[3,"Split","","A stream over the contents of an instance of <code>BufRead</code> …",null,null],[3,"BufReader","","Adds buffering to any reader.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"IntoInnerError","","An error returned by <code>into_inner</code> which combines an error …",null,null],[5,"copy","","Copies the entire contents of a reader into a writer.",null,[[]]],[3,"Cursor","","A <code>Cursor</code> wraps an in-memory buffer and provides it with a …",null,null],[5,"empty","","Creates a reader that contains no data.",null,[[],["empty",3]]],[3,"Empty","","A reader that contains no data.",null,null],[3,"Bytes","","A stream over <code>u8</code> values of a reader.",null,null],[3,"Chain","","Adaptor to chain together two readers.",null,null],[3,"Take","","Reader adaptor which limits the bytes read from an …",null,null],[8,"Read","","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",11,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",11,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[8,"ReadExt","","Extension methods for <code>Read</code>.",null,null],[11,"read","async_std::io::prelude","Reads some bytes from the byte stream.",5,[[],["readfuture",3]]],[11,"read_vectored","","Like <code>read</code>, except that it reads into a slice of buffers.",5,[[],["readvectoredfuture",3]]],[11,"read_to_end","","Reads all bytes from the byte stream.",5,[[["vec",3]],["readtoendfuture",3]]],[11,"read_to_string","","Reads all bytes from the byte stream and appends them …",5,[[["string",3]],["readtostringfuture",3]]],[11,"read_exact","","Reads the exact number of bytes required to fill <code>buf</code>.",5,[[],["readexactfuture",3]]],[11,"take","","Creates an adaptor which will read at most <code>limit</code> bytes …",5,[[["u64",15]],["take",3]]],[11,"by_ref","","Creates a “by reference” adaptor for this instance of …",5,[[]]],[11,"bytes","","Transforms this <code>Read</code> instance to a <code>Stream</code> over its bytes.",5,[[],["bytes",3]]],[11,"chain","","Creates an adaptor which will chain this stream with …",5,[[["read",8]],[["chain",3],["read",8]]]],[5,"repeat","async_std::io","Creates an instance of a reader that infinitely repeats …",null,[[["u8",15]],["repeat",3]]],[3,"Repeat","","A reader which yields one byte over and over and over and …",null,null],[8,"Seek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",12,[[["pin",3],["seekfrom",4],["context",3]],[["result",4],["poll",4]]]],[5,"sink","","Creates a writer that consumes and drops all data.",null,[[],["sink",3]]],[3,"Sink","","A writer that consumes and drops all data.",null,null],[8,"Write","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",13,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",13,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered …",13,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[10,"poll_close","","Attempt to close the object.",13,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[5,"stderr","","Constructs a new handle to the standard error of the …",null,[[],["stderr",3]]],[3,"Stderr","","A handle to the standard error of the current process.",null,null],[5,"stdin","","Constructs a new handle to the standard input of the …",null,[[],["stdin",3]]],[3,"Stdin","","A handle to the standard input of the current process.",null,null],[5,"stdout","","Constructs a new handle to the standard output of the …",null,[[],["stdout",3]]],[3,"Stdout","","A handle to the standard output of the current process.",null,null],[5,"timeout","","Awaits an I/O future or times out after a duration of …",null,[[["duration",3]]]],[0,"os","async_std","OS-specific extensions.",null,null],[0,"unix","async_std::os","Platform-specific extensions for Unix platforms.",null,null],[0,"io","async_std::os::unix","Unix-specific I/O extensions.",null,null],[8,"AsRawFd","async_std::os::unix::io","A trait to extract the raw unix file descriptor from an …",null,null],[10,"as_raw_fd","","Extracts the raw file descriptor.",14,[[],["i32",15]]],[8,"FromRawFd","","A trait to express the ability to construct an object …",null,null],[10,"from_raw_fd","","Constructs a new instance of <code>Self</code> from the given raw file …",15,[[["i32",15]]]],[8,"IntoRawFd","","A trait to express the ability to consume an object and …",null,null],[10,"into_raw_fd","","Consumes this object, returning the raw underlying file …",16,[[],["i32",15]]],[6,"RawFd","","Raw file descriptors.",null,null],[0,"fs","async_std::os::unix","Unix-specific filesystem extensions.",null,null],[5,"symlink","async_std::os::unix::fs","Creates a new symbolic link on the filesystem.",null,[[["path",3],["asref",8]]]],[8,"DirBuilderExt","","Unix-specific extensions to [<code>fs::DirBuilder</code>].",null,null],[10,"mode","","Sets the mode to create new directories with. This option …",17,[[["u32",15]]]],[8,"DirEntryExt","","Unix-specific extension methods for [<code>fs::DirEntry</code>].",null,null],[10,"ino","","Returns the underlying <code>d_ino</code> field in the contained <code>dirent</code>…",18,[[],["u64",15]]],[8,"OpenOptionsExt","","Unix-specific extensions to [<code>fs::OpenOptions</code>].",null,null],[10,"mode","","Sets the mode bits that a new file will be created with.",19,[[["u32",15]]]],[10,"custom_flags","","Pass custom flags to the <code>flags</code> argument of <code>open</code>.",19,[[["i32",15]]]],[0,"net","async_std::os::unix","Unix-specific networking extensions.",null,null],[3,"UnixDatagram","async_std::os::unix::net","A Unix datagram socket.",null,null],[3,"Incoming","","A stream of incoming Unix domain socket connections.",null,null],[3,"UnixListener","","A Unix domain socket server, listening for connections.",null,null],[3,"UnixStream","","A Unix stream socket.",null,null],[3,"SocketAddr","","An address associated with a Unix socket.",null,null],[0,"prelude","async_std","The async prelude.",null,null],[8,"FutureExt","async_std::prelude","Extension methods for <code>Future</code>.",null,null],[8,"StreamExt","","Extension methods for <code>Stream</code>.",null,null],[11,"next","async_std::stream","Advances the stream and returns the next value.",3,[[],["nextfuture",3]]],[11,"take","","Creates a stream that yields its first <code>n</code> elements.",3,[[["usize",15]],["take",3]]],[11,"take_while","","Creates a stream that yields elements based on a …",3,[[],["takewhile",3]]],[11,"step_by","","Creates a stream that yields each <code>step</code>th element.",3,[[["usize",15]],["stepby",3]]],[11,"chain","","Takes two streams and creates a new stream over both in …",3,[[],["chain",3]]],[11,"cloned","","Creates an stream which copies all of its elements.",3,[[],["cloned",3]]],[11,"copied","","Creates an stream which copies all of its elements.",3,[[],["copied",3]]],[11,"cycle","","Creates a stream that yields the provided values …",3,[[],["cycle",3]]],[11,"enumerate","","Creates a stream that gives the current element’s count …",3,[[],["enumerate",3]]],[11,"map","","Takes a closure and creates a stream that calls that …",3,[[],["map",3]]],[11,"inspect","","A combinator that does something with each element in the …",3,[[],["inspect",3]]],[11,"last","","Returns the last element of the stream.",3,[[],["lastfuture",3]]],[11,"fuse","","Creates a stream which ends after the first <code>None</code>.",3,[[],["fuse",3]]],[11,"filter","","Creates a stream that uses a predicate to determine if an …",3,[[],["filter",3]]],[11,"filter_map","","Both filters and maps a stream.",3,[[],["filtermap",3]]],[11,"min_by_key","","Returns the element that gives the minimum value with …",3,[[],["minbykeyfuture",3]]],[11,"max_by_key","","Returns the element that gives the maximum value with …",3,[[],["maxbykeyfuture",3]]],[11,"min_by","","Returns the element that gives the minimum value with …",3,[[],["minbyfuture",3]]],[11,"max","","Returns the element that gives the maximum value. If …",3,[[],["maxfuture",3]]],[11,"min","","Returns the element that gives the minimum value. If …",3,[[],["minfuture",3]]],[11,"max_by","","Returns the element that gives the maximum value with …",3,[[],["maxbyfuture",3]]],[11,"nth","","Returns the nth element of the stream.",3,[[["usize",15]],["nthfuture",3]]],[11,"all","","Tests if every element of the stream matches a predicate.",3,[[],["allfuture",3]]],[11,"find","","Searches for an element in a stream that satisfies a …",3,[[],["findfuture",3]]],[11,"find_map","","Applies function to the elements of stream and returns …",3,[[],["findmapfuture",3]]],[11,"fold","","A combinator that applies a function to every element in …",3,[[],["foldfuture",3]]],[11,"for_each","","Call a closure on each element of the stream.",3,[[],["foreachfuture",3]]],[11,"any","","Tests if any element of the stream matches a predicate.",3,[[],["anyfuture",3]]],[11,"scan","","A stream adaptor similar to <code>fold</code> that holds internal …",3,[[],["scan",3]]],[11,"skip_while","","Combinator that <code>skip</code>s elements based on a predicate.",3,[[],["skipwhile",3]]],[11,"skip","","Creates a combinator that skips the first <code>n</code> elements.",3,[[["usize",15]],["skip",3]]],[11,"try_fold","","A combinator that applies a function as long as it …",3,[[],["tryfoldfuture",3]]],[11,"try_for_each","","Applies a falliable function to each element in a stream, …",3,[[],["tryforeachfuture",3]]],[11,"zip","","‘Zips up’ two streams into a single stream of pairs.",3,[[],["zip",3]]],[11,"partial_cmp","","Lexicographically compares the elements of this <code>Stream</code> …",3,[[],["partialcmpfuture",3]]],[11,"position","","Searches for an element in a Stream that satisfies a …",3,[[],["positionfuture",3]]],[11,"cmp","","Lexicographically compares the elements of this <code>Stream</code> …",3,[[],["cmpfuture",3]]],[11,"ne","","Determines if the elements of this <code>Stream</code> are …",3,[[],["nefuture",3]]],[11,"ge","","Determines if the elements of this <code>Stream</code> are …",3,[[],["gefuture",3]]],[11,"eq","","Determines if the elements of this <code>Stream</code> are …",3,[[],["eqfuture",3]]],[11,"gt","","Determines if the elements of this <code>Stream</code> are …",3,[[],["gtfuture",3]]],[11,"le","","Determines if the elements of this <code>Stream</code> are …",3,[[],["lefuture",3]]],[11,"lt","","Determines if the elements of this <code>Stream</code> are …",3,[[],["ltfuture",3]]],[0,"sync","async_std","Synchronization primitives.",null,null],[3,"Arc","async_std::sync","A thread-safe reference-counting pointer. ‘Arc’ …",null,null],[3,"Weak","","<code>Weak</code> is a version of [<code>Arc</code>] that holds a non-owning …",null,null],[3,"Mutex","","An async mutex.",null,null],[3,"MutexGuard","","A guard that releases the mutex when dropped.",null,null],[3,"MutexGuardArc","","An owned guard that releases the mutex when dropped.",null,null],[3,"RwLock","","An async reader-writer lock.",null,null],[3,"RwLockReadGuard","","A guard that releases the read lock when dropped.",null,null],[3,"RwLockUpgradableReadGuard","","A guard that releases the upgradable read lock when …",null,null],[3,"RwLockWriteGuard","","A guard that releases the write lock when dropped.",null,null],[0,"channel","async_std","Channels",null,null],[5,"bounded","async_std::channel","Creates a bounded channel.",null,[[["usize",15]]]],[5,"unbounded","","Creates an unbounded channel.",null,[[]]],[3,"Sender","","The sending side of a channel.",null,null],[3,"Receiver","","The receiving side of a channel.",null,null],[3,"SendError","","An error returned from [<code>Sender::send()</code>].",null,null],[12,"0","","",20,null],[4,"TrySendError","","An error returned from [<code>Sender::try_send()</code>].",null,null],[13,"Full","","The channel is full but not closed.",21,null],[13,"Closed","","The channel is closed.",21,null],[3,"RecvError","","An error returned from [<code>Receiver::recv()</code>].",null,null],[4,"TryRecvError","","An error returned from [<code>Receiver::try_recv()</code>].",null,null],[13,"Empty","","The channel is empty but not closed.",22,null],[13,"Closed","","The channel is empty and closed.",22,null],[0,"fs","async_std","Filesystem manipulation operations.",null,null],[3,"DirBuilder","async_std::fs","A builder for creating directories with configurable …",null,null],[3,"DirEntry","","An entry in a directory.",null,null],[3,"File","","An open file on the filesystem.",null,null],[3,"FileType","","A structure representing a type of file with accessors …",null,null],[3,"Metadata","","Metadata information about a file.",null,null],[3,"OpenOptions","","A builder for opening files with configurable options.",null,null],[3,"Permissions","","Representation of the various permissions on a file.",null,null],[3,"ReadDir","","A stream of entries in a directory.",null,null],[5,"canonicalize","","Returns the canonical form of a path.",null,[[["path",3],["asref",8]]]],[5,"copy","","Copies the contents and permissions of a file to a new …",null,[[["path",3],["asref",8]]]],[5,"create_dir","","Creates a new directory.",null,[[["path",3],["asref",8]]]],[5,"create_dir_all","","Creates a new directory and all of its parents if they …",null,[[["path",3],["asref",8]]]],[5,"hard_link","","Creates a hard link on the filesystem.",null,[[["path",3],["asref",8]]]],[5,"metadata","","Reads metadata for a path.",null,[[["path",3],["asref",8]]]],[5,"read","","Reads the entire contents of a file as raw bytes.",null,[[["path",3],["asref",8]]]],[5,"read_dir","","Returns a stream of entries in a directory.",null,[[["path",3],["asref",8]]]],[5,"read_link","","Reads a symbolic link and returns the path it points to.",null,[[["path",3],["asref",8]]]],[5,"read_to_string","","Reads the entire contents of a file as a string.",null,[[["path",3],["asref",8]]]],[5,"remove_dir","","Removes an empty directory.",null,[[["path",3],["asref",8]]]],[5,"remove_dir_all","","Removes a directory and all of its contents.",null,[[["path",3],["asref",8]]]],[5,"remove_file","","Removes a file.",null,[[["path",3],["asref",8]]]],[5,"rename","","Renames a file or directory to a new location.",null,[[["path",3],["asref",8]]]],[5,"set_permissions","","Changes the permissions of a file or directory.",null,[[["path",3],["permissions",3],["asref",8]]]],[5,"symlink_metadata","","Reads metadata for a path without following symbolic …",null,[[["path",3],["asref",8]]]],[5,"write","","Writes a slice of bytes as the new contents of a file.",null,[[["path",3],["asref",8],["asref",8]]]],[0,"path","async_std","Cross-platform path manipulation.",null,null],[5,"is_separator","async_std::path","Determines whether the character is one of the permitted …",null,[[["char",15]],["bool",15]]],[4,"Component","","A single component of a path.",null,null],[13,"Prefix","","A Windows path prefix, e.g., <code>C:</code> or <code>\\\\\\\\server\\\\share</code>.",23,null],[13,"RootDir","","The root directory component, appears after any prefix …",23,null],[13,"CurDir","","A reference to the current directory, i.e., <code>.</code>.",23,null],[13,"ParentDir","","A reference to the parent directory, i.e., <code>..</code>.",23,null],[13,"Normal","","A normal component, e.g., <code>a</code> and <code>b</code> in <code>a/b</code>.",23,null],[3,"Display","","Helper struct for safely printing paths with <code>format!</code> and …",null,null],[4,"Prefix","","Windows path prefixes, e.g., <code>C:</code> or <code>\\\\\\\\server\\\\share</code>.",null,null],[13,"Verbatim","","Verbatim prefix, e.g., <code>\\\\\\\\?\\\\cat_pics</code>.",24,null],[13,"VerbatimUNC","","Verbatim prefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>…",24,null],[13,"VerbatimDisk","","Verbatim disk prefix, e.g., <code>\\\\\\\\?\\\\C:</code>.",24,null],[13,"DeviceNS","","Device namespace prefix, e.g., <code>\\\\\\\\.\\\\COM42</code>.",24,null],[13,"UNC","","Prefix using Windows’ <em><strong>U</strong>niform <strong>N</strong>aming <strong>C</strong>onvention</em>, e.g. …",24,null],[13,"Disk","","Prefix <code>C:</code> for the given disk drive.",24,null],[3,"PrefixComponent","","A structure wrapping a Windows path prefix as well as its …",null,null],[3,"StripPrefixError","","An error returned from [<code>Path::strip_prefix</code>] if the prefix …",null,null],[17,"MAIN_SEPARATOR","","The primary separator of path components for the current …",null,null],[3,"Ancestors","","An iterator over <code>Path</code> and its ancestors.",null,null],[3,"Components","","An iterator over the <code>Component</code>s of a <code>Path</code>.",null,null],[3,"Iter","","An iterator over the <code>Component</code>s of a <code>Path</code>, as <code>OsStr</code> …",null,null],[3,"Path","","A slice of a path.",null,null],[3,"PathBuf","","This struct is an async version of [<code>std::path::PathBuf</code>].",null,null],[0,"net","async_std","Networking primitives for TCP/UDP communication.",null,null],[3,"AddrParseError","async_std::net","An error which can be returned when parsing an IP address …",null,null],[4,"Shutdown","","Possible values which can be passed to the […",null,null],[13,"Read","","The reading portion of the [<code>TcpStream</code>] should be shut …",25,null],[13,"Write","","The writing portion of the [<code>TcpStream</code>] should be shut …",25,null],[13,"Both","","Both the reading and the writing portions of the […",25,null],[4,"IpAddr","","An IP address, either IPv4 or IPv6.",null,null],[13,"V4","","An IPv4 address.",26,null],[13,"V6","","An IPv6 address.",26,null],[3,"Ipv4Addr","","An IPv4 address.",null,null],[3,"Ipv6Addr","","An IPv6 address.",null,null],[4,"SocketAddr","","An internet socket address, either IPv4 or IPv6.",null,null],[13,"V4","","An IPv4 socket address.",27,null],[13,"V6","","An IPv6 socket address.",27,null],[3,"SocketAddrV4","","An IPv4 socket address.",null,null],[3,"SocketAddrV6","","An IPv6 socket address.",null,null],[8,"ToSocketAddrs","","Converts or resolves addresses to <code>SocketAddr</code> values.",null,null],[16,"Iter","","Returned iterator over socket addresses which this type …",28,null],[10,"to_socket_addrs","","Converts this object to an iterator of resolved <code>SocketAddr</code>…",28,[[],["tosocketaddrsfuture",4]]],[3,"Incoming","","A stream of incoming TCP connections.",null,null],[3,"TcpListener","","A TCP socket server, listening for connections.",null,null],[3,"TcpStream","","A TCP stream between a local and a remote socket.",null,null],[3,"UdpSocket","","A UDP socket.",null,null],[23,"main","async_std","Enables an async main function.",null,null],[23,"test","","Enables an async test function.",null,null],[14,"task_local","","Declares task-local values.",null,null],[11,"from","async_std::task","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_future","","",30,[[]]],[11,"try_poll","","",30,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","async_std::future","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","async_std::stream","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"try_poll_next","","",38,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"try_poll_next","","",39,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"try_poll_next","","",40,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"try_poll_next","","",41,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"try_poll_next","","",42,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"try_poll_next","","",43,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"try_poll_next","","",44,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"try_poll_next","","",45,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"try_poll_next","","",46,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"try_poll_next","","",47,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"try_poll_next","","",48,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"try_poll_next","","",49,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"try_poll_next","","",50,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"try_poll_next","","",52,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"try_poll_next","","",53,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"try_poll_next","","",54,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"try_poll_next","","",55,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"try_poll_next","","",56,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"try_poll_next","","",57,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","async_std::io","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"try_poll_next","","",58,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"try_poll_next","","",59,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"try_poll_next","","",60,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_string","","",73,[[],["string",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","async_std::os::unix::net","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"try_poll_next","","",78,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","async_std::sync","",81,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","async_std::channel","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"try_poll_next","","",91,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"to_string","","",92,[[],["string",3]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","async_std::fs","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"try_poll_next","","",100,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","async_std::path","",101,[[]]],[11,"into","","",101,[[]]],[11,"into_iter","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"into_iter","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"into_iter","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_string","","",106,[[],["string",3]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"to_string","","",108,[[],["string",3]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","async_std::net","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"try_poll_next","","",110,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"to_string","","",115,[[],["string",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"to_string","","",116,[[],["string",3]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"to_string","","",117,[[],["string",3]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"clone","","",115,[[],["ipv6addr",3]]],[11,"clone","async_std::io","",74,[[],["ioslice",3]]],[11,"clone","async_std::net","",117,[[],["socketaddrv6",3]]],[11,"clone","async_std::path","",108,[[],["stripprefixerror",3]]],[11,"clone","async_std::io","",9,[[],["seekfrom",4]]],[11,"clone","async_std::net","",113,[[],["addrparseerror",3]]],[11,"clone","async_std::path","",23,[[],["component",4]]],[11,"clone","async_std::fs","",97,[[],["metadata",3]]],[11,"clone","","",96,[[],["filetype",3]]],[11,"clone","async_std::net","",114,[[],["ipv4addr",3]]],[11,"clone","","",27,[[],["socketaddr",4]]],[11,"clone","async_std::path","",24,[[],["prefix",4]]],[11,"clone","async_std::net","",26,[[],["ipaddr",4]]],[11,"clone","async_std::io","",8,[[],["errorkind",4]]],[11,"clone","async_std::os::unix::net","",80,[[],["socketaddr",3]]],[11,"clone","async_std::net","",116,[[],["socketaddrv4",3]]],[11,"clone","","",25,[[],["shutdown",4]]],[11,"clone","async_std::path","",107,[[],["prefixcomponent",3]]],[11,"clone","async_std::fs","",99,[[],["permissions",3]]],[11,"as_raw_stat","","",97,[[],["stat",3]]],[11,"st_dev","","",97,[[],["u64",15]]],[11,"st_ino","","",97,[[],["u64",15]]],[11,"st_mode","","",97,[[],["u32",15]]],[11,"st_nlink","","",97,[[],["u64",15]]],[11,"st_uid","","",97,[[],["u32",15]]],[11,"st_gid","","",97,[[],["u32",15]]],[11,"st_rdev","","",97,[[],["u64",15]]],[11,"st_size","","",97,[[],["u64",15]]],[11,"st_atime","","",97,[[],["i64",15]]],[11,"st_atime_nsec","","",97,[[],["i64",15]]],[11,"st_mtime","","",97,[[],["i64",15]]],[11,"st_mtime_nsec","","",97,[[],["i64",15]]],[11,"st_ctime","","",97,[[],["i64",15]]],[11,"st_ctime_nsec","","",97,[[],["i64",15]]],[11,"st_blksize","","",97,[[],["u64",15]]],[11,"st_blocks","","",97,[[],["u64",15]]],[11,"dev","","",97,[[],["u64",15]]],[11,"ino","","",97,[[],["u64",15]]],[11,"mode","","",97,[[],["u32",15]]],[11,"nlink","","",97,[[],["u64",15]]],[11,"uid","","",97,[[],["u32",15]]],[11,"gid","","",97,[[],["u32",15]]],[11,"rdev","","",97,[[],["u64",15]]],[11,"size","","",97,[[],["u64",15]]],[11,"atime","","",97,[[],["i64",15]]],[11,"atime_nsec","","",97,[[],["i64",15]]],[11,"mtime","","",97,[[],["i64",15]]],[11,"mtime_nsec","","",97,[[],["i64",15]]],[11,"ctime","","",97,[[],["i64",15]]],[11,"ctime_nsec","","",97,[[],["i64",15]]],[11,"blksize","","",97,[[],["u64",15]]],[11,"blocks","","",97,[[],["u64",15]]],[11,"hash","async_std::net","",114,[[]]],[11,"hash","async_std::path","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","async_std::fs","",96,[[]]],[11,"hash","async_std::path","",107,[[]]],[11,"hash","async_std::net","",26,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",115,[[]]],[11,"hash","async_std::io","",8,[[]]],[11,"hash","async_std::net","",27,[[]]],[11,"hash","","",117,[[]]],[11,"from","async_std::io","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].",73,[[["errorkind",4]],["error",3]]],[11,"from","async_std::net","Creates an <code>Ipv4Addr</code> from a four element byte array.",114,[[],["ipv4addr",3]]],[11,"from","","Creates an <code>Ipv6Addr</code> from a sixteen element byte array.",115,[[],["ipv6addr",3]]],[11,"from","","Converts a tuple struct (Into<[<code>IpAddr</code>]>, <code>u16</code>) into a […",27,[[],["socketaddr",4]]],[11,"from","","Converts a [<code>SocketAddrV4</code>] into a [<code>SocketAddr::V4</code>].",27,[[["socketaddrv4",3]],["socketaddr",4]]],[11,"from","async_std::sync","Converts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into …",81,[[["path",3]],[["arc",3],["path",3]]]],[11,"from","","",81,[[["osstr",3]],[["osstr",3],["arc",3]]]],[11,"from","async_std::net","Converts a [<code>SocketAddrV6</code>] into a [<code>SocketAddr::V6</code>].",27,[[["socketaddrv6",3]],["socketaddr",4]]],[11,"from","async_std::io","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].",73,[[["nulerror",3]],["error",3]]],[11,"from","async_std::net","Creates an <code>IpAddr::V6</code> from a sixteen element byte array.",26,[[],["ipaddr",4]]],[11,"from","","Copies this address to a new <code>IpAddr::V6</code>.",26,[[["ipv6addr",3]],["ipaddr",4]]],[11,"from","","Creates an <code>IpAddr::V4</code> from a four element byte array.",26,[[],["ipaddr",4]]],[11,"from","","Creates an <code>IpAddr::V6</code> from an eight element 16-bit array.",26,[[],["ipaddr",4]]],[11,"from","","Converts a host byte order <code>u32</code> into an <code>Ipv4Addr</code>.",114,[[["u32",15]],["ipv4addr",3]]],[11,"from","async_std::sync","",81,[[["cstr",3]],[["cstr",3],["arc",3]]]],[11,"from","async_std::net","Creates an <code>Ipv6Addr</code> from an eight element 16-bit array.",115,[[],["ipv6addr",3]]],[11,"from","","Copies this address to a new <code>IpAddr::V4</code>.",26,[[["ipv4addr",3]],["ipaddr",4]]],[11,"from","","Convert a host byte order <code>u128</code> into an <code>Ipv6Addr</code>.",115,[[["u128",15]],["ipv6addr",3]]],[11,"from","async_std::io","",73,[[["intoinnererror",3]],["error",3]]],[11,"from","async_std::sync","Converts a [<code>OsString</code>] into a [<code>Arc</code>]<code><OsStr></code> without copying …",81,[[["osstring",3]],[["osstr",3],["arc",3]]]],[11,"from","","Converts a [<code>CString</code>] into a [<code>Arc</code>]<code><CStr></code> without copying …",81,[[["cstring",3]],[["cstr",3],["arc",3]]]],[11,"from","","Converts a <code>PathBuf</code> into an <code>Arc</code> by moving the <code>PathBuf</code> data …",81,[[["pathbuf",3]],[["arc",3],["path",3]]]],[11,"description","","",81,[[],["str",15]]],[11,"cause","","",81,[[],[["option",4],["error",8]]]],[11,"source","","",81,[[],[["error",8],["option",4]]]],[11,"backtrace","","",81,[[],[["option",4],["backtrace",3]]]],[11,"description","async_std::io","",73,[[],["str",15]]],[11,"cause","","",73,[[],[["option",4],["error",8]]]],[11,"source","","",73,[[],[["error",8],["option",4]]]],[11,"description","async_std::path","",108,[[],["str",15]]],[11,"description","async_std::net","",113,[[],["str",15]]],[11,"cmp","","",117,[[["socketaddrv6",3]],["ordering",4]]],[11,"cmp","async_std::path","",23,[[["component",4]],["ordering",4]]],[11,"cmp","async_std::net","",27,[[["socketaddr",4]],["ordering",4]]],[11,"cmp","async_std::path","",24,[[["prefix",4]],["ordering",4]]],[11,"cmp","async_std::net","",26,[[["ipaddr",4]],["ordering",4]]],[11,"cmp","","",116,[[["socketaddrv4",3]],["ordering",4]]],[11,"cmp","async_std::path","",107,[[["prefixcomponent",3]],["ordering",4]]],[11,"cmp","async_std::net","",114,[[["ipv4addr",3]],["ordering",4]]],[11,"cmp","","",115,[[["ipv6addr",3]],["ordering",4]]],[11,"cmp","async_std::io","",8,[[["errorkind",4]],["ordering",4]]],[11,"fmt","async_std::path","",24,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",106,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::net","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::path","",107,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::io","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::net","",117,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",115,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::path","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::fs","",99,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::io","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::fs","",96,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::net","",114,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::io","",75,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",74,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::fs","",97,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::net","",116,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::os::unix::net","",80,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::io","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::path","",108,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::net","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_socket_addrs","","",117,[[],[["result",4],["intoiter",3],["error",3]]]],[11,"to_socket_addrs","","",116,[[],[["result",4],["intoiter",3],["error",3]]]],[11,"to_socket_addrs","","",27,[[],[["result",4],["intoiter",3],["error",3]]]],[11,"deref_mut","async_std::io","",75,[[]]],[11,"as_ref","async_std::path","",23,[[],["path",3]]],[11,"as_ref","","",23,[[],["osstr",3]]],[11,"deref","async_std::io","",75,[[]]],[11,"deref","","",74,[[]]],[11,"from_str","async_std::net","",114,[[["str",15]],[["addrparseerror",3],["result",4],["ipv4addr",3]]]],[11,"from_str","","",117,[[["str",15]],[["socketaddrv6",3],["addrparseerror",3],["result",4]]]],[11,"from_str","","",27,[[["str",15]],[["socketaddr",4],["addrparseerror",3],["result",4]]]],[11,"from_str","","",115,[[["str",15]],[["result",4],["addrparseerror",3],["ipv6addr",3]]]],[11,"from_str","","",116,[[["str",15]],[["socketaddrv4",3],["result",4],["addrparseerror",3]]]],[11,"from_str","","",26,[[["str",15]],[["ipaddr",4],["result",4],["addrparseerror",3]]]],[11,"eq","","",26,[[["ipv4addr",3]],["bool",15]]],[11,"eq","","",25,[[["shutdown",4]],["bool",15]]],[11,"eq","async_std::fs","",99,[[["permissions",3]],["bool",15]]],[11,"ne","","",99,[[["permissions",3]],["bool",15]]],[11,"eq","async_std::net","",27,[[["socketaddr",4]],["bool",15]]],[11,"ne","","",27,[[["socketaddr",4]],["bool",15]]],[11,"eq","","",26,[[["ipv6addr",3]],["bool",15]]],[11,"eq","","",114,[[["ipaddr",4]],["bool",15]]],[11,"eq","","",116,[[["socketaddrv4",3]],["bool",15]]],[11,"eq","async_std::path","",24,[[["prefix",4]],["bool",15]]],[11,"ne","","",24,[[["prefix",4]],["bool",15]]],[11,"eq","async_std::io","",9,[[["seekfrom",4]],["bool",15]]],[11,"ne","","",9,[[["seekfrom",4]],["bool",15]]],[11,"eq","async_std::net","",114,[[["ipv4addr",3]],["bool",15]]],[11,"eq","async_std::path","",107,[[["prefixcomponent",3]],["bool",15]]],[11,"eq","async_std::net","",115,[[["ipv6addr",3]],["bool",15]]],[11,"eq","async_std::path","",23,[[["component",4]],["bool",15]]],[11,"ne","","",23,[[["component",4]],["bool",15]]],[11,"eq","async_std::net","",113,[[["addrparseerror",3]],["bool",15]]],[11,"ne","","",113,[[["addrparseerror",3]],["bool",15]]],[11,"eq","","",26,[[["ipaddr",4]],["bool",15]]],[11,"ne","","",26,[[["ipaddr",4]],["bool",15]]],[11,"eq","async_std::path","",108,[[["stripprefixerror",3]],["bool",15]]],[11,"ne","","",108,[[["stripprefixerror",3]],["bool",15]]],[11,"eq","async_std::fs","",96,[[["filetype",3]],["bool",15]]],[11,"ne","","",96,[[["filetype",3]],["bool",15]]],[11,"eq","async_std::net","",115,[[["ipaddr",4]],["bool",15]]],[11,"eq","async_std::io","",8,[[["errorkind",4]],["bool",15]]],[11,"eq","async_std::net","",117,[[["socketaddrv6",3]],["bool",15]]],[11,"is_block_device","async_std::fs","",96,[[],["bool",15]]],[11,"is_char_device","","",96,[[],["bool",15]]],[11,"is_fifo","","",96,[[],["bool",15]]],[11,"is_socket","","",96,[[],["bool",15]]],[11,"mode","","",99,[[],["u32",15]]],[11,"set_mode","","",99,[[["u32",15]]]],[11,"from_mode","","",99,[[["u32",15]],["permissions",3]]],[11,"fmt","async_std::io","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::net","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::path","",108,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::net","",117,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::path","",106,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","async_std::net","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",116,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",114,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",115,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","async_std::path","",24,[[["prefix",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","async_std::net","",114,[[["ipv4addr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",116,[[["socketaddrv4",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",26,[[["ipaddr",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","async_std::io","",8,[[["errorkind",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","async_std::net","",26,[[["ipv4addr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",115,[[["ipv6addr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",27,[[["socketaddr",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","async_std::path","",23,[[["component",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","async_std::net","",117,[[["socketaddrv6",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",115,[[["ipaddr",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",26,[[["ipv6addr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","async_std::path","",107,[[["prefixcomponent",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","async_std::net","",114,[[["ipaddr",4]],[["option",4],["ordering",4]]]],[11,"hash","async_std::task","",0,[[]]],[11,"cmp","","",0,[[["poll",4]],["ordering",4]]],[11,"clone","","",0,[[],["poll",4]]],[11,"clone","","",36,[[],["waker",3]]],[11,"into_result","","",0,[[],["result",4]]],[11,"from_error","","",0,[[],[["poll",4],["option",4]]]],[11,"from_ok","","",0,[[],[["poll",4],["option",4]]]],[11,"into_result","","",0,[[],["result",4]]],[11,"from_error","","",0,[[],[["poll",4],["result",4]]]],[11,"from_ok","","",0,[[],[["poll",4],["result",4]]]],[11,"from","","Convert to a <code>Ready</code> variant.",0,[[],["poll",4]]],[11,"eq","","",0,[[["poll",4]],["bool",15]]],[11,"ne","","",0,[[["poll",4]],["bool",15]]],[11,"partial_cmp","","",0,[[["poll",4]],[["option",4],["ordering",4]]]],[11,"drop","","",36,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","async_std::sync","Makes a clone of the <code>Arc</code> pointer.",81,[[],["arc",3]]],[11,"clone","","Makes a clone of the <code>Weak</code> pointer that points to the same …",82,[[],["weak",3]]],[11,"try_from","","",81,[[["arc",3]],[["result",4],["arc",3]]]],[11,"borrow","","",81,[[]]],[11,"fmt","","",81,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","","",81,[[]]],[11,"from","","Allocate a reference-counted slice and fill it by cloning …",81,[[],["arc",3]]],[11,"from","","",81,[[],["arc",3]]],[11,"from","","Allocate a reference-counted <code>str</code> and copy <code>v</code> into it.",81,[[["str",15]],[["arc",3],["str",15]]]],[11,"from","async_std::task","",36,[[["arc",3]],["waker",3]]],[11,"from","async_std::sync","Allocate a reference-counted slice and move <code>v</code>’s items …",81,[[["global",3],["vec",3]],["arc",3]]],[11,"from","","",81,[[["cow",4]],["arc",3]]],[11,"from","","Allocate a reference-counted <code>str</code> and copy <code>v</code> into it.",81,[[["string",3]],[["arc",3],["str",15]]]],[11,"from","","Move a boxed object to a new, reference-counted …",81,[[["box",3],["global",3]],["arc",3]]],[11,"cmp","","Comparison for two <code>Arc</code>s.",81,[[["arc",3]],["ordering",4]]],[11,"fmt","","",81,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref","","",81,[[]]],[11,"as_ref","","",81,[[]]],[11,"drop","","Drops the <code>Weak</code> pointer.",82,[[]]],[11,"drop","","Drops the <code>Arc</code>.",81,[[]]],[11,"eq","","Equality for two <code>Arc</code>s.",81,[[["arc",3]],["bool",15]]],[11,"ne","","Inequality for two <code>Arc</code>s.",81,[[["arc",3]],["bool",15]]],[11,"default","","Creates a new <code>Arc<T></code>, with the <code>Default</code> value for <code>T</code>.",81,[[],["arc",3]]],[11,"default","","Constructs a new <code>Weak<T></code>, without allocating memory. …",82,[[],["weak",3]]],[11,"from_iter","","Takes each element in the <code>Iterator</code> and collects it into …",81,[[],["arc",3]]],[11,"fmt","","",81,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","Partial comparison for two <code>Arc</code>s.",81,[[["arc",3]],[["option",4],["ordering",4]]]],[11,"lt","","Less-than comparison for two <code>Arc</code>s.",81,[[["arc",3]],["bool",15]]],[11,"le","","‘Less than or equal to’ comparison for two <code>Arc</code>s.",81,[[["arc",3]],["bool",15]]],[11,"gt","","Greater-than comparison for two <code>Arc</code>s.",81,[[["arc",3]],["bool",15]]],[11,"ge","","‘Greater than or equal to’ comparison for two <code>Arc</code>s.",81,[[["arc",3]],["bool",15]]],[11,"deref","","",84,[[]]],[11,"deref","","",89,[[]]],[11,"deref","","",85,[[]]],[11,"deref","","",88,[[]]],[11,"deref","","",87,[[]]],[11,"default","","",83,[[],["mutex",3]]],[11,"default","","",86,[[],["rwlock",3]]],[11,"fmt","","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",87,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref_mut","","",85,[[]]],[11,"deref_mut","","",84,[[]]],[11,"deref_mut","","",89,[[]]],[11,"drop","","",85,[[]]],[11,"drop","","",87,[[]]],[11,"drop","","",84,[[]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",87,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",86,[[],["rwlock",3]]],[11,"from","","",83,[[],["mutex",3]]],[11,"poll_next","async_std::channel","",91,[[["context",3],["pin",3],["receiver",3]],[["poll",4],["option",4]]]],[11,"clone","","",21,[[],["trysenderror",4]]],[11,"clone","","",90,[[],["sender",3]]],[11,"clone","","",22,[[],["tryrecverror",4]]],[11,"clone","","",92,[[],["recverror",3]]],[11,"clone","","",91,[[],["receiver",3]]],[11,"clone","","",20,[[],["senderror",3]]],[11,"fmt","","",92,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",21,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",91,[[["formatter",3]],[["result",4],["error",3]]]],[11,"drop","","",90,[[]]],[11,"drop","","",91,[[]]],[11,"eq","","",22,[[["tryrecverror",4]],["bool",15]]],[11,"eq","","",92,[[["recverror",3]],["bool",15]]],[11,"eq","","",21,[[["trysenderror",4]],["bool",15]]],[11,"ne","","",21,[[["trysenderror",4]],["bool",15]]],[11,"eq","","",20,[[["senderror",3]],["bool",15]]],[11,"ne","","",20,[[["senderror",3]],["bool",15]]],[11,"fmt","","",21,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",92,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_socket_addrs","async_std::net","",27,[[],["tosocketaddrsfuture",4]]],[11,"to_socket_addrs","","",116,[[],["tosocketaddrsfuture",4]]],[11,"to_socket_addrs","","",117,[[],["tosocketaddrsfuture",4]]],[11,"drop","async_std::task","",30,[[]]],[11,"drop","async_std::fs","",95,[[]]],[11,"as_ref","async_std::path","",102,[[],["path",3]]],[11,"as_ref","","",102,[[],["osstr",3]]],[11,"as_ref","","",23,[[],["path",3]]],[11,"as_ref","","",103,[[],["path",3]]],[11,"as_ref","","",103,[[],["osstr",3]]],[11,"as_ref","","",104,[[],["osstr",3]]],[11,"as_ref","","",104,[[],["path",3]]],[11,"as_ref","","",105,[[],["path",3]]],[11,"as_ref","","",104,[[],["path",3]]],[11,"as_ref","","",105,[[],["osstr",3]]],[11,"as_ref","","",105,[[],["path",3]]],[11,"from","async_std::os::unix::net","Converts a <code>std::os::unix::net::UnixDatagram</code> into its …",76,[[["stdunixdatagram",3]],["unixdatagram",3]]],[11,"from","","Converts a <code>std::os::unix::net::UnixListener</code> into its …",77,[[["stdunixlistener",3]],["unixlistener",3]]],[11,"from","","Converts a <code>std::os::unix::net::UnixStream</code> into its …",79,[[["stdunixstream",3]],["unixstream",3]]],[11,"from","async_std::fs","",95,[[["file",3]],["file",3]]],[11,"from","async_std::sync","Converts a Path into a Rc by copying the Path data into a …",81,[[["path",3]],[["arc",3],["path",3]]]],[11,"from","async_std::path","",105,[[["path",3],["box",3]],["pathbuf",3]]],[11,"from","","",105,[[],["pathbuf",3]]],[11,"from","","",105,[[["osstring",3]],["pathbuf",3]]],[11,"from","","",105,[[["string",3]],["pathbuf",3]]],[11,"from","","",105,[[["path",3],["cow",4]]]],[11,"from","async_std::sync","",81,[[["pathbuf",3]],[["arc",3],["path",3]]]],[11,"from","async_std::path","",105,[[["pathbuf",3]],["pathbuf",3]]],[11,"from","async_std::net","Converts a <code>std::net::TcpListener</code> into its asynchronous …",109,[[["tcplistener",3]],["tcplistener",3]]],[11,"from","","Converts a <code>std::net::TcpStream</code> into its asynchronous …",111,[[["tcpstream",3]],["tcpstream",3]]],[11,"from","","Converts a <code>std::net::UdpSocket</code> into its asynchronous …",112,[[["udpsocket",3]],["udpsocket",3]]],[11,"into","async_std::path","",105,[[],["pathbuf",3]]],[11,"next_back","","",102,[[],[["option",4],["component",4]]]],[11,"next_back","","",103,[[],[["osstr",3],["option",4]]]],[11,"extend","","",105,[[["intoiterator",8]]]],[11,"next","","",101,[[],["option",4]]],[11,"next","","",102,[[],[["option",4],["component",4]]]],[11,"next","","",103,[[],[["osstr",3],["option",4]]]],[11,"clone","async_std::task","",31,[[],["task",3]]],[11,"clone","","",32,[[],["taskid",3]]],[11,"clone","","",34,[[],["accesserror",3]]],[11,"clone","async_std::future","",37,[[],["timeouterror",3]]],[11,"clone","async_std::stream","",42,[[],["fuse",3]]],[11,"clone","","",49,[[],["take",3]]],[11,"clone","","",53,[[],["fromfn",3]]],[11,"clone","","",54,[[],["fromiter",3]]],[11,"clone","","",55,[[],["once",3]]],[11,"clone","","",56,[[],["repeat",3]]],[11,"clone","","",57,[[],["repeatwith",3]]],[11,"clone","async_std::io","",66,[[],["cursor",3]]],[11,"clone","async_std::os::unix::net","",79,[[],["unixstream",3]]],[11,"clone","async_std::fs","",94,[[]]],[11,"clone","","",98,[[],["openoptions",3]]],[11,"clone","async_std::path","",101,[[],["ancestors",3]]],[11,"clone","","",102,[[],["components",3]]],[11,"clone","","",103,[[],["iter",3]]],[11,"clone","","",105,[[],["pathbuf",3]]],[11,"clone","async_std::net","",111,[[],["tcpstream",3]]],[11,"default","async_std::task","",29,[[],["builder",3]]],[11,"default","async_std::io","",66,[[],["cursor",3]]],[11,"default","async_std::fs","",93,[[],["dirbuilder",3]]],[11,"default","","",98,[[]]],[11,"default","async_std::path","",105,[[],["pathbuf",3]]],[11,"cmp","","",102,[[["components",3]],["ordering",4]]],[11,"cmp","","",104,[[["path",3]],["ordering",4]]],[11,"cmp","","",105,[[["pathbuf",3]],["ordering",4]]],[11,"eq","async_std::task","",32,[[["taskid",3]],["bool",15]]],[11,"ne","","",32,[[["taskid",3]],["bool",15]]],[11,"eq","","",34,[[["accesserror",3]],["bool",15]]],[11,"ne","","",34,[[["accesserror",3]],["bool",15]]],[11,"eq","async_std::future","",37,[[["timeouterror",3]],["bool",15]]],[11,"ne","","",37,[[["timeouterror",3]],["bool",15]]],[11,"eq","async_std::path","",102,[[["components",3]],["bool",15]]],[11,"ne","","",102,[[["components",3]],["bool",15]]],[11,"eq","","",104,[[["path",3]],["bool",15]]],[11,"ne","","",104,[[["path",3]],["bool",15]]],[11,"eq","","",105,[[["path",3]],["bool",15]]],[11,"eq","","",104,[[["pathbuf",3]],["bool",15]]],[11,"eq","","",105,[[["path",3]],["bool",15]]],[11,"eq","","",104,[[["cow",4]],["bool",15]]],[11,"eq","","",105,[[["cow",4]],["bool",15]]],[11,"eq","","",105,[[["osstr",3]],["bool",15]]],[11,"eq","","",105,[[["osstr",3]],["bool",15]]],[11,"eq","","",105,[[["cow",4]],["bool",15]]],[11,"eq","","",105,[[["osstring",3]],["bool",15]]],[11,"eq","","",104,[[["osstr",3]],["bool",15]]],[11,"eq","","",104,[[["osstr",3]],["bool",15]]],[11,"eq","","",104,[[["cow",4]],["bool",15]]],[11,"eq","","",104,[[["osstring",3]],["bool",15]]],[11,"eq","","",105,[[["pathbuf",3]],["bool",15]]],[11,"ne","","",105,[[["pathbuf",3]],["bool",15]]],[11,"partial_cmp","","",102,[[["components",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",104,[[["path",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",105,[[["path",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",104,[[["pathbuf",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",105,[[["path",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",104,[[["cow",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",105,[[["cow",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",105,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",105,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",105,[[["cow",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",105,[[["osstring",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",104,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",104,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",104,[[["cow",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",104,[[["osstring",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",105,[[["pathbuf",3]],[["option",4],["ordering",4]]]],[11,"to_owned","","",104,[[],["pathbuf",3]]],[11,"deref","","",105,[[],["path",3]]],[11,"fmt","async_std::task","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","async_std::future","",37,[[["formatter",3]],["result",6]]],[11,"fmt","async_std::stream","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","async_std::io","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","async_std::os::unix::net","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","async_std::fs","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","async_std::path","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","async_std::net","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","async_std::task","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","async_std::future","",37,[[["formatter",3]],["result",6]]],[11,"hash","async_std::task","",32,[[]]],[11,"hash","async_std::path","",104,[[]]],[11,"hash","","",105,[[]]],[11,"borrow","","",105,[[],["path",3]]],[11,"from_str","","",105,[[["str",15]],["result",4]]],[11,"from_iter","","",105,[[["intoiterator",8]],["pathbuf",3]]],[11,"ino","async_std::fs","",94,[[],["u64",15]]],[11,"mode","","",98,[[["u32",15]]]],[11,"custom_flags","","",98,[[["i32",15]]]],[11,"as_raw_fd","async_std::io","",70,[[],["rawfd",6]]],[11,"as_raw_fd","","",71,[[],["rawfd",6]]],[11,"as_raw_fd","","",72,[[],["rawfd",6]]],[11,"as_raw_fd","async_std::os::unix::net","",76,[[],["rawfd",6]]],[11,"as_raw_fd","","",77,[[],["rawfd",6]]],[11,"as_raw_fd","","",79,[[],["rawfd",6]]],[11,"as_raw_fd","async_std::fs","",95,[[],["rawfd",6]]],[11,"as_raw_fd","async_std::net","",109,[[],["rawfd",6]]],[11,"as_raw_fd","","",111,[[],["rawfd",6]]],[11,"as_raw_fd","","",112,[[],["rawfd",6]]],[11,"from_raw_fd","async_std::os::unix::net","",76,[[["rawfd",6]],["unixdatagram",3]]],[11,"from_raw_fd","","",77,[[["rawfd",6]],["unixlistener",3]]],[11,"from_raw_fd","","",79,[[["rawfd",6]],["unixstream",3]]],[11,"from_raw_fd","async_std::fs","",95,[[["rawfd",6]],["file",3]]],[11,"from_raw_fd","async_std::net","",109,[[["rawfd",6]],["tcplistener",3]]],[11,"from_raw_fd","","",111,[[["rawfd",6]],["tcpstream",3]]],[11,"from_raw_fd","","",112,[[["rawfd",6]],["udpsocket",3]]],[11,"into_raw_fd","async_std::os::unix::net","",76,[[],["rawfd",6]]],[11,"into_raw_fd","","",77,[[],["rawfd",6]]],[11,"into_raw_fd","","",79,[[],["rawfd",6]]],[11,"into_raw_fd","async_std::fs","",95,[[],["rawfd",6]]],[11,"into_raw_fd","async_std::net","",109,[[],["rawfd",6]]],[11,"into_raw_fd","","",111,[[],["rawfd",6]]],[11,"into_raw_fd","","",112,[[],["rawfd",6]]],[11,"mode","async_std::fs","",93,[[["u32",15]]]],[11,"poll","async_std::task","",30,[[["context",3],["pin",3]],["poll",4]]],[11,"poll_next","async_std::stream","",38,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",39,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",40,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",41,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",42,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",43,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",44,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",45,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",46,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",47,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",48,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",49,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",50,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",51,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",52,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",53,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",54,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",55,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",56,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",57,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","async_std::io","",58,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",59,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",60,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","async_std::os::unix::net","",78,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","async_std::fs","",100,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","async_std::net","",110,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_read","async_std::io","",61,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read_vectored","","",61,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",62,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",63,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read_vectored","","",63,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",66,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read_vectored","","",66,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",67,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",68,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",71,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","async_std::os::unix::net","",79,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","async_std::fs","",95,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read","async_std::net","",111,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_read_vectored","","",111,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write","async_std::io","",64,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",64,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",64,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",66,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",66,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",66,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",66,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",66,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",66,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",66,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",66,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",66,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",66,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",69,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",69,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",69,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",70,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",70,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",70,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",72,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",72,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",72,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","async_std::os::unix::net","",79,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",79,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",79,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","async_std::fs","",95,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",95,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",95,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","async_std::net","",111,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",111,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",111,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",111,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_seek","async_std::io","Seeks to an offset, in bytes, in the underlying reader.",63,[[["context",3],["pin",3],["seekfrom",4]],[["result",6],["poll",4]]]],[11,"poll_seek","","Seek to the offset, in bytes, in the underlying writer.",64,[[["context",3],["pin",3],["seekfrom",4]],[["result",6],["poll",4]]]],[11,"poll_seek","","",66,[[["context",3],["pin",3],["seekfrom",4]],[["result",6],["poll",4]]]],[11,"poll_seek","async_std::fs","",95,[[["context",3],["pin",3],["seekfrom",4]],[["result",6],["poll",4]]]],[11,"poll_fill_buf","async_std::io","",61,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"consume","","",61,[[["usize",15],["pin",3]]]],[11,"poll_fill_buf","","",62,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"consume","","",62,[[["usize",15],["pin",3]]]],[11,"poll_fill_buf","","",63,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"consume","","",63,[[["usize",15],["pin",3]]]],[11,"poll_fill_buf","","",66,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"consume","","",66,[[["usize",15],["pin",3]]]],[11,"poll_fill_buf","","",67,[[["context",3],["pin",3]],[["result",6],["poll",4]]]],[11,"consume","","",67,[[["usize",15],["pin",3]]]],[11,"new","async_std::task","Creates a new builder.",29,[[],["builder",3]]],[11,"name","","Configures the name of the task.",29,[[["string",3]],["builder",3]]],[11,"spawn","","Spawns a task with the configured settings.",29,[[],[["joinhandle",3],["result",6]]]],[11,"blocking","","Spawns a task with the configured settings, blocking on …",29,[[]]],[11,"task","","Returns a handle to the underlying task.",30,[[],["task",3]]],[11,"cancel","","Cancel this task.",30,[[]]],[11,"id","","Gets the task’s unique identifier.",31,[[],["taskid",3]]],[11,"name","","Returns the name of this task.",31,[[],[["option",4],["str",15]]]],[11,"with","","Gets a reference to the task-local value with this key.",33,[[]]],[11,"try_with","","Attempts to get a reference to the task-local value with …",33,[[],[["accesserror",3],["result",4]]]],[11,"from_waker","","Create a new <code>Context</code> from a <code>&Waker</code>.",35,[[["waker",3]],["context",3]]],[11,"waker","","Returns a reference to the <code>Waker</code> for the current task.",35,[[],["waker",3]]],[11,"map","","Changes the ready value of this <code>Poll</code> with the closure …",0,[[],["poll",4]]],[11,"is_ready","","Returns <code>true</code> if this is <code>Poll::Ready</code>",0,[[],["bool",15]]],[11,"is_pending","","Returns <code>true</code> if this is <code>Poll::Pending</code>",0,[[],["bool",15]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",0,[[],[["result",4],["poll",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",0,[[],[["result",4],["poll",4]]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",0,[[],[["option",4],["poll",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",0,[[],[["poll",4],["option",4]]]],[11,"wake","","Wake up the task associated with this <code>Waker</code>.",36,[[]]],[11,"wake_by_ref","","Wake up the task associated with this <code>Waker</code> without …",36,[[]]],[11,"will_wake","","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> have awoken …",36,[[["waker",3]],["bool",15]]],[11,"from_raw","","Creates a new <code>Waker</code> from [<code>RawWaker</code>].",36,[[["rawwaker",3]],["waker",3]]],[11,"size_hint","async_std::stream","Returns the bounds on the remaining length of the stream.",2,[[]]],[11,"next","","Advances the stream and returns the next value.",3,[[],["nextfuture",3]]],[11,"take","","Creates a stream that yields its first <code>n</code> elements.",3,[[["usize",15]],["take",3]]],[11,"take_while","","Creates a stream that yields elements based on a …",3,[[],["takewhile",3]]],[11,"step_by","","Creates a stream that yields each <code>step</code>th element.",3,[[["usize",15]],["stepby",3]]],[11,"chain","","Takes two streams and creates a new stream over both in …",3,[[],["chain",3]]],[11,"cloned","","Creates an stream which copies all of its elements.",3,[[],["cloned",3]]],[11,"copied","","Creates an stream which copies all of its elements.",3,[[],["copied",3]]],[11,"cycle","","Creates a stream that yields the provided values …",3,[[],["cycle",3]]],[11,"enumerate","","Creates a stream that gives the current element’s count …",3,[[],["enumerate",3]]],[11,"map","","Takes a closure and creates a stream that calls that …",3,[[],["map",3]]],[11,"inspect","","A combinator that does something with each element in the …",3,[[],["inspect",3]]],[11,"last","","Returns the last element of the stream.",3,[[],["lastfuture",3]]],[11,"fuse","","Creates a stream which ends after the first <code>None</code>.",3,[[],["fuse",3]]],[11,"filter","","Creates a stream that uses a predicate to determine if an …",3,[[],["filter",3]]],[11,"filter_map","","Both filters and maps a stream.",3,[[],["filtermap",3]]],[11,"min_by_key","","Returns the element that gives the minimum value with …",3,[[],["minbykeyfuture",3]]],[11,"max_by_key","","Returns the element that gives the maximum value with …",3,[[],["maxbykeyfuture",3]]],[11,"min_by","","Returns the element that gives the minimum value with …",3,[[],["minbyfuture",3]]],[11,"max","","Returns the element that gives the maximum value. If …",3,[[],["maxfuture",3]]],[11,"min","","Returns the element that gives the minimum value. If …",3,[[],["minfuture",3]]],[11,"max_by","","Returns the element that gives the maximum value with …",3,[[],["maxbyfuture",3]]],[11,"nth","","Returns the nth element of the stream.",3,[[["usize",15]],["nthfuture",3]]],[11,"all","","Tests if every element of the stream matches a predicate.",3,[[],["allfuture",3]]],[11,"find","","Searches for an element in a stream that satisfies a …",3,[[],["findfuture",3]]],[11,"find_map","","Applies function to the elements of stream and returns …",3,[[],["findmapfuture",3]]],[11,"fold","","A combinator that applies a function to every element in …",3,[[],["foldfuture",3]]],[11,"for_each","","Call a closure on each element of the stream.",3,[[],["foreachfuture",3]]],[11,"any","","Tests if any element of the stream matches a predicate.",3,[[],["anyfuture",3]]],[11,"scan","","A stream adaptor similar to <code>fold</code> that holds internal …",3,[[],["scan",3]]],[11,"skip_while","","Combinator that <code>skip</code>s elements based on a predicate.",3,[[],["skipwhile",3]]],[11,"skip","","Creates a combinator that skips the first <code>n</code> elements.",3,[[["usize",15]],["skip",3]]],[11,"try_fold","","A combinator that applies a function as long as it …",3,[[],["tryfoldfuture",3]]],[11,"try_for_each","","Applies a falliable function to each element in a stream, …",3,[[],["tryforeachfuture",3]]],[11,"zip","","‘Zips up’ two streams into a single stream of pairs.",3,[[],["zip",3]]],[11,"partial_cmp","","Lexicographically compares the elements of this <code>Stream</code> …",3,[[],["partialcmpfuture",3]]],[11,"position","","Searches for an element in a Stream that satisfies a …",3,[[],["positionfuture",3]]],[11,"cmp","","Lexicographically compares the elements of this <code>Stream</code> …",3,[[],["cmpfuture",3]]],[11,"ne","","Determines if the elements of this <code>Stream</code> are …",3,[[],["nefuture",3]]],[11,"ge","","Determines if the elements of this <code>Stream</code> are …",3,[[],["gefuture",3]]],[11,"eq","","Determines if the elements of this <code>Stream</code> are …",3,[[],["eqfuture",3]]],[11,"gt","","Determines if the elements of this <code>Stream</code> are …",3,[[],["gtfuture",3]]],[11,"le","","Determines if the elements of this <code>Stream</code> are …",3,[[],["lefuture",3]]],[11,"lt","","Determines if the elements of this <code>Stream</code> are …",3,[[],["ltfuture",3]]],[11,"into_inner","async_std::io","Consumes the <code>Chain</code>, returning the wrapped readers.",61,[[]]],[11,"get_ref","","Gets references to the underlying readers in this <code>Chain</code>.",61,[[]]],[11,"get_mut","","Gets mutable references to the underlying readers in this …",61,[[]]],[11,"limit","","Returns the number of bytes that can be read before this …",62,[[],["u64",15]]],[11,"set_limit","","Sets the number of bytes that can be read before this …",62,[[["u64",15]]]],[11,"into_inner","","Consumes the <code>Take</code>, returning the wrapped reader.",62,[[]]],[11,"get_ref","","Gets a reference to the underlying reader.",62,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",62,[[]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",11,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",13,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"new","","Creates a buffered reader with default buffer capacity.",63,[[],["bufreader",3]]],[11,"with_capacity","","Creates a new buffered reader with the specified capacity.",63,[[["usize",15]],["bufreader",3]]],[11,"get_ref","","Gets a reference to the underlying reader.",63,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",63,[[]]],[11,"buffer","","Returns a reference to the internal buffer.",63,[[]]],[11,"into_inner","","Unwraps the buffered reader, returning the underlying …",63,[[]]],[11,"new","","Creates a new <code>BufWriter</code> with a default buffer capacity. …",64,[[],["bufwriter",3]]],[11,"with_capacity","","Creates a new <code>BufWriter</code> with the specified buffer …",64,[[["usize",15]],["bufwriter",3]]],[11,"get_ref","","Gets a reference to the underlying writer.",64,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying writer.",64,[[]]],[11,"into_inner","","Consumes BufWriter, returning the underlying writer",64,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",64,[[]]],[11,"new","","Creates a new cursor wrapping the provided underlying …",66,[[],["cursor",3]]],[11,"into_inner","","Consumes this cursor, returning the underlying value.",66,[[]]],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",66,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this …",66,[[]]],[11,"position","","Returns the current position of this cursor.",66,[[],["u64",15]]],[11,"set_position","","Sets the position of this cursor.",66,[[["u64",15]]]],[11,"read_line","","Reads a line of input into the specified buffer.",71,[[["string",3]]]],[11,"new","","Creates a new I/O error from a known kind of error as …",73,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which …",73,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an [<code>Error</code>] from a particular OS …",73,[[["i32",15]],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",73,[[],[["option",4],["i32",15]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this …",73,[[],[["option",4],["error",8]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by …",73,[[],[["option",4],["error",8]]]],[11,"into_inner","","Consumes the <code>Error</code>, returning its inner error (if any).",73,[[],[["box",3],["option",4]]]],[11,"kind","","Returns the corresponding [<code>ErrorKind</code>] for this error.",73,[[],["errorkind",4]]],[11,"new","","Creates a new <code>IoSlice</code> wrapping a byte slice.",74,[[],["ioslice",3]]],[11,"advance","","Advance the internal cursor of the slice.",74,[[["usize",15]]]],[11,"new","","Creates a new <code>IoSliceMut</code> wrapping a byte slice.",75,[[],["ioslicemut",3]]],[11,"advance","","Advance the internal cursor of the slice.",75,[[["usize",15]]]],[11,"bind","async_std::os::unix::net","Creates a Unix datagram socket bound to the given path.",76,[[["path",3],["asref",8]]]],[11,"unbound","","Creates a Unix datagram which is not bound to any address.",76,[[],[["result",6],["unixdatagram",3]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",76,[[],["result",6]]],[11,"connect","","Connects the socket to the specified address.",76,[[["path",3],["asref",8]]]],[11,"local_addr","","Returns the address of this socket.",76,[[],[["socketaddr",3],["result",6]]]],[11,"peer_addr","","Returns the address of this socket’s peer.",76,[[],[["socketaddr",3],["result",6]]]],[11,"recv_from","","Receives data from the socket.",76,[[]]],[11,"recv","","Receives data from the socket.",76,[[]]],[11,"send_to","","Sends data on the socket to the specified address.",76,[[["path",3],["asref",8]]]],[11,"send","","Sends data on the socket to the socket’s peer.",76,[[]]],[11,"shutdown","","Shut down the read, write, or both halves of this …",76,[[["shutdown",4]],["result",6]]],[11,"bind","","Creates a Unix datagram listener bound to the given path.",77,[[["path",3],["asref",8]]]],[11,"accept","","Accepts a new incoming connection to this listener.",77,[[]]],[11,"incoming","","Returns a stream of incoming connections.",77,[[],["incoming",3]]],[11,"local_addr","","Returns the local socket address of this listener.",77,[[],[["socketaddr",3],["result",6]]]],[11,"connect","","Connects to the socket to the specified address.",79,[[["path",3],["asref",8]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",79,[[],["result",6]]],[11,"local_addr","","Returns the socket address of the local half of this …",79,[[],[["socketaddr",3],["result",6]]]],[11,"peer_addr","","Returns the socket address of the remote half of this …",79,[[],[["socketaddr",3],["result",6]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this …",79,[[["shutdown",4]],["result",6]]],[11,"is_unnamed","","Returns <code>true</code> if the address is unnamed.",80,[[],["bool",15]]],[11,"as_pathname","","Returns the contents of this address if it is a <code>pathname</code> …",80,[[],[["option",4],["path",3]]]],[11,"new","async_std::sync","Constructs a new <code>Arc<T></code>.",81,[[],["arc",3]]],[11,"new_cyclic","","Constructs a new <code>Arc<T></code> using a weak reference to itself. …",81,[[],["arc",3]]],[11,"new_uninit","","Constructs a new <code>Arc</code> with uninitialized contents.",81,[[],[["arc",3],["maybeuninit",19]]]],[11,"new_zeroed","","Constructs a new <code>Arc</code> with uninitialized contents, with …",81,[[],[["arc",3],["maybeuninit",19]]]],[11,"pin","","Constructs a new <code>Pin<Arc<T>></code>. If <code>T</code> does not implement …",81,[[],[["arc",3],["pin",3]]]],[11,"try_new","","Constructs a new <code>Arc<T></code>, returning an error if allocation …",81,[[],[["arc",3],["result",4],["allocerror",3]]]],[11,"try_new_uninit","","Constructs a new <code>Arc</code> with uninitialized contents, …",81,[[],[["arc",3],["allocerror",3],["result",4]]]],[11,"try_new_zeroed","","Constructs a new <code>Arc</code> with uninitialized contents, with …",81,[[],[["arc",3],["allocerror",3],["result",4]]]],[11,"try_unwrap","","Returns the inner value, if the <code>Arc</code> has exactly one …",81,[[["arc",3]],[["arc",3],["result",4]]]],[11,"new_uninit_slice","","Constructs a new atomically reference-counted slice with …",81,[[["usize",15]],["arc",3]]],[11,"new_zeroed_slice","","Constructs a new atomically reference-counted slice with …",81,[[["usize",15]],["arc",3]]],[11,"assume_init","","Converts to <code>Arc<T></code>.",81,[[],["arc",3]]],[11,"assume_init","","Converts to <code>Arc<[T]></code>.",81,[[],["arc",3]]],[11,"into_raw","","Consumes the <code>Arc</code>, returning the wrapped pointer.",81,[[["arc",3]]]],[11,"as_ptr","","Provides a raw pointer to the data.",81,[[["arc",3]]]],[11,"from_raw","","Constructs an <code>Arc<T></code> from a raw pointer.",81,[[],["arc",3]]],[11,"downgrade","","Creates a new [<code>Weak</code>] pointer to this allocation.",81,[[["arc",3]],["weak",3]]],[11,"weak_count","","Gets the number of [<code>Weak</code>] pointers to this allocation.",81,[[["arc",3]],["usize",15]]],[11,"strong_count","","Gets the number of strong (<code>Arc</code>) pointers to this …",81,[[["arc",3]],["usize",15]]],[11,"increment_strong_count","","Increments the strong reference count on the <code>Arc<T></code> …",81,[[]]],[11,"decrement_strong_count","","Decrements the strong reference count on the <code>Arc<T></code> …",81,[[]]],[11,"ptr_eq","","Returns <code>true</code> if the two <code>Arc</code>s point to the same allocation …",81,[[["arc",3]],["bool",15]]],[11,"make_mut","","Makes a mutable reference into the given <code>Arc</code>.",81,[[["arc",3]]]],[11,"get_mut","","Returns a mutable reference into the given <code>Arc</code>, if there …",81,[[["arc",3]],["option",4]]],[11,"get_mut_unchecked","","Returns a mutable reference into the given <code>Arc</code>, without …",81,[[["arc",3]]]],[11,"downcast","","Attempt to downcast the <code>Arc<dyn Any + Send + Sync></code> to a …",81,[[],[["arc",3],["arc",3],["result",4]]]],[11,"new","","Constructs a new <code>Weak<T></code>, without allocating any memory. …",82,[[],["weak",3]]],[11,"as_ptr","","Returns a raw pointer to the object <code>T</code> pointed to by this …",82,[[]]],[11,"into_raw","","Consumes the <code>Weak<T></code> and turns it into a raw pointer.",82,[[]]],[11,"from_raw","","Converts a raw pointer previously created by <code>into_raw</code> …",82,[[],["weak",3]]],[11,"upgrade","","Attempts to upgrade the <code>Weak</code> pointer to an [<code>Arc</code>], delaying…",82,[[],[["option",4],["arc",3]]]],[11,"strong_count","","Gets the number of strong (<code>Arc</code>) pointers pointing to this …",82,[[],["usize",15]]],[11,"weak_count","","Gets an approximation of the number of <code>Weak</code> pointers …",82,[[],["usize",15]]],[11,"ptr_eq","","Returns <code>true</code> if the two <code>Weak</code>s point to the same …",82,[[["weak",3]],["bool",15]]],[11,"new","","Creates a new async mutex.",83,[[],["mutex",3]]],[11,"into_inner","","Consumes the mutex, returning the underlying data.",83,[[]]],[11,"lock","","Acquires the mutex.",83,[[]]],[11,"try_lock","","Attempts to acquire the mutex.",83,[[],[["mutexguard",3],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",83,[[]]],[11,"lock_arc","","Acquires the mutex and clones a reference to it.",83,[[["arc",3]]]],[11,"try_lock_arc","","Attempts to acquire the mutex and clone a reference to it.",83,[[["arc",3]],[["mutexguardarc",3],["option",4]]]],[11,"source","","Returns a reference to the mutex a guard came from.",84,[[["mutexguard",3]],["mutex",3]]],[11,"source","","Returns a reference to the mutex a guard came from.",85,[[["mutexguardarc",3]],["arc",3]]],[11,"new","","Creates a new reader-writer lock.",86,[[],["rwlock",3]]],[11,"into_inner","","Unwraps the lock and returns the inner value.",86,[[]]],[11,"try_read","","Attempts to acquire a read lock.",86,[[],[["option",4],["rwlockreadguard",3]]]],[11,"read","","Acquires a read lock.",86,[[]]],[11,"try_upgradable_read","","Attempts to acquire a read lock with the possiblity to …",86,[[],[["option",4],["rwlockupgradablereadguard",3]]]],[11,"upgradable_read","","Attempts to acquire a read lock with the possiblity to …",86,[[]]],[11,"try_write","","Attempts to acquire a write lock.",86,[[],[["option",4],["rwlockwriteguard",3]]]],[11,"write","","Acquires a write lock.",86,[[]]],[11,"get_mut","","Returns a mutable reference to the inner value.",86,[[]]],[11,"downgrade","","Downgrades into a regular reader guard.",88,[[["rwlockupgradablereadguard",3]],["rwlockreadguard",3]]],[11,"try_upgrade","","Attempts to upgrade into a write lock.",88,[[["rwlockupgradablereadguard",3]],[["rwlockupgradablereadguard",3],["result",4],["rwlockwriteguard",3]]]],[11,"upgrade","","Upgrades into a write lock.",88,[[["rwlockupgradablereadguard",3]]]],[11,"downgrade","","Downgrades into a regular reader guard.",89,[[["rwlockwriteguard",3]],["rwlockreadguard",3]]],[11,"downgrade_to_upgradable","","Downgrades into an upgradable reader guard.",89,[[["rwlockwriteguard",3]],["rwlockupgradablereadguard",3]]],[11,"try_send","async_std::channel","Attempts to send a message into the channel.",90,[[],[["result",4],["trysenderror",4]]]],[11,"send","","Sends a message into the channel.",90,[[]]],[11,"close","","Closes the channel.",90,[[],["bool",15]]],[11,"is_closed","","Returns <code>true</code> if the channel is closed.",90,[[],["bool",15]]],[11,"is_empty","","Returns <code>true</code> if the channel is empty.",90,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if the channel is full.",90,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",90,[[],["usize",15]]],[11,"capacity","","Returns the channel capacity if it’s bounded.",90,[[],[["usize",15],["option",4]]]],[11,"receiver_count","","Returns the number of receivers for the channel.",90,[[],["usize",15]]],[11,"sender_count","","Returns the number of senders for the channel.",90,[[],["usize",15]]],[11,"try_recv","","Attempts to receive a message from the channel.",91,[[],[["result",4],["tryrecverror",4]]]],[11,"recv","","Receives a message from the channel.",91,[[]]],[11,"close","","Closes the channel.",91,[[],["bool",15]]],[11,"is_closed","","Returns <code>true</code> if the channel is closed.",91,[[],["bool",15]]],[11,"is_empty","","Returns <code>true</code> if the channel is empty.",91,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if the channel is full.",91,[[],["bool",15]]],[11,"len","","Returns the number of messages in the channel.",91,[[],["usize",15]]],[11,"capacity","","Returns the channel capacity if it’s bounded.",91,[[],[["usize",15],["option",4]]]],[11,"receiver_count","","Returns the number of receivers for the channel.",91,[[],["usize",15]]],[11,"sender_count","","Returns the number of senders for the channel.",91,[[],["usize",15]]],[11,"into_inner","","Unwraps the message that couldn’t be sent.",20,[[]]],[11,"into_inner","","Unwraps the message that couldn’t be sent.",21,[[]]],[11,"is_full","","Returns <code>true</code> if the channel is full but not closed.",21,[[],["bool",15]]],[11,"is_closed","","Returns <code>true</code> if the channel is closed.",21,[[],["bool",15]]],[11,"is_empty","","Returns <code>true</code> if the channel is empty but not closed.",22,[[],["bool",15]]],[11,"is_closed","","Returns <code>true</code> if the channel is empty and closed.",22,[[],["bool",15]]],[11,"new","async_std::fs","Creates a blank set of options.",93,[[],["dirbuilder",3]]],[11,"recursive","","Sets the option for recursive mode.",93,[[["bool",15]]]],[11,"create","","Creates a directory with the configured options.",93,[[["path",3],["asref",8]]]],[11,"path","","Returns the full path to this entry.",94,[[],["pathbuf",3]]],[11,"metadata","","Reads the metadata for this entry.",94,[[]]],[11,"file_type","","Reads the file type for this entry.",94,[[]]],[11,"file_name","","Returns the bare name of this entry without the leading …",94,[[],["osstring",3]]],[11,"open","","Opens a file in read-only mode.",95,[[["path",3],["asref",8]]]],[11,"create","","Opens a file in write-only mode.",95,[[["path",3],["asref",8]]]],[11,"sync_all","","Synchronizes OS-internal buffered contents and metadata …",95,[[]]],[11,"sync_data","","Synchronizes OS-internal buffered contents to disk.",95,[[]]],[11,"set_len","","Truncates or extends the file.",95,[[["u64",15]]]],[11,"metadata","","Reads the file’s metadata.",95,[[]]],[11,"set_permissions","","Changes the permissions on the file.",95,[[["permissions",3]]]],[11,"is_dir","","Tests whether this file type represents a directory. The …",96,[[],["bool",15]]],[11,"is_file","","Tests whether this file type represents a regular file. …",96,[[],["bool",15]]],[11,"is_symlink","","Tests whether this file type represents a symbolic link. …",96,[[],["bool",15]]],[11,"file_type","","Returns the file type for this metadata.",97,[[],["filetype",3]]],[11,"is_dir","","Returns <code>true</code> if this metadata is for a directory. The …",97,[[],["bool",15]]],[11,"is_file","","Returns <code>true</code> if this metadata is for a regular file. The …",97,[[],["bool",15]]],[11,"len","","Returns the size of the file, in bytes, this metadata is …",97,[[],["u64",15]]],[11,"permissions","","Returns the permissions of the file this metadata is for.",97,[[],["permissions",3]]],[11,"modified","","Returns the last modification time listed in this …",97,[[],[["error",3],["result",4],["systemtime",3]]]],[11,"accessed","","Returns the last access time of this metadata.",97,[[],[["error",3],["result",4],["systemtime",3]]]],[11,"created","","Returns the creation time listed in this metadata.",97,[[],[["error",3],["result",4],["systemtime",3]]]],[11,"new","","Creates a blank set of options.",98,[[],["openoptions",3]]],[11,"read","","Configures the option for read mode.",98,[[["bool",15]],["openoptions",3]]],[11,"write","","Configures the option for write mode.",98,[[["bool",15]],["openoptions",3]]],[11,"append","","Configures the option for append mode.",98,[[["bool",15]],["openoptions",3]]],[11,"truncate","","Configures the option for truncating the previous file.",98,[[["bool",15]],["openoptions",3]]],[11,"create","","Configures the option for creating a new file if it doesn…",98,[[["bool",15]],["openoptions",3]]],[11,"create_new","","Configures the option for creating a new file or failing …",98,[[["bool",15]],["openoptions",3]]],[11,"open","","Opens a file with the configured options.",98,[[["path",3],["asref",8]]]],[11,"readonly","","Returns <code>true</code> if these permissions describe a readonly …",99,[[],["bool",15]]],[11,"set_readonly","","Modifies the readonly flag for this set of permissions. …",99,[[["bool",15]]]],[11,"as_path","async_std::path","Extracts a slice corresponding to the portion of the path …",102,[[],["path",3]]],[11,"as_path","","Extracts a slice corresponding to the portion of the path …",103,[[],["path",3]]],[11,"new","","Directly wraps a string slice as a <code>Path</code> slice.",104,[[],["path",3]]],[11,"as_os_str","","Returns the underlying <code>OsStr</code> slice.",104,[[],["osstr",3]]],[11,"to_str","","Returns a <code>&str</code> slice if the <code>Path</code> is valid unicode.",104,[[],[["option",4],["str",15]]]],[11,"to_string_lossy","","Converts a <code>Path</code> to a <code>Cow<str></code>.",104,[[],[["cow",4],["str",15]]]],[11,"to_path_buf","","Converts a <code>Path</code> to an owned <code>PathBuf</code>.",104,[[],["pathbuf",3]]],[11,"is_absolute","","Returns <code>true</code> if the <code>Path</code> is absolute, i.e. if it is …",104,[[],["bool",15]]],[11,"is_relative","","Returns <code>true</code> if the <code>Path</code> is relative, i.e. not absolute.",104,[[],["bool",15]]],[11,"has_root","","Returns <code>true</code> if the <code>Path</code> has a root.",104,[[],["bool",15]]],[11,"parent","","Returns the <code>Path</code> without its final component, if there is …",104,[[],[["option",4],["path",3]]]],[11,"ancestors","","Produces an iterator over <code>Path</code> and its ancestors.",104,[[],["ancestors",3]]],[11,"file_name","","Returns the final component of the <code>Path</code>, if there is one.",104,[[],[["option",4],["osstr",3]]]],[11,"strip_prefix","","Returns a path that becomes <code>self</code> when joined onto <code>base</code>.",104,[[],[["result",4],["stripprefixerror",3],["path",3]]]],[11,"starts_with","","Determines whether <code>base</code> is a prefix of <code>self</code>.",104,[[["path",3],["asref",8]],["bool",15]]],[11,"ends_with","","Determines whether <code>child</code> is a suffix of <code>self</code>.",104,[[["path",3],["asref",8]],["bool",15]]],[11,"file_stem","","Extracts the stem (non-extension) portion of <code>file_name</code>.",104,[[],[["option",4],["osstr",3]]]],[11,"extension","","Extracts the extension of <code>file_name</code>, if possible.",104,[[],[["option",4],["osstr",3]]]],[11,"join","","Creates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.",104,[[["path",3],["asref",8]],["pathbuf",3]]],[11,"with_file_name","","Creates an owned <code>PathBuf</code> like <code>self</code> but with the given …",104,[[["osstr",3],["asref",8]],["pathbuf",3]]],[11,"with_extension","","Creates an owned <code>PathBuf</code> like <code>self</code> but with the given …",104,[[["osstr",3],["asref",8]],["pathbuf",3]]],[11,"components","","Produces an iterator over the <code>Component</code>s of the path.",104,[[],["components",3]]],[11,"iter","","Produces an iterator over the path’s components viewed …",104,[[],["iter",3]]],[11,"display","","Returns an object that implements <code>Display</code> for safely …",104,[[],["display",3]]],[11,"metadata","","Reads the metadata of a file or directory.",104,[[]]],[11,"symlink_metadata","","Reads the metadata of a file or directory without …",104,[[]]],[11,"canonicalize","","Returns the canonical form of a path.",104,[[]]],[11,"read_link","","Reads a symbolic link, returning the file that the link …",104,[[]]],[11,"read_dir","","Returns a stream over the entries within a directory.",104,[[]]],[11,"exists","","Returns <code>true</code> if the path points at an existing entity.",104,[[]]],[11,"is_file","","Returns <code>true</code> if the path exists on disk and is pointing …",104,[[]]],[11,"is_dir","","Returns <code>true</code> if the path exists on disk and is pointing …",104,[[]]],[11,"into_path_buf","","Converts a <code>Box<Path></code> into a <code>PathBuf</code> without copying or …",104,[[["path",3],["box",3]],["pathbuf",3]]],[11,"new","","Allocates an empty <code>PathBuf</code>.",105,[[],["pathbuf",3]]],[11,"as_path","","Coerces to a <code>Path</code> slice.",105,[[],["path",3]]],[11,"push","","Extends <code>self</code> with <code>path</code>.",105,[[["path",3],["asref",8]]]],[11,"pop","","Truncates <code>self</code> to <code>self.parent</code>.",105,[[],["bool",15]]],[11,"set_file_name","","Updates <code>self.file_name</code> to <code>file_name</code>.",105,[[["osstr",3],["asref",8]]]],[11,"set_extension","","Updates <code>self.extension</code> to <code>extension</code>.",105,[[["osstr",3],["asref",8]],["bool",15]]],[11,"into_os_string","","Consumes the <code>PathBuf</code>, returning its internal <code>OsString</code> …",105,[[],["osstring",3]]],[11,"into_boxed_path","","Converts this <code>PathBuf</code> into a boxed <code>Path</code>.",105,[[],[["path",3],["box",3]]]],[11,"as_os_str","","Extracts the underlying [<code>OsStr</code>] slice.",23,[[],["osstr",3]]],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e., begins with …",24,[[],["bool",15]]],[11,"kind","","Returns the parsed prefix data.",107,[[],["prefix",4]]],[11,"as_os_str","","Returns the raw [<code>OsStr</code>] slice for this prefix.",107,[[],["osstr",3]]],[11,"bind","async_std::net","Creates a new <code>TcpListener</code> which will be bound to the …",109,[[["tosocketaddrs",8]]]],[11,"accept","","Accepts a new incoming connection to this listener.",109,[[]]],[11,"incoming","","Returns a stream of incoming connections.",109,[[],["incoming",3]]],[11,"local_addr","","Returns the local address that this listener is bound to.",109,[[],[["result",6],["socketaddr",4]]]],[11,"connect","","Creates a new TCP stream connected to the specified …",111,[[["tosocketaddrs",8]]]],[11,"local_addr","","Returns the local address that this stream is connected …",111,[[],[["result",6],["socketaddr",4]]]],[11,"peer_addr","","Returns the remote address that this stream is connected …",111,[[],[["result",6],["socketaddr",4]]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",111,[[],[["u32",15],["result",6]]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",111,[[["u32",15]],["result",6]]],[11,"peek","","Receives data on the socket from the remote address to …",111,[[]]],[11,"nodelay","","Gets the value of the <code>TCP_NODELAY</code> option on this socket.",111,[[],[["bool",15],["result",6]]]],[11,"set_nodelay","","Sets the value of the <code>TCP_NODELAY</code> option on this socket.",111,[[["bool",15]],["result",6]]],[11,"shutdown","","Shuts down the read, write, or both halves of this …",111,[[["shutdown",4]],["result",6]]],[11,"bind","","Creates a UDP socket from the given address.",112,[[["tosocketaddrs",8]]]],[11,"peer_addr","","Returns the peer address that this listener is connected …",112,[[],[["result",6],["socketaddr",4]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",112,[[],[["result",6],["socketaddr",4]]]],[11,"send_to","","Sends data on the socket to the given address.",112,[[["tosocketaddrs",8]]]],[11,"recv_from","","Receives data from the socket.",112,[[]]],[11,"peek_from","","Receives data from socket without removing it from the …",112,[[]]],[11,"connect","","Connects the UDP socket to a remote address.",112,[[["tosocketaddrs",8]]]],[11,"send","","Sends data on the socket to the remote address to which …",112,[[]]],[11,"recv","","Receives data from the socket.",112,[[]]],[11,"peek","","Receives data from the socket without removing it from …",112,[[]]],[11,"broadcast","","Gets the value of the <code>SO_BROADCAST</code> option for this socket.",112,[[],[["bool",15],["result",6]]]],[11,"set_broadcast","","Sets the value of the <code>SO_BROADCAST</code> option for this socket.",112,[[["bool",15]],["result",6]]],[11,"multicast_loop_v4","","Gets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",112,[[],[["bool",15],["result",6]]]],[11,"set_multicast_loop_v4","","Sets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",112,[[["bool",15]],["result",6]]],[11,"multicast_ttl_v4","","Gets the value of the <code>IP_MULTICAST_TTL</code> option for this …",112,[[],[["u32",15],["result",6]]]],[11,"set_multicast_ttl_v4","","Sets the value of the <code>IP_MULTICAST_TTL</code> option for this …",112,[[["u32",15]],["result",6]]],[11,"multicast_loop_v6","","Gets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",112,[[],[["bool",15],["result",6]]]],[11,"set_multicast_loop_v6","","Sets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",112,[[["bool",15]],["result",6]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",112,[[],[["u32",15],["result",6]]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",112,[[["u32",15]],["result",6]]],[11,"join_multicast_v4","","Executes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.",112,[[["ipv4addr",3]],["result",6]]],[11,"join_multicast_v6","","Executes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.",112,[[["ipv6addr",3],["u32",15]],["result",6]]],[11,"leave_multicast_v4","","Executes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.",112,[[["ipv4addr",3]],["result",6]]],[11,"leave_multicast_v6","","Executes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.",112,[[["ipv6addr",3],["u32",15]],["result",6]]],[11,"is_unspecified","","Returns [<code>true</code>] for the special ‘unspecified’ address.",26,[[],["bool",15]]],[11,"is_loopback","","Returns [<code>true</code>] if this is a loopback address.",26,[[],["bool",15]]],[11,"is_global","","Returns [<code>true</code>] if the address appears to be globally …",26,[[],["bool",15]]],[11,"is_multicast","","Returns [<code>true</code>] if this is a multicast address.",26,[[],["bool",15]]],[11,"is_documentation","","Returns [<code>true</code>] if this address is in a range designated …",26,[[],["bool",15]]],[11,"is_ipv4","","Returns [<code>true</code>] if this address is an <code>IPv4</code> address, and […",26,[[],["bool",15]]],[11,"is_ipv6","","Returns [<code>true</code>] if this address is an <code>IPv6</code> address, and […",26,[[],["bool",15]]],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",114,[[["u8",15]],["ipv4addr",3]]],[18,"LOCALHOST","","An IPv4 address with the address pointing to localhost: …",114,null],[18,"UNSPECIFIED","","An IPv4 address representing an unspecified address: …",114,null],[18,"BROADCAST","","An IPv4 address representing the broadcast address: …",114,null],[11,"octets","","Returns the four eight-bit integers that make up this …",114,[[]]],[11,"is_unspecified","","Returns [<code>true</code>] for the special ‘unspecified’ address …",114,[[],["bool",15]]],[11,"is_loopback","","Returns [<code>true</code>] if this is a loopback address …",114,[[],["bool",15]]],[11,"is_private","","Returns [<code>true</code>] if this is a private address.",114,[[],["bool",15]]],[11,"is_link_local","","Returns [<code>true</code>] if the address is link-local …",114,[[],["bool",15]]],[11,"is_global","","Returns [<code>true</code>] if the address appears to be globally …",114,[[],["bool",15]]],[11,"is_shared","","Returns [<code>true</code>] if this address is part of the Shared …",114,[[],["bool",15]]],[11,"is_ietf_protocol_assignment","","Returns [<code>true</code>] if this address is part of <code>192.0.0.0/24</code>, …",114,[[],["bool",15]]],[11,"is_benchmarking","","Returns [<code>true</code>] if this address part of the <code>198.18.0.0/15</code> …",114,[[],["bool",15]]],[11,"is_reserved","","Returns [<code>true</code>] if this address is reserved by IANA for …",114,[[],["bool",15]]],[11,"is_multicast","","Returns [<code>true</code>] if this is a multicast address …",114,[[],["bool",15]]],[11,"is_broadcast","","Returns [<code>true</code>] if this is a broadcast address …",114,[[],["bool",15]]],[11,"is_documentation","","Returns [<code>true</code>] if this address is in a range designated …",114,[[],["bool",15]]],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible <code>IPv6</code> address.",114,[[],["ipv6addr",3]]],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped <code>IPv6</code> address.",114,[[],["ipv6addr",3]]],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",115,[[["u16",15]],["ipv6addr",3]]],[18,"LOCALHOST","","An IPv6 address representing localhost: <code>::1</code>.",115,null],[18,"UNSPECIFIED","","An IPv6 address representing the unspecified address: <code>::</code>",115,null],[11,"segments","","Returns the eight 16-bit segments that make up this …",115,[[]]],[11,"is_unspecified","","Returns [<code>true</code>] for the special ‘unspecified’ address …",115,[[],["bool",15]]],[11,"is_loopback","","Returns [<code>true</code>] if this is a loopback address (::1).",115,[[],["bool",15]]],[11,"is_global","","Returns [<code>true</code>] if the address appears to be globally …",115,[[],["bool",15]]],[11,"is_unique_local","","Returns [<code>true</code>] if this is a unique local address (<code>fc00::/7</code>…",115,[[],["bool",15]]],[11,"is_unicast_link_local_strict","","Returns [<code>true</code>] if the address is a unicast link-local …",115,[[],["bool",15]]],[11,"is_unicast_link_local","","Returns [<code>true</code>] if the address is a unicast link-local …",115,[[],["bool",15]]],[11,"is_unicast_site_local","","Returns [<code>true</code>] if this is a deprecated unicast site-local …",115,[[],["bool",15]]],[11,"is_documentation","","Returns [<code>true</code>] if this is an address reserved for …",115,[[],["bool",15]]],[11,"is_unicast_global","","Returns [<code>true</code>] if the address is a globally routable …",115,[[],["bool",15]]],[11,"multicast_scope","","Returns the address’s multicast scope if the address is …",115,[[],[["ipv6multicastscope",4],["option",4]]]],[11,"is_multicast","","Returns [<code>true</code>] if this is a multicast address (ff00::/8).",115,[[],["bool",15]]],[11,"to_ipv4_mapped","","Converts this address to an <code>IPv4</code> address if it’s an “…",115,[[],[["option",4],["ipv4addr",3]]]],[11,"to_ipv4","","Converts this address to an <code>IPv4</code> address. Returns [<code>None</code>] …",115,[[],[["option",4],["ipv4addr",3]]]],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address …",115,[[]]],[11,"new","","Creates a new socket address from an IP address and a …",27,[[["ipaddr",4],["u16",15]],["socketaddr",4]]],[11,"ip","","Returns the IP address associated with this socket …",27,[[],["ipaddr",4]]],[11,"set_ip","","Changes the IP address associated with this socket …",27,[[["ipaddr",4]]]],[11,"port","","Returns the port number associated with this socket …",27,[[],["u16",15]]],[11,"set_port","","Changes the port number associated with this socket …",27,[[["u16",15]]]],[11,"is_ipv4","","Returns [<code>true</code>] if the IP address in this <code>SocketAddr</code> is an …",27,[[],["bool",15]]],[11,"is_ipv6","","Returns [<code>true</code>] if the IP address in this <code>SocketAddr</code> is an …",27,[[],["bool",15]]],[11,"new","","Creates a new socket address from an <code>IPv4</code> address and a …",116,[[["ipv4addr",3],["u16",15]],["socketaddrv4",3]]],[11,"ip","","Returns the IP address associated with this socket …",116,[[],["ipv4addr",3]]],[11,"set_ip","","Changes the IP address associated with this socket …",116,[[["ipv4addr",3]]]],[11,"port","","Returns the port number associated with this socket …",116,[[],["u16",15]]],[11,"set_port","","Changes the port number associated with this socket …",116,[[["u16",15]]]],[11,"new","","Creates a new socket address from an <code>IPv6</code> address, a …",117,[[["u32",15],["u16",15],["ipv6addr",3]],["socketaddrv6",3]]],[11,"ip","","Returns the IP address associated with this socket …",117,[[],["ipv6addr",3]]],[11,"set_ip","","Changes the IP address associated with this socket …",117,[[["ipv6addr",3]]]],[11,"port","","Returns the port number associated with this socket …",117,[[],["u16",15]]],[11,"set_port","","Changes the port number associated with this socket …",117,[[["u16",15]]]],[11,"flowinfo","","Returns the flow information associated with this address.",117,[[],["u32",15]]],[11,"set_flowinfo","","Changes the flow information associated with this socket …",117,[[["u32",15]]]],[11,"scope_id","","Returns the scope ID associated with this address.",117,[[],["u32",15]]],[11,"set_scope_id","","Changes the scope ID associated with this socket address.",117,[[["u32",15]]]]],"p":[[4,"Poll"],[8,"Future"],[8,"Stream"],[8,"StreamExt"],[8,"BufReadExt"],[8,"ReadExt"],[8,"SeekExt"],[8,"WriteExt"],[4,"ErrorKind"],[4,"SeekFrom"],[8,"BufRead"],[8,"Read"],[8,"Seek"],[8,"Write"],[8,"AsRawFd"],[8,"FromRawFd"],[8,"IntoRawFd"],[8,"DirBuilderExt"],[8,"DirEntryExt"],[8,"OpenOptionsExt"],[3,"SendError"],[4,"TrySendError"],[4,"TryRecvError"],[4,"Component"],[4,"Prefix"],[4,"Shutdown"],[4,"IpAddr"],[4,"SocketAddr"],[8,"ToSocketAddrs"],[3,"Builder"],[3,"JoinHandle"],[3,"Task"],[3,"TaskId"],[3,"LocalKey"],[3,"AccessError"],[3,"Context"],[3,"Waker"],[3,"TimeoutError"],[3,"Chain"],[3,"Cloned"],[3,"Copied"],[3,"Filter"],[3,"Fuse"],[3,"Inspect"],[3,"Map"],[3,"Scan"],[3,"Skip"],[3,"SkipWhile"],[3,"StepBy"],[3,"Take"],[3,"TakeWhile"],[3,"Zip"],[3,"Empty"],[3,"FromFn"],[3,"FromIter"],[3,"Once"],[3,"Repeat"],[3,"RepeatWith"],[3,"Lines"],[3,"Split"],[3,"Bytes"],[3,"Chain"],[3,"Take"],[3,"BufReader"],[3,"BufWriter"],[3,"IntoInnerError"],[3,"Cursor"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"],[3,"UnixDatagram"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixStream"],[3,"SocketAddr"],[3,"Arc"],[3,"Weak"],[3,"Mutex"],[3,"MutexGuard"],[3,"MutexGuardArc"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockUpgradableReadGuard"],[3,"RwLockWriteGuard"],[3,"Sender"],[3,"Receiver"],[3,"RecvError"],[3,"DirBuilder"],[3,"DirEntry"],[3,"File"],[3,"FileType"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"ReadDir"],[3,"Ancestors"],[3,"Components"],[3,"Iter"],[3,"Path"],[3,"PathBuf"],[3,"Display"],[3,"PrefixComponent"],[3,"StripPrefixError"],[3,"TcpListener"],[3,"Incoming"],[3,"TcpStream"],[3,"UdpSocket"],[3,"AddrParseError"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"]]},\
"async_task":{"doc":"Task abstraction for building executors.","i":[[5,"spawn","async_task","Creates a new task.",null,[[]]],[5,"spawn_unchecked","","Creates a new task without [<code>Send</code>], [<code>Sync</code>], and <code>\'static</code> …",null,[[]]],[3,"Runnable","","A handle to a runnable task.",null,null],[3,"Task","","A spawned task.",null,null],[5,"spawn_local","","Creates a new thread-local task.",null,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_future","","",1,[[]]],[11,"drop","","",0,[[]]],[11,"drop","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"poll","","",1,[[["pin",3],["context",3]],["poll",4]]],[11,"schedule","","Schedules the task.",0,[[]]],[11,"run","","Runs the task by polling its future.",0,[[],["bool",15]]],[11,"waker","","Returns a waker associated with this task.",0,[[],["waker",3]]],[11,"detach","","Detaches the task to let it keep running in the …",1,[[]]],[11,"cancel","","Cancels the task and waits for it to stop running.",1,[[]]]],"p":[[3,"Runnable"],[3,"Task"]]},\
"async_trait":{"doc":"github crates-io docs-rs","i":[[23,"async_trait","async_trait","",null,null]],"p":[]},\
"atomic_waker":{"doc":"<code>futures::task::AtomicWaker</code> extracted into its own crate.","i":[[3,"AtomicWaker","atomic_waker","A synchronization primitive for task wakeup.",null,null],[11,"new","","Create an <code>AtomicWaker</code>.",0,[[]]],[11,"register","","Registers the waker to be notified on calls to <code>wake</code>.",0,[[["waker",3]]]],[11,"wake","","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.",0,[[]]],[11,"take","","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …",0,[[],[["waker",3],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"AtomicWaker"]]},\
"atty":{"doc":"atty is a simple utility that answers one question","i":[[4,"Stream","atty","possible stream sources",null,null],[13,"Stdout","","",0,null],[13,"Stderr","","",0,null],[13,"Stdin","","",0,null],[5,"is","","returns true if this is a tty",null,[[["stream",4]],["bool",15]]],[5,"isnt","","returns true if this is <em>not</em> a tty",null,[[["stream",4]],["bool",15]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clone","","",0,[[],["stream",4]]]],"p":[[4,"Stream"]]},\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","i":[[8,"BitField","bit_field","A generic trait which provides methods for extracting and …",null,null],[18,"BIT_LENGTH","","The number of bits in this bit field.",0,null],[10,"get_bit","","Obtains the bit at the index <code>bit</code>; note that index 0 is …",0,[[["usize",15]],["bool",15]]],[10,"get_bits","","Obtains the range of bits specified by <code>range</code>; note that …",0,[[["rangebounds",8],["usize",15]]]],[10,"set_bit","","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …",0,[[["usize",15],["bool",15]]]],[10,"set_bits","","Sets the range of bits defined by the range <code>range</code> to the …",0,[[["rangebounds",8],["usize",15]]]],[8,"BitArray","","",null,null],[10,"bit_length","","Returns the length, eg number of bits, in this bit array.",1,[[],["usize",15]]],[10,"get_bit","","Obtains the bit at the index <code>bit</code>; note that index 0 is …",1,[[["usize",15]],["bool",15]]],[10,"get_bits","","Obtains the range of bits specified by <code>range</code>; note that …",1,[[["rangebounds",8],["usize",15]]]],[10,"set_bit","","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …",1,[[["usize",15],["bool",15]]]],[10,"set_bits","","Sets the range of bits defined by the range <code>range</code> to the …",1,[[["rangebounds",8],["usize",15]]]]],"p":[[8,"BitField"],[8,"BitArray"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]},\
"bitvec":{"doc":"<code>bitvec</code> — Addressable Bits<code>bitvec</code> provides the foundation …","i":[[0,"macros","bitvec","Constructor macros for the crate’s collection types.",null,null],[0,"access","","Memory access guards.",null,null],[8,"BitAccess","bitvec::access","Abstracts over the instructions used when accessing a …",null,null],[11,"clear_bits","","Clears any number of bits in a memory register to <code>0</code>.",0,[[["bitmask",3]]]],[11,"set_bits","","Sets any number of bits in a memory register to <code>1</code>.",0,[[["bitmask",3]]]],[11,"invert_bits","","Inverts any number of bits in a memory register.",0,[[["bitmask",3]]]],[11,"write_bit","","Writes a value to one bit in a memory register.",0,[[["bool",15],["bitidx",3]]]],[11,"get_writers","","Gets the function that writes <code>value</code> into all bits under a …",0,[[["bool",15]]]],[8,"BitSafe","","Restricts memory modification to only exclusive …",null,null],[16,"Mem","","The register type being guarded against shared mutation.",1,null],[16,"Rad","","The accessor type being prevented from mutating while …",1,null],[10,"load","","Reads the value out of memory only if a shared reference …",1,[[]]],[10,"store","","Writes a value into memory only if an exclusive reference …",1,[[]]],[3,"BitSafeU8","","A wrapper over a shared-mutable type that forbids writing …",null,null],[3,"BitSafeU16","","A wrapper over a shared-mutable type that forbids writing …",null,null],[3,"BitSafeU32","","A wrapper over a shared-mutable type that forbids writing …",null,null],[3,"BitSafeU64","","A wrapper over a shared-mutable type that forbids writing …",null,null],[3,"BitSafeUsize","","A wrapper over a shared-mutable type that forbids writing …",null,null],[0,"array","bitvec","A statically-allocated, fixed-size, buffer containing a …",null,null],[3,"BitArray","bitvec::array","An array of individual bits, able to be held by value on …",null,null],[11,"zeroed","","Constructs a new <code>BitArray</code> with its memory set to zero.",2,[[]]],[11,"new","","Wraps a buffer in a <code>BitArray</code>.",2,[[]]],[11,"value","","Removes the <code>BitArray</code> wrapper, leaving the contained …",2,[[]]],[11,"as_bitslice","","Views the array as a <code>BitSlice</code>.",2,[[],["bitslice",3]]],[11,"as_mut_bitslice","","Views the array as a mutable <code>BitSlice</code>.",2,[[],["bitslice",3]]],[11,"as_raw_slice","","Views the array as a slice of its underlying memory …",2,[[]]],[11,"as_mut_raw_slice","","Views the array as a mutable slice of its underlying …",2,[[]]],[11,"as_buffer","","Views the interior buffer.",2,[[]]],[11,"as_mut_buffer","","Mutably views the interior buffer.",2,[[]]],[3,"IntoIter","","A by-value bit-array iterator.",null,null],[0,"domain","bitvec","Representations of the <code>BitSlice</code> region memory model.",null,null],[4,"BitDomain","bitvec::domain","Granular representation of the memory region containing a …",null,null],[13,"Enclave","","Indicates that a <code>BitSlice</code> is contained entirely in the …",3,null],[12,"head","bitvec::domain::BitDomain","The start index of the <code>BitSlice</code>.",4,null],[12,"body","","The original <code>BitSlice</code> used to create this bit-domain view.",4,null],[12,"tail","","The end index of the <code>BitSlice</code>.",4,null],[13,"Region","bitvec::domain","Indicates that a <code>BitSlice</code> region touches at least one edge…",3,null],[12,"head","bitvec::domain::BitDomain","Any bits that partially-fill the base element of the slice…",5,null],[12,"body","","Any bits inside elements that the source <code>BitSlice</code> …",5,null],[12,"tail","","Any bits that partially fill the last element of the slice…",5,null],[11,"enclave","bitvec::domain","Attempts to view the domain as an enclave variant.",3,[[],["option",4]]],[11,"region","","Attempts to view the domain as a region variant.",3,[[],["option",4]]],[4,"BitDomainMut","","Granular representation of the memory region containing a …",null,null],[13,"Enclave","","Indicates that a <code>BitSlice</code> is contained entirely in the …",6,null],[12,"head","bitvec::domain::BitDomainMut","The start index of the <code>BitSlice</code>.",7,null],[12,"body","","The original <code>BitSlice</code> used to create this bit-domain view.",7,null],[12,"tail","","The end index of the <code>BitSlice</code>.",7,null],[13,"Region","bitvec::domain","Indicates that a <code>BitSlice</code> region touches at least one edge…",6,null],[12,"head","bitvec::domain::BitDomainMut","Any bits that partially-fill the base element of the slice…",8,null],[12,"body","","Any bits inside elements that the source <code>BitSlice</code> …",8,null],[12,"tail","","Any bits that partially fill the last element of the slice…",8,null],[11,"enclave","bitvec::domain","Attempts to view the domain as an enclave variant.",6,[[],["option",4]]],[11,"region","","Attempts to view the domain as a region variant.",6,[[],["option",4]]],[4,"Domain","","Granular representation of the memory region containing a …",null,null],[13,"Enclave","","Indicates that a <code>BitSlice</code> is contained entirely in the …",9,null],[12,"head","bitvec::domain::Domain","The start index of the <code>BitSlice</code>.",10,null],[12,"elem","","An aliased view of the element containing the <code>BitSlice</code>.",10,null],[12,"tail","","The end index of the <code>BitSlice</code>.",10,null],[13,"Region","bitvec::domain","Indicates that a <code>BitSlice</code> region touches at least one edge…",9,null],[12,"head","bitvec::domain::Domain","If the <code>BitSlice</code> started in the interior of its first …",11,null],[12,"body","","All fully-spanned, unaliased, elements.",11,null],[12,"tail","","If the <code>BitSlice</code> ended in the interior of its last element,…",11,null],[11,"enclave","bitvec::domain","Attempts to view the domain as an enclave variant.",9,[[],["option",4]]],[11,"region","","Attempts to view the domain as the region variant.",9,[[],["option",4]]],[4,"DomainMut","","Granular representation of the memory region containing a …",null,null],[13,"Enclave","","Indicates that a <code>BitSlice</code> is contained entirely in the …",12,null],[12,"head","bitvec::domain::DomainMut","The start index of the <code>BitSlice</code>.",13,null],[12,"elem","","An aliased view of the element containing the <code>BitSlice</code>.",13,null],[12,"tail","","The end index of the <code>BitSlice</code>.",13,null],[13,"Region","bitvec::domain","Indicates that a <code>BitSlice</code> region touches at least one edge…",12,null],[12,"head","bitvec::domain::DomainMut","If the <code>BitSlice</code> started in the interior of its first …",14,null],[12,"body","","All fully-spanned, unaliased, elements.",14,null],[12,"tail","","If the <code>BitSlice</code> ended in the interior of its last element,…",14,null],[11,"enclave","bitvec::domain","Attempts to view the domain as an enclave variant.",12,[[],["option",4]]],[11,"region","","Attempts to view the domain as the region variant.",12,[[],["option",4]]],[0,"field","bitvec","Batched load/store access to bitfields.",null,null],[8,"BitField","bitvec::field","Performs C-style bitfield access through a <code>BitSlice</code>.",null,null],[11,"load","","Loads the bits in the <code>self</code> region into a local value.",15,[[]]],[11,"store","","Stores a sequence of bits from the user into the domain …",15,[[]]],[10,"load_le","","Loads from <code>self</code>, using little-endian element <code>T</code> ordering.",15,[[]]],[10,"load_be","","Loads from <code>self</code>, using big-endian element <code>T</code> ordering.",15,[[]]],[10,"store_le","","Stores into <code>self</code>, using little-endian element ordering.",15,[[]]],[10,"store_be","","Stores into <code>self</code>, using big-endian element ordering.",15,[[]]],[0,"index","bitvec","Well-typed counters and register descriptors.",null,null],[3,"BitIdx","bitvec::index","A semantic index counter within a register element <code>R</code>.",null,null],[18,"LAST","","The inclusive maximum index within an element <code>R</code>.",16,null],[18,"ZERO","","The inclusive minimum index within an element <code>R</code>.",16,null],[11,"new","","Wraps a counter value as a known-good index into an <code>R</code> …",16,[[["u8",15]],[["bitidxerror",3],["result",4]]]],[11,"new_unchecked","","Wraps a counter value as an assumed-good index into an <code>R</code> …",16,[[["u8",15]]]],[11,"cast","","Casts to a new index type.",16,[[],[["bitidxerror",3],["result",4],["bitidx",3]]]],[11,"value","","Removes the index wrapper, leaving the internal counter.",16,[[],["u8",15]]],[11,"next","","Increments an index counter, wrapping at the back edge of …",16,[[]]],[11,"prev","","Decrements an index counter, wrapping at the front edge …",16,[[]]],[11,"position","","Computes the bit position corresponding to <code>self</code> under …",16,[[],["bitpos",3]]],[11,"select","","Computes the bit selector corresponding to <code>self</code> under an …",16,[[],["bitsel",3]]],[11,"mask","","Computes the bit selector for <code>self</code> as an accessor mask.",16,[[],["bitmask",3]]],[11,"range","","Iterates over all indices between an inclusive start and …",16,[[["bittail",3]]]],[11,"range_all","","Iterates over all possible index values.",16,[[]]],[11,"offset","","Computes the jump distance for some number of bits away …",16,[[["isize",15]]]],[11,"span","","Computes the span information for a region beginning at …",16,[[["usize",15]]]],[3,"BitIdxError","","Marks an index that is invalid for a register type.",null,null],[11,"value","","Removes the error wrapper, leaving the internal counter.",17,[[],["u8",15]]],[3,"BitTail","","A semantic index counter within <em>or one bit past the end of</em>…",null,null],[18,"LAST","","The inclusive maximum tail within an element <code>R</code>.",18,null],[18,"ZERO","","The inclusive minimum tail within an element <code>R</code>.",18,null],[11,"new","","Wraps a counter value as a known-good tail of an <code>R</code> …",18,[[["u8",15]],["option",4]]],[11,"value","","Removes the tail wrapper, leaving the internal counter.",18,[[],["u8",15]]],[11,"range_from","","Iterates over all tail indices at and after an inclusive …",18,[[["bitidx",3]]]],[11,"span","","Computes the span information for a region beginning …",18,[[["usize",15]]]],[3,"BitPos","","An electrical position counter within a register element <code>R</code>…",null,null],[11,"new","","Wraps a counter value as a known-good position within an <code>R</code>…",19,[[["u8",15]],["option",4]]],[11,"new_unchecked","","Wraps a counter value as an assumed-good position within …",19,[[["u8",15]]]],[11,"value","","Removes the position wrapper, leaving the internal …",19,[[],["u8",15]]],[11,"select","","Computes the bit selector corresponding to <code>self</code>.",19,[[],["bitsel",3]]],[11,"mask","","Computes the bit selector for <code>self</code> as an accessor mask.",19,[[],["bitmask",3]]],[3,"BitSel","","A one-hot selection mask for a register element <code>R</code>.",null,null],[11,"new","","Wraps a counter value as a known-good selection of an <code>R</code> …",20,[[],["option",4]]],[11,"new_unchecked","","Wraps a counter value as an assumed-good selection of an <code>R</code>…",20,[[]]],[11,"value","","Removes the selector wrapper, leaving the internal …",20,[[]]],[11,"mask","","Computes a bit-mask for <code>self</code>. This is a type-cast.",20,[[],["bitmask",3]]],[11,"range_all","","Iterates over all possible selector values.",20,[[]]],[3,"BitMask","","A multi-bit selection mask for a register <code>R</code>.",null,null],[18,"ALL","","A full mask.",21,null],[18,"ZERO","","An empty mask.",21,null],[11,"new","","Wraps any <code>R</code> value as a bit-mask.",21,[[]]],[11,"value","","Removes the mask wrapper, leaving the internal value.",21,[[]]],[11,"test","","Tests whether the mask contains a given selector bit.",21,[[["bitsel",3]],["bool",15]]],[11,"insert","","Inserts a selector bit into an existing mask.",21,[[["bitsel",3]]]],[11,"combine","","Creates a new mask with a selector bit activated.",21,[[["bitsel",3]]]],[0,"mem","bitvec","Memory element descriptions.",null,null],[8,"BitMemory","bitvec::mem","Description of an integer memory element.",null,null],[18,"INDX","","The number of bits required to store an index in the …",22,null],[18,"MASK","","A mask over all bits that can be used as an index within …",22,null],[8,"BitRegister","","Description of a processor register.",null,null],[18,"ONE","","The literal <code>1</code>.",23,null],[18,"ALL","","The literal <code>!0</code>.",23,null],[0,"order","bitvec","Ordering of bits within register elements.",null,null],[8,"BitOrder","bitvec::order","An ordering over a register.",null,null],[10,"at","","Converts a semantic bit index into an electrical bit …",24,[[["bitidx",3]],["bitpos",3]]],[11,"select","","Converts a semantic bit index into a one-hot selector …",24,[[["bitidx",3]],["bitsel",3]]],[11,"mask","","Constructs a multiple-bit selector mask for batched …",24,[[],["bitmask",3]]],[3,"Lsb0","","Traverses a register from the least significant bit to …",null,null],[3,"Msb0","","Traverses a register from the most significant bit to the …",null,null],[5,"verify","","Verifies a <code>BitOrder</code> implementation’s adherence to the …",null,[[["bool",15]]]],[5,"verify_for_type","","Verifies a <code>BitOrder</code> implementation’s adherence to the …",null,[[["bool",15]]]],[0,"prelude","bitvec","<code>bitvec</code> symbol export.",null,null],[3,"BitPtr","bitvec::prelude","Pointer to an individual bit in a memory element. …",null,null],[3,"BitPtrRange","","Equivalent to <code>Range<BitPtr<M, O, T>></code>.",null,null],[12,"start","","The lower bound of the range (inclusive).",25,null],[12,"end","","The higher bound of the range (exclusive).",25,null],[3,"BitRef","","A proxy reference, equivalent to C++ …",null,null],[0,"ptr","bitvec","Mirror of the <code>core::ptr</code> module and <code>bitvec</code>-specific …",null,null],[11,"from_bitptr","bitvec::prelude","Converts a bit-pointer into a proxy bit-reference.",26,[[["bitptr",3]]]],[11,"into_bitptr","","Decays the bit-reference to an ordinary bit-pointer.",26,[[],["bitptr",3]]],[11,"replace","","Moves <code>src</code> into the referenced bit, returning the previous …",26,[[["bool",15]],["bool",15]]],[11,"swap","","Swaps the values at two mutable locations, without …",26,[[["bitref",3]]]],[11,"set","","Writes a bit into the proxied location without an …",26,[[["bool",15]]]],[18,"EMPTY","","The canonical empty range. All ranges with zero length …",25,null],[11,"raw_parts","","Destructures the range back into its start and end …",25,[[]]],[11,"into_range","","Converts the structure into an actual <code>Range</code>. The <code>Range</code> …",25,[[],[["bitptr",3],["range",3]]]],[11,"is_empty","","Tests if the range is empty (the distance between …",25,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if the <code>pointer</code> is contained in the range.",25,[[["bitptr",3]],["bool",15]]],[18,"DANGLING","","The dangling pointer. This selects the starting bit of …",27,null],[11,"try_new","","Tries to construct a <code>BitPtr</code> from a memory location and a …",27,[[["u8",15]],[["result",4],["bitptrerror",4]]]],[11,"new","","Constructs a <code>BitPtr</code> from a memory location and a bit …",27,[[["address",3],["bitidx",3]]]],[11,"raw_parts","","Decomposes the pointer into its element address and bit …",27,[[]]],[11,"range","","Produces a pointer range starting at <code>self</code> and running for …",27,[[["usize",15]],["bitptrrange",3]]],[11,"into_bitref","","Converts a bit-pointer into a proxy bit-reference.",27,[[],["bitref",3]]],[11,"immut","","Removes write permissions from a bit-pointer.",27,[[],[["bitptr",3],["const",3]]]],[11,"assert_mut","","Adds write permissions to a bit-pointer.",27,[[],[["bitptr",3],["mut",3]]]],[11,"is_null","","Tests if a bit-pointer is the null value.",27,[[],["bool",15]]],[11,"cast","","Casts to a bit-pointer of another storage type, …",27,[[],["bitptr",3]]],[11,"as_ref","","Produces a proxy reference to the referent bit.",27,[[],[["bitref",3],["option",4]]]],[11,"offset","","Calculates the offset from a pointer.",27,[[["isize",15]]]],[11,"wrapping_offset","","Calculates the offset from a pointer using wrapping …",27,[[["isize",15]]]],[11,"offset_from","","Calculates the distance between two pointers. The …",27,[[],["isize",15]]],[11,"add","","Calculates the offset from a pointer (convenience for …",27,[[["usize",15]]]],[11,"sub","","Calculates the offset from a pointer (convenience for …",27,[[["usize",15]]]],[11,"wrapping_add","","Calculates the offset from a pointer using wrapping …",27,[[["usize",15]]]],[11,"wrapping_sub","","Calculates the offset from a pointer using wrapping …",27,[[["usize",15]]]],[11,"read","","Reads the bit from <code>*self</code>.",27,[[],["bool",15]]],[11,"read_volatile","","Performs a volatile read of the bit from <code>self</code>.",27,[[],["bool",15]]],[11,"copy_to","","Copies <code>count</code> bits from <code>self</code> to <code>dest</code>. The source and …",27,[[["bitptr",3],["mut",3],["usize",15]]]],[11,"copy_to_nonoverlapping","","Copies <code>count</code> bits from <code>self</code> to <code>dest</code>. The source and …",27,[[["bitptr",3],["mut",3],["usize",15]]]],[11,"align_offset","","Computes the offset (in bits) that needs to be applied to …",27,[[["usize",15]],["usize",15]]],[11,"from_ref","","Constructs a <code>BitPtr</code> from an element reference.",27,[[]]],[11,"from_ptr","","Attempts to construct a <code>BitPtr</code> from an element location.",27,[[],[["result",4],["bitptrerror",4]]]],[11,"from_slice","","Constructs a <code>BitPtr</code> from a slice reference.",27,[[]]],[11,"pointer","","Gets the pointer to the base memory location containing …",27,[[]]],[11,"from_mut","","Constructs a <code>BitPtr</code> from an element reference.",27,[[]]],[11,"from_mut_ptr","","Attempts to construct a <code>BitPtr</code> from an element location.",27,[[],[["result",4],["bitptrerror",4]]]],[11,"from_mut_slice","","Constructs a <code>BitPtr</code> from a slice reference.",27,[[]]],[11,"pointer","","Gets the pointer to the base memory location containing …",27,[[]]],[11,"as_mut","","Produces a proxy mutable reference to the referent bit.",27,[[],[["bitref",3],["option",4]]]],[11,"copy_from","","Copies <code>count</code> bits from <code>src</code> to <code>self</code>. The source and …",27,[[["usize",15],["bitptr",3],["const",3]]]],[11,"copy_from_nonoverlapping","","Copies <code>count</code> bits from <code>src</code> to <code>self</code>. The source and …",27,[[["usize",15],["bitptr",3],["const",3]]]],[11,"write","","Overwrites a memory location with the given bit.",27,[[["bool",15]]]],[11,"write_volatile","","Performs a volatile write of a memory location with the …",27,[[["bool",15]]]],[11,"replace","","Replaces the bit at <code>*self</code> with <code>src</code>, returning the old bit.",27,[[["bool",15]],["bool",15]]],[11,"swap","","Swaps the bits at two mutable locations. They may overlap.",27,[[["bitptr",3],["mut",3]]]],[3,"Const","bitvec::ptr","An immutable pointer.",null,null],[3,"Mut","","A mutable pointer. Contexts with a <code>Mutable</code> may lower to …",null,null],[3,"Address","","A non-null, well-aligned, <code>BitStore</code> element address.",null,null],[4,"AddressError","","An error produced when consuming <code>BitStore</code> memory …",null,null],[13,"Null","","<code>Address</code> cannot use the null pointer.",28,null],[13,"Misaligned","","<code>Address</code> cannot be misaligned for the referent type <code>T</code>.",28,null],[3,"BitRef","","A proxy reference, equivalent to C++ …",null,null],[3,"BitPtrRange","","Equivalent to <code>Range<BitPtr<M, O, T>></code>.",null,null],[12,"start","","The lower bound of the range (inclusive).",25,null],[12,"end","","The higher bound of the range (exclusive).",25,null],[3,"BitPtr","","Pointer to an individual bit in a memory element. …",null,null],[4,"BitPtrError","","Errors produced by invalid bit-pointer components.",null,null],[13,"InvalidAddress","","The element address was somehow invalid.",29,null],[13,"InvalidIndex","","The bit index was somehow invalid.",29,null],[4,"BitSpanError","","An error produced when creating <code>BitSpan</code> encoded …",null,null],[13,"InvalidBitptr","","The base <code>BitPtr</code> is invalid.",30,null],[13,"TooLong","","<code>BitSpan</code> domains have a length ceiling.",30,null],[13,"TooHigh","","<code>BitSpan</code> domains have an address ceiling.",30,null],[5,"copy","","Copies <code>count</code> bits from <code>src</code> to <code>dst</code>. The source and …",null,[[["mut",3],["usize",15],["bitptr",3],["bitptr",3],["const",3]]]],[5,"copy_nonoverlapping","","Copies <code>count</code> bits from <code>src</code> to <code>dst</code>. The source and …",null,[[["mut",3],["usize",15],["bitptr",3],["bitptr",3],["const",3]]]],[5,"eq","","Compares raw bit-pointers for equality.",null,[[["bitptr",3],["bitptr",3],["const",3]],["bool",15]]],[5,"hash","","Hash a raw bit-pointer.",null,[[["bitptr",3],["const",3]]]],[5,"read","","Reads the bit from <code>src</code>.",null,[[["bitptr",3],["const",3]],["bool",15]]],[5,"read_volatile","","Performs a volatile read of the bit from <code>src</code>.",null,[[["bitptr",3],["const",3]],["bool",15]]],[5,"replace","","Moves <code>src</code> into the pointed <code>dst</code>, returning the previous <code>dst</code>…",null,[[["bitptr",3],["mut",3],["bool",15]],["bool",15]]],[5,"bitslice_from_raw_parts","","Forms a raw bit-slice from a bit-pointer and a length.",null,[[["usize",15],["bitptr",3],["const",3]]]],[5,"bitslice_from_raw_parts_mut","","Performs the same functionality as <code>bitslice_from_raw_parts</code>…",null,[[["bitptr",3],["mut",3],["usize",15]]]],[5,"swap","","Swaps the values at two mutable locations.",null,[[["mut",3],["bitptr",3],["bitptr",3]]]],[5,"swap_nonoverlapping","","Swaps <code>count</code> bits between the two regions of memory …",null,[[["mut",3],["usize",15],["bitptr",3],["bitptr",3]]]],[5,"write","","Overwrites a memory location with the given bit.",null,[[["bitptr",3],["mut",3],["bool",15]]]],[5,"write_volatile","","Performs a volatile write of a memory location with the …",null,[[["bitptr",3],["mut",3],["bool",15]]]],[0,"slice","bitvec","A dynamically-sized view into individual bits of a memory …",null,null],[3,"BitSlice","bitvec::slice","A slice of individual bits, anywhere in memory.",null,null],[11,"from_element","","Constructs a shared <code>&BitSlice</code> reference over a shared …",31,[[]]],[11,"from_element_mut","","Constructs an exclusive <code>&mut BitSlice</code> reference over an …",31,[[]]],[11,"from_slice","","Constructs a shared <code>&BitSlice</code> reference over a slice.",31,[[],[["bitspanerror",4],["result",4]]]],[11,"from_slice_mut","","Constructs an exclusive <code>&mut BitSlice</code> reference over a …",31,[[],[["result",4],["bitspanerror",4]]]],[11,"from_slice_unchecked","","Converts a slice reference into a <code>BitSlice</code> reference …",31,[[]]],[11,"from_slice_unchecked_mut","","Converts a slice reference into a <code>BitSlice</code> reference …",31,[[]]],[11,"empty","","Produces the empty slice reference.",31,[[]]],[11,"empty_mut","","Produces the empty mutable slice reference.",31,[[]]],[11,"set","","Writes a new bit at a given index.",31,[[["usize",15],["bool",15]]]],[11,"set_aliased","","Writes a new bit at a given index.",31,[[["usize",15],["bool",15]]]],[11,"any","","Tests if <em>any</em> bit in the slice is set (logical <code>∨</code>).",31,[[],["bool",15]]],[11,"all","","Tests if <em>all</em> bits in the slice domain are set (logical <code>∧</code>…",31,[[],["bool",15]]],[11,"not_any","","Tests if <em>all</em> bits in the slice are unset (logical <code>¬∨</code>).",31,[[],["bool",15]]],[11,"not_all","","Tests if <em>any</em> bit in the slice is unset (logical <code>¬∧</code>).",31,[[],["bool",15]]],[11,"some","","Tests whether the slice has some, but not all, bits set …",31,[[],["bool",15]]],[11,"count_ones","","Counts the number of bits set to <code>1</code> in the slice contents.",31,[[],["usize",15]]],[11,"count_zeros","","Counts the number of bits cleared to <code>0</code> in the slice …",31,[[],["usize",15]]],[11,"iter_ones","","Enumerates all bits in a <code>BitSlice</code> that are set to <code>1</code>.",31,[[],["iterones",3]]],[11,"iter_zeros","","Enumerates all bits in a <code>BitSlice</code> that are cleared to <code>0</code>.",31,[[],["iterzeros",3]]],[11,"first_one","","Gets the index of the first bit in the bit-slice set to <code>1</code>.",31,[[],[["usize",15],["option",4]]]],[11,"first_zero","","Gets the index of the first bit in the bit-slice set to <code>0</code>.",31,[[],[["usize",15],["option",4]]]],[11,"last_one","","Gets the index of the last bit in the bit-slice set to <code>1</code>.",31,[[],[["usize",15],["option",4]]]],[11,"last_zero","","Gets the index of the last bit in the bit-slice set to <code>0</code>.",31,[[],[["usize",15],["option",4]]]],[11,"leading_ones","","Counts the number of bits from the start of the bit-slice …",31,[[],["usize",15]]],[11,"leading_zeros","","Counts the number of bits from the start of the bit-slice …",31,[[],["usize",15]]],[11,"trailing_ones","","Counts the number of bits from the end of the bit-slice …",31,[[],["usize",15]]],[11,"trailing_zeros","","Counts the number of bits from the end of the bit-slice …",31,[[],["usize",15]]],[11,"clone_from_bitslice","","Copies the bits from <code>src</code> into <code>self</code>.",31,[[["bitslice",3]]]],[11,"copy_from_bitslice","","Copies all bits from <code>src</code> into <code>self</code>, using a memcpy …",31,[[]]],[11,"swap_with_bitslice","","Swaps all bits in <code>self</code> with those in <code>other</code>.",31,[[["bitslice",3]]]],[11,"shift_left","","Shifts the contents of a bit-slice left (towards index <code>0</code>).",31,[[["usize",15]]]],[11,"shift_right","","Shifts the contents of a bit-slice right (towards index …",31,[[["usize",15]]]],[11,"set_all","","Sets all bits in the slice to a value.",31,[[["bool",15]]]],[11,"for_each","","Applies a function to each bit in the slice.",31,[[]]],[11,"offset_from","","Produces the absolute offset in bits between two slice …",31,[[],["isize",15]]],[11,"set_unchecked","","Writes a new bit at a given index, without doing bounds …",31,[[["usize",15],["bool",15]]]],[11,"set_aliased_unchecked","","Writes a new bit at a given index, without doing bounds …",31,[[["usize",15],["bool",15]]]],[11,"swap_unchecked","","Swaps two bits in the slice.",31,[[["usize",15]]]],[11,"split_at_unchecked","","Divides one slice into two at an index, without …",31,[[["usize",15]]]],[11,"split_at_unchecked_mut","","Divides one mutable slice into two at an index.",31,[[["usize",15]]]],[11,"copy_within_unchecked","","Copies bits from one part of the slice to another part of …",31,[[["usize",15]]]],[11,"as_bitptr","","Returns a raw bit-pointer to the base of the …",31,[[],[["bitptr",3],["const",3]]]],[11,"as_mut_bitptr","","Returns an unsafe mutable bit-pointer to the …",31,[[],[["bitptr",3],["mut",3]]]],[11,"as_bitptr_range","","Returns the two raw bit-pointers spanning the bit-slice.",31,[[],[["const",3],["bitptrrange",3]]]],[11,"as_mut_bitptr_range","","Returns the two unsafe mutable bit-pointers spanning the …",31,[[],[["mut",3],["bitptrrange",3]]]],[11,"bit_domain","","Splits the slice into subslices at alias boundaries.",31,[[],["bitdomain",4]]],[11,"bit_domain_mut","","Splits the slice into subslices at alias boundaries.",31,[[],["bitdomainmut",4]]],[11,"domain","","Views the underlying memory containing the slice, split …",31,[[],["domain",4]]],[11,"domain_mut","","Views the underlying memory containing the slice, split …",31,[[],["domainmut",4]]],[11,"as_raw_slice","","Views the underlying memory containing the slice.",31,[[]]],[11,"split_at_aliased_mut","","Splits a mutable slice at some mid-point.",31,[[["usize",15]]]],[18,"MAX_BITS","","The inclusive maximum length of a <code>BitSlice<_, T></code>.",31,null],[18,"MAX_ELTS","","The inclusive maximum length that a slice <code>[T]</code> can be for …",31,null],[11,"to_bitvec","","Copies <code>self</code> into a new <code>BitVec</code>.",31,[[],["bitvec",3]]],[5,"from_raw_parts_unchecked","","Performs the same functionality as <code>from_raw_parts</code>, …",null,[[["usize",15],["bitptr",3],["const",3]],["bitslice",3]]],[5,"from_raw_parts_unchecked_mut","","Performs the same functionality as <code>from_raw_parts_mut</code>, …",null,[[["bitptr",3],["mut",3],["usize",15]],["bitslice",3]]],[5,"from_mut","","Converts a reference to <code>T</code> into a <code>BitSlice</code> over one …",null,[[],["bitslice",3]]],[5,"from_raw_parts","","Forms a bit-slice from a bit-pointer and a length.",null,[[["usize",15],["bitptr",3],["const",3]],[["result",4],["bitslice",3],["bitspanerror",4]]]],[5,"from_raw_parts_mut","","Performs the same functionality as <code>from_raw_parts</code>, except …",null,[[["bitptr",3],["mut",3],["usize",15]],[["bitslice",3],["bitspanerror",4],["result",4]]]],[5,"from_ref","","Converts a reference to <code>T</code> into a <code>BitSlice</code> over one …",null,[[],["bitslice",3]]],[8,"BitSliceIndex","","A helper trait used for indexing operations.",null,null],[16,"Immut","","The output type for immutable accessors.",32,null],[16,"Mut","","The output type for mutable accessors.",32,null],[10,"get","","Returns a shared reference to the output at this …",32,[[["bitslice",3]],["option",4]]],[10,"get_mut","","Returns a mutable reference to the output at this …",32,[[["bitslice",3]],["option",4]]],[10,"get_unchecked","","Returns a shared reference to the output at this …",32,[[["bitslice",3]]]],[10,"get_unchecked_mut","","Returns a mutable reference to the output at this …",32,[[["bitslice",3]]]],[10,"index","","Returns a shared reference to the output at this …",32,[[["bitslice",3]]]],[10,"index_mut","","Returns a mutable reference to the output at this …",32,[[["bitslice",3]]]],[3,"Chunks","","An iterator over a <code>BitSlice</code> in (non-overlapping) chunks (…",null,null],[3,"ChunksExact","","An iterator over a <code>BitSlice</code> in (non-overlapping) chunks (…",null,null],[3,"ChunksExactMut","","An iterator over a <code>BitSlice</code> in (non-overlapping) mutable …",null,null],[3,"ChunksMut","","An iterator over a <code>BitSlice</code> in (non-overlapping) mutable …",null,null],[3,"Iter","","Immutable <code>BitSlice</code> iterator.",null,null],[3,"IterMut","","Mutable <code>BitSlice</code> iterator.",null,null],[3,"IterOnes","","Enumerates bits in a <code>BitSlice</code> that are set to <code>1</code>.",null,null],[3,"IterZeros","","Enumerates bits in a <code>BitSlice</code> that are cleared to <code>0</code>.",null,null],[3,"RChunks","","An iterator over a <code>BitSlice</code> in (non-overlapping) chunks (…",null,null],[3,"RChunksExact","","An iterator over a <code>BitSlice</code> in (non-overlapping) chunks (…",null,null],[3,"RChunksExactMut","","An iterator over a <code>BitSlice</code> in (non-overlapping) mutable …",null,null],[3,"RChunksMut","","An iterator over a <code>BitSlice</code> in (non-overlapping) mutable …",null,null],[3,"RSplit","","An iterator over subslices separated by bits that match a …",null,null],[3,"RSplitMut","","An iterator over subslices separated by bits that match a …",null,null],[3,"RSplitN","","An iterator over subslices separated by bits that match a …",null,null],[3,"RSplitNMut","","An iterator over subslices separated by bits that match a …",null,null],[3,"Split","","An iterator over subslices separated by bits that match a …",null,null],[3,"SplitMut","","An iterator over the mutable subslices which are …",null,null],[3,"SplitN","","An iterator over subslices separated by bits that match a …",null,null],[3,"SplitNMut","","An iterator over subslices separated by bits that match a …",null,null],[3,"Windows","","An iterator over overlapping subslices of length <code>size</code>.",null,null],[0,"store","bitvec","Memory modeling.",null,null],[8,"BitStore","bitvec::store","Common interface for memory regions.",null,null],[16,"Mem","","The register type used in the slice region underlying a …",33,null],[16,"Access","","A type that selects appropriate load/store instructions …",33,null],[16,"Alias","","A sibling <code>BitStore</code> implementor. It is used when a <code>BitSlice</code>…",33,null],[16,"Unalias","","The inverse of <code>Alias</code>. It is used when a <code>BitSlice</code> removes …",33,null],[10,"load_value","","Loads a value out of the memory system according to the …",33,[[]]],[10,"store_value","","Stores a value into the memory system according to the …",33,[[]]],[11,"get_bit","","Reads a single bit out of the memory system according to …",33,[[["bitidx",3]],["bool",15]]],[0,"view","bitvec","<code>BitSlice</code> view adapters for memory regions.",null,null],[8,"BitView","bitvec::view","Creates a <code>BitSlice</code> view over some type that supports it.",null,null],[16,"Store","","The region’s storage type.",34,null],[10,"view_bits","","Views a memory region as a <code>BitSlice</code>.",34,[[],["bitslice",3]]],[10,"view_bits_mut","","Views a memory region as a mutable <code>BitSlice</code>.",34,[[],["bitslice",3]]],[8,"AsBits","","Views a region as an immutable <code>BitSlice</code> only.",null,null],[10,"as_bits","","Views memory as a slice of immutable bits.",35,[[],["bitslice",3]]],[8,"AsBitsMut","","Views a region as a mutable <code>BitSlice</code>.",null,null],[10,"as_bits_mut","","Views memory as a slice of mutable bits.",36,[[],["bitslice",3]]],[0,"boxed","bitvec","A dynamically-allocated, fixed-size, buffer containing a …",null,null],[3,"BitBox","bitvec::boxed","A frozen heap-allocated buffer of individual bits.",null,null],[11,"from_bitslice","","Copies a [<code>BitSlice</code>] region into a new <code>BitBox</code> allocation.",37,[[["bitslice",3]]]],[11,"from_boxed_slice","","Converts a <code>Box<[T]></code> into a <code>BitBox</code><O, T>` without copying …",37,[[["box",3]]]],[11,"try_from_boxed_slice","","Converts a <code>Box<[T]></code> into a <code>BitBox<O, T></code> without copying …",37,[[["box",3]],[["box",3],["result",4]]]],[11,"into_boxed_slice","","Converts the slice back into an ordinary slice of memory …",37,[[],["box",3]]],[11,"into_bitvec","","Converts <code>self</code> into a vector without clones or allocation.",37,[[],["bitvec",3]]],[11,"as_bitslice","","Views the buffer’s contents as a <code>BitSlice</code>.",37,[[],["bitslice",3]]],[11,"as_mut_bitslice","","Extracts a mutable bit-slice of the entire vector.",37,[[],["bitslice",3]]],[11,"as_slice","","Extracts an element slice containing the entire box.",37,[[]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire box.",37,[[]]],[11,"set_uninitialized","","Sets the uninitialized bits of the vector to a fixed …",37,[[["bool",15]]]],[0,"vec","bitvec","A dynamically-allocated buffer containing a <code>BitSlice</code> …",null,null],[3,"BitVec","bitvec::vec","A contiguous growable array of bits.",null,null],[11,"repeat","","Constructs a <code>BitVec</code> from a value repeated many times.",38,[[["bool",15],["usize",15]]]],[11,"from_bitslice","","Copies the contents of a <code>BitSlice</code> into a new allocation.",38,[[["bitslice",3]]]],[11,"from_element","","Constructs a new <code>BitVec</code> from the bit-pattern of a single …",38,[[]]],[11,"from_slice","","Constructs a new <code>BitVec</code> from the bit-pattern of an …",38,[[],[["result",4],["bitspanerror",4]]]],[11,"from_vec","","Converts a <code>Vec<T></code> into a <code>BitVec<O, T></code> without copying its …",38,[[["vec",3]]]],[11,"try_from_vec","","Converts a <code>Vec<T></code> into a <code>BitVec<O, T></code> without copying its …",38,[[["vec",3]],[["result",4],["vec",3]]]],[11,"extend_from_bitslice","","Copies all bits in a <code>BitSlice</code> into the <code>BitVec</code>.",38,[[["bitslice",3]]]],[11,"extend_from_raw_slice","","Appends a slice of elements <code>T</code> to the <code>BitVec</code>.",38,[[]]],[11,"elements","","Gets the number of elements <code>T</code> that contain live bits of …",38,[[],["usize",15]]],[11,"into_boxed_bitslice","","Converts the bit-vector into <code>BitBox<O, T></code>.",38,[[],["bitbox",3]]],[11,"into_vec","","Removes the bit-precision view, returning the underlying …",38,[[],["vec",3]]],[11,"set_elements","","Writes a value into every element that the bit-vector …",38,[[]]],[11,"set_uninitialized","","Sets the uninitialized bits of the bit-vector to a fixed …",38,[[["bool",15]]]],[11,"force_align","","Ensures that the live region of the bit-vector’s …",38,[[]]],[11,"as_bitslice","","Extracts a bit-slice containing the entire bit-vector.",38,[[],["bitslice",3]]],[11,"as_mut_bitslice","","Extracts a mutable bit-slice of the entire bit-vector.",38,[[],["bitslice",3]]],[11,"as_bitptr","","Returns a raw pointer to the bit-vector’s buffer.",38,[[],[["bitptr",3],["const",3]]]],[11,"as_mut_bitptr","","Returns an unsafe mutable bit-pointer to the …",38,[[],[["bitptr",3],["mut",3]]]],[11,"as_raw_slice","","Views the underlying buffer as a shared element slice.",38,[[]]],[11,"as_mut_raw_slice","","Views the underlying buffer as an exclusive element slice.",38,[[]]],[11,"as_raw_ptr","","Returns a raw pointer to the bit-vector’s buffer.",38,[[]]],[11,"as_mut_raw_ptr","","Returns an unsafe mutable pointer to the bit-vector’s …",38,[[]]],[3,"Drain","","A draining iterator for <code>BitVec</code>.",null,null],[3,"IntoIter","","An iterator that moves out of a <code>BitVec</code>.",null,null],[3,"Splice","","A splicing iterator for <code>BitVec</code>.",null,null],[14,"BitArr","bitvec","Constructs a type definition for a <code>BitArray</code>.",null,null],[14,"bitarr","","Constructs a new <code>BitArray</code> from a bit-pattern description.",null,null],[14,"bits","","Creates a borrowed <code>BitSlice</code> in the local scope.",null,null],[14,"bitvec","","Constructs a new <code>BitVec</code> from a bit-pattern description.",null,null],[14,"bitbox","","Constructs a new <code>BitBox</code> from a bit-pattern description.",null,null],[11,"view_bits","bitvec::access","",39,[[],["bitslice",3]]],[11,"view_bits_mut","","",39,[[],["bitslice",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"view_bits","","",40,[[],["bitslice",3]]],[11,"view_bits_mut","","",40,[[],["bitslice",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"view_bits","","",41,[[],["bitslice",3]]],[11,"view_bits_mut","","",41,[[],["bitslice",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"view_bits","","",42,[[],["bitslice",3]]],[11,"view_bits_mut","","",42,[[],["bitslice",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"view_bits","","",43,[[],["bitslice",3]]],[11,"view_bits_mut","","",43,[[],["bitslice",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"borrow","bitvec::array","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"into_iter","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","bitvec::domain","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","bitvec::index","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","bitvec::ptr","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","bitvec::order","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","bitvec::prelude","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"into_iter","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","bitvec::ptr","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","bitvec::slice","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"into_iter","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"into_iter","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"into_iter","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"into_iter","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"into_iter","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"into_iter","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"into_iter","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"into_iter","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"into_iter","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"into_iter","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"into_iter","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"into_iter","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"into_iter","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"into_iter","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"into_iter","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"into_iter","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"into_iter","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"into_iter","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"into_iter","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"into_iter","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"into_iter","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","bitvec::boxed","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","bitvec::vec","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"into_iter","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"into_iter","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"into_iter","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"load","bitvec::access","",39,[[],["u8",15]]],[11,"store","","",39,[[["u8",15]]]],[11,"load","","",40,[[],["u16",15]]],[11,"store","","",40,[[["u16",15]]]],[11,"load","","",41,[[],["u32",15]]],[11,"store","","",41,[[["u32",15]]]],[11,"load","","",42,[[],["u64",15]]],[11,"store","","",42,[[["u64",15]]]],[11,"load","","",43,[[],["usize",15]]],[11,"store","","",43,[[["usize",15]]]],[11,"load_le","bitvec::slice","Loads from <code>self</code>, using little-endian element ordering if …",31,[[]]],[11,"load_be","","Loads from <code>self</code>, using big-endian element ordering if <code>self</code>…",31,[[]]],[11,"store_le","","Stores into <code>self</code>, using little-endian element ordering if …",31,[[]]],[11,"store_be","","Stores into <code>self</code>, using big-endian element ordering if …",31,[[]]],[11,"load_le","","Loads from <code>self</code>, using little-endian element ordering if …",31,[[]]],[11,"load_be","","Loads from <code>self</code>, using big-endian element ordering if <code>self</code>…",31,[[]]],[11,"store_le","","Stores into <code>self</code>, using little-endian element ordering if …",31,[[]]],[11,"store_be","","Stores into <code>self</code>, using big-endian element ordering if …",31,[[]]],[11,"load_le","bitvec::array","",2,[[]]],[11,"load_be","","",2,[[]]],[11,"store_le","","",2,[[]]],[11,"store_be","","",2,[[]]],[11,"load_le","bitvec::boxed","",37,[[]]],[11,"load_be","","",37,[[]]],[11,"store_le","","",37,[[]]],[11,"store_be","","",37,[[]]],[11,"load_le","bitvec::vec","",38,[[]]],[11,"load_be","","",38,[[]]],[11,"store_le","","",38,[[]]],[11,"store_be","","",38,[[]]],[11,"at","bitvec::order","",47,[[["bitidx",3]],["bitpos",3]]],[11,"select","","",47,[[["bitidx",3]],["bitsel",3]]],[11,"mask","","",47,[[],["bitmask",3]]],[11,"at","","",48,[[["bitidx",3]],["bitpos",3]]],[11,"select","","",48,[[["bitidx",3]],["bitsel",3]]],[11,"mask","","",48,[[],["bitmask",3]]],[11,"load_value","bitvec::access","",39,[[]]],[11,"store_value","","",39,[[]]],[11,"load_value","","",40,[[]]],[11,"store_value","","",40,[[]]],[11,"load_value","","",41,[[]]],[11,"store_value","","",41,[[]]],[11,"load_value","","",42,[[]]],[11,"store_value","","",42,[[]]],[11,"load_value","","",43,[[]]],[11,"store_value","","",43,[[]]],[11,"deref","bitvec::array","",2,[[]]],[11,"deref","bitvec::prelude","",26,[[]]],[11,"deref","bitvec::boxed","",37,[[]]],[11,"deref","bitvec::vec","",38,[[]]],[11,"deref_mut","bitvec::array","",2,[[]]],[11,"deref_mut","bitvec::prelude","",26,[[]]],[11,"deref_mut","bitvec::boxed","",37,[[]]],[11,"deref_mut","bitvec::vec","",38,[[]]],[11,"fmt","bitvec::access","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::array","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::domain","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::index","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::ptr","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::order","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::ptr","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::prelude","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::ptr","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::slice","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",37,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::array","",2,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::index","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::ptr","",28,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::prelude","",26,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::ptr","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::slice","",31,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",37,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","",38,[[["formatter",3]],["result",6]]],[11,"eq","bitvec::slice","",31,[[["bitarray",3]],["bool",15]]],[11,"eq","bitvec::array","",2,[[],["bool",15]]],[11,"eq","bitvec::index","",16,[[["bitidx",3]],["bool",15]]],[11,"ne","","",16,[[["bitidx",3]],["bool",15]]],[11,"eq","","",17,[[["bitidxerror",3]],["bool",15]]],[11,"ne","","",17,[[["bitidxerror",3]],["bool",15]]],[11,"eq","","",18,[[["bittail",3]],["bool",15]]],[11,"ne","","",18,[[["bittail",3]],["bool",15]]],[11,"eq","","",19,[[["bitpos",3]],["bool",15]]],[11,"ne","","",19,[[["bitpos",3]],["bool",15]]],[11,"eq","","",20,[[["bitsel",3]],["bool",15]]],[11,"ne","","",20,[[["bitsel",3]],["bool",15]]],[11,"eq","","",21,[[["bitmask",3]],["bool",15]]],[11,"ne","","",21,[[["bitmask",3]],["bool",15]]],[11,"eq","bitvec::ptr","",45,[[["const",3]],["bool",15]]],[11,"eq","","",46,[[["mut",3]],["bool",15]]],[11,"eq","bitvec::order","",47,[[["lsb0",3]],["bool",15]]],[11,"eq","","",48,[[["msb0",3]],["bool",15]]],[11,"eq","bitvec::ptr","",49,[[["address",3]],["bool",15]]],[11,"eq","","",28,[[["addresserror",4]],["bool",15]]],[11,"ne","","",28,[[["addresserror",4]],["bool",15]]],[11,"eq","bitvec::prelude","",26,[[["bitref",3]],["bool",15]]],[11,"eq","","",26,[[["bool",15]],["bool",15]]],[11,"eq","","",26,[[["bool",15]],["bool",15]]],[11,"eq","","",25,[[["bitptrrange",3]],["bool",15]]],[11,"eq","","",27,[[["bitptr",3]],["bool",15]]],[11,"eq","bitvec::ptr","",29,[[["bitptrerror",4]],["bool",15]]],[11,"ne","","",29,[[["bitptrerror",4]],["bool",15]]],[11,"eq","","",30,[[["bitspanerror",4]],["bool",15]]],[11,"ne","","",30,[[["bitspanerror",4]],["bool",15]]],[11,"eq","bitvec::slice","",69,[[["iterones",3]],["bool",15]]],[11,"ne","","",69,[[["iterones",3]],["bool",15]]],[11,"eq","","",70,[[["iterzeros",3]],["bool",15]]],[11,"ne","","",70,[[["iterzeros",3]],["bool",15]]],[11,"eq","","",31,[[["bitslice",3]],["bool",15]]],[11,"eq","","",31,[[["bitslice",3]],["bool",15]]],[11,"eq","","",31,[[["bitslice",3]],["bool",15]]],[11,"eq","","",31,[[["bitbox",3]],["bool",15]]],[11,"eq","bitvec::boxed","",37,[[],["bool",15]]],[11,"eq","bitvec::slice","",31,[[["bitvec",3]],["bool",15]]],[11,"eq","bitvec::vec","",38,[[],["bool",15]]],[11,"cmp","bitvec::array","",2,[[],["ordering",4]]],[11,"cmp","bitvec::index","",16,[[["bitidx",3]],["ordering",4]]],[11,"cmp","","",17,[[["bitidxerror",3]],["ordering",4]]],[11,"cmp","","",18,[[["bittail",3]],["ordering",4]]],[11,"cmp","","",19,[[["bitpos",3]],["ordering",4]]],[11,"cmp","","",20,[[["bitsel",3]],["ordering",4]]],[11,"cmp","","",21,[[["bitmask",3]],["ordering",4]]],[11,"cmp","bitvec::ptr","",45,[[["const",3]],["ordering",4]]],[11,"cmp","","",46,[[["mut",3]],["ordering",4]]],[11,"cmp","bitvec::order","",47,[[["lsb0",3]],["ordering",4]]],[11,"cmp","","",48,[[["msb0",3]],["ordering",4]]],[11,"cmp","bitvec::ptr","",49,[[],["ordering",4]]],[11,"cmp","","",28,[[["addresserror",4]],["ordering",4]]],[11,"cmp","bitvec::prelude","",26,[[],["ordering",4]]],[11,"cmp","","",27,[[],["ordering",4]]],[11,"cmp","bitvec::ptr","",29,[[["bitptrerror",4]],["ordering",4]]],[11,"cmp","","",30,[[["bitspanerror",4]],["ordering",4]]],[11,"cmp","bitvec::slice","",69,[[["iterones",3]],["ordering",4]]],[11,"cmp","","",70,[[["iterzeros",3]],["ordering",4]]],[11,"cmp","","",31,[[],["ordering",4]]],[11,"cmp","bitvec::boxed","",37,[[],["ordering",4]]],[11,"cmp","bitvec::vec","",38,[[],["ordering",4]]],[11,"partial_cmp","bitvec::slice","",31,[[["bitarray",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","bitvec::array","",2,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","bitvec::index","",16,[[["bitidx",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",17,[[["bitidxerror",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",18,[[["bittail",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",19,[[["bitpos",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",20,[[["bitsel",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",21,[[["bitmask",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","bitvec::ptr","",45,[[["const",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",46,[[["mut",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","bitvec::order","",47,[[["lsb0",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",48,[[["msb0",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","bitvec::ptr","",49,[[["address",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",28,[[["addresserror",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","bitvec::prelude","",26,[[["bitref",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",26,[[["bool",15]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",26,[[["bool",15]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",27,[[["bitptr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","bitvec::ptr","",29,[[["bitptrerror",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",30,[[["bitspanerror",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","bitvec::slice","",69,[[["iterones",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",70,[[["iterzeros",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",31,[[["bitslice",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",31,[[["bitslice",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",31,[[["bitslice",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",31,[[["bitbox",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","bitvec::boxed","",37,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","bitvec::slice","",31,[[["bitvec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","bitvec::vec","",38,[[],[["option",4],["ordering",4]]]],[11,"not","bitvec::array","",2,[[]]],[11,"not","bitvec::index","",21,[[]]],[11,"not","bitvec::prelude","",26,[[]]],[11,"not","bitvec::boxed","",37,[[]]],[11,"not","bitvec::vec","",38,[[]]],[11,"bitand","bitvec::array","",2,[[]]],[11,"bitand","bitvec::index","",21,[[]]],[11,"bitand","bitvec::boxed","",37,[[]]],[11,"bitand","bitvec::vec","",38,[[]]],[11,"bitor","bitvec::array","",2,[[]]],[11,"bitor","bitvec::index","",21,[[]]],[11,"bitor","bitvec::boxed","",37,[[]]],[11,"bitor","bitvec::vec","",38,[[]]],[11,"bitxor","bitvec::array","",2,[[]]],[11,"bitxor","bitvec::boxed","",37,[[]]],[11,"bitxor","bitvec::vec","",38,[[]]],[11,"bitand_assign","bitvec::array","",2,[[]]],[11,"bitand_assign","bitvec::slice","",31,[[]]],[11,"bitand_assign","bitvec::boxed","",37,[[]]],[11,"bitand_assign","bitvec::vec","",38,[[]]],[11,"bitor_assign","bitvec::array","",2,[[]]],[11,"bitor_assign","bitvec::slice","",31,[[]]],[11,"bitor_assign","bitvec::boxed","",37,[[]]],[11,"bitor_assign","bitvec::vec","",38,[[]]],[11,"bitxor_assign","bitvec::array","",2,[[]]],[11,"bitxor_assign","bitvec::slice","",31,[[]]],[11,"bitxor_assign","bitvec::boxed","",37,[[]]],[11,"bitxor_assign","bitvec::vec","",38,[[]]],[11,"drop","bitvec::prelude","",26,[[]]],[11,"drop","bitvec::boxed","",37,[[]]],[11,"drop","bitvec::vec","",71,[[]]],[11,"drop","","",72,[[]]],[11,"drop","","",73,[[]]],[11,"drop","","",38,[[]]],[11,"index","bitvec::array","",2,[[]]],[11,"index","bitvec::slice","Looks up a single bit by semantic index.",31,[[["usize",15]]]],[11,"index","","",31,[[["usize",15],["range",3]]]],[11,"index","","",31,[[["usize",15],["rangefrom",3]]]],[11,"index","","",31,[[["rangefull",3]]]],[11,"index","","",31,[[["usize",15],["rangeinclusive",3]]]],[11,"index","","",31,[[["usize",15],["rangeto",3]]]],[11,"index","","",31,[[["usize",15],["rangetoinclusive",3]]]],[11,"index","bitvec::boxed","",37,[[]]],[11,"index","bitvec::vec","",38,[[]]],[11,"index_mut","bitvec::array","",2,[[]]],[11,"index_mut","bitvec::slice","",31,[[["usize",15],["range",3]]]],[11,"index_mut","","",31,[[["usize",15],["rangefrom",3]]]],[11,"index_mut","","",31,[[["rangefull",3]]]],[11,"index_mut","","",31,[[["usize",15],["rangeinclusive",3]]]],[11,"index_mut","","",31,[[["usize",15],["rangeto",3]]]],[11,"index_mut","","",31,[[["usize",15],["rangetoinclusive",3]]]],[11,"index_mut","bitvec::boxed","",37,[[]]],[11,"index_mut","bitvec::vec","",38,[[]]],[11,"start_bound","bitvec::prelude","",25,[[],[["bitptr",3],["bound",4]]]],[11,"end_bound","","",25,[[],[["bitptr",3],["bound",4]]]],[11,"hash","bitvec::array","",2,[[]]],[11,"hash","bitvec::index","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","bitvec::order","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","bitvec::ptr","",49,[[]]],[11,"hash","","",28,[[]]],[11,"hash","bitvec::prelude","",26,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",27,[[]]],[11,"hash","bitvec::ptr","",29,[[]]],[11,"hash","bitvec::slice","",31,[[]]],[11,"hash","bitvec::boxed","",37,[[]]],[11,"hash","bitvec::vec","",38,[[]]],[11,"len","bitvec::array","",44,[[],["usize",15]]],[11,"len","bitvec::domain","",9,[[],["usize",15]]],[11,"len","bitvec::prelude","",25,[[],["usize",15]]],[11,"len","bitvec::slice","",50,[[],["usize",15]]],[11,"len","","",51,[[],["usize",15]]],[11,"len","","",52,[[],["usize",15]]],[11,"len","","",53,[[],["usize",15]]],[11,"len","","",54,[[],["usize",15]]],[11,"len","","",55,[[],["usize",15]]],[11,"len","","",56,[[],["usize",15]]],[11,"len","","",57,[[],["usize",15]]],[11,"len","","",58,[[],["usize",15]]],[11,"len","","",59,[[],["usize",15]]],[11,"len","","",60,[[],["usize",15]]],[11,"len","","",69,[[],["usize",15]]],[11,"len","","",70,[[],["usize",15]]],[11,"len","bitvec::vec","",71,[[],["usize",15]]],[11,"len","","",72,[[],["usize",15]]],[11,"len","","",73,[[],["usize",15]]],[11,"borrow","bitvec::array","",2,[[],["bitslice",3]]],[11,"borrow","bitvec::boxed","",37,[[],["bitslice",3]]],[11,"borrow","bitvec::vec","",38,[[],["bitslice",3]]],[11,"borrow_mut","bitvec::array","",2,[[],["bitslice",3]]],[11,"borrow_mut","bitvec::boxed","",37,[[],["bitslice",3]]],[11,"borrow_mut","bitvec::vec","",38,[[],["bitslice",3]]],[11,"try_from","bitvec::array","",2,[[["bitslice",3]],["result",4]]],[11,"try_from","bitvec::index","",16,[[["u8",15]],["result",4]]],[11,"try_from","bitvec::ptr","",49,[[],["result",4]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_from","bitvec::prelude","",27,[[],["result",4]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_from","bitvec::boxed","",37,[[["box",3]],["result",4]]],[11,"try_from","bitvec::vec","",38,[[["vec",3]],["result",4]]],[11,"from_iter","","",38,[[]]],[11,"from_iter","","",38,[[]]],[11,"from_iter","","",38,[[]]],[11,"from_iter","","",38,[[]]],[11,"from_iter","","",38,[[]]],[11,"from","bitvec::array","",2,[[]]],[11,"from","bitvec::ptr","",49,[[]]],[11,"from","","",49,[[]]],[11,"from","","",28,[[["infallible",4]]]],[11,"from","bitvec::prelude","",25,[[["bitptr",3],["range",3]]]],[11,"from","","",27,[[]]],[11,"from","","",27,[[]]],[11,"from","bitvec::ptr","",29,[[["addresserror",4]]]],[11,"from","","",29,[[["bitidxerror",3]]]],[11,"from","","",29,[[["infallible",4]]]],[11,"from","","",30,[[["bitptrerror",4]]]],[11,"from","","",30,[[["infallible",4]]]],[11,"from","bitvec::boxed","",37,[[["bitslice",3]]]],[11,"from","","",37,[[["bitvec",3]]]],[11,"from","bitvec::vec","",38,[[["bitslice",3]]]],[11,"from","","",38,[[["bitslice",3]]]],[11,"from","","",38,[[["bitbox",3]]]],[11,"as_ref","bitvec::array","",2,[[],["bitslice",3]]],[11,"as_ref","bitvec::slice","",50,[[],["bitslice",3]]],[11,"as_ref","bitvec::boxed","",37,[[],["bitslice",3]]],[11,"as_ref","bitvec::vec","",72,[[],["bitslice",3]]],[11,"as_ref","","",38,[[],["bitslice",3]]],[11,"as_mut","bitvec::array","",2,[[],["bitslice",3]]],[11,"as_mut","bitvec::boxed","",37,[[],["bitslice",3]]],[11,"as_mut","bitvec::vec","",38,[[],["bitslice",3]]],[11,"into","bitvec::prelude","",25,[[],[["bitptr",3],["range",3]]]],[11,"into","bitvec::boxed","",37,[[],["box",3]]],[11,"into","bitvec::vec","",38,[[],["vec",3]]],[11,"fmt","bitvec::array","",2,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::domain","",9,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::slice","",31,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",37,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","",38,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::array","",2,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::domain","",9,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::index","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::slice","",31,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",37,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","",38,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::array","",2,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::domain","",9,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::slice","",31,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",37,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","",38,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::array","",2,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::domain","",9,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::slice","",31,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",37,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::vec","",38,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::ptr","",49,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::prelude","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","bitvec::boxed","",37,[[["formatter",3]],["result",6]]],[11,"next_back","bitvec::array","",44,[[],["option",4]]],[11,"nth_back","","",44,[[["usize",15]],["option",4]]],[11,"next_back","bitvec::domain","",9,[[],["option",4]]],[11,"next_back","bitvec::prelude","",25,[[],["option",4]]],[11,"nth_back","","",25,[[["usize",15]],["option",4]]],[11,"next_back","bitvec::slice","",50,[[],["option",4]]],[11,"nth_back","","",50,[[["usize",15]],["option",4]]],[11,"next_back","","",51,[[],["option",4]]],[11,"nth_back","","",51,[[["usize",15]],["option",4]]],[11,"next_back","","",52,[[],["option",4]]],[11,"nth_back","","",52,[[["usize",15]],["option",4]]],[11,"next_back","","",53,[[],["option",4]]],[11,"nth_back","","",53,[[["usize",15]],["option",4]]],[11,"next_back","","",54,[[],["option",4]]],[11,"nth_back","","",54,[[["usize",15]],["option",4]]],[11,"next_back","","",55,[[],["option",4]]],[11,"nth_back","","",55,[[["usize",15]],["option",4]]],[11,"next_back","","",56,[[],["option",4]]],[11,"nth_back","","",56,[[["usize",15]],["option",4]]],[11,"next_back","","",57,[[],["option",4]]],[11,"nth_back","","",57,[[["usize",15]],["option",4]]],[11,"next_back","","",58,[[],["option",4]]],[11,"nth_back","","",58,[[["usize",15]],["option",4]]],[11,"next_back","","",59,[[],["option",4]]],[11,"nth_back","","",59,[[["usize",15]],["option",4]]],[11,"next_back","","",60,[[],["option",4]]],[11,"nth_back","","",60,[[["usize",15]],["option",4]]],[11,"next_back","","",61,[[],["option",4]]],[11,"next_back","","",62,[[],["option",4]]],[11,"next_back","","",63,[[],["option",4]]],[11,"next_back","","",64,[[],["option",4]]],[11,"next_back","","",69,[[],["option",4]]],[11,"next_back","","",70,[[],["option",4]]],[11,"next_back","bitvec::vec","",71,[[],["option",4]]],[11,"nth_back","","",71,[[["usize",15]],["option",4]]],[11,"next_back","","",72,[[],["option",4]]],[11,"nth_back","","",72,[[["usize",15]],["option",4]]],[11,"next_back","","",73,[[],["option",4]]],[11,"nth_back","","",73,[[["usize",15]],["option",4]]],[11,"next","bitvec::array","",44,[[],["option",4]]],[11,"nth","","",44,[[["usize",15]],["option",4]]],[11,"size_hint","","",44,[[]]],[11,"count","","",44,[[],["usize",15]]],[11,"last","","",44,[[],["option",4]]],[11,"next","bitvec::domain","",9,[[],["option",4]]],[11,"next","bitvec::prelude","",25,[[],["option",4]]],[11,"nth","","",25,[[["usize",15]],["option",4]]],[11,"size_hint","","",25,[[]]],[11,"count","","",25,[[],["usize",15]]],[11,"last","","",25,[[],["option",4]]],[11,"next","bitvec::slice","",50,[[],["option",4]]],[11,"size_hint","","",50,[[]]],[11,"count","","",50,[[],["usize",15]]],[11,"nth","","",50,[[["usize",15]],["option",4]]],[11,"last","","",50,[[],["option",4]]],[11,"next","","",51,[[],["option",4]]],[11,"size_hint","","",51,[[]]],[11,"count","","",51,[[],["usize",15]]],[11,"nth","","",51,[[["usize",15]],["option",4]]],[11,"last","","",51,[[],["option",4]]],[11,"next","","",52,[[],["option",4]]],[11,"nth","","",52,[[["usize",15]],["option",4]]],[11,"size_hint","","",52,[[]]],[11,"count","","",52,[[],["usize",15]]],[11,"last","","",52,[[],["option",4]]],[11,"next","","",53,[[],["option",4]]],[11,"nth","","",53,[[["usize",15]],["option",4]]],[11,"size_hint","","",53,[[]]],[11,"count","","",53,[[],["usize",15]]],[11,"last","","",53,[[],["option",4]]],[11,"next","","",54,[[],["option",4]]],[11,"nth","","",54,[[["usize",15]],["option",4]]],[11,"size_hint","","",54,[[]]],[11,"count","","",54,[[],["usize",15]]],[11,"last","","",54,[[],["option",4]]],[11,"next","","",55,[[],["option",4]]],[11,"nth","","",55,[[["usize",15]],["option",4]]],[11,"size_hint","","",55,[[]]],[11,"count","","",55,[[],["usize",15]]],[11,"last","","",55,[[],["option",4]]],[11,"next","","",56,[[],["option",4]]],[11,"nth","","",56,[[["usize",15]],["option",4]]],[11,"size_hint","","",56,[[]]],[11,"count","","",56,[[],["usize",15]]],[11,"last","","",56,[[],["option",4]]],[11,"next","","",57,[[],["option",4]]],[11,"nth","","",57,[[["usize",15]],["option",4]]],[11,"size_hint","","",57,[[]]],[11,"count","","",57,[[],["usize",15]]],[11,"last","","",57,[[],["option",4]]],[11,"next","","",58,[[],["option",4]]],[11,"nth","","",58,[[["usize",15]],["option",4]]],[11,"size_hint","","",58,[[]]],[11,"count","","",58,[[],["usize",15]]],[11,"last","","",58,[[],["option",4]]],[11,"next","","",59,[[],["option",4]]],[11,"nth","","",59,[[["usize",15]],["option",4]]],[11,"size_hint","","",59,[[]]],[11,"count","","",59,[[],["usize",15]]],[11,"last","","",59,[[],["option",4]]],[11,"next","","",60,[[],["option",4]]],[11,"nth","","",60,[[["usize",15]],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"count","","",60,[[],["usize",15]]],[11,"last","","",60,[[],["option",4]]],[11,"next","","",61,[[],["option",4]]],[11,"size_hint","","",61,[[]]],[11,"next","","",62,[[],["option",4]]],[11,"size_hint","","",62,[[]]],[11,"next","","",63,[[],["option",4]]],[11,"size_hint","","",63,[[]]],[11,"next","","",64,[[],["option",4]]],[11,"size_hint","","",64,[[]]],[11,"next","","",65,[[],["option",4]]],[11,"size_hint","","",65,[[]]],[11,"next","","",66,[[],["option",4]]],[11,"size_hint","","",66,[[]]],[11,"next","","",67,[[],["option",4]]],[11,"size_hint","","",67,[[]]],[11,"next","","",68,[[],["option",4]]],[11,"size_hint","","",68,[[]]],[11,"next","","",69,[[],["option",4]]],[11,"size_hint","","",69,[[]]],[11,"count","","",69,[[],["usize",15]]],[11,"last","","",69,[[],["option",4]]],[11,"next","","",70,[[],["option",4]]],[11,"size_hint","","",70,[[]]],[11,"count","","",70,[[],["usize",15]]],[11,"last","","",70,[[],["option",4]]],[11,"next","bitvec::vec","",71,[[],["option",4]]],[11,"size_hint","","",71,[[]]],[11,"count","","",71,[[],["usize",15]]],[11,"nth","","",71,[[["usize",15]],["option",4]]],[11,"last","","",71,[[],["option",4]]],[11,"next","","",72,[[],["option",4]]],[11,"size_hint","","",72,[[]]],[11,"count","","",72,[[],["usize",15]]],[11,"nth","","",72,[[["usize",15]],["option",4]]],[11,"last","","",72,[[],["option",4]]],[11,"next","","",73,[[],["option",4]]],[11,"size_hint","","",73,[[]]],[11,"count","","",73,[[],["usize",15]]],[11,"last","","",73,[[],["option",4]]],[11,"sum","bitvec::index","",21,[[]]],[11,"into_iter","bitvec::array","",2,[[]]],[11,"into_iter","bitvec::boxed","",37,[[]]],[11,"into_iter","bitvec::vec","",38,[[]]],[11,"extend","","",38,[[]]],[11,"extend","","",38,[[]]],[11,"extend","","",38,[[]]],[11,"extend","","",38,[[]]],[11,"extend","","",38,[[]]],[11,"clone","bitvec::array","",44,[[],["intoiter",3]]],[11,"clone","","",2,[[]]],[11,"clone","bitvec::domain","",3,[[]]],[11,"clone","","",9,[[]]],[11,"clone","bitvec::index","",16,[[],["bitidx",3]]],[11,"clone","","",17,[[],["bitidxerror",3]]],[11,"clone","","",18,[[],["bittail",3]]],[11,"clone","","",19,[[],["bitpos",3]]],[11,"clone","","",20,[[],["bitsel",3]]],[11,"clone","","",21,[[],["bitmask",3]]],[11,"clone","bitvec::ptr","",45,[[],["const",3]]],[11,"clone","","",46,[[],["mut",3]]],[11,"clone","bitvec::order","",47,[[],["lsb0",3]]],[11,"clone","","",48,[[],["msb0",3]]],[11,"clone","bitvec::ptr","",49,[[]]],[11,"clone","","",28,[[],["addresserror",4]]],[11,"clone","bitvec::prelude","",26,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",27,[[]]],[11,"clone","bitvec::ptr","",29,[[],["bitptrerror",4]]],[11,"clone","","",30,[[],["bitspanerror",4]]],[11,"clone","bitvec::slice","",50,[[]]],[11,"clone","","",52,[[],["windows",3]]],[11,"clone","","",53,[[],["chunks",3]]],[11,"clone","","",55,[[],["chunksexact",3]]],[11,"clone","","",57,[[],["rchunks",3]]],[11,"clone","","",59,[[],["rchunksexact",3]]],[11,"clone","","",61,[[],["split",3]]],[11,"clone","","",63,[[],["rsplit",3]]],[11,"clone","","",69,[[],["iterones",3]]],[11,"clone","","",70,[[],["iterzeros",3]]],[11,"clone","bitvec::boxed","",37,[[]]],[11,"clone","bitvec::vec","",38,[[]]],[11,"clone_from","","",38,[[]]],[11,"default","bitvec::array","",2,[[]]],[11,"default","bitvec::index","",16,[[],["bitidx",3]]],[11,"default","","",17,[[],["bitidxerror",3]]],[11,"default","","",18,[[],["bittail",3]]],[11,"default","","",19,[[],["bitpos",3]]],[11,"default","","",20,[[],["bitsel",3]]],[11,"default","","",21,[[],["bitmask",3]]],[11,"default","bitvec::order","",47,[[],["lsb0",3]]],[11,"default","","",48,[[],["msb0",3]]],[11,"default","bitvec::prelude","",25,[[]]],[11,"default","bitvec::slice","",69,[[]]],[11,"default","","",70,[[]]],[11,"default","bitvec::boxed","",37,[[]]],[11,"default","bitvec::vec","",38,[[]]],[11,"to_owned","bitvec::slice","",31,[[]]],[11,"as_bitslice","bitvec::array","Returns an immutable slice of all bits that have not been …",44,[[],["bitslice",3]]],[11,"as_mut_bitslice","","Returns a mutable slice of all bits that have not been …",44,[[],["bitslice",3]]],[11,"to_const","bitvec::ptr","Gets the address as a read-only pointer.",49,[[]]],[11,"to_mut","","Gets the address as a write-capable pointer.",49,[[]]],[11,"len","bitvec::slice","Returns the number of bits in the slice.",31,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the slice has a length of 0.",31,[[],["bool",15]]],[11,"first","","Returns the first bit of the slice, or <code>None</code> if it is …",31,[[],[["option",4],["bitref",3]]]],[11,"first_mut","","Returns a mutable pointer to the first bit of the slice, …",31,[[],[["option",4],["bitref",3]]]],[11,"split_first","","Returns the first and all the rest of the bits of the …",31,[[],["option",4]]],[11,"split_first_mut","","Returns the first and all the rest of the bits of the …",31,[[],["option",4]]],[11,"split_last","","Returns the last and all the rest of the bits of the …",31,[[],["option",4]]],[11,"split_last_mut","","Returns the last and all the rest of the bits of the …",31,[[],["option",4]]],[11,"last","","Returns the last bit of the slice, or <code>None</code> if it is empty.",31,[[],[["option",4],["bitref",3]]]],[11,"last_mut","","Returns a mutable pointer to the last bit in the slice.",31,[[],[["option",4],["bitref",3]]]],[11,"get","","Returns a reference to a bit or subslice depending on the …",31,[[],["option",4]]],[11,"get_mut","","Returns a mutable reference to a bit or subslice …",31,[[],["option",4]]],[11,"get_unchecked","","Returns a reference to a bit or subslice, without doing …",31,[[]]],[11,"get_unchecked_mut","","Returns a mutable reference to a bit or subslice, without …",31,[[]]],[11,"swap","","Swaps two bits in the slice.",31,[[["usize",15]]]],[11,"reverse","","Reverses the order of bits in the slice, in place.",31,[[]]],[11,"iter","","Returns an iterator over the slice.",31,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each bit.",31,[[],["itermut",3]]],[11,"windows","","Returns an iterator over all contiguous windows of length …",31,[[["usize",15]],["windows",3]]],[11,"chunks","","Returns an iterator over <code>chunk_size</code> bits of the slice at …",31,[[["usize",15]],["chunks",3]]],[11,"chunks_mut","","Returns an iterator over <code>chunk_size</code> bits of the slice at …",31,[[["usize",15]],["chunksmut",3]]],[11,"chunks_exact","","Returns an iterator over <code>chunk_size</code> bits of the slice at …",31,[[["usize",15]],["chunksexact",3]]],[11,"chunks_exact_mut","","Returns an iterator over <code>chunk_size</code> bits of the slice at …",31,[[["usize",15]],["chunksexactmut",3]]],[11,"rchunks","","Returns an iterator over <code>chunk_size</code> bits of the slice at …",31,[[["usize",15]],["rchunks",3]]],[11,"rchunks_mut","","Returns an iterator over <code>chunk_size</code> bits of the slice at …",31,[[["usize",15]],["rchunksmut",3]]],[11,"rchunks_exact","","Returns an iterator over <code>chunk_size</code> bits of the slice at …",31,[[["usize",15]],["rchunksexact",3]]],[11,"rchunks_exact_mut","","Returns an iterator over <code>chunk_size</code> bits of the slice at …",31,[[["usize",15]],["rchunksexactmut",3]]],[11,"split_at","","Divides one slice into two at an index.",31,[[["usize",15]]]],[11,"split_at_mut","","Divides one mutable slice into two at an index.",31,[[["usize",15]]]],[11,"split","","Returns an iterator over subslices separated by bits that …",31,[[],["split",3]]],[11,"split_mut","","Returns an iterator over mutable subslices separated by …",31,[[],["splitmut",3]]],[11,"rsplit","","Returns an iterator over subslices separated by bits that …",31,[[],["rsplit",3]]],[11,"rsplit_mut","","Returns an iterator over mutable subslices separated by …",31,[[],["rsplitmut",3]]],[11,"splitn","","Returns an iterator over subslices separated by bits that …",31,[[["usize",15]],["splitn",3]]],[11,"splitn_mut","","Returns an iterator over subslices separated by bits that …",31,[[["usize",15]],["splitnmut",3]]],[11,"rsplitn","","Returns an iterator over subslices separated by bits that …",31,[[["usize",15]],["rsplitn",3]]],[11,"rsplitn_mut","","Returns an iterator over subslices separated by bits that …",31,[[["usize",15]],["rsplitnmut",3]]],[11,"contains","","Returns <code>true</code> if the slice contains a subslice that …",31,[[["bitslice",3]],["bool",15]]],[11,"starts_with","","Returns <code>true</code> if <code>needle</code> is a prefix of the slice.",31,[[["bitslice",3]],["bool",15]]],[11,"ends_with","","Returns <code>true</code> if <code>needle</code> is a suffix of the slice.",31,[[["bitslice",3]],["bool",15]]],[11,"rotate_left","","Rotates the slice in-place such that the first <code>by</code> bits of …",31,[[["usize",15]]]],[11,"rotate_right","","Rotates the slice in-place such that the first …",31,[[["usize",15]]]],[11,"copy_within","","Copies bits from one part of the slice to another part of …",31,[[["usize",15]]]],[11,"align_to","","Transmute the bit-slice to a bit-slice of another type, …",31,[[]]],[11,"align_to_mut","","Transmute the bit-slice to a bit-slice of another type, …",31,[[]]],[11,"repeat","","Creates a vector by repeating a slice <code>n</code> times.",31,[[["usize",15]],["bitvec",3]]],[11,"as_bitslice","","Views the underlying data as a subslice of the original …",50,[[],["bitslice",3]]],[11,"by_ref","","Adapts the iterator to yield <code>&bool</code> references rather than …",50,[[]]],[11,"by_val","","Adapts the iterator to yield <code>bool</code> values rather than …",50,[[]]],[11,"copied","","Forwards to <code>by_val</code>.",50,[[]]],[11,"into_bitslice","","Views the underlying data as a subslice of the original …",51,[[],["bitslice",3]]],[11,"remainder","","Returns the remainder of the original <code>BitSlice</code> that is …",55,[[],["bitslice",3]]],[11,"into_remainder","","Returns the remainder of the original <code>BitSlice</code> that is …",56,[[],["bitslice",3]]],[11,"remainder","","Returns the remainder of the original <code>BitSlice</code> that is …",59,[[],["bitslice",3]]],[11,"into_remainder","","Returns the remainder of the original <code>BitSlice</code> that is …",60,[[],["bitslice",3]]],[11,"remove_alias","","Adapts the iterator to no longer mark its yielded items as…",51,[[],["itermutnoalias",3]]],[11,"remove_alias","","Adapts the iterator to no longer mark its yielded items as…",54,[[],["chunksmutnoalias",3]]],[11,"remove_alias","","Adapts the iterator to no longer mark its yielded items as…",56,[[],["chunksexactmutnoalias",3]]],[11,"remove_alias","","Adapts the iterator to no longer mark its yielded items as…",58,[[],["rchunksmutnoalias",3]]],[11,"remove_alias","","Adapts the iterator to no longer mark its yielded items as…",60,[[],["rchunksexactmutnoalias",3]]],[11,"remove_alias","","Adapts the iterator to no longer mark its yielded items as…",62,[[],["splitmutnoalias",3]]],[11,"remove_alias","","Adapts the iterator to no longer mark its yielded items as…",64,[[],["rsplitmutnoalias",3]]],[11,"remove_alias","","Adapts the iterator to no longer mark its yielded items as…",66,[[],["splitnmutnoalias",3]]],[11,"remove_alias","","Adapts the iterator to no longer mark its yielded items as…",68,[[],["rsplitnmutnoalias",3]]],[11,"new","bitvec::boxed","Allocates memory on the heap and then copies <code>x</code> into it.",37,[[["bitslice",3]]]],[11,"pin","","Constructs a new <code>Pin<BitBox<O, T>></code>.",37,[[["bitslice",3]],["pin",3]]],[11,"from_raw","","Constructs a bit-box from a raw bit-slice pointer.",37,[[]]],[11,"into_raw","","Consumes the <code>BitBox</code>, returning a raw bit-slice pointer.",37,[[]]],[11,"leak","","Consumes and leaks the <code>BitBox</code>, returning a mutable …",37,[[],["bitslice",3]]],[11,"new","bitvec::vec","Constructs a new, empty, <code>BitVec<O, T></code>.",38,[[]]],[11,"with_capacity","","Constructs a new, empty, <code>BitVec<O, T></code> with the specified …",38,[[["usize",15]]]],[11,"into_raw_parts","","Decomposes a <code>BitVec<O, T></code> into its raw components.",38,[[]]],[11,"from_raw_parts","","Creates a <code>BitVec<O, T></code> directly from the raw components …",38,[[["mut",3],["usize",15],["bitptr",3]]]],[11,"capacity","","Returns the number of bits the bit-vector can hold …",38,[[],["usize",15]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more bits to be …",38,[[["usize",15]]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",38,[[["usize",15]]]],[11,"shrink_to_fit","","Shrinks the capacity of the bit-vector as much as …",38,[[]]],[11,"truncate","","Shortens the bit-vector, keeping the first <code>len</code> bits and …",38,[[["usize",15]]]],[11,"set_len","","Forces the length of the bit-vector to <code>new_len</code>.",38,[[["usize",15]]]],[11,"swap_remove","","Removes a bit from the bit-vector and returns it.",38,[[["usize",15]],["bool",15]]],[11,"insert","","Inserts a bit at position <code>index</code> within the bit-vector, …",38,[[["usize",15],["bool",15]]]],[11,"remove","","Removes and returns the bit at position <code>index</code> within the …",38,[[["usize",15]],["bool",15]]],[11,"retain","","Retains only the bits specified by the predicate.",38,[[]]],[11,"push","","Appends a bit to the back of a collection.",38,[[["bool",15]]]],[11,"pop","","Removes the last bit from a bit-vector and returns it, or …",38,[[],[["bool",15],["option",4]]]],[11,"append","","Moves all the bits of <code>other</code> into <code>self</code>, leaving <code>other</code> …",38,[[["bitvec",3]]]],[11,"drain","","Creates a draining iterator that removes the specified …",38,[[],["drain",3]]],[11,"clear","","Clears the bit-vector, removing all values.",38,[[]]],[11,"len","","Returns the number of bits in the bit-vector, also …",38,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the bit-vector contains no bits.",38,[[],["bool",15]]],[11,"split_off","","Splits the collection into two at the given index.",38,[[["usize",15]]]],[11,"resize_with","","Resizes the <code>BitVec</code> in-place so that <code>len</code> is equal to …",38,[[["usize",15]]]],[11,"leak","","Consumes and leaks the <code>BitVec</code>, returning a mutable …",38,[[],["bitslice",3]]],[11,"resize","","Resizes the <code>BitVec</code> in-place so that <code>len</code> is equal to …",38,[[["usize",15],["bool",15]]]],[11,"resize_default","","Resizes the <code>BitVec</code> in-place so that <code>len</code> is equal to …",38,[[["usize",15]]]],[11,"splice","","Creates a splicing iterator that replaces the specified …",38,[[],["splice",3]]],[11,"as_bitslice","","Returns the remaining bits of this iterator as a <code>BitSlice</code>.",71,[[],["bitslice",3]]],[11,"as_mut_bitslice","","Returns the remaining bits of this iterator as a mutable …",71,[[],["bitslice",3]]],[11,"as_bitslice","","Returns the remaining bits of this iterator as a <code>BitSlice</code>.",72,[[],["bitslice",3]]]],"p":[[8,"BitAccess"],[8,"BitSafe"],[3,"BitArray"],[4,"BitDomain"],[13,"Enclave"],[13,"Region"],[4,"BitDomainMut"],[13,"Enclave"],[13,"Region"],[4,"Domain"],[13,"Enclave"],[13,"Region"],[4,"DomainMut"],[13,"Enclave"],[13,"Region"],[8,"BitField"],[3,"BitIdx"],[3,"BitIdxError"],[3,"BitTail"],[3,"BitPos"],[3,"BitSel"],[3,"BitMask"],[8,"BitMemory"],[8,"BitRegister"],[8,"BitOrder"],[3,"BitPtrRange"],[3,"BitRef"],[3,"BitPtr"],[4,"AddressError"],[4,"BitPtrError"],[4,"BitSpanError"],[3,"BitSlice"],[8,"BitSliceIndex"],[8,"BitStore"],[8,"BitView"],[8,"AsBits"],[8,"AsBitsMut"],[3,"BitBox"],[3,"BitVec"],[3,"BitSafeU8"],[3,"BitSafeU16"],[3,"BitSafeU32"],[3,"BitSafeU64"],[3,"BitSafeUsize"],[3,"IntoIter"],[3,"Const"],[3,"Mut"],[3,"Lsb0"],[3,"Msb0"],[3,"Address"],[3,"Iter"],[3,"IterMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[3,"ChunksExact"],[3,"ChunksExactMut"],[3,"RChunks"],[3,"RChunksMut"],[3,"RChunksExact"],[3,"RChunksExactMut"],[3,"Split"],[3,"SplitMut"],[3,"RSplit"],[3,"RSplitMut"],[3,"SplitN"],[3,"SplitNMut"],[3,"RSplitN"],[3,"RSplitNMut"],[3,"IterOnes"],[3,"IterZeros"],[3,"IntoIter"],[3,"Drain"],[3,"Splice"]]},\
"blocking":{"doc":"A thread pool for isolating blocking I/O in async …","i":[[5,"unblock","blocking","Runs blocking code on a thread pool.",null,[[]]],[3,"Unblock","","Runs blocking I/O on a thread pool.",null,null],[11,"new","","Wraps a blocking I/O handle into the async [<code>Unblock</code>] …",0,[[],["unblock",3]]],[11,"with_capacity","","Wraps a blocking I/O handle into the async [<code>Unblock</code>] …",0,[[["usize",15]],["unblock",3]]],[11,"get_mut","","Gets a mutable reference to the blocking I/O handle.",0,[[]]],[11,"with_mut","","Performs a blocking operation on the I/O handle.",0,[[]]],[11,"into_inner","","Extracts the inner blocking I/O handle.",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"try_poll_next","","",0,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"poll_next","","",0,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_read","","",0,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_seek","","",0,[[["seekfrom",4],["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",0,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",0,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",0,[[["pin",3],["context",3]],[["poll",4],["result",6]]]]],"p":[[3,"Unblock"]]},\
"cache_padded":{"doc":"Prevent false sharing by padding and aligning to the …","i":[[3,"CachePadded","cache_padded","Pads and aligns data to the length of a cache line.",null,null],[11,"new","","Pads and aligns a piece of data to the length of a cache …",0,[[],["cachepadded",3]]],[11,"into_inner","","Returns the inner data.",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["cachepadded",3]],["bool",15]]],[11,"ne","","",0,[[["cachepadded",3]],["bool",15]]],[11,"hash","","",0,[[]]],[11,"from","","",0,[[]]],[11,"clone","","",0,[[],["cachepadded",3]]],[11,"default","","",0,[[],["cachepadded",3]]]],"p":[[3,"CachePadded"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate …",null,null]],"p":[]},\
"concurrent_queue":{"doc":"A concurrent multi-producer multi-consumer queue.","i":[[3,"ConcurrentQueue","concurrent_queue","A concurrent queue.",null,null],[11,"bounded","","Creates a new bounded queue.",0,[[["usize",15]],["concurrentqueue",3]]],[11,"unbounded","","Creates a new unbounded queue.",0,[[],["concurrentqueue",3]]],[11,"push","","Attempts to push an item into the queue.",0,[[],[["pusherror",4],["result",4]]]],[11,"pop","","Attempts to pop an item from the queue.",0,[[],[["poperror",4],["result",4]]]],[11,"is_empty","","Returns <code>true</code> if the queue is empty.",0,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if the queue is full.",0,[[],["bool",15]]],[11,"len","","Returns the number of items in the queue.",0,[[],["usize",15]]],[11,"capacity","","Returns the capacity of the queue.",0,[[],[["usize",15],["option",4]]]],[11,"close","","Closes the queue.",0,[[],["bool",15]]],[11,"is_closed","","Returns <code>true</code> if the queue is closed.",0,[[],["bool",15]]],[4,"PopError","","Error which occurs when popping from an empty queue.",null,null],[13,"Empty","","The queue is empty but not closed.",1,null],[13,"Closed","","The queue is empty and closed.",1,null],[11,"is_empty","","Returns <code>true</code> if the queue is empty but not closed.",1,[[],["bool",15]]],[11,"is_closed","","Returns <code>true</code> if the queue is empty and closed.",1,[[],["bool",15]]],[4,"PushError","","Error which occurs when pushing into a full or closed …",null,null],[13,"Full","","The queue is full but not closed.",2,null],[13,"Closed","","The queue is closed.",2,null],[11,"into_inner","","Unwraps the item that couldn’t be pushed.",2,[[]]],[11,"is_full","","Returns <code>true</code> if the queue is full but not closed.",2,[[],["bool",15]]],[11,"is_closed","","Returns <code>true</code> if the queue is closed.",2,[[],["bool",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",1,[[],["poperror",4]]],[11,"clone","","",2,[[],["pusherror",4]]],[11,"eq","","",1,[[["poperror",4]],["bool",15]]],[11,"eq","","",2,[[["pusherror",4]],["bool",15]]],[11,"ne","","",2,[[["pusherror",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[3,"ConcurrentQueue"],[4,"PopError"],[4,"PushError"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","i":[[0,"atomic","crossbeam_utils","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types …",null,null],[16,"Val","","Type returned by <code>load_consume</code>.",0,null],[10,"load_consume","","Loads a value from the atomic using a “consume” …",0,[[]]],[0,"sync","crossbeam_utils","Thread synchronization primitives.",null,null],[3,"Parker","crossbeam_utils::sync","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated [<code>Parker</code>].",null,null],[3,"ShardedLock","","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a […",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a […",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of …",null,null],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[5,"scope","crossbeam_utils::thread","Creates a new scope for spawning threads.",null,[[],["result",6]]],[3,"Scope","","A scope for spawning threads.",null,null],[11,"spawn","","Spawns a scoped thread.",1,[[],["scopedjoinhandle",3]]],[11,"builder","","Creates a builder that can configure a thread before …",1,[[],["scopedthreadbuilder",3]]],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[11,"name","","Sets the name for the new thread.",2,[[["string",3]],["scopedthreadbuilder",3]]],[11,"stack_size","","Sets the size of the stack for the new thread.",2,[[["usize",15]],["scopedthreadbuilder",3]]],[11,"spawn","","Spawns a scoped thread with this configuration.",2,[[],[["scopedjoinhandle",3],["result",6]]]],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[11,"join","","Waits for the thread to finish and returns its result.",3,[[],["result",6]]],[11,"thread","","Returns a handle to the underlying thread.",3,[[],["thread",3]]],[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[11,"from","crossbeam_utils::atomic","",4,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","crossbeam_utils","",5,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","crossbeam_utils::sync","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","crossbeam_utils::thread","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"drop","crossbeam_utils::sync","",11,[[]]],[11,"drop","","",12,[[]]],[11,"from","crossbeam_utils::atomic","",4,[[],["atomiccell",3]]],[11,"from","crossbeam_utils","",5,[[]]],[11,"from","crossbeam_utils::sync","",9,[[]]],[11,"clone","crossbeam_utils","",5,[[],["cachepadded",3]]],[11,"clone","crossbeam_utils::sync","",8,[[],["unparker",3]]],[11,"clone","","",12,[[],["waitgroup",3]]],[11,"default","crossbeam_utils::atomic","",4,[[],["atomiccell",3]]],[11,"default","crossbeam_utils","",5,[[],["cachepadded",3]]],[11,"default","","",6,[[],["backoff",3]]],[11,"default","crossbeam_utils::sync","",7,[[]]],[11,"default","","",9,[[],["shardedlock",3]]],[11,"default","","",12,[[]]],[11,"eq","crossbeam_utils","",5,[[["cachepadded",3]],["bool",15]]],[11,"ne","","",5,[[["cachepadded",3]],["bool",15]]],[11,"deref","","",5,[[]]],[11,"deref","crossbeam_utils::sync","",10,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","crossbeam_utils","",5,[[]]],[11,"deref_mut","crossbeam_utils::sync","",11,[[]]],[11,"fmt","crossbeam_utils::atomic","",4,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::thread","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","crossbeam_utils::sync","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"hash","crossbeam_utils","",5,[[]]],[11,"as_pthread_t","crossbeam_utils::thread","",3,[[],["rawpthread",6]]],[11,"into_pthread_t","","",3,[[],["rawpthread",6]]],[11,"new","crossbeam_utils::atomic","Creates a new atomic cell initialized with <code>val</code>.",4,[[],["atomiccell",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",4,[[]]],[11,"is_lock_free","","Returns <code>true</code> if operations on values of this type are …",4,[[],["bool",15]]],[11,"store","","Stores <code>val</code> into the atomic cell.",4,[[]]],[11,"swap","","Stores <code>val</code> into the atomic cell and returns the previous …",4,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this …",4,[[]]],[11,"take","","Takes the value of the atomic cell, leaving …",4,[[]]],[11,"load","","Loads a value from the atomic cell.",4,[[]]],[11,"compare_and_swap","","If the current value equals <code>current</code>, stores <code>new</code> into the …",4,[[]]],[11,"compare_exchange","","If the current value equals <code>current</code>, stores <code>new</code> into the …",4,[[],["result",4]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u8",15]],["u8",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u8",15]],["u8",15]]],[11,"fetch_and","","Applies bitwise “and” to the current value and …",4,[[["u8",15]],["u8",15]]],[11,"fetch_or","","Applies bitwise “or” to the current value and returns …",4,[[["u8",15]],["u8",15]]],[11,"fetch_xor","","Applies bitwise “xor” to the current value and …",4,[[["u8",15]],["u8",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i8",15]],["i8",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i8",15]],["i8",15]]],[11,"fetch_and","","Applies bitwise “and” to the current value and …",4,[[["i8",15]],["i8",15]]],[11,"fetch_or","","Applies bitwise “or” to the current value and returns …",4,[[["i8",15]],["i8",15]]],[11,"fetch_xor","","Applies bitwise “xor” to the current value and …",4,[[["i8",15]],["i8",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u16",15]],["u16",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u16",15]],["u16",15]]],[11,"fetch_and","","Applies bitwise “and” to the current value and …",4,[[["u16",15]],["u16",15]]],[11,"fetch_or","","Applies bitwise “or” to the current value and returns …",4,[[["u16",15]],["u16",15]]],[11,"fetch_xor","","Applies bitwise “xor” to the current value and …",4,[[["u16",15]],["u16",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i16",15]],["i16",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i16",15]],["i16",15]]],[11,"fetch_and","","Applies bitwise “and” to the current value and …",4,[[["i16",15]],["i16",15]]],[11,"fetch_or","","Applies bitwise “or” to the current value and returns …",4,[[["i16",15]],["i16",15]]],[11,"fetch_xor","","Applies bitwise “xor” to the current value and …",4,[[["i16",15]],["i16",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u32",15]],["u32",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u32",15]],["u32",15]]],[11,"fetch_and","","Applies bitwise “and” to the current value and …",4,[[["u32",15]],["u32",15]]],[11,"fetch_or","","Applies bitwise “or” to the current value and returns …",4,[[["u32",15]],["u32",15]]],[11,"fetch_xor","","Applies bitwise “xor” to the current value and …",4,[[["u32",15]],["u32",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i32",15]],["i32",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i32",15]],["i32",15]]],[11,"fetch_and","","Applies bitwise “and” to the current value and …",4,[[["i32",15]],["i32",15]]],[11,"fetch_or","","Applies bitwise “or” to the current value and returns …",4,[[["i32",15]],["i32",15]]],[11,"fetch_xor","","Applies bitwise “xor” to the current value and …",4,[[["i32",15]],["i32",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["u64",15]],["u64",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["u64",15]],["u64",15]]],[11,"fetch_and","","Applies bitwise “and” to the current value and …",4,[[["u64",15]],["u64",15]]],[11,"fetch_or","","Applies bitwise “or” to the current value and returns …",4,[[["u64",15]],["u64",15]]],[11,"fetch_xor","","Applies bitwise “xor” to the current value and …",4,[[["u64",15]],["u64",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["i64",15]],["i64",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["i64",15]],["i64",15]]],[11,"fetch_and","","Applies bitwise “and” to the current value and …",4,[[["i64",15]],["i64",15]]],[11,"fetch_or","","Applies bitwise “or” to the current value and returns …",4,[[["i64",15]],["i64",15]]],[11,"fetch_xor","","Applies bitwise “xor” to the current value and …",4,[[["i64",15]],["i64",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["usize",15]],["usize",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["usize",15]],["usize",15]]],[11,"fetch_and","","Applies bitwise “and” to the current value and …",4,[[["usize",15]],["usize",15]]],[11,"fetch_or","","Applies bitwise “or” to the current value and returns …",4,[[["usize",15]],["usize",15]]],[11,"fetch_xor","","Applies bitwise “xor” to the current value and …",4,[[["usize",15]],["usize",15]]],[11,"fetch_add","","Increments the current value by <code>val</code> and returns the …",4,[[["isize",15]],["isize",15]]],[11,"fetch_sub","","Decrements the current value by <code>val</code> and returns the …",4,[[["isize",15]],["isize",15]]],[11,"fetch_and","","Applies bitwise “and” to the current value and …",4,[[["isize",15]],["isize",15]]],[11,"fetch_or","","Applies bitwise “or” to the current value and returns …",4,[[["isize",15]],["isize",15]]],[11,"fetch_xor","","Applies bitwise “xor” to the current value and …",4,[[["isize",15]],["isize",15]]],[11,"fetch_and","","Applies logical “and” to the current value and …",4,[[["bool",15]],["bool",15]]],[11,"fetch_or","","Applies logical “or” to the current value and returns …",4,[[["bool",15]],["bool",15]]],[11,"fetch_xor","","Applies logical “xor” to the current value and …",4,[[["bool",15]],["bool",15]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",5,[[],["cachepadded",3]]],[11,"into_inner","","Returns the inner value.",5,[[]]],[11,"new","","Creates a new <code>Backoff</code>.",6,[[]]],[11,"reset","","Resets the <code>Backoff</code>.",6,[[]]],[11,"spin","","Backs off in a lock-free loop.",6,[[]]],[11,"snooze","","Backs off in a blocking loop.",6,[[]]],[11,"is_completed","","Returns <code>true</code> if exponential backoff has completed and …",6,[[],["bool",15]]],[11,"new","crossbeam_utils::sync","Creates a new <code>Parker</code>.",7,[[],["parker",3]]],[11,"park","","Blocks the current thread until the token is made …",7,[[]]],[11,"park_timeout","","Blocks the current thread until the token is made …",7,[[["duration",3]]]],[11,"unparker","","Returns a reference to an associated [<code>Unparker</code>].",7,[[],["unparker",3]]],[11,"into_raw","","Converts a <code>Parker</code> into a raw pointer.",7,[[["parker",3]]]],[11,"from_raw","","Converts a raw pointer into a <code>Parker</code>.",7,[[],["parker",3]]],[11,"unpark","","Atomically makes the token available if it is not already.",8,[[]]],[11,"into_raw","","Converts an <code>Unparker</code> into a raw pointer.",8,[[["unparker",3]]]],[11,"from_raw","","Converts a raw pointer into an <code>Unparker</code>.",8,[[],["unparker",3]]],[11,"new","","Creates a new sharded reader-writer lock.",9,[[],["shardedlock",3]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",9,[[],["lockresult",6]]],[11,"is_poisoned","","Returns <code>true</code> if the lock is poisoned.",9,[[],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",9,[[],["lockresult",6]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",9,[[],[["trylockresult",6],["shardedlockreadguard",3]]]],[11,"read","","Locks with shared read access, blocking the current …",9,[[],[["lockresult",6],["shardedlockreadguard",3]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",9,[[],[["trylockresult",6],["shardedlockwriteguard",3]]]],[11,"write","","Locks with exclusive write access, blocking the current …",9,[[],[["shardedlockwriteguard",3],["lockresult",6]]]],[11,"new","","Creates a new wait group and returns the single reference …",12,[[]]],[11,"wait","","Drops this reference and waits until all other references …",12,[[]]]],"p":[[8,"AtomicConsume"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"AtomicCell"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"],[3,"WaitGroup"]]},\
"downcast_rs":{"doc":"Build status Latest version Documentation","i":[[8,"Downcast","downcast_rs","Supports conversion to <code>Any</code>. Traits to be extended by …",null,null],[10,"into_any","","Convert <code>Box<dyn Trait></code> (where <code>Trait: Downcast</code>) to …",0,[[["box",3]],[["box",3],["any",8]]]],[10,"into_any_rc","","Convert <code>Rc<Trait></code> (where <code>Trait: Downcast</code>) to <code>Rc<Any></code>. …",0,[[["rc",3]],[["any",8],["rc",3]]]],[10,"as_any","","Convert <code>&Trait</code> (where <code>Trait: Downcast</code>) to <code>&Any</code>. This is …",0,[[],["any",8]]],[10,"as_any_mut","","Convert <code>&mut Trait</code> (where <code>Trait: Downcast</code>) to <code>&Any</code>. This …",0,[[],["any",8]]],[8,"DowncastSync","","Extends <code>Downcast</code> to support <code>Sync</code> traits that thus support …",null,null],[10,"into_any_arc","","Convert <code>Arc<Trait></code> (where <code>Trait: Downcast</code>) to <code>Arc<Any></code>. …",1,[[["arc",3]],[["any",8],["arc",3]]]],[14,"impl_downcast","","Adds downcasting support to traits that extend …",null,null]],"p":[[8,"Downcast"],[8,"DowncastSync"]]},\
"env_logger":{"doc":"A simple logger that can be configured via environment …","i":[[0,"filter","env_logger","Filtering for log records.",null,null],[3,"Filter","env_logger::filter","A log filter.",null,null],[3,"Builder","","A builder for a log filter.",null,null],[11,"filter","","Returns the maximum <code>LevelFilter</code> that this filter instance …",0,[[],["levelfilter",4]]],[11,"matches","","Checks if this record matches the configured filter.",0,[[["record",3]],["bool",15]]],[11,"enabled","","Determines if a log message with the specified metadata …",0,[[["metadata",3]],["bool",15]]],[11,"new","","Initializes the filter builder with defaults.",1,[[],["builder",3]]],[11,"from_env","","Initializes the filter builder from an environment.",1,[[["str",15]],["builder",3]]],[11,"filter_module","","Adds a directive to the filter for a specific module.",1,[[["levelfilter",4],["str",15]]]],[11,"filter_level","","Adds a directive to the filter for all modules.",1,[[["levelfilter",4]]]],[11,"filter","","Adds a directive to the filter.",1,[[["option",4],["levelfilter",4],["str",15]]]],[11,"parse","","Parses the directives string.",1,[[["str",15]]]],[11,"build","","Build a log filter.",1,[[],["filter",3]]],[0,"fmt","env_logger","Formatting for log records.",null,null],[3,"Timestamp","env_logger::fmt","An RFC3339 formatted timestamp.",null,null],[3,"Style","","A set of styles to apply to the terminal output.",null,null],[3,"StyledValue","","A value that can be printed using the given styles.",null,null],[4,"Color","","The set of available colors for the terminal …",null,null],[13,"Black","","",2,null],[13,"Blue","","",2,null],[13,"Green","","",2,null],[13,"Red","","",2,null],[13,"Cyan","","",2,null],[13,"Magenta","","",2,null],[13,"Yellow","","",2,null],[13,"White","","",2,null],[13,"Ansi256","","",2,null],[13,"Rgb","","",2,null],[4,"Target","","Log target, either <code>stdout</code> or <code>stderr</code>.",null,null],[13,"Stdout","","Logs will be sent to standard output.",3,null],[13,"Stderr","","Logs will be sent to standard error.",3,null],[4,"WriteStyle","","Whether or not to print styles to the target.",null,null],[13,"Auto","","Try to print styles, but don’t force the issue.",4,null],[13,"Always","","Try very hard to print styles.",4,null],[13,"Never","","Never print styles.",4,null],[4,"TimestampPrecision","","Formatting precision of timestamps.",null,null],[13,"Seconds","","Full second precision (0 decimal digits)",5,null],[13,"Millis","","Millisecond precision (3 decimal digits)",5,null],[13,"Micros","","Microsecond precision (6 decimal digits)",5,null],[13,"Nanos","","Nanosecond precision (9 decimal digits)",5,null],[3,"Formatter","","A formatter to write logs into.",null,null],[4,"Target","env_logger","Log target, either <code>stdout</code> or <code>stderr</code>.",null,null],[13,"Stdout","","Logs will be sent to standard output.",3,null],[13,"Stderr","","Logs will be sent to standard error.",3,null],[4,"WriteStyle","","Whether or not to print styles to the target.",null,null],[13,"Auto","","Try to print styles, but don’t force the issue.",4,null],[13,"Always","","Try very hard to print styles.",4,null],[13,"Never","","Never print styles.",4,null],[17,"DEFAULT_FILTER_ENV","","The default name for the environment variable to read …",null,null],[17,"DEFAULT_WRITE_STYLE_ENV","","The default name for the environment variable to read …",null,null],[3,"Env","","Set of environment variables to configure from.",null,null],[3,"Logger","","The env logger.",null,null],[3,"Builder","","<code>Builder</code> acts as builder for initializing a <code>Logger</code>.",null,null],[11,"new","","Initializes the log builder with defaults.",6,[[],["builder",3]]],[11,"from_env","","Initializes the log builder from the environment.",6,[[]]],[11,"parse_env","","Applies the configuration from the environment.",6,[[]]],[11,"from_default_env","","Initializes the log builder from the environment using …",6,[[]]],[11,"parse_default_env","","Applies the configuration from the environment using …",6,[[]]],[11,"format","","Sets the format function for formatting the log output.",6,[[]]],[11,"default_format","","Use the default format.",6,[[]]],[11,"format_level","","Whether or not to write the level in the default format.",6,[[["bool",15]]]],[11,"format_module_path","","Whether or not to write the module path in the default …",6,[[["bool",15]]]],[11,"format_indent","","Configures the amount of spaces to use to indent …",6,[[["usize",15],["option",4]]]],[11,"format_timestamp","","Configures if timestamp should be included and in what …",6,[[["option",4],["timestampprecision",4]]]],[11,"format_timestamp_secs","","Configures the timestamp to use second precision.",6,[[]]],[11,"format_timestamp_millis","","Configures the timestamp to use millisecond precision.",6,[[]]],[11,"format_timestamp_micros","","Configures the timestamp to use microsecond precision.",6,[[]]],[11,"format_timestamp_nanos","","Configures the timestamp to use nanosecond precision.",6,[[]]],[11,"format_suffix","","Configures the end of line suffix.",6,[[["str",15]]]],[11,"filter_module","","Adds a directive to the filter for a specific module.",6,[[["levelfilter",4],["str",15]]]],[11,"filter_level","","Adds a directive to the filter for all modules.",6,[[["levelfilter",4]]]],[11,"filter","","Adds filters to the logger.",6,[[["option",4],["levelfilter",4],["str",15]]]],[11,"parse_filters","","Parses the directives string in the same form as the …",6,[[["str",15]]]],[11,"target","","Sets the target for the log output.",6,[[["target",4]]]],[11,"write_style","","Sets whether or not styles will be written.",6,[[["writestyle",4]]]],[11,"parse_write_style","","Parses whether or not to write styles in the same form as …",6,[[["str",15]]]],[11,"is_test","","Sets whether or not the logger will be used in unit tests.",6,[[["bool",15]]]],[11,"try_init","","Initializes the global logger with the built env logger.",6,[[],[["setloggererror",3],["result",4]]]],[11,"init","","Initializes the global logger with the built env logger.",6,[[]]],[11,"build","","Build an env logger.",6,[[],["logger",3]]],[11,"from_env","","Creates the logger from the environment.",7,[[]]],[11,"from_default_env","","Creates the logger from the environment using default …",7,[[]]],[11,"filter","","Returns the maximum <code>LevelFilter</code> that this env logger …",7,[[],["levelfilter",4]]],[11,"matches","","Checks if this record matches the configured filter.",7,[[["record",3]],["bool",15]]],[11,"new","","Get a default set of environment variables.",8,[[]]],[11,"filter","","Specify an environment variable to read the filter from.",8,[[]]],[11,"filter_or","","Specify an environment variable to read the filter from.",8,[[]]],[11,"default_filter_or","","Use the default environment variable to read the filter …",8,[[]]],[11,"write_style","","Specify an environment variable to read the style from.",8,[[]]],[11,"write_style_or","","Specify an environment variable to read the style from.",8,[[]]],[11,"default_write_style_or","","Use the default environment variable to read the style …",8,[[]]],[5,"try_init","","Attempts to initialize the global logger with an env …",null,[[],[["setloggererror",3],["result",4]]]],[5,"init","","Initializes the global logger with an env logger.",null,[[]]],[5,"try_init_from_env","","Attempts to initialize the global logger with an env …",null,[[],[["setloggererror",3],["result",4]]]],[5,"init_from_env","","Initializes the global logger with an env logger from the …",null,[[]]],[5,"builder","","Create a new builder with the default environment …",null,[[],["builder",3]]],[5,"from_env","","Create a builder from the given environment variables.",null,[[],["builder",3]]],[11,"from","env_logger::filter","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","env_logger::fmt","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","env_logger","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"clone","env_logger::fmt","",10,[[],["style",3]]],[11,"clone","","",2,[[],["color",4]]],[11,"clone","","",3,[[],["target",4]]],[11,"clone","","",4,[[],["writestyle",4]]],[11,"clone","","",5,[[],["timestampprecision",4]]],[11,"default","env_logger::filter","",1,[[]]],[11,"default","env_logger::fmt","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","env_logger","",6,[[],["builder",3]]],[11,"default","","",8,[[]]],[11,"eq","env_logger::fmt","",2,[[["color",4]],["bool",15]]],[11,"ne","","",2,[[["color",4]],["bool",15]]],[11,"eq","","",3,[[["target",4]],["bool",15]]],[11,"eq","","",4,[[["writestyle",4]],["bool",15]]],[11,"fmt","env_logger::filter","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","env_logger::fmt","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","env_logger","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","env_logger::fmt","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"write","","",12,[[],[["result",6],["usize",15]]]],[11,"flush","","",12,[[],["result",6]]],[11,"enabled","env_logger","",7,[[["metadata",3]],["bool",15]]],[11,"log","","",7,[[["record",3]]]],[11,"flush","","",7,[[]]],[11,"timestamp","env_logger::fmt","Get a <code>Timestamp</code> for the current date and time in UTC.",12,[[],["timestamp",3]]],[11,"timestamp_seconds","","Get a [<code>Timestamp</code>] for the current date and time in UTC …",12,[[],["timestamp",3]]],[11,"timestamp_millis","","Get a [<code>Timestamp</code>] for the current date and time in UTC …",12,[[],["timestamp",3]]],[11,"timestamp_micros","","Get a [<code>Timestamp</code>] for the current date and time in UTC …",12,[[],["timestamp",3]]],[11,"timestamp_nanos","","Get a [<code>Timestamp</code>] for the current date and time in UTC …",12,[[],["timestamp",3]]],[11,"style","","Begin a new <code>Style</code>.",12,[[],["style",3]]],[11,"default_level_style","","Get the default [<code>Style</code>] for the given level.",12,[[["level",4]],["style",3]]],[11,"default_styled_level","","Get a printable [<code>Style</code>] for the given level.",12,[[["level",4]],[["level",4],["styledvalue",3]]]],[11,"set_color","","Set the text color.",10,[[["color",4]],["style",3]]],[11,"set_bold","","Set the text weight.",10,[[["bool",15]],["style",3]]],[11,"set_intense","","Set the text intensity.",10,[[["bool",15]],["style",3]]],[11,"set_bg","","Set the background color.",10,[[["color",4]],["style",3]]],[11,"value","","Wrap a value in the style.",10,[[],["styledvalue",3]]]],"p":[[3,"Filter"],[3,"Builder"],[4,"Color"],[4,"Target"],[4,"WriteStyle"],[4,"TimestampPrecision"],[3,"Builder"],[3,"Logger"],[3,"Env"],[3,"Timestamp"],[3,"Style"],[3,"StyledValue"],[3,"Formatter"]]},\
"event_listener":{"doc":"Notify async tasks or threads.","i":[[3,"Event","event_listener","A synchronization primitive for notifying async tasks and …",null,null],[11,"new","","Creates a new [<code>Event</code>].",0,[[],["event",3]]],[11,"listen","","Returns a guard listening for a notification.",0,[[],["eventlistener",3]]],[11,"notify","","Notifies a number of active listeners.",0,[[["usize",15]]]],[11,"notify_relaxed","","Notifies a number of active listeners without emitting a …",0,[[["usize",15]]]],[11,"notify_additional","","Notifies a number of active and still unnotified …",0,[[["usize",15]]]],[11,"notify_additional_relaxed","","Notifies a number of active and still unnotified …",0,[[["usize",15]]]],[3,"EventListener","","A guard waiting for a notification from an [<code>Event</code>].",null,null],[11,"wait","","Blocks until a notification is received.",1,[[]]],[11,"wait_timeout","","Blocks until a notification is received or a timeout is …",1,[[["duration",3]],["bool",15]]],[11,"wait_deadline","","Blocks until a notification is received or a deadline is …",1,[[["instant",3]],["bool",15]]],[11,"discard","","Drops this listener and discards its notification (if …",1,[[],["bool",15]]],[11,"listens_to","","Returns <code>true</code> if this listener listens to the given <code>Event</code>.",1,[[["event",3]],["bool",15]]],[11,"same_event","","Returns <code>true</code> if both listeners listen to the same <code>Event</code>.",1,[[["eventlistener",3]],["bool",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_future","","",1,[[]]],[11,"drop","","",0,[[]]],[11,"drop","","",1,[[]]],[11,"default","","",0,[[],["event",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"poll","","",1,[[["context",3],["pin",3]],["poll",4]]]],"p":[[3,"Event"],[3,"EventListener"]]},\
"fastrand":{"doc":"A simple and fast random number generator.","i":[[3,"Rng","fastrand","A random number generator.",null,null],[11,"new","","Creates a new random number generator.",0,[[],["rng",3]]],[11,"with_seed","","Creates a new random number generator with the initial …",0,[[["u64",15]]]],[11,"alphabetic","","Generates a random <code>char</code> in ranges a-z and A-Z.",0,[[],["char",15]]],[11,"alphanumeric","","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.",0,[[],["char",15]]],[11,"bool","","Generates a random <code>bool</code>.",0,[[],["bool",15]]],[11,"digit","","Generates a random digit in the given <code>base</code>.",0,[[["u32",15]],["char",15]]],[11,"f32","","Generates a random <code>f32</code> in range <code>0..1</code>.",0,[[],["f32",15]]],[11,"f64","","Generates a random <code>f64</code> in range <code>0..1</code>.",0,[[],["f64",15]]],[11,"i8","","Generates a random <code>i8</code> in the given range.",0,[[],["i8",15]]],[11,"i16","","Generates a random <code>i16</code> in the given range.",0,[[],["i16",15]]],[11,"i32","","Generates a random <code>i32</code> in the given range.",0,[[],["i32",15]]],[11,"i64","","Generates a random <code>i64</code> in the given range.",0,[[],["i64",15]]],[11,"i128","","Generates a random <code>i128</code> in the given range.",0,[[],["i128",15]]],[11,"isize","","Generates a random <code>isize</code> in the given range.",0,[[],["isize",15]]],[11,"lowercase","","Generates a random <code>char</code> in range a-z.",0,[[],["char",15]]],[11,"seed","","Initializes this generator with the given seed.",0,[[["u64",15]]]],[11,"shuffle","","Shuffles a slice randomly.",0,[[]]],[11,"u8","","Generates a random <code>u8</code> in the given range.",0,[[],["u8",15]]],[11,"u16","","Generates a random <code>u16</code> in the given range.",0,[[],["u16",15]]],[11,"u32","","Generates a random <code>u32</code> in the given range.",0,[[],["u32",15]]],[11,"u64","","Generates a random <code>u64</code> in the given range.",0,[[],["u64",15]]],[11,"u128","","Generates a random <code>u128</code> in the given range.",0,[[],["u128",15]]],[11,"usize","","Generates a random <code>usize</code> in the given range.",0,[[],["usize",15]]],[11,"uppercase","","Generates a random <code>char</code> in range A-Z.",0,[[],["char",15]]],[5,"seed","","Initializes the thread-local generator with the given …",null,[[["u64",15]]]],[5,"bool","","Generates a random <code>bool</code>.",null,[[],["bool",15]]],[5,"alphabetic","","Generates a random <code>char</code> in ranges a-z and A-Z.",null,[[],["char",15]]],[5,"alphanumeric","","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.",null,[[],["char",15]]],[5,"lowercase","","Generates a random <code>char</code> in range a-z.",null,[[],["char",15]]],[5,"uppercase","","Generates a random <code>char</code> in range A-Z.",null,[[],["char",15]]],[5,"digit","","Generates a random digit in the given <code>base</code>.",null,[[["u32",15]],["char",15]]],[5,"shuffle","","Shuffles a slice randomly.",null,[[]]],[5,"u8","","Generates a random <code>u8</code> in the given range.",null,[[],["u8",15]]],[5,"i8","","Generates a random <code>i8</code> in the given range.",null,[[],["i8",15]]],[5,"u16","","Generates a random <code>u16</code> in the given range.",null,[[],["u16",15]]],[5,"i16","","Generates a random <code>i16</code> in the given range.",null,[[],["i16",15]]],[5,"u32","","Generates a random <code>u32</code> in the given range.",null,[[],["u32",15]]],[5,"i32","","Generates a random <code>i32</code> in the given range.",null,[[],["i32",15]]],[5,"u64","","Generates a random <code>u64</code> in the given range.",null,[[],["u64",15]]],[5,"i64","","Generates a random <code>i64</code> in the given range.",null,[[],["i64",15]]],[5,"u128","","Generates a random <code>u128</code> in the given range.",null,[[],["u128",15]]],[5,"i128","","Generates a random <code>i128</code> in the given range.",null,[[],["i128",15]]],[5,"usize","","Generates a random <code>usize</code> in the given range.",null,[[],["usize",15]]],[5,"isize","","Generates a random <code>isize</code> in the given range.",null,[[],["isize",15]]],[5,"f32","","Generates a random <code>f32</code> in range <code>0..1</code>.",null,[[],["f32",15]]],[5,"f64","","Generates a random <code>f64</code> in range <code>0..1</code>.",null,[[],["f64",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","Clones the generator by deterministically deriving a new …",0,[[],["rng",3]]],[11,"default","","",0,[[],["rng",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Rng"]]},\
"funty":{"doc":"<code>fun</code>damental <code>ty</code>pes","i":[[8,"IsNumber","funty","Declare that a type is an abstract number.",null,null],[16,"Bytes","","The <code>[u8; N]</code> byte array that stores values of <code>Self</code>.",0,null],[18,"BITS","","The size of this numeric type in bits.",0,null],[10,"to_be_bytes","","Return the memory representation of this number as a byte …",0,[[]]],[10,"to_le_bytes","","Return the memory representation of this number as a byte …",0,[[]]],[10,"to_ne_bytes","","Return the memory representation of this number as a byte …",0,[[]]],[10,"from_be_bytes","","Create a numeric value from its representation as a byte …",0,[[]]],[10,"from_le_bytes","","Create a numeric value from its representation as a byte …",0,[[]]],[10,"from_ne_bytes","","Create a numeric value from its memory representation as …",0,[[]]],[8,"IsInteger","","Declare that a type is a fixed-point integer.",null,null],[18,"ZERO","","The type’s zero value.",1,null],[18,"MIN","","The type’s minimum value. This is zero for unsigned …",1,null],[18,"MAX","","The type’s maximum value.",1,null],[10,"min_value","","Returns the smallest value that can be represented by …",1,[[]]],[10,"max_value","","Returns the largest value that can be represented by this …",1,[[]]],[10,"from_str_radix","","Converts a string slice in a given base to an integer.",1,[[["u32",15],["str",15]],[["result",4],["parseinterror",3]]]],[10,"count_ones","","Returns the number of ones in the binary representation …",1,[[],["u32",15]]],[10,"count_zeros","","Returns the number of zeros in the binary representation …",1,[[],["u32",15]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary …",1,[[],["u32",15]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary …",1,[[],["u32",15]]],[10,"leading_ones","","Returns the number of leading ones in the binary …",1,[[],["u32",15]]],[10,"trailing_ones","","Returns the number of trailing ones in the binary …",1,[[],["u32",15]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount, <code>n</code>, …",1,[[["u32",15]]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount, <code>n</code>, …",1,[[["u32",15]]]],[10,"swap_bytes","","Reverses the byte order of the integer.",1,[[]]],[10,"reverse_bits","","Reverses the bit pattern of the integer.",1,[[]]],[10,"from_be","","Converts an integer from big endian to the target’s …",1,[[]]],[10,"from_le","","Converts an integer frm little endian to the target’s …",1,[[]]],[10,"to_be","","Converts <code>self</code> to big endian from the target’s …",1,[[]]],[10,"to_le","","Converts <code>self</code> to little endian from the target’s …",1,[[]]],[10,"checked_add","","Checked integer addition. Computes <code>self + rhs</code>, returning …",1,[[],["option",4]]],[10,"checked_sub","","Checked integer subtraction. Computes <code>self - rhs</code>, …",1,[[],["option",4]]],[10,"checked_mul","","Checked integer multiplication. Computes <code>self * rhs</code>, …",1,[[],["option",4]]],[10,"checked_div","","Checked integer division. Computes <code>self / rhs</code>, returning …",1,[[],["option",4]]],[10,"checked_div_euclid","","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…",1,[[],["option",4]]],[10,"checked_rem","","Checked integer remainder. Computes <code>self % rhs</code>, returning …",1,[[],["option",4]]],[10,"checked_rem_euclid","","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…",1,[[],["option",4]]],[10,"checked_neg","","Checked negation. Computes <code>-self</code>, returning <code>None</code> if …",1,[[],["option",4]]],[10,"checked_shl","","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …",1,[[["u32",15]],["option",4]]],[10,"checked_shr","","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …",1,[[["u32",15]],["option",4]]],[10,"checked_pow","","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …",1,[[["u32",15]],["option",4]]],[10,"saturating_add","","Saturating integer addition. Computes <code>self + rhs</code>, …",1,[[]]],[10,"saturating_sub","","Saturating integer subtraction. Computes <code>self - rhs</code>, …",1,[[]]],[10,"saturating_mul","","Saturating integer multiplication. Computes <code>self * rhs</code>, …",1,[[]]],[10,"saturating_pow","","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>…",1,[[["u32",15]]]],[10,"wrapping_add","","Wrapping (modular) addition. Computes <code>self + rhs</code>, …",1,[[]]],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes <code>self - rhs</code>, …",1,[[]]],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes <code>self * rhs</code>, …",1,[[]]],[10,"wrapping_div","","Wrapping (modular) division. Computes <code>self / rhs</code>, …",1,[[]]],[10,"wrapping_div_euclid","","Wrapping Eulidean division. Computes <code>self.div_euclid(rhs)</code>…",1,[[]]],[10,"wrapping_rem","","Wrapping (modular) remainder. Computes <code>self % rhs</code>, …",1,[[]]],[10,"wrapping_rem_euclid","","Wrapping Euclidean remainder. Computes …",1,[[]]],[10,"wrapping_neg","","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …",1,[[]]],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …",1,[[["u32",15]]]],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …",1,[[["u32",15]]]],[10,"wrapping_pow","","Wrapping (modular) exponentiation. Computes <code>self.pow(exp)</code>…",1,[[["u32",15]]]],[10,"overflowing_add","","Calculates <code>self + rhs</code>",1,[[]]],[10,"overflowing_sub","","Calculates <code>self - rhs</code>",1,[[]]],[10,"overflowing_mul","","Calculates the multiplication of <code>self</code> and <code>rhs</code>.",1,[[]]],[10,"overflowing_div","","Calculates the divisor when <code>self</code> is divided by <code>rhs</code>.",1,[[]]],[10,"overflowing_div_euclid","","Calculates the quotient of Euclidean division …",1,[[]]],[10,"overflowing_rem","","Calculates the remainder when <code>self</code> is divided by <code>rhs</code>.",1,[[]]],[10,"overflowing_rem_euclid","","Overflowing Euclidean remainder. Calculates …",1,[[]]],[10,"overflowing_neg","","Negates self, overflowing if this is equal to the minimum …",1,[[]]],[10,"overflowing_shl","","Shifts self left by <code>rhs</code> bits.",1,[[["u32",15]]]],[10,"overflowing_shr","","Shifts self right by <code>rhs</code> bits.",1,[[["u32",15]]]],[10,"overflowing_pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",1,[[["u32",15]]]],[10,"pow","","Raises self to the power of <code>exp</code>, using exponentiation by …",1,[[["u32",15]]]],[10,"div_euclid","","Calculates the quotient of Euclidean division of self by …",1,[[]]],[10,"rem_euclid","","Calculates the least nonnegative remainder of …",1,[[]]],[8,"IsSigned","","Declare that a type is a signed integer.",null,null],[10,"checked_abs","","Checked absolute value. Computes <code>self.abs()</code>, returning …",2,[[],["option",4]]],[10,"wrapping_abs","","Wrapping (modular) absolute value. Computes <code>self.abs()</code>, …",2,[[]]],[10,"overflowing_abs","","Computes the absolute value of <code>self</code>.",2,[[]]],[10,"abs","","Overflow behaviorThe absolute value of <code>iN::min_value()</code> …",2,[[]]],[10,"signum","","Returns a number representing sign of <code>self</code>.",2,[[]]],[10,"is_positive","","Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …",2,[[],["bool",15]]],[10,"is_negative","","Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …",2,[[],["bool",15]]],[8,"IsUnsigned","","Declare that a type is an unsigned integer.",null,null],[10,"is_power_of_two","","Returns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.",3,[[],["bool",15]]],[10,"next_power_of_two","","Returns the smallest power of two greater than or equal …",3,[[]]],[10,"checked_next_power_of_two","","Returns the smallest power of two greater than or equal …",3,[[],["option",4]]],[8,"IsFloat","","Declare that a type is a floating-point number.",null,null],[16,"Raw","","The unsigned integer type of the same width as <code>Self</code>.",4,null],[18,"RADIX","","The radix or base of the internal representation of <code>f32</code>.",4,null],[18,"MANTISSA_DIGITS","","Number of significant digits in base 2.",4,null],[18,"DIGITS","","Approximate number of significant digits in base 10.",4,null],[18,"EPSILON","","Machine epsilon value for <code>f32</code>.",4,null],[18,"MIN","","Smallest finite <code>f32</code> value.",4,null],[18,"MIN_POSITIVE","","Smallest positive normal <code>f32</code> value.",4,null],[18,"MAX","","Largest finite <code>f32</code> value.",4,null],[18,"MIN_EXP","","One greater than the minimum possible normal power of 2 …",4,null],[18,"MAX_EXP","","Maximum possible power of 2 exponent.",4,null],[18,"MIN_10_EXP","","Minimum possible normal power of 10 exponent.",4,null],[18,"MAX_10_EXP","","Maximum possible power of 10 exponent.",4,null],[18,"NAN","","Not a Number (NaN).",4,null],[18,"INFINITY","","Infinity (∞).",4,null],[18,"NEG_INFINITY","","Negative infinity (−∞).",4,null],[18,"PI","","Archimedes’ constant (π)",4,null],[18,"FRAC_PI_2","","π/2",4,null],[18,"FRAC_PI_3","","π/3",4,null],[18,"FRAC_PI_4","","π/4",4,null],[18,"FRAC_PI_6","","π/6",4,null],[18,"FRAC_PI_8","","π/8",4,null],[18,"FRAC_1_PI","","1/π",4,null],[18,"FRAC_2_PI","","2/π",4,null],[18,"FRAC_2_SQRT_PI","","2/sqrt(π)",4,null],[18,"SQRT_2","","sqrt(2)",4,null],[18,"FRAC_1_SQRT_2","","1/sqrt(2)",4,null],[18,"E","","Euler’s number (e)",4,null],[18,"LOG2_E","","log2(e)",4,null],[18,"LOG10_E","","log10(e)",4,null],[18,"LN_2","","ln(2)",4,null],[18,"LN_10","","ln(10)",4,null],[10,"is_nan","","Returns <code>true</code> if this value is <code>NaN</code>.",4,[[],["bool",15]]],[10,"is_infinite","","Returns <code>true</code> if this value is positive infinity or …",4,[[],["bool",15]]],[10,"is_finite","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.",4,[[],["bool",15]]],[10,"is_normal","","Returns <code>true</code> if the number is neither zero, infinite, …",4,[[],["bool",15]]],[10,"classify","","Returns the floating point category of the number. If …",4,[[],["fpcategory",4]]],[10,"is_sign_positive","","Returns <code>true</code> if <code>self</code> has a positive sign, including <code>+0.0</code>, …",4,[[],["bool",15]]],[10,"is_sign_negative","","Returns <code>true</code> if <code>self</code> has a negative sign, including <code>-0.0</code>, …",4,[[],["bool",15]]],[10,"recip","","Takes the reciprocal (inverse) of a number, <code>1/x</code>.",4,[[]]],[10,"to_degrees","","Converts radians to degrees.",4,[[]]],[10,"to_radians","","Converts degrees to radians.",4,[[]]],[10,"max","","Returns the maximum of the two numbers.",4,[[]]],[10,"min","","Returns the minimum of the two numbers.",4,[[]]],[10,"to_bits","","Raw transmutation to <code>u32</code>.",4,[[]]],[10,"from_bits","","Raw transmutation from <code>u32</code>.",4,[[]]],[8,"Is8","","Declare that a type is exactly eight bits wide.",null,null],[8,"Is16","","Declare that a type is exactly sixteen bits wide.",null,null],[8,"Is32","","Declare that a type is exactly thirty-two bits wide.",null,null],[8,"Is64","","Declare that a type is exactly sixty-four bits wide.",null,null],[8,"Is128","","Declare that a type is exactly one hundred twenty-eight …",null,null],[8,"AtLeast8","","Declare that a type is eight or more bits wide.",null,null],[8,"AtLeast16","","Declare that a type is sixteen or more bits wide.",null,null],[8,"AtLeast32","","Declare that a type is thirty-two or more bits wide.",null,null],[8,"AtLeast64","","Declare that a type is sixty-four or more bits wide.",null,null],[8,"AtLeast128","","Declare that a type is one hundred twenty-eight or more …",null,null],[8,"AtMost8","","Declare that a type is eight or fewer bits wide.",null,null],[8,"AtMost16","","Declare that a type is sixteen or fewer bits wide.",null,null],[8,"AtMost32","","Declare that a type is thirty-two or fewer bits wide.",null,null],[8,"AtMost64","","Declare that a type is sixty-four or fewer bits wide.",null,null],[8,"AtMost128","","Declare that a type is one hundred twenty-eight or fewer …",null,null]],"p":[[8,"IsNumber"],[8,"IsInteger"],[8,"IsSigned"],[8,"IsUnsigned"],[8,"IsFloat"]]},\
"futures":{"doc":"Abstractions for asynchronous programming.","i":[[0,"prelude","futures","A “prelude” for crates using the <code>futures</code> crate.",null,null],[0,"future","futures::prelude","Asynchronous values.",null,null],[6,"BoxFuture","futures::prelude::future","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",0,[[],["bool",15]]],[8,"Future","","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",1,null],[10,"poll","","Attempt to resolve the future to a final value, …",1,[[["context",3],["pin",3]],["poll",4]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",2,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[3,"Flatten","","Future for the <code>flatten</code> method.",null,null],[3,"Fuse","","Future for the <code>fuse</code> method.",null,null],[8,"FutureExt","","An extension trait for <code>Future</code>s that provides a variety of …",null,null],[11,"map","","Map this future’s output to a different type, returning …",4,[[],["map",3]]],[11,"map_into","","Map this future’s output to a different type, returning …",4,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",4,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",4,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",4,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",4,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",4,[[],["inspect",3]]],[11,"boxed","","Wrap the future in a Box, pinning it.",4,[[],[["pin",3],["box",3]]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",4,[[],[["pin",3],["box",3]]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",4,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",4,[[],["option",4]]],[3,"Inspect","","Future for the <code>inspect</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"Map","","Future for the <code>map</code> method.",null,null],[3,"NeverError","","Future for the <code>never_error</code> combinator.",null,null],[3,"Then","","Future for the <code>then</code> method.",null,null],[3,"UnitError","","Future for the <code>unit_error</code> combinator.",null,null],[3,"MapInto","","Future for the <code>map_into</code> combinator.",null,null],[3,"FlattenStream","","Stream for the <code>flatten_stream</code> method.",null,null],[3,"AndThen","","Future for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Future for the <code>err_into</code> method.",null,null],[3,"OkInto","","Future for the <code>ok_into</code> method.",null,null],[3,"InspectErr","","Future for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Future for the <code>inspect_ok</code> method.",null,null],[3,"IntoFuture","","Future for the <code>into_future</code> method.",null,null],[3,"MapErr","","Future for the <code>map_err</code> method.",null,null],[3,"MapOk","","Future for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Future for the <code>or_else</code> method.",null,null],[3,"TryFlattenStream","","Future for the <code>try_flatten_stream</code> method.",null,null],[8,"TryFutureExt","","Adapters specific to [<code>Result</code>]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful …",5,[[],["flattensink",3]]],[11,"map_ok","","Maps this future’s success value to a different value.",5,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future’s success value to a different value, …",5,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future’s error value to a different value.",5,[[],["maperr",3]]],[11,"err_into","","Maps this future’s <code>Error</code> to a new error type using the …",5,[[],["errinto",3]]],[11,"ok_into","","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> …",5,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",5,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",5,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",5,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",5,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",5,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",5,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future’s ouput, producing a future with …",5,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",5,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",5,[[["context",3]],[["poll",4],["result",4]]]],[3,"UnwrapOrElse","","Future for the <code>unwrap_or_else</code> method.",null,null],[3,"MapOkOrElse","","Future for the <code>map_ok_or_else</code> method.",null,null],[3,"TryFlatten","","Future for the <code>try_flatten</code> method.",null,null],[3,"FlattenSink","","Sink for the <code>flatten_sink</code> method.",null,null],[5,"lazy","","Creates a new future that allows delayed execution of a …",null,[[],["lazy",3]]],[3,"Lazy","","Future for the [<code>lazy</code>] function.",null,null],[5,"pending","","Creates a future which never resolves, representing a …",null,[[],["pending",3]]],[3,"Pending","","Future for the [<code>pending()</code>] function.",null,null],[5,"maybe_done","","Wraps a future into a <code>MaybeDone</code>",null,[[],["maybedone",4]]],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",6,null],[13,"Done","","The output of the completed future",6,null],[13,"Gone","","The empty variant after the result of a [<code>MaybeDone</code>] has …",6,null],[5,"try_maybe_done","","Wraps a future into a <code>TryMaybeDone</code>",null,[[],["trymaybedone",4]]],[4,"TryMaybeDone","","A future that may have completed with an error.",null,null],[13,"Future","","A not-yet-completed future",7,null],[13,"Done","","The output of the completed future",7,null],[13,"Gone","","The empty variant after the result of a [<code>TryMaybeDone</code>] …",7,null],[3,"OptionFuture","","A future representing a value which may or may not be …",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Future for the [<code>poll_fn</code>] function.",null,null],[5,"err","","Create a future that is immediately ready with an error …",null,[[],[["ready",3],["result",4]]]],[5,"ok","","Create a future that is immediately ready with a success …",null,[[],[["ready",3],["result",4]]]],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[],["ready",3]]],[3,"Ready","","Future for the <code>ready</code> function.",null,null],[5,"join","","Joins the result of two futures, waiting for them both to …",null,[[],["join",3]]],[5,"join3","","Same as <code>join</code>, but with more futures.",null,[[],["join3",3]]],[5,"join4","","Same as <code>join</code>, but with more futures.",null,[[],["join4",3]]],[5,"join5","","Same as <code>join</code>, but with more futures.",null,[[],["join5",3]]],[3,"Join","","Future for the <code>join</code> function.",null,null],[3,"Join3","","Future for the [<code>join3</code>] function.",null,null],[3,"Join4","","Future for the [<code>join4</code>] function.",null,null],[3,"Join5","","Future for the [<code>join5</code>] function.",null,null],[5,"join_all","","Creates a future which represents a collection of the …",null,[[],["joinall",3]]],[3,"JoinAll","","Future for the [<code>join_all</code>] function.",null,null],[5,"select","","Waits for either one of two differently-typed futures to …",null,[[],["select",3]]],[3,"Select","","Future for the [<code>select()</code>] function.",null,null],[5,"select_all","","Creates a new future which will select over a list of …",null,[[],["selectall",3]]],[3,"SelectAll","","Future for the [<code>select_all</code>] function.",null,null],[5,"try_join","","Joins the result of two futures, waiting for them both to …",null,[[],["tryjoin",3]]],[5,"try_join3","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin3",3]]],[5,"try_join4","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin4",3]]],[5,"try_join5","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin5",3]]],[3,"TryJoin","","Future for the <code>try_join</code> function.",null,null],[3,"TryJoin3","","Future for the [<code>try_join3</code>] function.",null,null],[3,"TryJoin4","","Future for the [<code>try_join4</code>] function.",null,null],[3,"TryJoin5","","Future for the [<code>try_join5</code>] function.",null,null],[5,"try_join_all","","Creates a future which represents either a collection of …",null,[[],["tryjoinall",3]]],[3,"TryJoinAll","","Future for the [<code>try_join_all</code>] function.",null,null],[5,"try_select","","Waits for either one of two differently-typed futures to …",null,[[],["tryselect",3]]],[3,"TrySelect","","Future for the [<code>try_select()</code>] function.",null,null],[5,"select_ok","","Creates a new future which will select the first …",null,[[],["selectok",3]]],[3,"SelectOk","","Future for the [<code>select_ok</code>] function.",null,null],[4,"Either","","Combines two different futures, streams, or sinks having …",null,null],[13,"Left","","First branch of the type",8,null],[13,"Right","","Second branch of the type",8,null],[5,"abortable","","Creates a new <code>Abortable</code> future and a <code>AbortHandle</code> which …",null,[[]]],[3,"Abortable","","A future which can be remotely short-circuited using an …",null,null],[3,"AbortHandle","","A handle to a <code>Abortable</code> future.",null,null],[3,"AbortRegistration","","A registration handle for a <code>Abortable</code> future. Values of …",null,null],[3,"Aborted","","Indicator that the <code>Abortable</code> future was aborted.",null,null],[8,"Future","futures::prelude","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",1,null],[10,"poll","","Attempt to resolve the future to a final value, …",1,[[["context",3],["pin",3]],["poll",4]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",2,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[0,"sink","","Asynchronous sinks.",null,null],[8,"SinkExt","futures::prelude::sink","An extension trait for <code>Sink</code>s that provides a variety of …",null,null],[11,"with","","Composes a function <em>in front of</em> the sink.",9,[[],["with",3]]],[11,"with_flat_map","","Composes a function <em>in front of</em> the sink.",9,[[],["withflatmap",3]]],[11,"sink_map_err","","Transforms the error returned by the sink.",9,[[],["sinkmaperr",3]]],[11,"sink_err_into","","Map this sink’s error to a different error type using …",9,[[],["sinkerrinto",3]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",9,[[["usize",15]],["buffer",3]]],[11,"close","","Close the sink.",9,[[],["close",3]]],[11,"fanout","","Fanout items to multiple sinks.",9,[[],["fanout",3]]],[11,"flush","","Flush the sink, processing all pending items.",9,[[],["flush",3]]],[11,"send","","A future that completes after the given item has been …",9,[[],["send",3]]],[11,"feed","","A future that completes after the given item has been …",9,[[],["feed",3]]],[11,"send_all","","A future that completes after the given stream has been …",9,[[],["sendall",3]]],[11,"left_sink","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …",9,[[],["either",4]]],[11,"right_sink","","Wrap this stream in an <code>Either</code> stream, making it the …",9,[[],["either",4]]],[11,"poll_ready_unpin","","A convenience method for calling [<code>Sink::poll_ready</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[11,"start_send_unpin","","A convenience method for calling [<code>Sink::start_send</code>] on […",9,[[],["result",4]]],[11,"poll_flush_unpin","","A convenience method for calling [<code>Sink::poll_flush</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[11,"poll_close_unpin","","A convenience method for calling [<code>Sink::poll_close</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[8,"Sink","","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",10,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",10,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",10,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",10,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",10,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[3,"Close","","Future for the <code>close</code> method.",null,null],[5,"drain","","Create a sink that will just discard all items given to …",null,[[],["drain",3]]],[3,"Drain","","Sink for the [<code>drain</code>] function.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two …",null,null],[3,"Feed","","Future for the <code>feed</code> method.",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"SinkErrInto","","Sink for the <code>sink_err_into</code> method.",null,null],[3,"SinkMapErr","","Sink for the <code>sink_map_err</code> method.",null,null],[3,"Send","","Future for the <code>send</code> method.",null,null],[3,"SendAll","","Future for the <code>send_all</code> method.",null,null],[5,"unfold","","Create a sink from a function which processes one item at …",null,[[],["unfold",3]]],[3,"Unfold","","Sink for the [<code>unfold</code>] function.",null,null],[3,"With","","Sink for the <code>with</code> method.",null,null],[3,"WithFlatMap","","Sink for the <code>with_flat_map</code> method.",null,null],[3,"Buffer","","Sink for the <code>buffer</code> method.",null,null],[8,"Sink","futures::prelude","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",10,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",10,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",10,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",10,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",10,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[0,"stream","","Asynchronous streams.",null,null],[0,"futures_unordered","futures::prelude::stream","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::prelude::stream::futures_unordered","A set of futures which may complete in any order.",null,null],[3,"Iter","","Immutable iterator over all the futures in the unordered …",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[6,"BoxStream","futures::prelude::stream","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",11,[[],["bool",15]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",12,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",12,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",12,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",13,null],[16,"Error","","The type of failures yielded by this future",13,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",13,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[3,"Chain","","Stream for the <code>chain</code> method.",null,null],[3,"Collect","","Future for the <code>collect</code> method.",null,null],[3,"Concat","","Future for the <code>concat</code> method.",null,null],[3,"Cycle","","Stream for the <code>cycle</code> method.",null,null],[3,"Enumerate","","Stream for the <code>enumerate</code> method.",null,null],[3,"Filter","","Stream for the <code>filter</code> method.",null,null],[3,"FilterMap","","Stream for the <code>filter_map</code> method.",null,null],[3,"FlatMap","","Stream for the <code>flat_map</code> method.",null,null],[3,"Flatten","","Stream for the <code>flatten</code> method.",null,null],[3,"Fold","","Future for the <code>fold</code> method.",null,null],[3,"ForEach","","Future for the <code>for_each</code> method.",null,null],[3,"Fuse","","Stream for the <code>fuse</code> method.",null,null],[3,"Inspect","","Stream for the <code>inspect</code> method.",null,null],[3,"Map","","Stream for the <code>map</code> method.",null,null],[3,"Next","","Future for the <code>next</code> method.",null,null],[3,"Peek","","Future for the <code>Peekable::peek()</code> function from [<code>Peekable</code>]",null,null],[3,"Peekable","","A <code>Stream</code> that implements a <code>peek</code> method.",null,null],[3,"Scan","","Stream for the <code>scan</code> method.",null,null],[3,"SelectNextSome","","Future for the <code>select_next_some</code> method.",null,null],[3,"Skip","","Stream for the <code>skip</code> method.",null,null],[3,"SkipWhile","","Stream for the <code>skip_while</code> method.",null,null],[8,"StreamExt","","An extension trait for <code>Stream</code>s that provides a variety of …",null,null],[11,"next","","Creates a future that resolves to the next item in the …",14,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",14,[[],["streamfuture",3]]],[11,"map","","Maps this stream’s items to a different type, returning …",14,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",14,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",14,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",14,[[],["filtermap",3]]],[11,"then","","Computes from this stream’s items new items of a …",14,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",14,[[],["collect",3]]],[11,"unzip","","Converts a stream of pairs into a future, which resolves …",14,[[],["unzip",3]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",14,[[],["concat",3]]],[11,"cycle","","Repeats a stream endlessly.",14,[[],["cycle",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",14,[[],["fold",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",14,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",14,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",14,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",14,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",14,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",14,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",14,[[],["foreach",3]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided …",14,[[],["foreachconcurrent",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",14,[[["usize",15]],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",14,[[["usize",15]],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",14,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",14,[[]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",14,[[],[["pin",3],["box",3]]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",14,[[],[["pin",3],["box",3]]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",14,[[["usize",15]],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",14,[[["usize",15]],["bufferunordered",3]]],[11,"zip","","An adapter for zipping two streams together.",14,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",14,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",14,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",14,[[["usize",15]],["chunks",3]]],[11,"ready_chunks","","An adaptor for chunking up ready items of the stream …",14,[[["usize",15]],["readychunks",3]]],[11,"forward","","A future that completes after the given stream has been …",14,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …",14,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",14,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",14,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",14,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",14,[[["context",3]],[["poll",4],["option",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",14,[[],["selectnextsome",3]]],[3,"StreamFuture","","Future for the <code>into_future</code> method.",null,null],[3,"Take","","Stream for the <code>take</code> method.",null,null],[3,"TakeUntil","","Stream for the <code>take_until</code> method.",null,null],[3,"TakeWhile","","Stream for the <code>take_while</code> method.",null,null],[3,"Then","","Stream for the <code>then</code> method.",null,null],[3,"Unzip","","Future for the <code>unzip</code> method.",null,null],[3,"Zip","","Stream for the <code>zip</code> method.",null,null],[3,"Chunks","","Stream for the <code>chunks</code> method.",null,null],[3,"ReadyChunks","","Stream for the <code>ready_chunks</code> method.",null,null],[3,"Forward","","Future for the <code>forward</code> method.",null,null],[3,"BufferUnordered","","Stream for the <code>buffer_unordered</code> method.",null,null],[3,"Buffered","","Stream for the <code>buffered</code> method.",null,null],[3,"ForEachConcurrent","","Future for the <code>for_each_concurrent</code> method.",null,null],[3,"ReuniteError","","Error indicating a <code>SplitSink<S></code> and <code>SplitStream<S></code> were …",null,null],[12,"0","","",15,null],[12,"1","","",15,null],[3,"SplitSink","","A <code>Sink</code> part of the split pair",null,null],[3,"SplitStream","","A <code>Stream</code> part of the split pair",null,null],[5,"try_unfold","","Creates a <code>TryStream</code> from a seed and a closure returning a …",null,[[],["tryunfold",3]]],[3,"AndThen","","Stream for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Stream for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Stream for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Stream for the <code>inspect_ok</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"MapErr","","Stream for the <code>map_err</code> method.",null,null],[3,"MapOk","","Stream for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Stream for the <code>or_else</code> method.",null,null],[3,"TryCollect","","Future for the <code>try_collect</code> method.",null,null],[3,"TryConcat","","Future for the <code>try_concat</code> method.",null,null],[3,"TryFilter","","Stream for the <code>try_filter</code> method.",null,null],[3,"TryFilterMap","","Stream for the <code>try_filter_map</code> method.",null,null],[3,"TryFlatten","","Stream for the <code>try_flatten</code> method.",null,null],[3,"TryFold","","Future for the <code>try_fold</code> method.",null,null],[3,"TryForEach","","Future for the <code>try_for_each</code> method.",null,null],[3,"TryNext","","Future for the <code>try_next</code> method.",null,null],[3,"TrySkipWhile","","Stream for the <code>try_skip_while</code> method.",null,null],[8,"TryStreamExt","","Adapters specific to <code>Result</code>-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts …",16,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",16,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",16,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",16,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",16,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",16,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",16,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",16,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",16,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",16,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",16,[[],["tryskipwhile",3]]],[11,"try_take_while","","Take elements on this stream while the provided …",16,[[],["trytakewhile",3]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the …",16,[[],["tryforeachconcurrent",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",16,[[],["trycollect",3]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",16,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",16,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",16,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",16,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",16,[[],["tryconcat",3]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream …",16,[[["usize",15]],["trybufferunordered",3]]],[11,"try_buffered","","Attempt to execute several futures from a stream …",16,[[["usize",15]],["trybuffered",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",16,[[["context",3]],[["poll",4],["option",4]]]],[3,"TryTakeWhile","","Stream for the <code>try_take_while</code> method.",null,null],[3,"TryUnfold","","Stream for the [<code>try_unfold</code>] function.",null,null],[3,"TryBufferUnordered","","Stream for the <code>try_buffer_unordered</code> method.",null,null],[3,"TryBuffered","","Stream for the <code>try_buffered</code> method.",null,null],[3,"TryForEachConcurrent","","Future for the <code>try_for_each_concurrent</code> method.",null,null],[5,"iter","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …",null,[[],["iter",3]]],[3,"Iter","","Stream for the [<code>iter</code>] function.",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[],["repeat",3]]],[3,"Repeat","","Stream for the [<code>repeat</code>] function.",null,null],[5,"repeat_with","","Creates a new stream that repeats elements of type <code>A</code> …",null,[[],["repeatwith",3]]],[3,"RepeatWith","","An stream that repeats elements of type <code>A</code> endlessly by …",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty",3]]],[3,"Empty","","Stream for the [<code>empty</code>] function.",null,null],[5,"once","","Creates a stream of a single element.",null,[[],["once",3]]],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending",3]]],[3,"Pending","","Stream for the [<code>pending()</code>] function.",null,null],[5,"poll_fn","","Creates a new stream wrapping a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Stream for the [<code>poll_fn</code>] function.",null,null],[5,"select","","This function will attempt to pull items from both …",null,[[],["select",3]]],[3,"Select","","Stream for the [<code>select()</code>] function.",null,null],[5,"unfold","","Creates a <code>Stream</code> from a seed and a closure returning a …",null,[[],["unfold",3]]],[3,"Unfold","","Stream for the [<code>unfold</code>] function.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[5,"select_all","","Convert a list of streams into a <code>Stream</code> of results from …",null,[[],["selectall",3]]],[3,"SelectAll","","An unbounded set of streams",null,null],[8,"Stream","futures::prelude","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",12,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",12,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",12,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",13,null],[16,"Error","","The type of failures yielded by this future",13,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",13,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[14,"ready","futures","Extracts the successful type of a <code>Poll<T></code>.",null,null],[14,"pin_mut","","Pins a value on the stack.",null,null],[14,"join","","Polls multiple futures simultaneously, returning a tuple …",null,null],[14,"pending","","A macro which yields to the event loop once.",null,null],[14,"poll","","A macro which returns the result of polling a future once …",null,null],[14,"select_biased","","Polls multiple futures and streams simultaneously, …",null,null],[14,"try_join","","Polls multiple futures simultaneously, resolving to a […",null,null],[0,"future","","Asynchronous values.",null,null],[6,"BoxFuture","futures::future","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",0,[[],["bool",15]]],[8,"Future","","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",1,null],[10,"poll","","Attempt to resolve the future to a final value, …",1,[[["context",3],["pin",3]],["poll",4]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",2,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[3,"Flatten","","Future for the <code>flatten</code> method.",null,null],[3,"Fuse","","Future for the <code>fuse</code> method.",null,null],[8,"FutureExt","","An extension trait for <code>Future</code>s that provides a variety of …",null,null],[11,"map","","Map this future’s output to a different type, returning …",4,[[],["map",3]]],[11,"map_into","","Map this future’s output to a different type, returning …",4,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",4,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",4,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",4,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",4,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",4,[[],["inspect",3]]],[11,"boxed","","Wrap the future in a Box, pinning it.",4,[[],[["pin",3],["box",3]]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",4,[[],[["pin",3],["box",3]]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",4,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",4,[[],["option",4]]],[3,"Inspect","","Future for the <code>inspect</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"Map","","Future for the <code>map</code> method.",null,null],[3,"NeverError","","Future for the <code>never_error</code> combinator.",null,null],[3,"Then","","Future for the <code>then</code> method.",null,null],[3,"UnitError","","Future for the <code>unit_error</code> combinator.",null,null],[3,"MapInto","","Future for the <code>map_into</code> combinator.",null,null],[3,"FlattenStream","","Stream for the <code>flatten_stream</code> method.",null,null],[3,"AndThen","","Future for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Future for the <code>err_into</code> method.",null,null],[3,"OkInto","","Future for the <code>ok_into</code> method.",null,null],[3,"InspectErr","","Future for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Future for the <code>inspect_ok</code> method.",null,null],[3,"IntoFuture","","Future for the <code>into_future</code> method.",null,null],[3,"MapErr","","Future for the <code>map_err</code> method.",null,null],[3,"MapOk","","Future for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Future for the <code>or_else</code> method.",null,null],[3,"TryFlattenStream","","Future for the <code>try_flatten_stream</code> method.",null,null],[8,"TryFutureExt","","Adapters specific to [<code>Result</code>]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful …",5,[[],["flattensink",3]]],[11,"map_ok","","Maps this future’s success value to a different value.",5,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future’s success value to a different value, …",5,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future’s error value to a different value.",5,[[],["maperr",3]]],[11,"err_into","","Maps this future’s <code>Error</code> to a new error type using the …",5,[[],["errinto",3]]],[11,"ok_into","","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> …",5,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",5,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",5,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",5,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",5,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",5,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",5,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future’s ouput, producing a future with …",5,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",5,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",5,[[["context",3]],[["poll",4],["result",4]]]],[3,"UnwrapOrElse","","Future for the <code>unwrap_or_else</code> method.",null,null],[3,"MapOkOrElse","","Future for the <code>map_ok_or_else</code> method.",null,null],[3,"TryFlatten","","Future for the <code>try_flatten</code> method.",null,null],[3,"FlattenSink","","Sink for the <code>flatten_sink</code> method.",null,null],[5,"lazy","","Creates a new future that allows delayed execution of a …",null,[[],["lazy",3]]],[3,"Lazy","","Future for the [<code>lazy</code>] function.",null,null],[5,"pending","","Creates a future which never resolves, representing a …",null,[[],["pending",3]]],[3,"Pending","","Future for the [<code>pending()</code>] function.",null,null],[5,"maybe_done","","Wraps a future into a <code>MaybeDone</code>",null,[[],["maybedone",4]]],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",6,null],[13,"Done","","The output of the completed future",6,null],[13,"Gone","","The empty variant after the result of a [<code>MaybeDone</code>] has …",6,null],[5,"try_maybe_done","","Wraps a future into a <code>TryMaybeDone</code>",null,[[],["trymaybedone",4]]],[4,"TryMaybeDone","","A future that may have completed with an error.",null,null],[13,"Future","","A not-yet-completed future",7,null],[13,"Done","","The output of the completed future",7,null],[13,"Gone","","The empty variant after the result of a [<code>TryMaybeDone</code>] …",7,null],[3,"OptionFuture","","A future representing a value which may or may not be …",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Future for the [<code>poll_fn</code>] function.",null,null],[5,"err","","Create a future that is immediately ready with an error …",null,[[],[["ready",3],["result",4]]]],[5,"ok","","Create a future that is immediately ready with a success …",null,[[],[["ready",3],["result",4]]]],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[],["ready",3]]],[3,"Ready","","Future for the <code>ready</code> function.",null,null],[5,"join","","Joins the result of two futures, waiting for them both to …",null,[[],["join",3]]],[5,"join3","","Same as <code>join</code>, but with more futures.",null,[[],["join3",3]]],[5,"join4","","Same as <code>join</code>, but with more futures.",null,[[],["join4",3]]],[5,"join5","","Same as <code>join</code>, but with more futures.",null,[[],["join5",3]]],[3,"Join","","Future for the <code>join</code> function.",null,null],[3,"Join3","","Future for the [<code>join3</code>] function.",null,null],[3,"Join4","","Future for the [<code>join4</code>] function.",null,null],[3,"Join5","","Future for the [<code>join5</code>] function.",null,null],[5,"join_all","","Creates a future which represents a collection of the …",null,[[],["joinall",3]]],[3,"JoinAll","","Future for the [<code>join_all</code>] function.",null,null],[5,"select","","Waits for either one of two differently-typed futures to …",null,[[],["select",3]]],[3,"Select","","Future for the [<code>select()</code>] function.",null,null],[5,"select_all","","Creates a new future which will select over a list of …",null,[[],["selectall",3]]],[3,"SelectAll","","Future for the [<code>select_all</code>] function.",null,null],[5,"try_join","","Joins the result of two futures, waiting for them both to …",null,[[],["tryjoin",3]]],[5,"try_join3","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin3",3]]],[5,"try_join4","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin4",3]]],[5,"try_join5","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin5",3]]],[3,"TryJoin","","Future for the <code>try_join</code> function.",null,null],[3,"TryJoin3","","Future for the [<code>try_join3</code>] function.",null,null],[3,"TryJoin4","","Future for the [<code>try_join4</code>] function.",null,null],[3,"TryJoin5","","Future for the [<code>try_join5</code>] function.",null,null],[5,"try_join_all","","Creates a future which represents either a collection of …",null,[[],["tryjoinall",3]]],[3,"TryJoinAll","","Future for the [<code>try_join_all</code>] function.",null,null],[5,"try_select","","Waits for either one of two differently-typed futures to …",null,[[],["tryselect",3]]],[3,"TrySelect","","Future for the [<code>try_select()</code>] function.",null,null],[5,"select_ok","","Creates a new future which will select the first …",null,[[],["selectok",3]]],[3,"SelectOk","","Future for the [<code>select_ok</code>] function.",null,null],[4,"Either","","Combines two different futures, streams, or sinks having …",null,null],[13,"Left","","First branch of the type",8,null],[13,"Right","","Second branch of the type",8,null],[5,"abortable","","Creates a new <code>Abortable</code> future and a <code>AbortHandle</code> which …",null,[[]]],[3,"Abortable","","A future which can be remotely short-circuited using an …",null,null],[3,"AbortHandle","","A handle to a <code>Abortable</code> future.",null,null],[3,"AbortRegistration","","A registration handle for a <code>Abortable</code> future. Values of …",null,null],[3,"Aborted","","Indicator that the <code>Abortable</code> future was aborted.",null,null],[0,"never","futures","This module contains the <code>Never</code> type.",null,null],[6,"Never","futures::never","A type with no possible values.",null,null],[0,"sink","futures","Asynchronous sinks.",null,null],[8,"SinkExt","futures::sink","An extension trait for <code>Sink</code>s that provides a variety of …",null,null],[11,"with","","Composes a function <em>in front of</em> the sink.",9,[[],["with",3]]],[11,"with_flat_map","","Composes a function <em>in front of</em> the sink.",9,[[],["withflatmap",3]]],[11,"sink_map_err","","Transforms the error returned by the sink.",9,[[],["sinkmaperr",3]]],[11,"sink_err_into","","Map this sink’s error to a different error type using …",9,[[],["sinkerrinto",3]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",9,[[["usize",15]],["buffer",3]]],[11,"close","","Close the sink.",9,[[],["close",3]]],[11,"fanout","","Fanout items to multiple sinks.",9,[[],["fanout",3]]],[11,"flush","","Flush the sink, processing all pending items.",9,[[],["flush",3]]],[11,"send","","A future that completes after the given item has been …",9,[[],["send",3]]],[11,"feed","","A future that completes after the given item has been …",9,[[],["feed",3]]],[11,"send_all","","A future that completes after the given stream has been …",9,[[],["sendall",3]]],[11,"left_sink","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …",9,[[],["either",4]]],[11,"right_sink","","Wrap this stream in an <code>Either</code> stream, making it the …",9,[[],["either",4]]],[11,"poll_ready_unpin","","A convenience method for calling [<code>Sink::poll_ready</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[11,"start_send_unpin","","A convenience method for calling [<code>Sink::start_send</code>] on […",9,[[],["result",4]]],[11,"poll_flush_unpin","","A convenience method for calling [<code>Sink::poll_flush</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[11,"poll_close_unpin","","A convenience method for calling [<code>Sink::poll_close</code>] on […",9,[[["context",3]],[["poll",4],["result",4]]]],[8,"Sink","","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",10,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",10,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",10,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",10,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",10,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[3,"Close","","Future for the <code>close</code> method.",null,null],[5,"drain","","Create a sink that will just discard all items given to …",null,[[],["drain",3]]],[3,"Drain","","Sink for the [<code>drain</code>] function.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two …",null,null],[3,"Feed","","Future for the <code>feed</code> method.",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"SinkErrInto","","Sink for the <code>sink_err_into</code> method.",null,null],[3,"SinkMapErr","","Sink for the <code>sink_map_err</code> method.",null,null],[3,"Send","","Future for the <code>send</code> method.",null,null],[3,"SendAll","","Future for the <code>send_all</code> method.",null,null],[5,"unfold","","Create a sink from a function which processes one item at …",null,[[],["unfold",3]]],[3,"Unfold","","Sink for the [<code>unfold</code>] function.",null,null],[3,"With","","Sink for the <code>with</code> method.",null,null],[3,"WithFlatMap","","Sink for the <code>with_flat_map</code> method.",null,null],[3,"Buffer","","Sink for the <code>buffer</code> method.",null,null],[0,"stream","futures","Asynchronous streams.",null,null],[0,"futures_unordered","futures::stream","An unbounded set of futures.",null,null],[3,"FuturesUnordered","futures::stream::futures_unordered","A set of futures which may complete in any order.",null,null],[3,"Iter","","Immutable iterator over all the futures in the unordered …",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[6,"BoxStream","futures::stream","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",11,[[],["bool",15]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",12,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",12,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",12,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",13,null],[16,"Error","","The type of failures yielded by this future",13,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",13,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[3,"Chain","","Stream for the <code>chain</code> method.",null,null],[3,"Collect","","Future for the <code>collect</code> method.",null,null],[3,"Concat","","Future for the <code>concat</code> method.",null,null],[3,"Cycle","","Stream for the <code>cycle</code> method.",null,null],[3,"Enumerate","","Stream for the <code>enumerate</code> method.",null,null],[3,"Filter","","Stream for the <code>filter</code> method.",null,null],[3,"FilterMap","","Stream for the <code>filter_map</code> method.",null,null],[3,"FlatMap","","Stream for the <code>flat_map</code> method.",null,null],[3,"Flatten","","Stream for the <code>flatten</code> method.",null,null],[3,"Fold","","Future for the <code>fold</code> method.",null,null],[3,"ForEach","","Future for the <code>for_each</code> method.",null,null],[3,"Fuse","","Stream for the <code>fuse</code> method.",null,null],[3,"Inspect","","Stream for the <code>inspect</code> method.",null,null],[3,"Map","","Stream for the <code>map</code> method.",null,null],[3,"Next","","Future for the <code>next</code> method.",null,null],[3,"Peek","","Future for the <code>Peekable::peek()</code> function from [<code>Peekable</code>]",null,null],[3,"Peekable","","A <code>Stream</code> that implements a <code>peek</code> method.",null,null],[3,"Scan","","Stream for the <code>scan</code> method.",null,null],[3,"SelectNextSome","","Future for the <code>select_next_some</code> method.",null,null],[3,"Skip","","Stream for the <code>skip</code> method.",null,null],[3,"SkipWhile","","Stream for the <code>skip_while</code> method.",null,null],[8,"StreamExt","","An extension trait for <code>Stream</code>s that provides a variety of …",null,null],[11,"next","","Creates a future that resolves to the next item in the …",14,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",14,[[],["streamfuture",3]]],[11,"map","","Maps this stream’s items to a different type, returning …",14,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",14,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",14,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",14,[[],["filtermap",3]]],[11,"then","","Computes from this stream’s items new items of a …",14,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",14,[[],["collect",3]]],[11,"unzip","","Converts a stream of pairs into a future, which resolves …",14,[[],["unzip",3]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",14,[[],["concat",3]]],[11,"cycle","","Repeats a stream endlessly.",14,[[],["cycle",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",14,[[],["fold",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",14,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",14,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",14,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",14,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",14,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",14,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",14,[[],["foreach",3]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided …",14,[[],["foreachconcurrent",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",14,[[["usize",15]],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",14,[[["usize",15]],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",14,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",14,[[]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",14,[[],[["pin",3],["box",3]]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",14,[[],[["pin",3],["box",3]]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",14,[[["usize",15]],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",14,[[["usize",15]],["bufferunordered",3]]],[11,"zip","","An adapter for zipping two streams together.",14,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",14,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",14,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",14,[[["usize",15]],["chunks",3]]],[11,"ready_chunks","","An adaptor for chunking up ready items of the stream …",14,[[["usize",15]],["readychunks",3]]],[11,"forward","","A future that completes after the given stream has been …",14,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …",14,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",14,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",14,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",14,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",14,[[["context",3]],[["poll",4],["option",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",14,[[],["selectnextsome",3]]],[3,"StreamFuture","","Future for the <code>into_future</code> method.",null,null],[3,"Take","","Stream for the <code>take</code> method.",null,null],[3,"TakeUntil","","Stream for the <code>take_until</code> method.",null,null],[3,"TakeWhile","","Stream for the <code>take_while</code> method.",null,null],[3,"Then","","Stream for the <code>then</code> method.",null,null],[3,"Unzip","","Future for the <code>unzip</code> method.",null,null],[3,"Zip","","Stream for the <code>zip</code> method.",null,null],[3,"Chunks","","Stream for the <code>chunks</code> method.",null,null],[3,"ReadyChunks","","Stream for the <code>ready_chunks</code> method.",null,null],[3,"Forward","","Future for the <code>forward</code> method.",null,null],[3,"BufferUnordered","","Stream for the <code>buffer_unordered</code> method.",null,null],[3,"Buffered","","Stream for the <code>buffered</code> method.",null,null],[3,"ForEachConcurrent","","Future for the <code>for_each_concurrent</code> method.",null,null],[3,"ReuniteError","","Error indicating a <code>SplitSink<S></code> and <code>SplitStream<S></code> were …",null,null],[12,"0","","",15,null],[12,"1","","",15,null],[3,"SplitSink","","A <code>Sink</code> part of the split pair",null,null],[3,"SplitStream","","A <code>Stream</code> part of the split pair",null,null],[5,"try_unfold","","Creates a <code>TryStream</code> from a seed and a closure returning a …",null,[[],["tryunfold",3]]],[3,"AndThen","","Stream for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Stream for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Stream for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Stream for the <code>inspect_ok</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"MapErr","","Stream for the <code>map_err</code> method.",null,null],[3,"MapOk","","Stream for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Stream for the <code>or_else</code> method.",null,null],[3,"TryCollect","","Future for the <code>try_collect</code> method.",null,null],[3,"TryConcat","","Future for the <code>try_concat</code> method.",null,null],[3,"TryFilter","","Stream for the <code>try_filter</code> method.",null,null],[3,"TryFilterMap","","Stream for the <code>try_filter_map</code> method.",null,null],[3,"TryFlatten","","Stream for the <code>try_flatten</code> method.",null,null],[3,"TryFold","","Future for the <code>try_fold</code> method.",null,null],[3,"TryForEach","","Future for the <code>try_for_each</code> method.",null,null],[3,"TryNext","","Future for the <code>try_next</code> method.",null,null],[3,"TrySkipWhile","","Stream for the <code>try_skip_while</code> method.",null,null],[8,"TryStreamExt","","Adapters specific to <code>Result</code>-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts …",16,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",16,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",16,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",16,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",16,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",16,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",16,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",16,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",16,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",16,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",16,[[],["tryskipwhile",3]]],[11,"try_take_while","","Take elements on this stream while the provided …",16,[[],["trytakewhile",3]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the …",16,[[],["tryforeachconcurrent",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",16,[[],["trycollect",3]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",16,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",16,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",16,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",16,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",16,[[],["tryconcat",3]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream …",16,[[["usize",15]],["trybufferunordered",3]]],[11,"try_buffered","","Attempt to execute several futures from a stream …",16,[[["usize",15]],["trybuffered",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",16,[[["context",3]],[["poll",4],["option",4]]]],[3,"TryTakeWhile","","Stream for the <code>try_take_while</code> method.",null,null],[3,"TryUnfold","","Stream for the [<code>try_unfold</code>] function.",null,null],[3,"TryBufferUnordered","","Stream for the <code>try_buffer_unordered</code> method.",null,null],[3,"TryBuffered","","Stream for the <code>try_buffered</code> method.",null,null],[3,"TryForEachConcurrent","","Future for the <code>try_for_each_concurrent</code> method.",null,null],[5,"iter","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …",null,[[],["iter",3]]],[3,"Iter","","Stream for the [<code>iter</code>] function.",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[],["repeat",3]]],[3,"Repeat","","Stream for the [<code>repeat</code>] function.",null,null],[5,"repeat_with","","Creates a new stream that repeats elements of type <code>A</code> …",null,[[],["repeatwith",3]]],[3,"RepeatWith","","An stream that repeats elements of type <code>A</code> endlessly by …",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty",3]]],[3,"Empty","","Stream for the [<code>empty</code>] function.",null,null],[5,"once","","Creates a stream of a single element.",null,[[],["once",3]]],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending",3]]],[3,"Pending","","Stream for the [<code>pending()</code>] function.",null,null],[5,"poll_fn","","Creates a new stream wrapping a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Stream for the [<code>poll_fn</code>] function.",null,null],[5,"select","","This function will attempt to pull items from both …",null,[[],["select",3]]],[3,"Select","","Stream for the [<code>select()</code>] function.",null,null],[5,"unfold","","Creates a <code>Stream</code> from a seed and a closure returning a …",null,[[],["unfold",3]]],[3,"Unfold","","Stream for the [<code>unfold</code>] function.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[5,"select_all","","Convert a list of streams into a <code>Stream</code> of results from …",null,[[],["selectall",3]]],[3,"SelectAll","","An unbounded set of streams",null,null],[0,"task","futures","Tools for working with tasks.",null,null],[3,"Context","futures::task","The <code>Context</code> of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current …",null,null],[13,"Ready","","Represents that a value is immediately ready.",17,null],[13,"Pending","","Represents that a value is not ready yet.",17,null],[3,"Waker","","A <code>Waker</code> is a handle for waking up a task by notifying its …",null,null],[3,"RawWaker","","A <code>RawWaker</code> allows the implementor of a task executor to …",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies …",null,null],[8,"Spawn","","The <code>Spawn</code> trait allows for pushing futures onto an …",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",18,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status","","Determines whether the executor is able to spawn new …",18,[[],[["result",4],["spawnerror",3]]]],[8,"LocalSpawn","","The <code>LocalSpawn</code> is similar to [<code>Spawn</code>], but allows spawning …",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",19,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",19,[[],[["result",4],["spawnerror",3]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"noop_waker","","Create a new [<code>Waker</code>] which does nothing when <code>wake()</code> is …",null,[[],["waker",3]]],[8,"SpawnExt","","Extension trait for <code>Spawn</code>.",null,null],[11,"spawn","","Spawns a task that polls the given future with output <code>()</code> …",20,[[],[["result",4],["spawnerror",3]]]],[8,"LocalSpawnExt","","Extension trait for <code>LocalSpawn</code>.",null,null],[11,"spawn_local","","Spawns a task that polls the given future with output <code>()</code> …",21,[[],[["result",4],["spawnerror",3]]]],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make …",22,[[["arc",3]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make …",22,[[["arc",3]]]],[5,"waker","","Creates a [<code>Waker</code>] from an <code>Arc<impl ArcWake></code>.",null,[[["arc",3]],["waker",3]]],[5,"waker_ref","","Creates a reference to a [<code>Waker</code>] from a reference to …",null,[[["arc",3]],["wakerref",3]]],[3,"WakerRef","","A [<code>Waker</code>] that is only valid for a given lifetime.",null,null],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[0,"mpsc","futures::channel","A multi-producer, single-consumer queue for sending …",null,null],[3,"Sender","futures::channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for <code>Sender</code>s used as <code>Sink</code>s.",null,null],[3,"TrySendError","","The error type returned from <code>try_send</code>.",null,null],[3,"TryRecvError","","The error type returned from <code>try_next</code>.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between …",null,[[["usize",15]]]],[5,"unbounded","","Creates an unbounded mpsc channel for communicating …",null,[[]]],[0,"oneshot","futures::channel","A channel for sending a single message between …",null,null],[3,"Receiver","futures::channel::oneshot","A future for a value that will be provided by another …",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[5,"channel","","Creates a new one-shot channel for sending a single value …",null,[[]]],[3,"Cancellation","","A future that resolves when the receiving end of a …",null,null],[3,"Canceled","","Error returned from a <code>Receiver</code> when the corresponding …",null,null],[0,"lock","futures","Futures-powered synchronization primitives.",null,null],[11,"borrow","futures::task","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_future","","",23,[[]]],[11,"try_poll","","",23,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_future","","",24,[[]]],[11,"try_poll","","",24,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","futures::future","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_future","","",25,[[]]],[11,"try_poll","","",25,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_future","","",26,[[]]],[11,"try_poll","","",26,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_future","","",27,[[]]],[11,"try_poll","","",27,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"try_poll_next","","",28,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_future","","",29,[[]]],[11,"try_poll","","",29,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_future","","",30,[[]]],[11,"try_poll","","",30,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_future","","",31,[[]]],[11,"try_poll","","",31,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_future","","",32,[[]]],[11,"try_poll","","",32,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_future","","",33,[[]]],[11,"try_poll","","",33,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"try_poll_next","","",34,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_future","","",35,[[]]],[11,"try_poll","","",35,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_future","","",36,[[]]],[11,"try_poll","","",36,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_future","","",37,[[]]],[11,"try_poll","","",37,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_future","","",38,[[]]],[11,"try_poll","","",38,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_future","","",39,[[]]],[11,"try_poll","","",39,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_future","","",40,[[]]],[11,"try_poll","","",40,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_future","","",41,[[]]],[11,"try_poll","","",41,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_future","","",42,[[]]],[11,"try_poll","","",42,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_future","","",43,[[]]],[11,"try_poll","","",43,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"try_poll_next","","",44,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_future","","",45,[[]]],[11,"try_poll","","",45,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_future","","",46,[[]]],[11,"try_poll","","",46,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_future","","",47,[[]]],[11,"try_poll","","",47,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"try_poll_next","","",48,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_future","","",49,[[]]],[11,"try_poll","","",49,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_future","","",50,[[]]],[11,"try_poll","","",50,[[["context",3],["pin",3]],["poll",4]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_future","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_future","","",52,[[]]],[11,"try_poll","","",52,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_future","","",53,[[]]],[11,"try_poll","","",53,[[["context",3],["pin",3]],["poll",4]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_future","","",54,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_future","","",55,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_future","","",56,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_future","","",57,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_future","","",58,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_future","","",59,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_future","","",60,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_future","","",61,[[]]],[11,"try_poll","","",61,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_future","","",62,[[]]],[11,"try_poll","","",62,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_future","","",63,[[]]],[11,"try_poll","","",63,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_future","","",64,[[]]],[11,"try_poll","","",64,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_future","","",65,[[]]],[11,"try_poll","","",65,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_future","","",66,[[]]],[11,"try_poll","","",66,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_future","","",67,[[]]],[11,"try_poll","","",67,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_future","","",8,[[]]],[11,"try_poll","","",8,[[["context",3],["pin",3]],["poll",4]]],[11,"try_poll_next","","",8,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_future","","",68,[[]]],[11,"try_poll","","",68,[[["context",3],["pin",3]],["poll",4]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"to_string","","",71,[[],["string",3]]],[11,"borrow","futures::sink","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_future","","",72,[[]]],[11,"try_poll","","",72,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_future","","",75,[[]]],[11,"try_poll","","",75,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_future","","",76,[[]]],[11,"try_poll","","",76,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"try_poll_next","","",77,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"try_poll_next","","",78,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_future","","",79,[[]]],[11,"try_poll","","",79,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"into_future","","",80,[[]]],[11,"try_poll","","",80,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"try_poll_next","","",82,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"try_poll_next","","",83,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"try_poll_next","","",84,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","futures::stream","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"try_poll_next","","",85,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","futures::stream::futures_unordered","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"into_iter","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"into_iter","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"into_iter","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"into_iter","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"borrow","futures::stream","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"try_poll_next","","",90,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_future","","",91,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"into_future","","",92,[[]]],[11,"try_poll","","",92,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"try_poll_next","","",93,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"try_poll_next","","",95,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"try_poll_next","","",96,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"try_poll_next","","",97,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"try_poll_next","","",98,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"into_future","","",99,[[]]],[11,"try_poll","","",99,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"into_future","","",100,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"try_poll_next","","",101,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"try_poll_next","","",102,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"try_poll_next","","",103,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"into_future","","",104,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"into_future","","",105,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"try_poll_next","","",106,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"try_poll_next","","",107,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"into_future","","",108,[[]]],[11,"try_poll","","",108,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"try_poll_next","","",109,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"try_poll_next","","",110,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"into_future","","",111,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"try_poll_next","","",112,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"try_poll_next","","",113,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"try_poll_next","","",114,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"try_poll_next","","",115,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"into_future","","",116,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"into_future","","",120,[[]]],[11,"try_poll","","",120,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"try_poll_next","","",121,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"try_poll_next","","",122,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"into_future","","",123,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"try_poll_next","","",125,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"try_poll_next","","",126,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"try_poll_next","","",127,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"try_poll_next","","",128,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"try_poll_next","","",129,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"try_poll_next","","",130,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"try_poll_next","","",131,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"try_poll_next","","",132,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"try_poll_next","","",133,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"into_future","","",134,[[]]],[11,"try_poll","","",134,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"into_future","","",135,[[]]],[11,"try_poll","","",135,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"try_poll_next","","",136,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"try_poll_next","","",137,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"try_poll_next","","",138,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"into_future","","",139,[[]]],[11,"try_poll","","",139,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"into_future","","",140,[[]]],[11,"try_poll","","",140,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"into_future","","",141,[[]]],[11,"try_poll","","",141,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"try_poll_next","","",142,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"try_poll_next","","",143,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"try_poll_next","","",144,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"try_poll_next","","",145,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"try_poll_next","","",146,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"into_future","","",147,[[]]],[11,"try_poll","","",147,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"try_poll_next","","",148,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"try_poll_next","","",149,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"try_poll_next","","",150,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"try_poll_next","","",151,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"try_poll_next","","",152,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"try_poll_next","","",153,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"try_poll_next","","",154,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"try_poll_next","","",155,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"try_poll_next","","",156,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"try_poll_next","","",157,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"try_poll_next","","",158,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","futures::task","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"to_string","","",163,[[],["string",3]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"borrow","futures::channel::mpsc","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"try_poll_next","","",168,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"try_poll_next","","",169,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"to_string","","",170,[[],["string",3]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"to_string","","",171,[[],["string",3]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"to_string","","",172,[[],["string",3]]],[11,"borrow","futures::channel::oneshot","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"into_future","","",173,[[]]],[11,"try_poll","","",173,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"into_future","","",175,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"to_string","","",176,[[],["string",3]]],[11,"hash","futures::task","",17,[[]]],[11,"cmp","","",17,[[["poll",4]],["ordering",4]]],[11,"clone","","",162,[[],["rawwakervtable",3]]],[11,"clone","","",17,[[],["poll",4]]],[11,"clone","","",160,[[],["waker",3]]],[11,"into_result","","",17,[[],["result",4]]],[11,"from_error","","",17,[[],[["option",4],["poll",4]]]],[11,"from_ok","","",17,[[],[["option",4],["poll",4]]]],[11,"into_result","","",17,[[],["result",4]]],[11,"from_error","","",17,[[],[["poll",4],["result",4]]]],[11,"from_ok","","",17,[[],[["poll",4],["result",4]]]],[11,"from","","Convert to a <code>Ready</code> variant.",17,[[],["poll",4]]],[11,"eq","","",161,[[["rawwaker",3]],["bool",15]]],[11,"ne","","",161,[[["rawwaker",3]],["bool",15]]],[11,"eq","","",17,[[["poll",4]],["bool",15]]],[11,"ne","","",17,[[["poll",4]],["bool",15]]],[11,"eq","","",162,[[["rawwakervtable",3]],["bool",15]]],[11,"ne","","",162,[[["rawwakervtable",3]],["bool",15]]],[11,"partial_cmp","","",17,[[["poll",4]],[["ordering",4],["option",4]]]],[11,"drop","","",160,[[]]],[11,"fmt","","",161,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",162,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",17,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",159,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",160,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",165,[[],["atomicwaker",3]]],[11,"fmt","","",165,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",161,[[["arc",3]],["rawwaker",3]]],[11,"from","","",160,[[["arc",3]],["waker",3]]],[11,"spawn_obj","futures::stream","",85,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"extend","","",85,[[]]],[11,"extend","","",157,[[]]],[11,"extend","","",158,[[]]],[11,"from","futures::future","",51,[[["option",4]],["optionfuture",3]]],[11,"fmt","futures::stream","",107,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",95,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",55,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",97,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",32,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",150,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",79,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",145,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",37,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",109,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",54,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",146,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",85,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",136,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",149,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",135,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",119,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",51,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",106,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",121,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",151,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream::futures_unordered","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",102,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",123,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",155,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",63,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",65,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",77,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",147,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",56,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",156,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",36,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",105,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream::futures_unordered","",87,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",50,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",154,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",58,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",94,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",46,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",81,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",152,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",53,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",141,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",138,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",132,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",130,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",116,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",144,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",67,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",49,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",92,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",157,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",125,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",34,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream::futures_unordered","",89,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",45,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",80,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",98,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",66,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",148,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",158,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",27,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",118,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",78,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",100,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",74,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",103,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",142,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",84,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",68,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",153,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",127,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",134,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",15,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",111,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",96,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",60,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",71,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",126,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",143,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",91,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",108,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",137,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",57,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",124,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",93,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",139,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",114,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",122,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",99,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",44,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",76,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",101,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream::futures_unordered","",86,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",112,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",69,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",43,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",104,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",48,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",140,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",117,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",110,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",70,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",129,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",75,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",120,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",131,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",128,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",73,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",38,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::sink","",72,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",115,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",62,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",133,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",90,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::future","",61,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"spawn_local_obj","futures::stream","",85,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"eq","futures::future","",71,[[["aborted",3]],["bool",15]]],[11,"is_terminated","futures::stream","",141,[[],["bool",15]]],[11,"is_terminated","futures::future","",50,[[],["bool",15]]],[11,"is_terminated","futures::stream","",108,[[],["bool",15]]],[11,"is_terminated","","",111,[[],["bool",15]]],[11,"is_terminated","","",123,[[],["bool",15]]],[11,"is_terminated","futures::future","",51,[[],["bool",15]]],[11,"is_terminated","","",43,[[],["bool",15]]],[11,"is_terminated","futures::stream","",134,[[],["bool",15]]],[11,"is_terminated","futures::future","",39,[[],["bool",15]]],[11,"is_terminated","futures::stream","",120,[[],["bool",15]]],[11,"is_terminated","futures::future","",33,[[],["bool",15]]],[11,"is_terminated","","",32,[[],["bool",15]]],[11,"is_terminated","","",35,[[],["bool",15]]],[11,"is_terminated","","",49,[[],["bool",15]]],[11,"is_terminated","","",46,[[],["bool",15]]],[11,"is_terminated","futures::stream","",104,[[],["bool",15]]],[11,"is_terminated","futures::future","",40,[[],["bool",15]]],[11,"is_terminated","","",37,[[],["bool",15]]],[11,"is_terminated","","",47,[[],["bool",15]]],[11,"is_terminated","futures::stream","",116,[[],["bool",15]]],[11,"is_terminated","futures::future","",56,[[],["bool",15]]],[11,"is_terminated","","",8,[[],["bool",15]]],[11,"is_terminated","futures::stream","",99,[[],["bool",15]]],[11,"is_terminated","futures::future","",27,[[],["bool",15]]],[11,"is_terminated","","",41,[[],["bool",15]]],[11,"is_terminated","","",31,[[],["bool",15]]],[11,"is_terminated","","",38,[[],["bool",15]]],[11,"is_terminated","","",57,[[],["bool",15]]],[11,"is_terminated","","",29,[[],["bool",15]]],[11,"is_terminated","","",55,[[],["bool",15]]],[11,"is_terminated","","",36,[[],["bool",15]]],[11,"is_terminated","futures::stream","",147,[[],["bool",15]]],[11,"is_terminated","futures::future","",7,[[],["bool",15]]],[11,"is_terminated","","",59,[[],["bool",15]]],[11,"is_terminated","","",54,[[],["bool",15]]],[11,"is_terminated","futures::stream","",91,[[],["bool",15]]],[11,"is_terminated","futures::future","",26,[[],["bool",15]]],[11,"is_terminated","","",25,[[],["bool",15]]],[11,"is_terminated","futures::stream","",100,[[],["bool",15]]],[11,"is_terminated","futures::future","",45,[[],["bool",15]]],[11,"is_terminated","","",6,[[],["bool",15]]],[11,"is_terminated","","",53,[[],["bool",15]]],[11,"is_terminated","","",42,[[],["bool",15]]],[11,"is_terminated","","",30,[[],["bool",15]]],[11,"is_terminated","futures::stream","",92,[[],["bool",15]]],[11,"is_terminated","","",139,[[],["bool",15]]],[11,"is_terminated","","",105,[[],["bool",15]]],[11,"default","","",85,[[],["futuresunordered",3]]],[11,"default","","",157,[[],["futuresordered",3]]],[11,"default","","",158,[[],["selectall",3]]],[11,"fmt","futures::future","",71,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::stream","",15,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","futures::future","",50,[[],["pending",3]]],[11,"clone","futures::stream","",149,[[],["repeat",3]]],[11,"clone","","",151,[[],["empty",3]]],[11,"clone","futures::future","",8,[[],["either",4]]],[11,"clone","futures::sink","",82,[[],["with",3]]],[11,"clone","futures::stream","",148,[[],["iter",3]]],[11,"clone","futures::sink","",78,[[],["sinkmaperr",3]]],[11,"clone","futures::future","",53,[[],["ready",3]]],[11,"clone","","",68,[[],["abortable",3]]],[11,"clone","futures::stream","",153,[[],["pending",3]]],[11,"clone","futures::future","",51,[[],["optionfuture",3]]],[11,"clone","","",71,[[],["aborted",3]]],[11,"clone","","",69,[[],["aborthandle",3]]],[11,"clone","futures::stream","",150,[[],["repeatwith",3]]],[11,"poll_ready","","",126,[[["context",3],["andthen",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",126,[[["andthen",3],["pin",3]],["result",4]]],[11,"poll_flush","","",126,[[["context",3],["andthen",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",126,[[["context",3],["andthen",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",143,[[["trytakewhile",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",143,[[["trytakewhile",3],["pin",3]],["result",4]]],[11,"poll_flush","","",143,[[["trytakewhile",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",143,[[["trytakewhile",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",146,[[["trybuffered",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",146,[[["trybuffered",3],["pin",3]],["result",4]]],[11,"poll_flush","","",146,[[["trybuffered",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",146,[[["trybuffered",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::sink","",83,[[["context",3],["pin",3],["withflatmap",3]],[["poll",4],["result",4]]]],[11,"start_send","","",83,[[["pin",3],["withflatmap",3]],["result",4]]],[11,"poll_flush","","",83,[[["context",3],["pin",3],["withflatmap",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",83,[[["context",3],["pin",3],["withflatmap",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::stream","",127,[[["errinto",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",127,[[["errinto",3],["pin",3]],["result",4]]],[11,"poll_flush","","",127,[[["errinto",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",127,[[["errinto",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",124,[[["context",3],["splitsink",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",124,[[["splitsink",3],["pin",3]],["result",4]]],[11,"poll_flush","","",124,[[["context",3],["splitsink",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",124,[[["context",3],["splitsink",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",119,[[["pin",3],["context",3],["readychunks",3]],[["result",4],["poll",4]]]],[11,"start_send","","",119,[[["pin",3],["readychunks",3]],["result",4]]],[11,"poll_flush","","",119,[[["pin",3],["context",3],["readychunks",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",119,[[["pin",3],["context",3],["readychunks",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",129,[[["inspectok",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",129,[[["inspectok",3],["pin",3]],["result",4]]],[11,"poll_flush","","",129,[[["inspectok",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",129,[[["inspectok",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::sink","",77,[[["context",3],["pin",3],["sinkerrinto",3]],[["result",4],["poll",4]]]],[11,"start_send","","",77,[[["pin",3],["sinkerrinto",3]],["result",4]]],[11,"poll_flush","","",77,[[["context",3],["pin",3],["sinkerrinto",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",77,[[["context",3],["pin",3],["sinkerrinto",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",109,[[["pin",3],["context",3],["skip",3]],[["poll",4],["result",4]]]],[11,"start_send","","",109,[[["pin",3],["skip",3]],["result",4]]],[11,"poll_flush","","",109,[[["pin",3],["context",3],["skip",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",109,[[["pin",3],["context",3],["skip",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",96,[[["filtermap",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",96,[[["filtermap",3],["pin",3]],["result",4]]],[11,"poll_flush","","",96,[[["filtermap",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",96,[[["filtermap",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::sink","",73,[[["pin",3],["drain",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",73,[[["pin",3],["drain",3]],["result",4]]],[11,"poll_flush","","",73,[[["pin",3],["drain",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",73,[[["pin",3],["drain",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",121,[[["context",3],["pin",3],["bufferunordered",3]],[["poll",4],["result",4]]]],[11,"start_send","","",121,[[["pin",3],["bufferunordered",3]],["result",4]]],[11,"poll_flush","","",121,[[["context",3],["pin",3],["bufferunordered",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",121,[[["context",3],["pin",3],["bufferunordered",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",142,[[["tryskipwhile",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",142,[[["tryskipwhile",3],["pin",3]],["result",4]]],[11,"poll_flush","","",142,[[["tryskipwhile",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",142,[[["tryskipwhile",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::sink","",84,[[["context",3],["buffer",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",84,[[["buffer",3],["pin",3]],["result",4]]],[11,"poll_flush","","",84,[[["context",3],["buffer",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",84,[[["context",3],["buffer",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::stream","",98,[[["pin",3],["context",3],["flatten",3]],[["result",4],["poll",4]]]],[11,"start_send","","",98,[[["pin",3],["flatten",3]],["result",4]]],[11,"poll_flush","","",98,[[["pin",3],["context",3],["flatten",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",98,[[["pin",3],["context",3],["flatten",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",106,[[["context",3],["peekable",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",106,[[["peekable",3],["pin",3]],["result",4]]],[11,"poll_flush","","",106,[[["context",3],["peekable",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",106,[[["context",3],["peekable",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",102,[[["context",3],["inspect",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",102,[[["inspect",3],["pin",3]],["result",4]]],[11,"poll_flush","","",102,[[["context",3],["inspect",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",102,[[["context",3],["inspect",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",136,[[["tryfilter",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",136,[[["tryfilter",3],["pin",3]],["result",4]]],[11,"poll_flush","","",136,[[["tryfilter",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",136,[[["tryfilter",3],["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",130,[[["context",3],["pin",3],["intostream",3]],[["poll",4],["result",4]]]],[11,"start_send","","",130,[[["pin",3],["intostream",3]],["result",4]]],[11,"poll_flush","","",130,[[["context",3],["pin",3],["intostream",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",130,[[["context",3],["pin",3],["intostream",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::sink","",74,[[["pin",3],["context",3],["fanout",3]],[["poll",4],["result",4]]]],[11,"start_send","","",74,[[["pin",3],["fanout",3]],["result",4]]],[11,"poll_flush","","",74,[[["pin",3],["context",3],["fanout",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",74,[[["pin",3],["context",3],["fanout",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::stream","",107,[[["pin",3],["context",3],["scan",3]],[["result",4],["poll",4]]]],[11,"start_send","","",107,[[["pin",3],["scan",3]],["result",4]]],[11,"poll_flush","","",107,[[["pin",3],["context",3],["scan",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",107,[[["pin",3],["context",3],["scan",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",132,[[["mapok",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",132,[[["mapok",3],["pin",3]],["result",4]]],[11,"poll_flush","","",132,[[["mapok",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",132,[[["mapok",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::sink","",82,[[["context",3],["with",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",82,[[["with",3],["pin",3]],["result",4]]],[11,"poll_flush","","",82,[[["context",3],["with",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",82,[[["context",3],["with",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::future","",34,[[["context",3],["flattenstream",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",34,[[["flattenstream",3],["pin",3]],["result",4]]],[11,"poll_flush","","",34,[[["context",3],["flattenstream",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",34,[[["context",3],["flattenstream",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::sink","",81,[[["context",3],["unfold",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",81,[[["unfold",3],["pin",3]],["result",4]]],[11,"poll_flush","","",81,[[["context",3],["unfold",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",81,[[["context",3],["unfold",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::future","",8,[[["context",3],["pin",3],["either",4]],[["poll",4],["result",4]]]],[11,"start_send","","",8,[[["pin",3],["either",4]],["result",4]]],[11,"poll_flush","","",8,[[["context",3],["pin",3],["either",4]],[["poll",4],["result",4]]]],[11,"poll_close","","",8,[[["context",3],["pin",3],["either",4]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::stream","",131,[[["context",3],["maperr",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",131,[[["maperr",3],["pin",3]],["result",4]]],[11,"poll_flush","","",131,[[["context",3],["maperr",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",131,[[["context",3],["maperr",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",94,[[["context",3],["enumerate",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",94,[[["enumerate",3],["pin",3]],["result",4]]],[11,"poll_flush","","",94,[[["context",3],["enumerate",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",94,[[["context",3],["enumerate",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",128,[[["inspecterr",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",128,[[["inspecterr",3],["pin",3]],["result",4]]],[11,"poll_flush","","",128,[[["inspecterr",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",128,[[["inspecterr",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",103,[[["context",3],["map",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",103,[[["map",3],["pin",3]],["result",4]]],[11,"poll_flush","","",103,[[["context",3],["map",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",103,[[["context",3],["map",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",137,[[["tryfiltermap",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",137,[[["tryfiltermap",3],["pin",3]],["result",4]]],[11,"poll_flush","","",137,[[["tryfiltermap",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",137,[[["tryfiltermap",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",101,[[["context",3],["pin",3],["fuse",3]],[["poll",4],["result",4]]]],[11,"start_send","","",101,[[["pin",3],["fuse",3]],["result",4]]],[11,"poll_flush","","",101,[[["context",3],["pin",3],["fuse",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",101,[[["context",3],["pin",3],["fuse",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",110,[[["context",3],["pin",3],["skipwhile",3]],[["result",4],["poll",4]]]],[11,"start_send","","",110,[[["pin",3],["skipwhile",3]],["result",4]]],[11,"poll_flush","","",110,[[["context",3],["pin",3],["skipwhile",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",110,[[["context",3],["pin",3],["skipwhile",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::future","",48,[[["flattensink",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",48,[[["flattensink",3],["pin",3]],["result",4]]],[11,"poll_flush","","",48,[[["flattensink",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",48,[[["flattensink",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures::stream","",97,[[["context",3],["flatmap",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",97,[[["flatmap",3],["pin",3]],["result",4]]],[11,"poll_flush","","",97,[[["context",3],["flatmap",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",97,[[["context",3],["flatmap",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",118,[[["context",3],["pin",3],["chunks",3]],[["poll",4],["result",4]]]],[11,"start_send","","",118,[[["pin",3],["chunks",3]],["result",4]]],[11,"poll_flush","","",118,[[["context",3],["pin",3],["chunks",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",118,[[["context",3],["pin",3],["chunks",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",113,[[["pin",3],["context",3],["takeuntil",3]],[["poll",4],["result",4]]]],[11,"start_send","","",113,[[["pin",3],["takeuntil",3]],["result",4]]],[11,"poll_flush","","",113,[[["pin",3],["context",3],["takeuntil",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",113,[[["pin",3],["context",3],["takeuntil",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",112,[[["context",3],["pin",3],["take",3]],[["poll",4],["result",4]]]],[11,"start_send","","",112,[[["pin",3],["take",3]],["result",4]]],[11,"poll_flush","","",112,[[["context",3],["pin",3],["take",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",112,[[["context",3],["pin",3],["take",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",122,[[["context",3],["buffered",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",122,[[["buffered",3],["pin",3]],["result",4]]],[11,"poll_flush","","",122,[[["context",3],["buffered",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",122,[[["context",3],["buffered",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",95,[[["pin",3],["context",3],["filter",3]],[["result",4],["poll",4]]]],[11,"start_send","","",95,[[["pin",3],["filter",3]],["result",4]]],[11,"poll_flush","","",95,[[["pin",3],["context",3],["filter",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",95,[[["pin",3],["context",3],["filter",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",133,[[["pin",3],["orelse",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",133,[[["pin",3],["orelse",3]],["result",4]]],[11,"poll_flush","","",133,[[["pin",3],["orelse",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",133,[[["pin",3],["orelse",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",138,[[["context",3],["pin",3],["tryflatten",3]],[["poll",4],["result",4]]]],[11,"start_send","","",138,[[["pin",3],["tryflatten",3]],["result",4]]],[11,"poll_flush","","",138,[[["context",3],["pin",3],["tryflatten",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",138,[[["context",3],["pin",3],["tryflatten",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",114,[[["context",3],["pin",3],["takewhile",3]],[["poll",4],["result",4]]]],[11,"start_send","","",114,[[["pin",3],["takewhile",3]],["result",4]]],[11,"poll_flush","","",114,[[["context",3],["pin",3],["takewhile",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",114,[[["context",3],["pin",3],["takewhile",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",115,[[["then",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",115,[[["then",3],["pin",3]],["result",4]]],[11,"poll_flush","","",115,[[["then",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",115,[[["then",3],["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::future","",44,[[["context",3],["pin",3],["tryflattenstream",3]],[["result",4],["poll",4]]]],[11,"start_send","","",44,[[["pin",3],["tryflattenstream",3]],["result",4]]],[11,"poll_flush","","",44,[[["context",3],["pin",3],["tryflattenstream",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",44,[[["context",3],["pin",3],["tryflattenstream",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::stream","",145,[[["context",3],["pin",3],["trybufferunordered",3]],[["result",4],["poll",4]]]],[11,"start_send","","",145,[[["pin",3],["trybufferunordered",3]],["result",4]]],[11,"poll_flush","","",145,[[["context",3],["pin",3],["trybufferunordered",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",145,[[["context",3],["pin",3],["trybufferunordered",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures::sink","",78,[[["sinkmaperr",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",78,[[["sinkmaperr",3],["pin",3]],["result",4]]],[11,"poll_flush","","",78,[[["sinkmaperr",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",78,[[["sinkmaperr",3],["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"next","futures::stream::futures_unordered","",89,[[],[["pin",3],["option",4]]]],[11,"size_hint","","",89,[[]]],[11,"next","","",87,[[],["option",4]]],[11,"size_hint","","",87,[[]]],[11,"next","","",86,[[],["option",4]]],[11,"size_hint","","",86,[[]]],[11,"next","","",88,[[],[["option",4],["pin",3]]]],[11,"size_hint","","",88,[[]]],[11,"poll_next","futures::stream","",110,[[["pin",3],["context",3],["skipwhile",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",110,[[]]],[11,"poll_next","","",157,[[["futuresordered",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",157,[[]]],[11,"poll_next","","",103,[[["context",3],["map",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",103,[[]]],[11,"poll_next","","",115,[[["pin",3],["context",3],["then",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",115,[[]]],[11,"poll_next","","",138,[[["context",3],["pin",3],["tryflatten",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",143,[[["context",3],["trytakewhile",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",143,[[]]],[11,"poll_next","","",94,[[["pin",3],["context",3],["enumerate",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",94,[[]]],[11,"poll_next","","",158,[[["context",3],["selectall",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",93,[[["pin",3],["context",3],["cycle",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",93,[[]]],[11,"poll_next","","",156,[[["pin",3],["context",3],["unfold",3]],[["option",4],["poll",4]]]],[11,"poll_next","futures::sink","",82,[[["with",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",82,[[]]],[11,"poll_next","futures::stream","",106,[[["context",3],["peekable",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",106,[[]]],[11,"poll_next","","",144,[[["tryunfold",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",95,[[["pin",3],["context",3],["filter",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",95,[[]]],[11,"poll_next","","",119,[[["readychunks",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",119,[[]]],[11,"poll_next","","",128,[[["inspecterr",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",128,[[]]],[11,"poll_next","","",132,[[["mapok",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",132,[[]]],[11,"poll_next","","",130,[[["pin",3],["intostream",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",130,[[]]],[11,"poll_next","","",101,[[["context",3],["pin",3],["fuse",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",101,[[]]],[11,"poll_next","","",142,[[["pin",3],["context",3],["tryskipwhile",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",142,[[]]],[11,"poll_next","futures::sink","",77,[[["sinkerrinto",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",77,[[]]],[11,"poll_next","futures::stream","",148,[[["iter",3],["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",148,[[]]],[11,"poll_next","","",113,[[["takeuntil",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",113,[[]]],[11,"poll_next","","",146,[[["trybuffered",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","futures::future","",8,[[["context",3],["pin",3],["either",4]],[["option",4],["poll",4]]]],[11,"poll_next","futures::stream","",154,[[["context",3],["pin",3],["pollfn",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",137,[[["pin",3],["tryfiltermap",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",137,[[]]],[11,"poll_next","","",151,[[["context",3],["empty",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",151,[[]]],[11,"poll_next","futures::sink","",83,[[["context",3],["pin",3],["withflatmap",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",83,[[]]],[11,"poll_next","futures::stream","",96,[[["filtermap",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",96,[[]]],[11,"poll_next","","",125,[[["context",3],["pin",3],["splitstream",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",117,[[["pin",3],["zip",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",117,[[]]],[11,"poll_next","","",129,[[["inspectok",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",129,[[]]],[11,"poll_next","futures::future","",48,[[["flattensink",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",48,[[]]],[11,"poll_next","futures::stream","",97,[[["context",3],["flatmap",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",97,[[]]],[11,"poll_next","futures::future","",28,[[["context",3],["intostream",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",28,[[]]],[11,"poll_next","futures::sink","",84,[[["context",3],["pin",3],["buffer",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",84,[[]]],[11,"poll_next","futures::stream","",150,[[["context",3],["repeatwith",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",150,[[]]],[11,"poll_next","","",131,[[["context",3],["maperr",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",131,[[]]],[11,"poll_next","","",136,[[["pin",3],["tryfilter",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",136,[[]]],[11,"poll_next","futures::future","",34,[[["context",3],["flattenstream",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",34,[[]]],[11,"poll_next","futures::stream","",152,[[["pin",3],["context",3],["once",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",152,[[]]],[11,"poll_next","","",109,[[["context",3],["pin",3],["skip",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",109,[[]]],[11,"poll_next","","",149,[[["context",3],["pin",3],["repeat",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",149,[[]]],[11,"poll_next","","",145,[[["pin",3],["trybufferunordered",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",153,[[["pin",3],["context",3],["pending",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",153,[[]]],[11,"poll_next","","",85,[[["pin",3],["context",3],["futuresunordered",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",85,[[]]],[11,"poll_next","","",114,[[["takewhile",3],["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",114,[[]]],[11,"poll_next","","",112,[[["context",3],["pin",3],["take",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",112,[[]]],[11,"poll_next","","",118,[[["pin",3],["context",3],["chunks",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",118,[[]]],[11,"poll_next","","",90,[[["context",3],["chain",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",90,[[]]],[11,"poll_next","","",133,[[["context",3],["pin",3],["orelse",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",133,[[]]],[11,"poll_next","","",126,[[["context",3],["andthen",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",126,[[]]],[11,"poll_next","futures::sink","",78,[[["context",3],["sinkmaperr",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",78,[[]]],[11,"poll_next","futures::stream","",98,[[["pin",3],["context",3],["flatten",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",98,[[]]],[11,"poll_next","","",107,[[["pin",3],["scan",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",107,[[]]],[11,"poll_next","","",102,[[["context",3],["inspect",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",102,[[]]],[11,"poll_next","","",121,[[["bufferunordered",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",121,[[]]],[11,"poll_next","","",127,[[["errinto",3],["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",127,[[]]],[11,"poll_next","","",155,[[["context",3],["pin",3],["select",3]],[["option",4],["poll",4]]]],[11,"poll_next","futures::future","",44,[[["context",3],["pin",3],["tryflattenstream",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",44,[[]]],[11,"poll_next","futures::stream","",122,[[["pin",3],["buffered",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",122,[[]]],[11,"drop","","",85,[[]]],[11,"is_terminated","","",95,[[],["bool",15]]],[11,"is_terminated","","",107,[[],["bool",15]]],[11,"is_terminated","","",152,[[],["bool",15]]],[11,"is_terminated","futures::future","",8,[[],["bool",15]]],[11,"is_terminated","futures::stream","",114,[[],["bool",15]]],[11,"is_terminated","","",112,[[],["bool",15]]],[11,"is_terminated","futures::sink","",83,[[],["bool",15]]],[11,"is_terminated","futures::stream","",158,[[],["bool",15]]],[11,"is_terminated","","",130,[[],["bool",15]]],[11,"is_terminated","futures::future","",34,[[],["bool",15]]],[11,"is_terminated","futures::stream","",110,[[],["bool",15]]],[11,"is_terminated","","",117,[[],["bool",15]]],[11,"is_terminated","","",131,[[],["bool",15]]],[11,"is_terminated","","",126,[[],["bool",15]]],[11,"is_terminated","","",98,[[],["bool",15]]],[11,"is_terminated","futures::sink","",84,[[],["bool",15]]],[11,"is_terminated","futures::stream","",133,[[],["bool",15]]],[11,"is_terminated","futures::future","",28,[[],["bool",15]]],[11,"is_terminated","futures::stream","",142,[[],["bool",15]]],[11,"is_terminated","","",127,[[],["bool",15]]],[11,"is_terminated","","",155,[[],["bool",15]]],[11,"is_terminated","","",132,[[],["bool",15]]],[11,"is_terminated","","",156,[[],["bool",15]]],[11,"is_terminated","futures::future","",44,[[],["bool",15]]],[11,"is_terminated","futures::stream","",157,[[],["bool",15]]],[11,"is_terminated","","",149,[[],["bool",15]]],[11,"is_terminated","","",115,[[],["bool",15]]],[11,"is_terminated","","",137,[[],["bool",15]]],[11,"is_terminated","","",103,[[],["bool",15]]],[11,"is_terminated","","",85,[[],["bool",15]]],[11,"is_terminated","","",94,[[],["bool",15]]],[11,"is_terminated","","",138,[[],["bool",15]]],[11,"is_terminated","futures::future","",48,[[],["bool",15]]],[11,"is_terminated","futures::stream","",118,[[],["bool",15]]],[11,"is_terminated","","",129,[[],["bool",15]]],[11,"is_terminated","","",90,[[],["bool",15]]],[11,"is_terminated","","",93,[[],["bool",15]]],[11,"is_terminated","","",96,[[],["bool",15]]],[11,"is_terminated","","",153,[[],["bool",15]]],[11,"is_terminated","","",109,[[],["bool",15]]],[11,"is_terminated","","",143,[[],["bool",15]]],[11,"is_terminated","","",113,[[],["bool",15]]],[11,"is_terminated","","",97,[[],["bool",15]]],[11,"is_terminated","","",128,[[],["bool",15]]],[11,"is_terminated","","",102,[[],["bool",15]]],[11,"is_terminated","","",101,[[],["bool",15]]],[11,"is_terminated","","",136,[[],["bool",15]]],[11,"is_terminated","","",121,[[],["bool",15]]],[11,"is_terminated","","",150,[[],["bool",15]]],[11,"is_terminated","futures::sink","",77,[[],["bool",15]]],[11,"is_terminated","","",78,[[],["bool",15]]],[11,"is_terminated","futures::stream","",106,[[],["bool",15]]],[11,"is_terminated","","",151,[[],["bool",15]]],[11,"is_terminated","","",119,[[],["bool",15]]],[11,"from_iter","futures::future","",60,[[],["selectall",3]]],[11,"from_iter","futures::stream","",158,[[],["selectall",3]]],[11,"from_iter","","",85,[[],["futuresunordered",3]]],[11,"from_iter","futures::future","",58,[[],["joinall",3]]],[11,"from_iter","","",65,[[],["tryjoinall",3]]],[11,"from_iter","futures::stream","",157,[[],["futuresordered",3]]],[11,"from_iter","futures::future","",67,[[],["selectok",3]]],[11,"poll","","",52,[[["pin",3],["pollfn",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",105,[[["context",3],["pin",3],["peek",3]],["poll",4]]],[11,"poll","futures::future","",39,[[["context",3],["pin",3],["inspectok",3]],["poll",4]]],[11,"poll","futures::sink","",76,[[["context",3],["pin",3],["flush",3]],["poll",4]]],[11,"poll","futures::future","",25,[[["flatten",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","futures::stream","",99,[[["pin",3],["context",3],["fold",3]],["poll",4]]],[11,"poll","futures::future","",67,[[["selectok",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",68,[[["context",3],["abortable",3],["pin",3]],["poll",4]]],[11,"poll","","",61,[[["context",3],["tryjoin",3],["pin",3]],["poll",4]]],[11,"poll","","",6,[[["maybedone",4],["pin",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",140,[[["context",3],["tryforeach",3],["pin",3]],["poll",4]]],[11,"poll","futures::future","",43,[[["context",3],["orelse",3],["pin",3]],["poll",4]]],[11,"poll","","",8,[[["context",3],["pin",3],["either",4]],["poll",4]]],[11,"poll","","",51,[[["context",3],["pin",3],["optionfuture",3]],["poll",4]]],[11,"poll","futures::stream","",139,[[["context",3],["tryfold",3],["pin",3]],["poll",4]]],[11,"poll","futures::future","",29,[[["pin",3],["context",3],["map",3]],["poll",4]]],[11,"poll","futures::sink","",75,[[["pin",3],["feed",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",54,[[["join",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",66,[[["context",3],["tryselect",3],["pin",3]],["poll",4]]],[11,"poll","","",56,[[["context",3],["join4",3],["pin",3]],["poll",4]]],[11,"poll","","",7,[[["trymaybedone",4],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",53,[[["ready",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","futures::stream","",134,[[["context",3],["trycollect",3],["pin",3]],["poll",4]]],[11,"poll","futures::future","",55,[[["context",3],["pin",3],["join3",3]],["poll",4]]],[11,"poll","","",50,[[["pending",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",58,[[["pin",3],["context",3],["joinall",3]],["poll",4]]],[11,"poll","","",62,[[["pin",3],["context",3],["tryjoin3",3]],["poll",4]]],[11,"poll","","",65,[[["context",3],["pin",3],["tryjoinall",3]],["poll",4]]],[11,"poll","futures::stream","",108,[[["selectnextsome",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",141,[[["pin",3],["context",3],["trynext",3]],["poll",4]]],[11,"poll","futures::future","",26,[[["context",3],["fuse",3],["pin",3]],["poll",4]]],[11,"poll","","",42,[[["context",3],["pin",3],["mapok",3]],["poll",4]]],[11,"poll","","",38,[[["inspecterr",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",27,[[["pin",3],["inspect",3],["context",3]],["poll",4]]],[11,"poll","futures::stream","",111,[[["context",3],["pin",3],["streamfuture",3]],["poll",4]]],[11,"poll","futures::future","",40,[[["context",3],["pin",3],["intofuture",3]],["poll",4]]],[11,"poll","","",57,[[["context",3],["pin",3],["join5",3]],["poll",4]]],[11,"poll","futures::stream","",104,[[["pin",3],["next",3],["context",3]],["poll",4]]],[11,"poll","","",100,[[["context",3],["pin",3],["foreach",3]],["poll",4]]],[11,"poll","futures::sink","",80,[[["pin",3],["context",3],["sendall",3]],["poll",4]]],[11,"poll","futures::stream","",135,[[["pin",3],["tryconcat",3],["context",3]],["poll",4]]],[11,"poll","futures::future","",30,[[["nevererror",3],["pin",3],["context",3]],["poll",4]]],[11,"poll","","",59,[[["pin",3],["context",3],["select",3]],["poll",4]]],[11,"poll","futures::sink","",79,[[["context",3],["pin",3],["send",3]],["poll",4]]],[11,"poll","futures::future","",41,[[["context",3],["maperr",3],["pin",3]],["poll",4]]],[11,"poll","","",63,[[["context",3],["pin",3],["tryjoin4",3]],["poll",4]]],[11,"poll","futures::stream","",147,[[["context",3],["tryforeachconcurrent",3],["pin",3]],["poll",4]]],[11,"poll","futures::future","",64,[[["tryjoin5",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",31,[[["pin",3],["then",3],["context",3]],["poll",4]]],[11,"poll","","",32,[[["uniterror",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",47,[[["pin",3],["tryflatten",3],["context",3]],["poll",4]]],[11,"poll","","",49,[[["context",3],["pin",3],["lazy",3]],["poll",4]]],[11,"poll","","",45,[[["context",3],["pin",3],["unwraporelse",3]],["poll",4]]],[11,"poll","","",35,[[["context",3],["andthen",3],["pin",3]],["poll",4]]],[11,"poll","","",36,[[["context",3],["errinto",3],["pin",3]],["poll",4]]],[11,"poll","","",46,[[["context",3],["mapokorelse",3],["pin",3]],["poll",4]]],[11,"poll","futures::stream","",116,[[["context",3],["pin",3],["unzip",3]],["poll",4]]],[11,"poll","","",92,[[["context",3],["concat",3],["pin",3]],["poll",4]]],[11,"poll","","",123,[[["context",3],["pin",3],["foreachconcurrent",3]],["poll",4]]],[11,"poll","futures::future","",37,[[["context",3],["okinto",3],["pin",3]],["poll",4]]],[11,"poll","","",60,[[["context",3],["pin",3],["selectall",3]],["poll",4]]],[11,"poll","","",33,[[["context",3],["mapinto",3],["pin",3]],["poll",4]]],[11,"poll","futures::stream","",120,[[["forward",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",91,[[["context",3],["pin",3],["collect",3]],["poll",4]]],[11,"poll","futures::sink","",72,[[["context",3],["pin",3],["close",3]],["poll",4]]],[11,"poll","futures::task","",24,[[["pin",3],["context",3],["localfutureobj",3]],["poll",4]]],[11,"poll","","",23,[[["context",3],["pin",3],["futureobj",3]],["poll",4]]],[11,"from","","",23,[[["box",3],["future",8],["global",3]],["futureobj",3]]],[11,"from","","",24,[[["box",3],["future",8],["global",3]],["localfutureobj",3]]],[11,"from","","",24,[[["pin",3],["box",3]],["localfutureobj",3]]],[11,"from","","",23,[[["pin",3],["box",3]],["futureobj",3]]],[11,"from","","",24,[[["box",3],["global",3]],["localfutureobj",3]]],[11,"from","","",23,[[["box",3],["global",3]],["futureobj",3]]],[11,"from","","",24,[[["box",3],["pin",3]],["localfutureobj",3]]],[11,"from","","",23,[[["pin",3],["box",3]],["futureobj",3]]],[11,"from","","",24,[[["futureobj",3]],["localfutureobj",3]]],[11,"drop","","",24,[[]]],[11,"fmt","","",163,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",163,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",24,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",164,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref","","",164,[[],["waker",3]]],[11,"poll_ready","futures::channel::mpsc","",167,[[["unboundedsender",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",167,[[["unboundedsender",3],["pin",3]],["result",4]]],[11,"poll_flush","","",167,[[["unboundedsender",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",167,[[["unboundedsender",3],["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",166,[[["pin",3],["context",3],["sender",3]],[["poll",4],["result",4]]]],[11,"start_send","","",166,[[["pin",3],["sender",3]],["result",4]]],[11,"poll_flush","","",166,[[["pin",3],["context",3],["sender",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",166,[[["pin",3],["context",3],["sender",3]],[["poll",4],["result",4]]]],[11,"is_terminated","","",168,[[],["bool",15]]],[11,"is_terminated","","",169,[[],["bool",15]]],[11,"fmt","","",171,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::oneshot","",176,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::mpsc","",170,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",172,[[["formatter",3]],[["result",4],["error",3]]]],[11,"poll","futures::channel::oneshot","",173,[[["pin",3],["context",3],["receiver",3]],[["poll",4],["result",4]]]],[11,"poll","","",175,[[["cancellation",3],["context",3],["pin",3]],["poll",4]]],[11,"poll_next","futures::channel::mpsc","",169,[[["unboundedreceiver",3],["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",168,[[["pin",3],["context",3],["receiver",3]],[["poll",4],["option",4]]]],[11,"fmt","","",168,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",166,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",171,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::oneshot","",173,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::mpsc","",172,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",169,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::oneshot","",174,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::mpsc","",170,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",167,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","futures::channel::oneshot","",176,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",175,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","futures::channel::mpsc","",171,[[["trysenderror",3]],["bool",15]]],[11,"ne","","",171,[[["trysenderror",3]],["bool",15]]],[11,"eq","","",170,[[["senderror",3]],["bool",15]]],[11,"ne","","",170,[[["senderror",3]],["bool",15]]],[11,"eq","futures::channel::oneshot","",176,[[["canceled",3]],["bool",15]]],[11,"clone","futures::channel::mpsc","",170,[[],["senderror",3]]],[11,"clone","","",167,[[],["unboundedsender",3]]],[11,"clone","futures::channel::oneshot","",176,[[],["canceled",3]]],[11,"clone","futures::channel::mpsc","",171,[[],["trysenderror",3]]],[11,"clone","","",166,[[],["sender",3]]],[11,"drop","futures::channel::oneshot","",173,[[]]],[11,"drop","futures::channel::mpsc","",168,[[]]],[11,"drop","","",169,[[]]],[11,"drop","futures::channel::oneshot","",174,[[]]],[11,"is_terminated","","",173,[[],["bool",15]]],[11,"new","futures::task","Create a <code>FutureObj</code> from a custom trait object …",23,[[],["futureobj",3]]],[11,"new","","Create a <code>LocalFutureObj</code> from a custom trait object …",24,[[],["localfutureobj",3]]],[11,"into_future_obj","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.",24,[[],["futureobj",3]]],[11,"terminated","futures::future","Creates a new <code>Fuse</code>-wrapped future which is already …",26,[[],["fuse",3]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",6,[[["maybedone",4],["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>MaybeDone</code> without driving …",6,[[["maybedone",4],["pin",3]],["option",4]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",7,[[["trymaybedone",4],["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>TryMaybeDone</code> without …",7,[[["trymaybedone",4],["pin",3]],["option",4]]],[11,"into_inner","","Unwraps the value from this immediately ready future.",53,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",8,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",8,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",8,[[]]],[11,"new","","Creates a new <code>Abortable</code> future using an existing …",68,[[["abortregistration",3]],["abortable",3]]],[11,"new_pair","","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which …",69,[[]]],[11,"abort","","Abort the <code>Abortable</code> future associated with this handle.",69,[[]]],[11,"get_ref","futures::sink","Get a shared reference to the inner sinks.",74,[[]]],[11,"get_mut","","Get a mutable reference to the inner sinks.",74,[[]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sinks.",74,[[["pin",3],["fanout",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",74,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",77,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",77,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",77,[[["pin",3],["sinkerrinto",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",77,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",78,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",78,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",78,[[["sinkmaperr",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",78,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",82,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",82,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",82,[[["with",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",82,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",83,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",83,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",83,[[["pin",3],["withflatmap",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",83,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",84,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",84,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",84,[[["buffer",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",84,[[]]],[11,"new","futures::stream","Constructs a new, empty [<code>FuturesUnordered</code>].",85,[[],["futuresunordered",3]]],[11,"len","","Returns the number of futures contained in the set.",85,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no futures.",85,[[],["bool",15]]],[11,"push","","Push a future into the set.",85,[[]]],[11,"iter","","Returns an iterator that allows inspecting each future in …",85,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in …",85,[[],["itermut",3]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in …",85,[[["pin",3],["futuresunordered",3]],["iterpinmut",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",94,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",94,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",94,[[["pin",3],["enumerate",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",94,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",95,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",95,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",95,[[["pin",3],["filter",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",95,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",96,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",96,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",96,[[["filtermap",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",96,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",97,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",97,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",97,[[["flatmap",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",97,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",98,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",98,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",98,[[["pin",3],["flatten",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",98,[[]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",101,[[],["bool",15]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",101,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",101,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",101,[[["pin",3],["fuse",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",101,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",102,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",102,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",102,[[["inspect",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",102,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",103,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",103,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",103,[[["map",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",103,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",106,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",106,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",106,[[["pin",3],["peekable",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",106,[[]]],[11,"peek","","Produces a <code>Peek</code> future which retrieves a reference to the …",106,[[["pin",3],["peekable",3]],["peek",3]]],[11,"poll_peek","","Peek retrieves a reference to the next item in the stream.",106,[[["pin",3],["context",3],["peekable",3]],[["poll",4],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",107,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",107,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",107,[[["pin",3],["scan",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",107,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",109,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",109,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",109,[[["pin",3],["skip",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",109,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",110,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",110,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",110,[[["pin",3],["skipwhile",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",110,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",111,[[],["option",4]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",111,[[],["option",4]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",111,[[["pin",3],["streamfuture",3]],[["option",4],["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",111,[[],["option",4]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",112,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",112,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",112,[[["pin",3],["take",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",112,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",113,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",113,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",113,[[["takeuntil",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",113,[[]]],[11,"take_future","","Extract the stopping future out of the combinator. The …",113,[[],["option",4]]],[11,"take_result","","Once the stopping future is resolved, this method can be …",113,[[],["option",4]]],[11,"is_stopped","","Whether the stream was stopped yet by the stopping future …",113,[[],["bool",15]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",114,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",114,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",114,[[["takewhile",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",114,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",115,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",115,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",115,[[["pin",3],["then",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",115,[[]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",117,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",117,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",117,[[["pin",3],["zip",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",117,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",118,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",118,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",118,[[["pin",3],["chunks",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",118,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",119,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",119,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",119,[[["readychunks",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",119,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",121,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",121,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",121,[[["bufferunordered",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",121,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",122,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",122,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",122,[[["pin",3],["buffered",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",122,[[]]],[11,"reunite","","Attempts to put the two “halves” of a split …",124,[[["splitstream",3]],[["reuniteerror",3],["result",4]]]],[11,"reunite","","Attempts to put the two “halves” of a split …",125,[[["splitsink",3]],[["reuniteerror",3],["result",4]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",126,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",126,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",126,[[["andthen",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",126,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",127,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",127,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",127,[[["errinto",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",127,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",128,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",128,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",128,[[["inspecterr",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",128,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",129,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",129,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",129,[[["inspectok",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",129,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",130,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",130,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",130,[[["pin",3],["intostream",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",130,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",131,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",131,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",131,[[["maperr",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",131,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",132,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",132,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",132,[[["mapok",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",132,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",133,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",133,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",133,[[["pin",3],["orelse",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",133,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",136,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",136,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",136,[[["pin",3],["tryfilter",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",136,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",137,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",137,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",137,[[["pin",3],["tryfiltermap",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",137,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",138,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",138,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",138,[[["pin",3],["tryflatten",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",138,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",142,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",142,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",142,[[["pin",3],["tryskipwhile",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",142,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",143,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",143,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",143,[[["trytakewhile",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",143,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",145,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",145,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",145,[[["pin",3],["trybufferunordered",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",145,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",146,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",146,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",146,[[["trybuffered",3],["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",146,[[]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",155,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",155,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",155,[[["pin",3],["select",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",155,[[]]],[11,"new","","Constructs a new, empty <code>FuturesOrdered</code>",157,[[],["futuresordered",3]]],[11,"len","","Returns the number of futures contained in the queue.",157,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the queue contains no futures",157,[[],["bool",15]]],[11,"push","","Push a future into the queue.",157,[[]]],[11,"new","","Constructs a new, empty <code>SelectAll</code>",158,[[],["selectall",3]]],[11,"len","","Returns the number of streams contained in the set.",158,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no streams",158,[[],["bool",15]]],[11,"push","","Push a stream into the set.",158,[[]]],[11,"from_waker","futures::task","Create a new <code>Context</code> from a <code>&Waker</code>.",159,[[["waker",3]],["context",3]]],[11,"waker","","Returns a reference to the <code>Waker</code> for the current task.",159,[[],["waker",3]]],[11,"map","","Changes the ready value of this <code>Poll</code> with the closure …",17,[[],["poll",4]]],[11,"is_ready","","Returns <code>true</code> if this is <code>Poll::Ready</code>",17,[[],["bool",15]]],[11,"is_pending","","Returns <code>true</code> if this is <code>Poll::Pending</code>",17,[[],["bool",15]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",17,[[],[["poll",4],["result",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",17,[[],[["result",4],["poll",4]]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",17,[[],[["option",4],["poll",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",17,[[],[["option",4],["poll",4]]]],[11,"wake","","Wake up the task associated with this <code>Waker</code>.",160,[[]]],[11,"wake_by_ref","","Wake up the task associated with this <code>Waker</code> without …",160,[[]]],[11,"will_wake","","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> have awoken …",160,[[["waker",3]],["bool",15]]],[11,"from_raw","","Creates a new <code>Waker</code> from [<code>RawWaker</code>].",160,[[["rawwaker",3]],["waker",3]]],[11,"new","","Creates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …",161,[[["rawwakervtable",3]],["rawwaker",3]]],[11,"new","","Creates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>…",162,[[],["rawwakervtable",3]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",163,[[],["spawnerror",3]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut …",163,[[],["bool",15]]],[11,"new","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] reference.",164,[[["waker",3]],["wakerref",3]]],[11,"new_unowned","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] that must not be …",164,[[["waker",3],["manuallydrop",3]],["wakerref",3]]],[11,"new","","Create an <code>AtomicWaker</code>.",165,[[],["atomicwaker",3]]],[11,"register","","Registers the waker to be notified on calls to <code>wake</code>.",165,[[["waker",3]]]],[11,"wake","","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.",165,[[]]],[11,"take","","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …",165,[[],[["waker",3],["option",4]]]],[11,"try_send","futures::channel::mpsc","Attempts to send a message on this <code>Sender</code>, returning the …",166,[[],[["result",4],["trysenderror",3]]]],[11,"start_send","","Send a message on the channel.",166,[[],[["senderror",3],["result",4]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed …",166,[[["context",3]],[["poll",4],["result",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",166,[[],["bool",15]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",166,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",166,[[]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",166,[[["sender",3]],["bool",15]]],[11,"is_connected_to","","Returns whether the sender send to this receiver.",166,[[["receiver",3]],["bool",15]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",166,[[]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",167,[[["context",3]],[["poll",4],["result",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",167,[[],["bool",15]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",167,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",167,[[]]],[11,"start_send","","Send a message on the channel.",167,[[],[["senderror",3],["result",4]]]],[11,"unbounded_send","","Sends a message along this channel.",167,[[],[["result",4],["trysenderror",3]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",167,[[["unboundedsender",3]],["bool",15]]],[11,"is_connected_to","","Returns whether the sender send to this receiver.",167,[[["unboundedreceiver",3]],["bool",15]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",167,[[]]],[11,"close","","Closes the receiving half of a channel, without dropping …",168,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",168,[[],[["tryrecverror",3],["result",4],["option",4]]]],[11,"close","","Closes the receiving half of a channel, without dropping …",169,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",169,[[],[["tryrecverror",3],["result",4],["option",4]]]],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",170,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",170,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",171,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",171,[[],["bool",15]]],[11,"into_inner","","Returns the message that was attempted to be sent but …",171,[[]]],[11,"into_send_error","","Drops the message and converts into a <code>SendError</code>.",171,[[],["senderror",3]]],[11,"close","futures::channel::oneshot","Gracefully close this receiver, preventing any subsequent …",173,[[]]],[11,"try_recv","","Attempts to receive a message outside of the context of a …",173,[[],[["result",4],["canceled",3],["option",4]]]],[11,"send","","Completes this oneshot with a successful result.",174,[[],["result",4]]],[11,"poll_canceled","","Polls this <code>Sender</code> half to detect whether its associated …",174,[[["context",3]],["poll",4]]],[11,"cancellation","","Creates a future that resolves when this <code>Sender</code>’s …",174,[[],["cancellation",3]]],[11,"is_canceled","","Tests to see whether this <code>Sender</code>’s corresponding …",174,[[],["bool",15]]],[11,"is_connected_to","","Tests to see whether this <code>Sender</code> is connected to the …",174,[[["receiver",3]],["bool",15]]]],"p":[[8,"FusedFuture"],[8,"Future"],[8,"TryFuture"],[8,"UnsafeFutureObj"],[8,"FutureExt"],[8,"TryFutureExt"],[4,"MaybeDone"],[4,"TryMaybeDone"],[4,"Either"],[8,"SinkExt"],[8,"Sink"],[8,"FusedStream"],[8,"Stream"],[8,"TryStream"],[8,"StreamExt"],[3,"ReuniteError"],[8,"TryStreamExt"],[4,"Poll"],[8,"Spawn"],[8,"LocalSpawn"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[8,"ArcWake"],[3,"FutureObj"],[3,"LocalFutureObj"],[3,"Flatten"],[3,"Fuse"],[3,"Inspect"],[3,"IntoStream"],[3,"Map"],[3,"NeverError"],[3,"Then"],[3,"UnitError"],[3,"MapInto"],[3,"FlattenStream"],[3,"AndThen"],[3,"ErrInto"],[3,"OkInto"],[3,"InspectErr"],[3,"InspectOk"],[3,"IntoFuture"],[3,"MapErr"],[3,"MapOk"],[3,"OrElse"],[3,"TryFlattenStream"],[3,"UnwrapOrElse"],[3,"MapOkOrElse"],[3,"TryFlatten"],[3,"FlattenSink"],[3,"Lazy"],[3,"Pending"],[3,"OptionFuture"],[3,"PollFn"],[3,"Ready"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"JoinAll"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TryJoinAll"],[3,"TrySelect"],[3,"SelectOk"],[3,"Abortable"],[3,"AbortHandle"],[3,"AbortRegistration"],[3,"Aborted"],[3,"Close"],[3,"Drain"],[3,"Fanout"],[3,"Feed"],[3,"Flush"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"Send"],[3,"SendAll"],[3,"Unfold"],[3,"With"],[3,"WithFlatMap"],[3,"Buffer"],[3,"FuturesUnordered"],[3,"Iter"],[3,"IterMut"],[3,"IterPinMut"],[3,"IterPinRef"],[3,"Chain"],[3,"Collect"],[3,"Concat"],[3,"Cycle"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"ForEach"],[3,"Fuse"],[3,"Inspect"],[3,"Map"],[3,"Next"],[3,"Peek"],[3,"Peekable"],[3,"Scan"],[3,"SelectNextSome"],[3,"Skip"],[3,"SkipWhile"],[3,"StreamFuture"],[3,"Take"],[3,"TakeUntil"],[3,"TakeWhile"],[3,"Then"],[3,"Unzip"],[3,"Zip"],[3,"Chunks"],[3,"ReadyChunks"],[3,"Forward"],[3,"BufferUnordered"],[3,"Buffered"],[3,"ForEachConcurrent"],[3,"SplitSink"],[3,"SplitStream"],[3,"AndThen"],[3,"ErrInto"],[3,"InspectErr"],[3,"InspectOk"],[3,"IntoStream"],[3,"MapErr"],[3,"MapOk"],[3,"OrElse"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryFold"],[3,"TryForEach"],[3,"TryNext"],[3,"TrySkipWhile"],[3,"TryTakeWhile"],[3,"TryUnfold"],[3,"TryBufferUnordered"],[3,"TryBuffered"],[3,"TryForEachConcurrent"],[3,"Iter"],[3,"Repeat"],[3,"RepeatWith"],[3,"Empty"],[3,"Once"],[3,"Pending"],[3,"PollFn"],[3,"Select"],[3,"Unfold"],[3,"FuturesOrdered"],[3,"SelectAll"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"SpawnError"],[3,"WakerRef"],[3,"AtomicWaker"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"SendError"],[3,"TrySendError"],[3,"TryRecvError"],[3,"Receiver"],[3,"Sender"],[3,"Cancellation"],[3,"Canceled"]]},\
"futures_channel":{"doc":"Asynchronous channels.","i":[[0,"mpsc","futures_channel","A multi-producer, single-consumer queue for sending …",null,null],[3,"Sender","futures_channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for <code>Sender</code>s used as <code>Sink</code>s.",null,null],[3,"TrySendError","","The error type returned from <code>try_send</code>.",null,null],[3,"TryRecvError","","The error type returned from <code>try_next</code>.",null,null],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",0,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",0,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",1,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",1,[[],["bool",15]]],[11,"into_inner","","Returns the message that was attempted to be sent but …",1,[[]]],[11,"into_send_error","","Drops the message and converts into a <code>SendError</code>.",1,[[],["senderror",3]]],[5,"channel","","Creates a bounded mpsc channel for communicating between …",null,[[["usize",15]]]],[5,"unbounded","","Creates an unbounded mpsc channel for communicating …",null,[[]]],[11,"try_send","","Attempts to send a message on this <code>Sender</code>, returning the …",2,[[],[["trysenderror",3],["result",4]]]],[11,"start_send","","Send a message on the channel.",2,[[],[["result",4],["senderror",3]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed …",2,[[["context",3]],[["poll",4],["result",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",2,[[],["bool",15]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",2,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",2,[[]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",2,[[],["bool",15]]],[11,"is_connected_to","","Returns whether the sender send to this receiver.",2,[[["receiver",3]],["bool",15]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",2,[[]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",3,[[["context",3]],[["poll",4],["result",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",3,[[],["bool",15]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",3,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",3,[[]]],[11,"start_send","","Send a message on the channel.",3,[[],[["result",4],["senderror",3]]]],[11,"unbounded_send","","Sends a message along this channel.",3,[[],[["trysenderror",3],["result",4]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",3,[[],["bool",15]]],[11,"is_connected_to","","Returns whether the sender send to this receiver.",3,[[["unboundedreceiver",3]],["bool",15]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",3,[[]]],[11,"close","","Closes the receiving half of a channel, without dropping …",4,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",4,[[],[["result",4],["option",4],["tryrecverror",3]]]],[11,"close","","Closes the receiving half of a channel, without dropping …",5,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",5,[[],[["result",4],["option",4],["tryrecverror",3]]]],[0,"oneshot","futures_channel","A channel for sending a single message between …",null,null],[3,"Receiver","futures_channel::oneshot","A future for a value that will be provided by another …",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[5,"channel","","Creates a new one-shot channel for sending a single value …",null,[[]]],[11,"send","","Completes this oneshot with a successful result.",6,[[],["result",4]]],[11,"poll_canceled","","Polls this <code>Sender</code> half to detect whether its associated …",6,[[["context",3]],["poll",4]]],[11,"cancellation","","Creates a future that resolves when this <code>Sender</code>’s …",6,[[],["cancellation",3]]],[11,"is_canceled","","Tests to see whether this <code>Sender</code>’s corresponding …",6,[[],["bool",15]]],[11,"is_connected_to","","Tests to see whether this <code>Sender</code> is connected to the …",6,[[["receiver",3]],["bool",15]]],[3,"Cancellation","","A future that resolves when the receiving end of a …",null,null],[3,"Canceled","","Error returned from a <code>Receiver</code> when the corresponding …",null,null],[11,"close","","Gracefully close this receiver, preventing any subsequent …",7,[[]]],[11,"try_recv","","Attempts to receive a message outside of the context of a …",7,[[],[["result",4],["option",4],["canceled",3]]]],[11,"from","futures_channel::mpsc","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"try_poll_next","","",4,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"try_poll_next","","",5,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","futures_channel::oneshot","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_future","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"drop","futures_channel::mpsc","",4,[[]]],[11,"drop","","",5,[[]]],[11,"drop","futures_channel::oneshot","",6,[[]]],[11,"drop","","",7,[[]]],[11,"clone","futures_channel::mpsc","",0,[[],["senderror",3]]],[11,"clone","","",1,[[],["trysenderror",3]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","futures_channel::oneshot","",10,[[],["canceled",3]]],[11,"eq","futures_channel::mpsc","",0,[[["senderror",3]],["bool",15]]],[11,"ne","","",0,[[["senderror",3]],["bool",15]]],[11,"eq","","",1,[[["trysenderror",3]],["bool",15]]],[11,"ne","","",1,[[["trysenderror",3]],["bool",15]]],[11,"eq","futures_channel::oneshot","",10,[[["canceled",3]],["bool",15]]],[11,"fmt","futures_channel::mpsc","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::oneshot","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::mpsc","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::oneshot","",10,[[["formatter",3]],["result",6]]],[11,"poll","","",9,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",7,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"is_terminated","","",7,[[],["bool",15]]],[11,"poll_next","futures_channel::mpsc","",4,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",5,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"is_terminated","","",4,[[],["bool",15]]],[11,"is_terminated","","",5,[[],["bool",15]]],[11,"poll_ready","","",2,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",2,[[["pin",3]],["result",4]]],[11,"poll_flush","","",2,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",2,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",3,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"start_send","","",3,[[["pin",3]],["result",4]]],[11,"poll_flush","","",3,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",3,[[["pin",3],["context",3]],[["result",4],["poll",4]]]]],"p":[[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"Sender"],[3,"Receiver"],[3,"TryRecvError"],[3,"Cancellation"],[3,"Canceled"]]},\
"futures_core":{"doc":"Core traits and types for asynchronous operations in Rust.","i":[[0,"future","futures_core","Futures.",null,null],[8,"Future","futures_core::future","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",0,null],[10,"poll","","Attempt to resolve the future to a final value, …",0,[[["pin",3],["context",3]],["poll",4]]],[6,"BoxFuture","","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",1,[[],["bool",15]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",2,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[0,"stream","futures_core","Asynchronous streams.",null,null],[6,"BoxStream","futures_core::stream","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",3,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",3,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",3,[[]]],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",4,[[],["bool",15]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",5,null],[16,"Error","","The type of failures yielded by this future",5,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",5,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[0,"task","futures_core","Task notification.",null,null],[3,"Context","futures_core::task","The <code>Context</code> of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current …",null,null],[13,"Ready","","Represents that a value is immediately ready.",6,null],[13,"Pending","","Represents that a value is not ready yet.",6,null],[3,"Waker","","A <code>Waker</code> is a handle for waking up a task by notifying its …",null,null],[3,"RawWaker","","A <code>RawWaker</code> allows the implementor of a task executor to …",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies …",null,null],[14,"ready","futures_core","Extracts the successful type of a <code>Poll<T></code>.",null,null],[11,"from","futures_core::task","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"hash","","",6,[[]]],[11,"cmp","","",6,[[["poll",4]],["ordering",4]]],[11,"clone","","",10,[[],["rawwakervtable",3]]],[11,"clone","","",6,[[],["poll",4]]],[11,"clone","","",8,[[],["waker",3]]],[11,"into_result","","",6,[[],["result",4]]],[11,"from_error","","",6,[[],[["poll",4],["option",4]]]],[11,"from_ok","","",6,[[],[["poll",4],["option",4]]]],[11,"into_result","","",6,[[],["result",4]]],[11,"from_error","","",6,[[],[["result",4],["poll",4]]]],[11,"from_ok","","",6,[[],[["result",4],["poll",4]]]],[11,"from","","Convert to a <code>Ready</code> variant.",6,[[],["poll",4]]],[11,"eq","","",9,[[["rawwaker",3]],["bool",15]]],[11,"ne","","",9,[[["rawwaker",3]],["bool",15]]],[11,"eq","","",6,[[["poll",4]],["bool",15]]],[11,"ne","","",6,[[["poll",4]],["bool",15]]],[11,"eq","","",10,[[["rawwakervtable",3]],["bool",15]]],[11,"ne","","",10,[[["rawwakervtable",3]],["bool",15]]],[11,"partial_cmp","","",6,[[["poll",4]],[["option",4],["ordering",4]]]],[11,"drop","","",8,[[]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",9,[[["arc",3]],["rawwaker",3]]],[11,"from","","",8,[[["arc",3]],["waker",3]]],[11,"from_waker","","Create a new <code>Context</code> from a <code>&Waker</code>.",7,[[["waker",3]],["context",3]]],[11,"waker","","Returns a reference to the <code>Waker</code> for the current task.",7,[[],["waker",3]]],[11,"map","","Changes the ready value of this <code>Poll</code> with the closure …",6,[[],["poll",4]]],[11,"is_ready","","Returns <code>true</code> if this is <code>Poll::Ready</code>",6,[[],["bool",15]]],[11,"is_pending","","Returns <code>true</code> if this is <code>Poll::Pending</code>",6,[[],["bool",15]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",6,[[],[["poll",4],["result",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",6,[[],[["result",4],["poll",4]]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",6,[[],[["option",4],["poll",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",6,[[],[["poll",4],["option",4]]]],[11,"wake","","Wake up the task associated with this <code>Waker</code>.",8,[[]]],[11,"wake_by_ref","","Wake up the task associated with this <code>Waker</code> without …",8,[[]]],[11,"will_wake","","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> have awoken …",8,[[["waker",3]],["bool",15]]],[11,"from_raw","","Creates a new <code>Waker</code> from [<code>RawWaker</code>].",8,[[["rawwaker",3]],["waker",3]]],[11,"new","","Creates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …",9,[[["rawwakervtable",3]],["rawwaker",3]]],[11,"new","","Creates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>…",10,[[],["rawwakervtable",3]]]],"p":[[8,"Future"],[8,"FusedFuture"],[8,"TryFuture"],[8,"Stream"],[8,"FusedStream"],[8,"TryStream"],[4,"Poll"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"]]},\
"futures_io":{"doc":"Asynchronous I/O","i":[[3,"Error","futures_io","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",0,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",0,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",0,null],[13,"ConnectionReset","","The connection was reset by the remote server.",0,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote …",0,null],[13,"NotConnected","","The network operation failed because it was not connected …",0,null],[13,"AddrInUse","","A socket address could not be bound because the address …",0,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested …",0,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",0,null],[13,"AlreadyExists","","An entity already exists, often a file.",0,null],[13,"WouldBlock","","The operation needs to block to complete, but the …",0,null],[13,"InvalidInput","","A parameter was incorrect.",0,null],[13,"InvalidData","","Data not valid for the operation were encountered.",0,null],[13,"TimedOut","","The I/O operation’s timeout expired, causing it to be …",0,null],[13,"WriteZero","","An error returned when an operation could not be …",0,null],[13,"Interrupted","","This operation was interrupted.",0,null],[13,"Other","","Any I/O error not part of this list.",0,null],[13,"UnexpectedEof","","An error returned when an operation could not be …",0,null],[6,"Result","","A specialized <code>Result</code> type for I/O operations.",null,null],[3,"IoSlice","","A buffer type used with <code>Write::write_vectored</code>.",null,null],[3,"IoSliceMut","","A buffer type used with <code>Read::read_vectored</code>.",null,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O …",null,null],[13,"Start","","Sets the offset to the provided number of bytes.",1,null],[13,"End","","Sets the offset to the size of this object plus the …",1,null],[13,"Current","","Sets the offset to the current position plus the …",1,null],[8,"AsyncRead","","Read bytes asynchronously.",null,null],[10,"poll_read","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.",2,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",2,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[8,"AsyncWrite","","Write bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",3,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",3,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[10,"poll_flush","","Attempt to flush the object, ensuring that any buffered …",3,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[10,"poll_close","","Attempt to close the object.",3,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"poll_seek","","Attempt to seek to an offset, in bytes, in a stream.",4,[[["pin",3],["context",3],["seekfrom",4]],[["poll",4],["result",6]]]],[8,"AsyncBufRead","","Read bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempt to return the contents of the internal buffer, …",5,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",5,[[["usize",15],["pin",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",7,[[],["ioslice",3]]],[11,"clone","","",1,[[],["seekfrom",4]]],[11,"clone","","",0,[[],["errorkind",4]]],[11,"hash","","",0,[[]]],[11,"from","","Converts an [<code>ErrorKind</code>] into an [<code>Error</code>].",6,[[["errorkind",4]],["error",3]]],[11,"from","","Converts a [<code>NulError</code>] into a [<code>io::Error</code>].",6,[[["nulerror",3]],["error",3]]],[11,"from","","",6,[[["intoinnererror",3]],["error",3]]],[11,"description","","",6,[[],["str",15]]],[11,"cause","","",6,[[],[["option",4],["error",8]]]],[11,"source","","",6,[[],[["error",8],["option",4]]]],[11,"cmp","","",0,[[["errorkind",4]],["ordering",4]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref_mut","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref","","",7,[[]]],[11,"eq","","",1,[[["seekfrom",4]],["bool",15]]],[11,"ne","","",1,[[["seekfrom",4]],["bool",15]]],[11,"eq","","",0,[[["errorkind",4]],["bool",15]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",0,[[["errorkind",4]],[["option",4],["ordering",4]]]],[11,"new","","Creates a new I/O error from a known kind of error as …",6,[[["errorkind",4]],["error",3]]],[11,"last_os_error","","Returns an error representing the last OS error which …",6,[[],["error",3]]],[11,"from_raw_os_error","","Creates a new instance of an [<code>Error</code>] from a particular OS …",6,[[["i32",15]],["error",3]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",6,[[],[["option",4],["i32",15]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this …",6,[[],[["option",4],["error",8]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by …",6,[[],[["option",4],["error",8]]]],[11,"into_inner","","Consumes the <code>Error</code>, returning its inner error (if any).",6,[[],[["option",4],["box",3]]]],[11,"kind","","Returns the corresponding [<code>ErrorKind</code>] for this error.",6,[[],["errorkind",4]]],[11,"new","","Creates a new <code>IoSlice</code> wrapping a byte slice.",7,[[],["ioslice",3]]],[11,"advance","","Advance the internal cursor of the slice.",7,[[["usize",15]]]],[11,"new","","Creates a new <code>IoSliceMut</code> wrapping a byte slice.",8,[[],["ioslicemut",3]]],[11,"advance","","Advance the internal cursor of the slice.",8,[[["usize",15]]]],[11,"poll_read_vectored","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using …",2,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","Attempt to write bytes from <code>bufs</code> into the object using …",3,[[["pin",3],["context",3]],[["poll",4],["result",6]]]]],"p":[[4,"ErrorKind"],[4,"SeekFrom"],[8,"AsyncRead"],[8,"AsyncWrite"],[8,"AsyncSeek"],[8,"AsyncBufRead"],[3,"Error"],[3,"IoSlice"],[3,"IoSliceMut"]]},\
"futures_lite":{"doc":"Futures, streams, and async I/O combinators.","i":[[0,"future","futures_lite","Combinators for the [<code>Future</code>] trait.",null,null],[5,"block_on","futures_lite::future","Blocks the current thread on a future.",null,[[]]],[5,"pending","","Creates a future that is always pending.",null,[[],["pending",3]]],[3,"Pending","","Future for the [<code>pending()</code>] function.",null,null],[5,"poll_once","","Polls a future just once and returns an [<code>Option</code>] with the …",null,[[],["pollonce",3]]],[3,"PollOnce","","Future for the [<code>poll_once()</code>] function.",null,null],[5,"poll_fn","","Creates a future from a function returning [<code>Poll</code>].",null,[[],["pollfn",3]]],[3,"PollFn","","Future for the [<code>poll_fn()</code>] function.",null,null],[5,"ready","","Creates a future that resolves to the provided value.",null,[[],["ready",3]]],[3,"Ready","","Future for the [<code>ready()</code>] function.",null,null],[5,"yield_now","","Wakes the current task and returns [<code>Poll::Pending</code>] once.",null,[[],["yieldnow",3]]],[3,"YieldNow","","Future for the [<code>yield_now()</code>] function.",null,null],[5,"zip","","Joins two futures, waiting for both to complete.",null,[[],["zip",3]]],[3,"Zip","","Future for the [<code>zip()</code>] function.",null,null],[5,"try_zip","","Joins two fallible futures, waiting for both to complete …",null,[[],["tryzip",3]]],[3,"TryZip","","Future for the [<code>try_zip()</code>] function.",null,null],[5,"or","","Returns the result of the future that completes first, …",null,[[],["or",3]]],[3,"Or","","Future for the [<code>or()</code>] function and the [<code>FutureExt::or()</code>] …",null,null],[5,"race","","Returns the result of the future that completes first, …",null,[[],["race",3]]],[3,"Race","","Future for the [<code>race()</code>] function and the […",null,null],[3,"CatchUnwind","","Future for the [<code>FutureExt::catch_unwind()</code>] method.",null,null],[6,"Boxed","","Type alias for …",null,null],[6,"BoxedLocal","","Type alias for <code>Pin<Box<dyn Future<Output = T> + \'static>></code>.",null,null],[8,"FutureExt","","Extension trait for [<code>Future</code>].",null,null],[11,"poll","","A convenience for calling [<code>Future::poll()</code>] on <code>!</code>[<code>Unpin</code>] …",0,[[["context",3]],["poll",4]]],[11,"or","","Returns the result of <code>self</code> or <code>other</code> future, preferring …",0,[[],["or",3]]],[11,"race","","Returns the result of <code>self</code> or <code>other</code> future, with no …",0,[[],["race",3]]],[11,"catch_unwind","","Catches panics while polling the future.",0,[[],["catchunwind",3]]],[11,"boxed","","Boxes the future and changes its type to …",0,[[],[["box",3],["pin",3]]]],[11,"boxed_local","","Boxes the future and changes its type to <code>dyn Future + \'a</code>.",0,[[],[["pin",3],["box",3]]]],[0,"prelude","futures_lite","Traits [<code>Future</code>], [<code>Stream</code>], [<code>AsyncRead</code>], [<code>AsyncWrite</code>], […",null,null],[0,"stream","","Combinators for the [<code>Stream</code>] trait.",null,null],[5,"block_on","futures_lite::stream","Converts a stream into a blocking iterator.",null,[[["stream",8],["unpin",8]],[["stream",8],["unpin",8],["blockon",3]]]],[3,"BlockOn","","Iterator for the [<code>block_on()</code>] function.",null,null],[5,"empty","","Creates an empty stream.",null,[[],["empty",3]]],[3,"Empty","","Stream for the [<code>empty()</code>] function.",null,null],[5,"iter","","Creates a stream from an iterator.",null,[[["intoiterator",8]],["iter",3]]],[3,"Iter","","Stream for the [<code>iter()</code>] function.",null,null],[5,"once","","Creates a stream that yields a single item.",null,[[],["once",3]]],[3,"Once","","Stream for the [<code>once()</code>] function.",null,null],[5,"pending","","Creates a stream that is always pending.",null,[[],["pending",3]]],[3,"Pending","","Stream for the [<code>pending()</code>] function.",null,null],[5,"poll_fn","","Creates a stream from a function returning [<code>Poll</code>].",null,[[],["pollfn",3]]],[3,"PollFn","","Stream for the [<code>poll_fn()</code>] function.",null,null],[5,"repeat","","Creates an infinite stream that yields the same item …",null,[[["clone",8]],[["repeat",3],["clone",8]]]],[3,"Repeat","","Stream for the [<code>repeat()</code>] function.",null,null],[5,"repeat_with","","Creates an infinite stream from a closure that generates …",null,[[],["repeatwith",3]]],[3,"RepeatWith","","Stream for the [<code>repeat_with()</code>] function.",null,null],[5,"unfold","","Creates a stream from a seed value and an async closure …",null,[[],["unfold",3]]],[3,"Unfold","","Stream for the [<code>unfold()</code>] function.",null,null],[5,"try_unfold","","Creates a stream from a seed value and a fallible async …",null,[[],["tryunfold",3]]],[3,"TryUnfold","","Stream for the [<code>try_unfold()</code>] function.",null,null],[8,"StreamExt","","Extension trait for [<code>Stream</code>].",null,null],[11,"poll_next","","A convenience for calling [<code>Stream::poll_next()</code>] on <code>!</code>[<code>Unpin</code>…",1,[[["context",3]],[["poll",4],["option",4]]]],[11,"next","","Retrieves the next item in the stream.",1,[[],["nextfuture",3]]],[11,"try_next","","Retrieves the next item in the stream.",1,[[],["trynextfuture",3]]],[11,"count","","Counts the number of items in the stream.",1,[[],["countfuture",3]]],[11,"map","","Maps items of the stream to new values using a closure.",1,[[],["map",3]]],[11,"flat_map","","Maps items to streams and then concatenates them.",1,[[],["flatmap",3]]],[11,"flatten","","Concatenates inner streams.",1,[[],["flatten",3]]],[11,"then","","Maps items of the stream to new values using an async …",1,[[],["then",3]]],[11,"filter","","Keeps items of the stream for which <code>predicate</code> returns <code>true</code>…",1,[[],["filter",3]]],[11,"filter_map","","Filters and maps items of the stream using a closure.",1,[[],["filtermap",3]]],[11,"take","","Takes only the first <code>n</code> items of the stream.",1,[[["usize",15]],["take",3]]],[11,"take_while","","Takes items while <code>predicate</code> returns <code>true</code>.",1,[[],["takewhile",3]]],[11,"skip","","Skips the first <code>n</code> items of the stream.",1,[[["usize",15]],["skip",3]]],[11,"skip_while","","Skips items while <code>predicate</code> returns <code>true</code>.",1,[[],["skipwhile",3]]],[11,"step_by","","Yields every <code>step</code>th item.",1,[[["usize",15]],["stepby",3]]],[11,"chain","","Appends another stream to the end of this one.",1,[[],["chain",3]]],[11,"cloned","","Clones all items.",1,[[],["cloned",3]]],[11,"copied","","Copies all items.",1,[[],["copied",3]]],[11,"collect","","Collects all items in the stream into a collection.",1,[[],["collectfuture",3]]],[11,"try_collect","","Collects all items in the fallible stream into a …",1,[[],["trycollectfuture",3]]],[11,"partition","","Partitions items into those for which <code>predicate</code> is <code>true</code> …",1,[[],["partitionfuture",3]]],[11,"fold","","Accumulates a computation over the stream.",1,[[],["foldfuture",3]]],[11,"try_fold","","Accumulates a fallible computation over the stream.",1,[[],["tryfoldfuture",3]]],[11,"scan","","Maps items of the stream to new values using a state …",1,[[],["scan",3]]],[11,"fuse","","Fuses the stream so that it stops yielding items after …",1,[[],["fuse",3]]],[11,"cycle","","Repeats the stream from beginning to end, forever.",1,[[],["cycle",3]]],[11,"enumerate","","Enumerates items, mapping them to <code>(index, item)</code>.",1,[[],["enumerate",3]]],[11,"inspect","","Calls a closure on each item and passes it on.",1,[[],["inspect",3]]],[11,"nth","","Gets the <code>n</code>th item of the stream.",1,[[["usize",15]],["nthfuture",3]]],[11,"last","","Returns the last item in the stream.",1,[[],["lastfuture",3]]],[11,"find","","Finds the first item of the stream for which <code>predicate</code> …",1,[[],["findfuture",3]]],[11,"find_map","","Applies a closure to items in the stream and returns the …",1,[[],["findmapfuture",3]]],[11,"position","","Finds the index of the first item of the stream for which …",1,[[],["positionfuture",3]]],[11,"all","","Tests if <code>predicate</code> returns <code>true</code> for all items in the …",1,[[],["allfuture",3]]],[11,"any","","Tests if <code>predicate</code> returns <code>true</code> for any item in the …",1,[[],["anyfuture",3]]],[11,"for_each","","Calls a closure on each item of the stream.",1,[[],["foreachfuture",3]]],[11,"try_for_each","","Calls a fallible closure on each item of the stream, …",1,[[],["tryforeachfuture",3]]],[11,"zip","","Zips up two streams into a single stream of pairs.",1,[[],["zip",3]]],[11,"unzip","","Collects a stream of pairs into a pair of collections.",1,[[],["unzipfuture",3]]],[11,"or","","Merges with <code>other</code> stream, preferring items from <code>self</code> …",1,[[],["or",3]]],[11,"race","","Merges with <code>other</code> stream, with no preference for either …",1,[[],["race",3]]],[11,"boxed","","Boxes the stream and changes its type to …",1,[[],[["pin",3],["box",3]]]],[11,"boxed_local","","Boxes the stream and changes its type to <code>dyn Stream + \'a</code>.",1,[[],[["box",3],["pin",3]]]],[6,"Boxed","","Type alias for …",null,null],[6,"BoxedLocal","","Type alias for <code>Pin<Box<dyn Stream<Item = T> + \'static>></code>.",null,null],[3,"NextFuture","","Future for the [<code>StreamExt::next()</code>] method.",null,null],[3,"TryNextFuture","","Future for the [<code>StreamExt::try_next()</code>] method.",null,null],[3,"CountFuture","","Future for the [<code>StreamExt::count()</code>] method.",null,null],[3,"CollectFuture","","Future for the [<code>StreamExt::collect()</code>] method.",null,null],[3,"TryCollectFuture","","Future for the [<code>StreamExt::try_collect()</code>] method.",null,null],[3,"PartitionFuture","","Future for the [<code>StreamExt::partition()</code>] method.",null,null],[3,"FoldFuture","","Future for the [<code>StreamExt::fold()</code>] method.",null,null],[3,"TryFoldFuture","","Future for the [<code>StreamExt::try_fold()</code>] method.",null,null],[3,"Scan","","Stream for the [<code>StreamExt::scan()</code>] method.",null,null],[3,"Fuse","","Stream for the [<code>StreamExt::fuse()</code>] method.",null,null],[3,"Map","","Stream for the [<code>StreamExt::map()</code>] method.",null,null],[3,"FlatMap","","Stream for the [<code>StreamExt::flat_map()</code>] method.",null,null],[3,"Flatten","","Stream for the [<code>StreamExt::flat_map()</code>] method.",null,null],[3,"Then","","Stream for the [<code>StreamExt::then()</code>] method.",null,null],[3,"Filter","","Stream for the [<code>StreamExt::filter()</code>] method.",null,null],[5,"or","","Merges two streams, preferring items from <code>stream1</code> …",null,[[],["or",3]]],[3,"Or","","Stream for the [<code>or()</code>] function and the [<code>StreamExt::or()</code>] …",null,null],[5,"race","","Merges two streams, with no preference for either stream …",null,[[],["race",3]]],[3,"Race","","Stream for the [<code>race()</code>] function and the […",null,null],[3,"FilterMap","","Stream for the [<code>StreamExt::filter_map()</code>] method.",null,null],[3,"Take","","Stream for the [<code>StreamExt::take()</code>] method.",null,null],[3,"TakeWhile","","Stream for the [<code>StreamExt::take_while()</code>] method.",null,null],[3,"Skip","","Stream for the [<code>StreamExt::skip()</code>] method.",null,null],[3,"SkipWhile","","Stream for the [<code>StreamExt::skip_while()</code>] method.",null,null],[3,"StepBy","","Stream for the [<code>StreamExt::step_by()</code>] method.",null,null],[3,"Chain","","Stream for the [<code>StreamExt::chain()</code>] method.",null,null],[3,"Cloned","","Stream for the [<code>StreamExt::cloned()</code>] method.",null,null],[3,"Copied","","Stream for the [<code>StreamExt::copied()</code>] method.",null,null],[3,"Cycle","","Stream for the [<code>StreamExt::cycle()</code>] method.",null,null],[3,"Enumerate","","Stream for the [<code>StreamExt::cycle()</code>] method.",null,null],[3,"Inspect","","Stream for the [<code>StreamExt::inspect()</code>] method.",null,null],[3,"NthFuture","","Future for the [<code>StreamExt::nth()</code>] method.",null,null],[3,"LastFuture","","Future for the [<code>StreamExt::last()</code>] method.",null,null],[3,"FindFuture","","Future for the [<code>StreamExt::find()</code>] method.",null,null],[3,"FindMapFuture","","Future for the [<code>StreamExt::find_map()</code>] method.",null,null],[3,"PositionFuture","","Future for the [<code>StreamExt::position()</code>] method.",null,null],[3,"AllFuture","","Future for the [<code>StreamExt::all()</code>] method.",null,null],[3,"AnyFuture","","Future for the [<code>StreamExt::any()</code>] method.",null,null],[3,"ForEachFuture","","Future for the [<code>StreamExt::for_each()</code>] method.",null,null],[3,"TryForEachFuture","","Future for the [<code>StreamExt::try_for_each()</code>] method.",null,null],[3,"Zip","","Stream for the [<code>StreamExt::zip()</code>] method.",null,null],[3,"UnzipFuture","","Future for the [<code>StreamExt::unzip()</code>] method.",null,null],[0,"io","futures_lite","Tools and combinators for I/O.",null,null],[5,"copy","futures_lite::io","Copies the entire contents of a reader into a writer.",null,[[]]],[3,"AssertAsync","","Asserts that a type implementing [<code>std::io</code>] traits can be …",null,null],[11,"new","","Wraps an I/O handle implementing [<code>std::io</code>] traits.",2,[[]]],[11,"get_ref","","Gets a reference to the inner I/O handle.",2,[[]]],[11,"get_mut","","Gets a mutable reference to the inner I/O handle.",2,[[]]],[11,"into_inner","","Extracts the inner I/O handle.",2,[[]]],[3,"BlockOn","","Blocks on all async I/O operations and implements [<code>std::io</code>…",null,null],[11,"new","","Wraps an async I/O handle into a blocking interface.",3,[[],["blockon",3]]],[11,"get_ref","","Gets a reference to the async I/O handle.",3,[[]]],[11,"get_mut","","Gets a mutable reference to the async I/O handle.",3,[[]]],[11,"into_inner","","Extracts the inner async I/O handle.",3,[[]]],[3,"BufReader","","Adds buffering to a reader.",null,null],[11,"new","","Creates a buffered reader with the default buffer …",4,[[],["bufreader",3]]],[11,"with_capacity","","Creates a buffered reader with the specified capacity.",4,[[["usize",15]],["bufreader",3]]],[11,"get_ref","","Gets a reference to the underlying reader.",4,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",4,[[]]],[11,"buffer","","Returns a reference to the internal buffer.",4,[[]]],[11,"into_inner","","Unwraps the buffered reader, returning the underlying …",4,[[]]],[3,"BufWriter","","Adds buffering to a writer.",null,null],[11,"new","","Creates a buffered writer with the default buffer …",5,[[],["bufwriter",3]]],[11,"with_capacity","","Creates a buffered writer with the specified buffer …",5,[[["usize",15]],["bufwriter",3]]],[11,"get_ref","","Gets a reference to the underlying writer.",5,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying writer.",5,[[]]],[11,"into_inner","","Unwraps the buffered writer, returning the underlying …",5,[[]]],[11,"buffer","","Returns a reference to the internal buffer.",5,[[]]],[3,"Cursor","","Gives an in-memory buffer a cursor for reading and …",null,null],[11,"new","","Creates a cursor for an in-memory buffer.",6,[[],["cursor",3]]],[11,"get_ref","","Gets a reference to the underlying buffer.",6,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying buffer.",6,[[]]],[11,"into_inner","","Unwraps the cursor, returning the underlying buffer.",6,[[]]],[11,"position","","Returns the current position of this cursor.",6,[[],["u64",15]]],[11,"set_position","","Sets the position of this cursor.",6,[[["u64",15]]]],[5,"empty","","Creates an empty reader.",null,[[],["empty",3]]],[3,"Empty","","Reader for the [<code>empty()</code>] function.",null,null],[5,"repeat","","Creates an infinite reader that reads the same byte …",null,[[["u8",15]],["repeat",3]]],[3,"Repeat","","Reader for the [<code>repeat()</code>] function.",null,null],[5,"sink","","Creates a writer that consumes and drops all data.",null,[[],["sink",3]]],[3,"Sink","","Writer for the [<code>sink()</code>] function.",null,null],[8,"AsyncBufReadExt","","Extension trait for [<code>AsyncBufRead</code>].",null,null],[11,"fill_buf","","Returns the contents of the internal buffer, filling it …",7,[[],["fillbuf",3]]],[11,"consume","","Consumes <code>amt</code> buffered bytes.",7,[[["usize",15]]]],[11,"read_until","","Reads all bytes and appends them into <code>buf</code> until the …",7,[[["vec",3],["u8",15]],["readuntilfuture",3]]],[11,"read_line","","Reads all bytes and appends them into <code>buf</code> until a newline …",7,[[["string",3]],["readlinefuture",3]]],[11,"lines","","Returns a stream over the lines of this byte stream.",7,[[],["lines",3]]],[11,"split","","Returns a stream over the contents of this reader split …",7,[[["u8",15]],["split",3]]],[3,"FillBuf","","Future for the [<code>AsyncBufReadExt::fill_buf()</code>] method.",null,null],[3,"ReadUntilFuture","","Future for the [<code>AsyncBufReadExt::read_until()</code>] method.",null,null],[3,"ReadLineFuture","","Future for the [<code>AsyncBufReadExt::read_line()</code>] method.",null,null],[3,"Lines","","Stream for the [<code>AsyncBufReadExt::lines()</code>] method.",null,null],[3,"Split","","Stream for the [<code>AsyncBufReadExt::split()</code>] method.",null,null],[8,"AsyncReadExt","","Extension trait for [<code>AsyncRead</code>].",null,null],[11,"read","","Reads some bytes from the byte stream.",8,[[],["readfuture",3]]],[11,"read_vectored","","Like [<code>read()</code>][<code>AsyncReadExt::read()</code>], except it reads into …",8,[[],["readvectoredfuture",3]]],[11,"read_to_end","","Reads the entire contents and appends them to a [<code>Vec</code>].",8,[[["vec",3]],["readtoendfuture",3]]],[11,"read_to_string","","Reads the entire contents and appends them to a [<code>String</code>].",8,[[["string",3]],["readtostringfuture",3]]],[11,"read_exact","","Reads the exact number of bytes required to fill <code>buf</code>.",8,[[],["readexactfuture",3]]],[11,"take","","Creates an adapter which will read at most <code>limit</code> bytes …",8,[[["u64",15]],["take",3]]],[11,"bytes","","Converts this [<code>AsyncRead</code>] into a [<code>Stream</code>] of bytes.",8,[[],["bytes",3]]],[11,"chain","","Creates an adapter which will chain this stream with …",8,[[["asyncread",8]],[["asyncread",8],["chain",3]]]],[11,"boxed_reader","","Boxes the reader and changes its type to …",8,[[],[["pin",3],["box",3]]]],[3,"ReadFuture","","Future for the [<code>AsyncReadExt::read()</code>] method.",null,null],[3,"ReadVectoredFuture","","Future for the [<code>AsyncReadExt::read_vectored()</code>] method.",null,null],[3,"ReadToEndFuture","","Future for the [<code>AsyncReadExt::read_to_end()</code>] method.",null,null],[3,"ReadToStringFuture","","Future for the [<code>AsyncReadExt::read_to_string()</code>] method.",null,null],[3,"ReadExactFuture","","Future for the [<code>AsyncReadExt::read_exact()</code>] method.",null,null],[3,"Take","","Reader for the [<code>AsyncReadExt::take()</code>] method.",null,null],[11,"limit","","Returns the number of bytes before this adapter will …",9,[[],["u64",15]]],[11,"set_limit","","Puts a limit on the number of bytes.",9,[[["u64",15]]]],[11,"get_ref","","Gets a reference to the underlying reader.",9,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",9,[[]]],[11,"into_inner","","Unwraps the adapter, returning the underlying reader.",9,[[]]],[3,"Bytes","","Reader for the [<code>AsyncReadExt::bytes()</code>] method.",null,null],[3,"Chain","","Reader for the [<code>AsyncReadExt::chain()</code>] method.",null,null],[11,"get_ref","","Gets references to the underlying readers.",10,[[]]],[11,"get_mut","","Gets mutable references to the underlying readers.",10,[[]]],[11,"into_inner","","Unwraps the adapter, returning the underlying readers.",10,[[]]],[8,"AsyncSeekExt","","Extension trait for [<code>AsyncSeek</code>].",null,null],[11,"seek","","Seeks to a new position in a byte stream.",11,[[["seekfrom",4]],["seekfuture",3]]],[3,"SeekFuture","","Future for the [<code>AsyncSeekExt::seek()</code>] method.",null,null],[8,"AsyncWriteExt","","Extension trait for [<code>AsyncWrite</code>].",null,null],[11,"write","","Writes some bytes into the byte stream.",12,[[],["writefuture",3]]],[11,"write_vectored","","Like [<code>write()</code>][<code>AsyncWriteExt::write()</code>], except that it …",12,[[],["writevectoredfuture",3]]],[11,"write_all","","Writes an entire buffer into the byte stream.",12,[[],["writeallfuture",3]]],[11,"flush","","Flushes the stream to ensure that all buffered contents …",12,[[],["flushfuture",3]]],[11,"close","","Closes the writer.",12,[[],["closefuture",3]]],[11,"boxed_writer","","Boxes the writer and changes its type to …",12,[[],[["box",3],["pin",3]]]],[3,"WriteFuture","","Future for the [<code>AsyncWriteExt::write()</code>] method.",null,null],[3,"WriteVectoredFuture","","Future for the [<code>AsyncWriteExt::write_vectored()</code>] method.",null,null],[3,"WriteAllFuture","","Future for the [<code>AsyncWriteExt::write_all()</code>] method.",null,null],[3,"FlushFuture","","Future for the [<code>AsyncWriteExt::flush()</code>] method.",null,null],[3,"CloseFuture","","Future for the [<code>AsyncWriteExt::close()</code>] method.",null,null],[6,"BoxedReader","","Type alias for <code>Pin<Box<dyn AsyncRead + Send + \'static>></code>.",null,null],[6,"BoxedWriter","","Type alias for <code>Pin<Box<dyn AsyncWrite + Send + \'static>></code>.",null,null],[5,"split","","Splits a stream into [<code>AsyncRead</code>] and [<code>AsyncWrite</code>] halves.",null,[[]]],[3,"ReadHalf","","The read half returned by [<code>split()</code>].",null,null],[3,"WriteHalf","","The write half returned by [<code>split()</code>].",null,null],[14,"ready","futures_lite","Unwraps <code>Poll<T></code> or returns [<code>Pending</code>][…",null,null],[14,"pin","","Pins a variable of type <code>T</code> on the stack and rebinds it as …",null,null],[11,"from","futures_lite::future","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_future","","",13,[[]]],[11,"try_poll","","",13,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_future","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_future","","",15,[[]]],[11,"try_poll","","",15,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_future","","",16,[[]]],[11,"try_poll","","",16,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_future","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_future","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_future","","",19,[[]]],[11,"try_poll","","",19,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_future","","",20,[[]]],[11,"try_poll","","",20,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_future","","",21,[[]]],[11,"try_poll","","",21,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_future","","",22,[[]]],[11,"try_poll","","",22,[[["context",3],["pin",3]],["poll",4]]],[11,"from","futures_lite::stream","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"try_poll_next","","",24,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"try_poll_next","","",25,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"try_poll_next","","",26,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"try_poll_next","","",27,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"try_poll_next","","",28,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"try_poll_next","","",29,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"try_poll_next","","",30,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"try_poll_next","","",31,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"try_poll_next","","",32,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_future","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_future","","",34,[[]]],[11,"try_poll","","",34,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_future","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_future","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_future","","",37,[[]]],[11,"try_poll","","",37,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_future","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_future","","",39,[[]]],[11,"try_poll","","",39,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_future","","",40,[[]]],[11,"try_poll","","",40,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"try_poll_next","","",41,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"try_poll_next","","",42,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"try_poll_next","","",43,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"try_poll_next","","",44,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"try_poll_next","","",45,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"try_poll_next","","",46,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"try_poll_next","","",47,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"try_poll_next","","",48,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"try_poll_next","","",49,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"try_poll_next","","",50,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"try_poll_next","","",51,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"try_poll_next","","",52,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"try_poll_next","","",53,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"try_poll_next","","",54,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"try_poll_next","","",55,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"try_poll_next","","",56,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"try_poll_next","","",57,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"try_poll_next","","",58,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"try_poll_next","","",59,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"try_poll_next","","",61,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_future","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_future","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_future","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_future","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_future","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_future","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_future","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_future","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_future","","",70,[[]]],[11,"try_poll","","",70,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_future","","",72,[[]]],[11,"from","futures_lite::io","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_future","","",76,[[]]],[11,"try_poll","","",76,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_future","","",77,[[]]],[11,"try_poll","","",77,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_future","","",78,[[]]],[11,"try_poll","","",78,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"try_poll_next","","",79,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"try_poll_next","","",80,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_future","","",81,[[]]],[11,"try_poll","","",81,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_future","","",82,[[]]],[11,"try_poll","","",82,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_future","","",83,[[]]],[11,"try_poll","","",83,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_future","","",84,[[]]],[11,"try_poll","","",84,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"into_future","","",85,[[]]],[11,"try_poll","","",85,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"try_poll_next","","",86,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_future","","",87,[[]]],[11,"try_poll","","",87,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_future","","",88,[[]]],[11,"try_poll","","",88,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_future","","",89,[[]]],[11,"try_poll","","",89,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"into_future","","",90,[[]]],[11,"try_poll","","",90,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_future","","",91,[[]]],[11,"try_poll","","",91,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"into_future","","",92,[[]]],[11,"try_poll","","",92,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"next","futures_lite::stream","",23,[[],["option",4]]],[11,"clone","","",24,[[],["empty",3]]],[11,"clone","","",25,[[],["iter",3]]],[11,"clone","","",26,[[],["once",3]]],[11,"clone","","",27,[[],["pending",3]]],[11,"clone","","",28,[[],["pollfn",3]]],[11,"clone","","",29,[[],["repeat",3]]],[11,"clone","","",30,[[],["repeatwith",3]]],[11,"clone","","",31,[[],["unfold",3]]],[11,"clone","","",32,[[],["tryunfold",3]]],[11,"clone","","",41,[[],["scan",3]]],[11,"clone","","",42,[[],["fuse",3]]],[11,"clone","","",43,[[],["map",3]]],[11,"clone","","",44,[[],["flatmap",3]]],[11,"clone","","",45,[[],["flatten",3]]],[11,"clone","","",46,[[],["then",3]]],[11,"clone","","",47,[[],["filter",3]]],[11,"clone","","",48,[[],["or",3]]],[11,"clone","","",49,[[],["race",3]]],[11,"clone","","",50,[[],["filtermap",3]]],[11,"clone","","",51,[[],["take",3]]],[11,"clone","","",52,[[],["takewhile",3]]],[11,"clone","","",53,[[],["skip",3]]],[11,"clone","","",54,[[],["skipwhile",3]]],[11,"clone","","",55,[[],["stepby",3]]],[11,"clone","","",56,[[],["chain",3]]],[11,"clone","","",57,[[],["cloned",3]]],[11,"clone","","",58,[[],["copied",3]]],[11,"clone","","",59,[[],["cycle",3]]],[11,"clone","","",60,[[],["enumerate",3]]],[11,"clone","","",61,[[],["inspect",3]]],[11,"clone","","",71,[[],["zip",3]]],[11,"clone","futures_lite::io","",2,[[],["assertasync",3]]],[11,"clone","","",6,[[],["cursor",3]]],[11,"default","","",6,[[],["cursor",3]]],[11,"cmp","","",2,[[["assertasync",3]],["ordering",4]]],[11,"eq","","",2,[[["assertasync",3]],["bool",15]]],[11,"ne","","",2,[[["assertasync",3]],["bool",15]]],[11,"partial_cmp","","",2,[[["assertasync",3]],[["option",4],["ordering",4]]]],[11,"fmt","futures_lite::future","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","futures_lite::stream","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","futures_lite::io","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"read","","",3,[[],[["usize",15],["result",6]]]],[11,"seek","","",3,[[["seekfrom",4]],[["result",6],["u64",15]]]],[11,"write","","",3,[[],[["usize",15],["result",6]]]],[11,"flush","","",3,[[],["result",6]]],[11,"poll","futures_lite::future","",13,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",14,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",15,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",16,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",17,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",18,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",19,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",20,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",21,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",22,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","futures_lite::stream","",33,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",34,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",35,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",36,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",37,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",38,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",39,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",40,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",62,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",63,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",64,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",65,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",66,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",67,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",68,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",69,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",70,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",72,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","futures_lite::io","",76,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",77,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",78,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",81,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",82,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",83,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",84,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",85,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",87,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",88,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",89,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",90,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",91,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",92,[[["pin",3],["context",3]],["poll",4]]],[11,"poll_next","futures_lite::stream","",24,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",24,[[]]],[11,"poll_next","","",25,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",25,[[]]],[11,"poll_next","","",26,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",26,[[]]],[11,"poll_next","","",27,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",27,[[]]],[11,"poll_next","","",28,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",29,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",29,[[]]],[11,"poll_next","","",30,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",30,[[]]],[11,"poll_next","","",31,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",32,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",41,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",42,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",43,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",43,[[]]],[11,"poll_next","","",44,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",45,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",46,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",46,[[]]],[11,"poll_next","","",47,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",48,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",49,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",50,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",51,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",52,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",53,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",54,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",55,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",56,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",57,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",58,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",59,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",60,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",61,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",71,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","futures_lite::io","",79,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",80,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",86,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_read","","",2,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",2,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",4,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",4,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",6,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",6,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",73,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",74,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",9,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",86,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",86,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",10,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",10,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",93,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read_vectored","","",93,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",2,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",2,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",2,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",2,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",5,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",5,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",5,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",6,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",6,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",6,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",6,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",6,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",6,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",6,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",6,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_close","","",6,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",6,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",75,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",75,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",75,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",94,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",94,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_close","","",94,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_seek","","",2,[[["seekfrom",4],["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_seek","","Seeks to an offset, in bytes, in the underlying reader.",4,[[["seekfrom",4],["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_seek","","Seek to the offset, in bytes, in the underlying writer.",5,[[["seekfrom",4],["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_seek","","",6,[[["seekfrom",4],["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_fill_buf","","",4,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"consume","","",4,[[["usize",15],["pin",3]]]],[11,"poll_fill_buf","","",6,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",6,[[["usize",15],["pin",3]]]],[11,"poll_fill_buf","","",73,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"consume","","",73,[[["usize",15],["pin",3]]]],[11,"poll_fill_buf","","",9,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",9,[[["usize",15],["pin",3]]]],[11,"poll_fill_buf","","",10,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",10,[[["usize",15],["pin",3]]]]],"p":[[8,"FutureExt"],[8,"StreamExt"],[3,"AssertAsync"],[3,"BlockOn"],[3,"BufReader"],[3,"BufWriter"],[3,"Cursor"],[8,"AsyncBufReadExt"],[8,"AsyncReadExt"],[3,"Take"],[3,"Chain"],[8,"AsyncSeekExt"],[8,"AsyncWriteExt"],[3,"Pending"],[3,"PollOnce"],[3,"PollFn"],[3,"Ready"],[3,"YieldNow"],[3,"Zip"],[3,"TryZip"],[3,"Or"],[3,"Race"],[3,"CatchUnwind"],[3,"BlockOn"],[3,"Empty"],[3,"Iter"],[3,"Once"],[3,"Pending"],[3,"PollFn"],[3,"Repeat"],[3,"RepeatWith"],[3,"Unfold"],[3,"TryUnfold"],[3,"NextFuture"],[3,"TryNextFuture"],[3,"CountFuture"],[3,"CollectFuture"],[3,"TryCollectFuture"],[3,"PartitionFuture"],[3,"FoldFuture"],[3,"TryFoldFuture"],[3,"Scan"],[3,"Fuse"],[3,"Map"],[3,"FlatMap"],[3,"Flatten"],[3,"Then"],[3,"Filter"],[3,"Or"],[3,"Race"],[3,"FilterMap"],[3,"Take"],[3,"TakeWhile"],[3,"Skip"],[3,"SkipWhile"],[3,"StepBy"],[3,"Chain"],[3,"Cloned"],[3,"Copied"],[3,"Cycle"],[3,"Enumerate"],[3,"Inspect"],[3,"NthFuture"],[3,"LastFuture"],[3,"FindFuture"],[3,"FindMapFuture"],[3,"PositionFuture"],[3,"AllFuture"],[3,"AnyFuture"],[3,"ForEachFuture"],[3,"TryForEachFuture"],[3,"Zip"],[3,"UnzipFuture"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"FillBuf"],[3,"ReadUntilFuture"],[3,"ReadLineFuture"],[3,"Lines"],[3,"Split"],[3,"ReadFuture"],[3,"ReadVectoredFuture"],[3,"ReadToEndFuture"],[3,"ReadToStringFuture"],[3,"ReadExactFuture"],[3,"Bytes"],[3,"SeekFuture"],[3,"WriteFuture"],[3,"WriteVectoredFuture"],[3,"WriteAllFuture"],[3,"FlushFuture"],[3,"CloseFuture"],[3,"ReadHalf"],[3,"WriteHalf"]]},\
"futures_macro":{"doc":"The futures-rs procedural macro implementations.","i":[[14,"proc_macro_hack_join_internal","futures_macro","The <code>join!</code> macro.",null,null],[14,"proc_macro_hack_try_join_internal","","The <code>try_join!</code> macro.",null,null],[14,"proc_macro_hack_select_internal","","The <code>select!</code> macro.",null,null],[14,"proc_macro_hack_select_biased_internal","","The <code>select_biased!</code> macro.",null,null]],"p":[]},\
"futures_sink":{"doc":"Asynchronous sinks","i":[[8,"Sink","futures_sink","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",0,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",0,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",0,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",0,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",0,[[["context",3],["pin",3]],[["poll",4],["result",4]]]]],"p":[[8,"Sink"]]},\
"futures_task":{"doc":"Tools for working with tasks.","i":[[8,"Spawn","futures_task","The <code>Spawn</code> trait allows for pushing futures onto an …",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",0,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status","","Determines whether the executor is able to spawn new …",0,[[],[["result",4],["spawnerror",3]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[8,"LocalSpawn","","The <code>LocalSpawn</code> is similar to [<code>Spawn</code>], but allows spawning …",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",1,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",1,[[],[["result",4],["spawnerror",3]]]],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make …",2,[[["arc",3]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make …",2,[[["arc",3]]]],[5,"waker","","Creates a [<code>Waker</code>] from an <code>Arc<impl ArcWake></code>.",null,[[["arc",3]],["waker",3]]],[5,"waker_ref","","Creates a reference to a [<code>Waker</code>] from a reference to …",null,[[["arc",3]],["wakerref",3]]],[3,"WakerRef","","A [<code>Waker</code>] that is only valid for a given lifetime.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"noop_waker","","Create a new [<code>Waker</code>] which does nothing when <code>wake()</code> is …",null,[[],["waker",3]]],[3,"Context","","The <code>Context</code> of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current …",null,null],[13,"Ready","","Represents that a value is immediately ready.",4,null],[13,"Pending","","Represents that a value is not ready yet.",4,null],[3,"Waker","","A <code>Waker</code> is a handle for waking up a task by notifying its …",null,null],[3,"RawWaker","","A <code>RawWaker</code> allows the implementor of a task executor to …",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies …",null,null],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_future","","",8,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"hash","","",4,[[]]],[11,"cmp","","",4,[[["poll",4]],["ordering",4]]],[11,"clone","","",12,[[],["rawwakervtable",3]]],[11,"clone","","",4,[[],["poll",4]]],[11,"clone","","",10,[[],["waker",3]]],[11,"into_result","","",4,[[],["result",4]]],[11,"from_error","","",4,[[],[["poll",4],["option",4]]]],[11,"from_ok","","",4,[[],[["poll",4],["option",4]]]],[11,"into_result","","",4,[[],["result",4]]],[11,"from_error","","",4,[[],[["poll",4],["result",4]]]],[11,"from_ok","","",4,[[],[["poll",4],["result",4]]]],[11,"from","","Convert to a <code>Ready</code> variant.",4,[[],["poll",4]]],[11,"eq","","",11,[[["rawwaker",3]],["bool",15]]],[11,"ne","","",11,[[["rawwaker",3]],["bool",15]]],[11,"eq","","",4,[[["poll",4]],["bool",15]]],[11,"ne","","",4,[[["poll",4]],["bool",15]]],[11,"eq","","",12,[[["rawwakervtable",3]],["bool",15]]],[11,"ne","","",12,[[["rawwakervtable",3]],["bool",15]]],[11,"partial_cmp","","",4,[[["poll",4]],[["ordering",4],["option",4]]]],[11,"drop","","",10,[[]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",11,[[["arc",3]],["rawwaker",3]]],[11,"from","","",10,[[["arc",3]],["waker",3]]],[11,"deref","","",6,[[],["waker",3]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"drop","","",7,[[]]],[11,"from","","",7,[[["futureobj",3]]]],[11,"from","","",8,[[["box",3]]]],[11,"from","","",8,[[["box",3],["future",8]]]],[11,"from","","",8,[[["pin",3],["box",3]]]],[11,"from","","",8,[[["pin",3],["box",3]]]],[11,"from","","",7,[[["box",3]]]],[11,"from","","",7,[[["box",3],["future",8]]]],[11,"from","","",7,[[["pin",3],["box",3]]]],[11,"from","","",7,[[["box",3],["pin",3]]]],[11,"poll","","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",8,[[["context",3],["pin",3]],["poll",4]]],[11,"status","","Determines whether the executor is able to spawn new …",0,[[],[["result",4],["spawnerror",3]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",1,[[],[["result",4],["spawnerror",3]]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",5,[[]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut …",5,[[],["bool",15]]],[11,"wake","","Indicates that the associated task is ready to make …",2,[[["arc",3]]]],[11,"new","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] reference.",6,[[["waker",3]]]],[11,"new_unowned","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] that must not be …",6,[[["manuallydrop",3],["waker",3]]]],[11,"new","","Create a <code>LocalFutureObj</code> from a custom trait object …",7,[[["unsafefutureobj",8]]]],[11,"into_future_obj","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.",7,[[],["futureobj",3]]],[11,"new","","Create a <code>FutureObj</code> from a custom trait object …",8,[[["unsafefutureobj",8],["send",8]]]],[11,"from_waker","","Create a new <code>Context</code> from a <code>&Waker</code>.",9,[[["waker",3]],["context",3]]],[11,"waker","","Returns a reference to the <code>Waker</code> for the current task.",9,[[],["waker",3]]],[11,"map","","Changes the ready value of this <code>Poll</code> with the closure …",4,[[],["poll",4]]],[11,"is_ready","","Returns <code>true</code> if this is <code>Poll::Ready</code>",4,[[],["bool",15]]],[11,"is_pending","","Returns <code>true</code> if this is <code>Poll::Pending</code>",4,[[],["bool",15]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",4,[[],[["poll",4],["result",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",4,[[],[["result",4],["poll",4]]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",4,[[],[["poll",4],["option",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",4,[[],[["option",4],["poll",4]]]],[11,"wake","","Wake up the task associated with this <code>Waker</code>.",10,[[]]],[11,"wake_by_ref","","Wake up the task associated with this <code>Waker</code> without …",10,[[]]],[11,"will_wake","","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> have awoken …",10,[[["waker",3]],["bool",15]]],[11,"from_raw","","Creates a new <code>Waker</code> from [<code>RawWaker</code>].",10,[[["rawwaker",3]],["waker",3]]],[11,"new","","Creates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …",11,[[["rawwakervtable",3]],["rawwaker",3]]],[11,"new","","Creates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>…",12,[[],["rawwakervtable",3]]]],"p":[[8,"Spawn"],[8,"LocalSpawn"],[8,"ArcWake"],[8,"UnsafeFutureObj"],[4,"Poll"],[3,"SpawnError"],[3,"WakerRef"],[3,"LocalFutureObj"],[3,"FutureObj"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"]]},\
"futures_util":{"doc":"Combinators and utilities for working with <code>Future</code>s, <code>Stream</code>…","i":[[0,"future","futures_util","Asynchronous values.",null,null],[6,"BoxFuture","futures_util::future","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",0,[[],["bool",15]]],[8,"Future","","A future represents an asynchronous computation.",null,null],[16,"Output","","The type of value produced on completion.",1,null],[10,"poll","","Attempt to resolve the future to a final value, …",1,[[["context",3],["pin",3]],["poll",4]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",2,null],[16,"Error","","The type of failures yielded by this future",2,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",2,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[3,"Flatten","","Future for the <code>flatten</code> method.",null,null],[3,"Fuse","","Future for the <code>fuse</code> method.",null,null],[8,"FutureExt","","An extension trait for <code>Future</code>s that provides a variety of …",null,null],[11,"map","","Map this future’s output to a different type, returning …",4,[[],["map",3]]],[11,"map_into","","Map this future’s output to a different type, returning …",4,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",4,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",4,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",4,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",4,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",4,[[],["inspect",3]]],[11,"boxed","","Wrap the future in a Box, pinning it.",4,[[],["boxfuture",6]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",4,[[],["localboxfuture",6]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",4,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",4,[[],["option",4]]],[3,"Inspect","","Future for the <code>inspect</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"Map","","Future for the <code>map</code> method.",null,null],[3,"NeverError","","Future for the <code>never_error</code> combinator.",null,null],[3,"Then","","Future for the <code>then</code> method.",null,null],[3,"UnitError","","Future for the <code>unit_error</code> combinator.",null,null],[3,"MapInto","","Future for the <code>map_into</code> combinator.",null,null],[3,"FlattenStream","","Stream for the <code>flatten_stream</code> method.",null,null],[3,"AndThen","","Future for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Future for the <code>err_into</code> method.",null,null],[3,"OkInto","","Future for the <code>ok_into</code> method.",null,null],[3,"InspectErr","","Future for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Future for the <code>inspect_ok</code> method.",null,null],[3,"IntoFuture","","Future for the <code>into_future</code> method.",null,null],[3,"MapErr","","Future for the <code>map_err</code> method.",null,null],[3,"MapOk","","Future for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Future for the <code>or_else</code> method.",null,null],[3,"TryFlattenStream","","Future for the <code>try_flatten_stream</code> method.",null,null],[8,"TryFutureExt","","Adapters specific to [<code>Result</code>]-returning futures",null,null],[11,"flatten_sink","","Flattens the execution of this future when the successful …",5,[[],["flattensink",3]]],[11,"map_ok","","Maps this future’s success value to a different value.",5,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future’s success value to a different value, …",5,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future’s error value to a different value.",5,[[],["maperr",3]]],[11,"err_into","","Maps this future’s <code>Error</code> to a new error type using the …",5,[[],["errinto",3]]],[11,"ok_into","","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> …",5,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",5,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",5,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",5,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",5,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",5,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",5,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future’s ouput, producing a future with …",5,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",5,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",5,[[["context",3]],[["poll",4],["result",4]]]],[3,"UnwrapOrElse","","Future for the <code>unwrap_or_else</code> method.",null,null],[3,"MapOkOrElse","","Future for the <code>map_ok_or_else</code> method.",null,null],[3,"TryFlatten","","Future for the <code>try_flatten</code> method.",null,null],[3,"FlattenSink","","Sink for the <code>flatten_sink</code> method.",null,null],[5,"lazy","","Creates a new future that allows delayed execution of a …",null,[[],["lazy",3]]],[3,"Lazy","","Future for the [<code>lazy</code>] function.",null,null],[5,"pending","","Creates a future which never resolves, representing a …",null,[[],["pending",3]]],[3,"Pending","","Future for the [<code>pending()</code>] function.",null,null],[5,"maybe_done","","Wraps a future into a <code>MaybeDone</code>",null,[[["future",8]],[["maybedone",4],["future",8]]]],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",6,null],[13,"Done","","The output of the completed future",6,null],[13,"Gone","","The empty variant after the result of a [<code>MaybeDone</code>] has …",6,null],[5,"try_maybe_done","","Wraps a future into a <code>TryMaybeDone</code>",null,[[["tryfuture",8]],[["trymaybedone",4],["tryfuture",8]]]],[4,"TryMaybeDone","","A future that may have completed with an error.",null,null],[13,"Future","","A not-yet-completed future",7,null],[13,"Done","","The output of the completed future",7,null],[13,"Gone","","The empty variant after the result of a [<code>TryMaybeDone</code>] …",7,null],[3,"OptionFuture","","A future representing a value which may or may not be …",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Future for the [<code>poll_fn</code>] function.",null,null],[5,"err","","Create a future that is immediately ready with an error …",null,[[],[["ready",3],["result",4]]]],[5,"ok","","Create a future that is immediately ready with a success …",null,[[],[["ready",3],["result",4]]]],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[],["ready",3]]],[3,"Ready","","Future for the <code>ready</code> function.",null,null],[5,"join","","Joins the result of two futures, waiting for them both to …",null,[[],["join",3]]],[5,"join3","","Same as <code>join</code>, but with more futures.",null,[[],["join3",3]]],[5,"join4","","Same as <code>join</code>, but with more futures.",null,[[],["join4",3]]],[5,"join5","","Same as <code>join</code>, but with more futures.",null,[[],["join5",3]]],[3,"Join","","Future for the <code>join</code> function.",null,null],[3,"Join3","","Future for the [<code>join3</code>] function.",null,null],[3,"Join4","","Future for the [<code>join4</code>] function.",null,null],[3,"Join5","","Future for the [<code>join5</code>] function.",null,null],[5,"join_all","","Creates a future which represents a collection of the …",null,[[],["joinall",3]]],[3,"JoinAll","","Future for the [<code>join_all</code>] function.",null,null],[5,"select","","Waits for either one of two differently-typed futures to …",null,[[],["select",3]]],[3,"Select","","Future for the [<code>select()</code>] function.",null,null],[5,"select_all","","Creates a new future which will select over a list of …",null,[[],["selectall",3]]],[3,"SelectAll","","Future for the [<code>select_all</code>] function.",null,null],[5,"try_join","","Joins the result of two futures, waiting for them both to …",null,[[],["tryjoin",3]]],[5,"try_join3","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin3",3]]],[5,"try_join4","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin4",3]]],[5,"try_join5","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin5",3]]],[3,"TryJoin","","Future for the <code>try_join</code> function.",null,null],[3,"TryJoin3","","Future for the [<code>try_join3</code>] function.",null,null],[3,"TryJoin4","","Future for the [<code>try_join4</code>] function.",null,null],[3,"TryJoin5","","Future for the [<code>try_join5</code>] function.",null,null],[5,"try_join_all","","Creates a future which represents either a collection of …",null,[[],["tryjoinall",3]]],[3,"TryJoinAll","","Future for the [<code>try_join_all</code>] function.",null,null],[5,"try_select","","Waits for either one of two differently-typed futures to …",null,[[],["tryselect",3]]],[3,"TrySelect","","Future for the [<code>try_select()</code>] function.",null,null],[5,"select_ok","","Creates a new future which will select the first …",null,[[],["selectok",3]]],[3,"SelectOk","","Future for the [<code>select_ok</code>] function.",null,null],[4,"Either","","Combines two different futures, streams, or sinks having …",null,null],[13,"Left","","First branch of the type",8,null],[13,"Right","","Second branch of the type",8,null],[5,"abortable","","Creates a new <code>Abortable</code> future and a <code>AbortHandle</code> which …",null,[[]]],[3,"Abortable","","A future which can be remotely short-circuited using an …",null,null],[3,"AbortHandle","","A handle to a <code>Abortable</code> future.",null,null],[3,"AbortRegistration","","A registration handle for a <code>Abortable</code> future. Values of …",null,null],[3,"Aborted","","Indicator that the <code>Abortable</code> future was aborted.",null,null],[0,"stream","futures_util","Asynchronous streams.",null,null],[0,"futures_unordered","futures_util::stream","An unbounded set of futures.",null,null],[3,"Iter","futures_util::stream::futures_unordered","Immutable iterator over all the futures in the unordered …",null,null],[3,"IterMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinMut","","Mutable iterator over all futures in the unordered set.",null,null],[3,"IterPinRef","","Immutable iterator over all futures in the unordered set.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[11,"new","","Constructs a new, empty [<code>FuturesUnordered</code>].",9,[[]]],[11,"len","","Returns the number of futures contained in the set.",9,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no futures.",9,[[],["bool",15]]],[11,"push","","Push a future into the set.",9,[[]]],[11,"iter","","Returns an iterator that allows inspecting each future in …",9,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator that allows modifying each future in …",9,[[],["itermut",3]]],[11,"iter_pin_mut","","Returns an iterator that allows modifying each future in …",9,[[["pin",3]],["iterpinmut",3]]],[6,"BoxStream","futures_util::stream","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",10,[[],["bool",15]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",11,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",11,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",11,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",12,null],[16,"Error","","The type of failures yielded by this future",12,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",12,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[3,"Chain","","Stream for the <code>chain</code> method.",null,null],[3,"Collect","","Future for the <code>collect</code> method.",null,null],[3,"Concat","","Future for the <code>concat</code> method.",null,null],[3,"Cycle","","Stream for the <code>cycle</code> method.",null,null],[3,"Enumerate","","Stream for the <code>enumerate</code> method.",null,null],[3,"Filter","","Stream for the <code>filter</code> method.",null,null],[3,"FilterMap","","Stream for the <code>filter_map</code> method.",null,null],[3,"FlatMap","","Stream for the <code>flat_map</code> method.",null,null],[3,"Flatten","","Stream for the <code>flatten</code> method.",null,null],[3,"Fold","","Future for the <code>fold</code> method.",null,null],[3,"ForEach","","Future for the <code>for_each</code> method.",null,null],[3,"Fuse","","Stream for the <code>fuse</code> method.",null,null],[3,"Inspect","","Stream for the <code>inspect</code> method.",null,null],[3,"Map","","Stream for the <code>map</code> method.",null,null],[3,"Next","","Future for the <code>next</code> method.",null,null],[3,"Peek","","Future for the <code>Peekable::peek()</code> function from [<code>Peekable</code>]",null,null],[3,"Peekable","","A <code>Stream</code> that implements a <code>peek</code> method.",null,null],[3,"Scan","","Stream for the <code>scan</code> method.",null,null],[3,"SelectNextSome","","Future for the <code>select_next_some</code> method.",null,null],[3,"Skip","","Stream for the <code>skip</code> method.",null,null],[3,"SkipWhile","","Stream for the <code>skip_while</code> method.",null,null],[8,"StreamExt","","An extension trait for <code>Stream</code>s that provides a variety of …",null,null],[11,"next","","Creates a future that resolves to the next item in the …",13,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",13,[[],["streamfuture",3]]],[11,"map","","Maps this stream’s items to a different type, returning …",13,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",13,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",13,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",13,[[],["filtermap",3]]],[11,"then","","Computes from this stream’s items new items of a …",13,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",13,[[],[["default",8],["extend",8],["collect",3]]]],[11,"unzip","","Converts a stream of pairs into a future, which resolves …",13,[[],["unzip",3]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",13,[[],["concat",3]]],[11,"cycle","","Repeats a stream endlessly.",13,[[],["cycle",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",13,[[],["fold",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",13,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",13,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",13,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",13,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",13,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",13,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",13,[[],["foreach",3]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided …",13,[[],["foreachconcurrent",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",13,[[["usize",15]],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",13,[[["usize",15]],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",13,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",13,[[]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",13,[[],["boxstream",6]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",13,[[],["localboxstream",6]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",13,[[["usize",15]],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",13,[[["usize",15]],["bufferunordered",3]]],[11,"zip","","An adapter for zipping two streams together.",13,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",13,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",13,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",13,[[["usize",15]],["chunks",3]]],[11,"ready_chunks","","An adaptor for chunking up ready items of the stream …",13,[[["usize",15]],["readychunks",3]]],[11,"forward","","A future that completes after the given stream has been …",13,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …",13,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",13,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",13,[[["context",3]],[["poll",4],["option",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",13,[[],["selectnextsome",3]]],[3,"StreamFuture","","Future for the <code>into_future</code> method.",null,null],[3,"Take","","Stream for the <code>take</code> method.",null,null],[3,"TakeUntil","","Stream for the <code>take_until</code> method.",null,null],[3,"TakeWhile","","Stream for the <code>take_while</code> method.",null,null],[3,"Then","","Stream for the <code>then</code> method.",null,null],[3,"Unzip","","Future for the <code>unzip</code> method.",null,null],[3,"Zip","","Stream for the <code>zip</code> method.",null,null],[3,"Chunks","","Stream for the <code>chunks</code> method.",null,null],[3,"ReadyChunks","","Stream for the <code>ready_chunks</code> method.",null,null],[3,"Forward","","Future for the <code>forward</code> method.",null,null],[3,"BufferUnordered","","Stream for the <code>buffer_unordered</code> method.",null,null],[3,"Buffered","","Stream for the <code>buffered</code> method.",null,null],[3,"ForEachConcurrent","","Future for the <code>for_each_concurrent</code> method.",null,null],[3,"ReuniteError","","Error indicating a <code>SplitSink<S></code> and <code>SplitStream<S></code> were …",null,null],[12,"0","","",14,null],[12,"1","","",14,null],[3,"SplitSink","","A <code>Sink</code> part of the split pair",null,null],[3,"SplitStream","","A <code>Stream</code> part of the split pair",null,null],[5,"try_unfold","","Creates a <code>TryStream</code> from a seed and a closure returning a …",null,[[],["tryunfold",3]]],[3,"AndThen","","Stream for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Stream for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Stream for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Stream for the <code>inspect_ok</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"MapErr","","Stream for the <code>map_err</code> method.",null,null],[3,"MapOk","","Stream for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Stream for the <code>or_else</code> method.",null,null],[3,"TryCollect","","Future for the <code>try_collect</code> method.",null,null],[3,"TryConcat","","Future for the <code>try_concat</code> method.",null,null],[3,"TryFilter","","Stream for the <code>try_filter</code> method.",null,null],[3,"TryFilterMap","","Stream for the <code>try_filter_map</code> method.",null,null],[3,"TryFlatten","","Stream for the <code>try_flatten</code> method.",null,null],[3,"TryFold","","Future for the <code>try_fold</code> method.",null,null],[3,"TryForEach","","Future for the <code>try_for_each</code> method.",null,null],[3,"TryNext","","Future for the <code>try_next</code> method.",null,null],[3,"TrySkipWhile","","Stream for the <code>try_skip_while</code> method.",null,null],[8,"TryStreamExt","","Adapters specific to <code>Result</code>-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts …",15,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",15,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",15,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",15,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",15,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",15,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",15,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",15,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",15,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",15,[[],["tryskipwhile",3]]],[11,"try_take_while","","Take elements on this stream while the provided …",15,[[],["trytakewhile",3]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeachconcurrent",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",15,[[],[["default",8],["extend",8],["trycollect",3]]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",15,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",15,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",15,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",15,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",15,[[],["tryconcat",3]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream …",15,[[["usize",15]],["trybufferunordered",3]]],[11,"try_buffered","","Attempt to execute several futures from a stream …",15,[[["usize",15]],["trybuffered",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",15,[[["context",3]],[["option",4],["poll",4]]]],[3,"TryTakeWhile","","Stream for the <code>try_take_while</code> method.",null,null],[3,"TryUnfold","","Stream for the [<code>try_unfold</code>] function.",null,null],[3,"TryBufferUnordered","","Stream for the <code>try_buffer_unordered</code> method.",null,null],[3,"TryBuffered","","Stream for the <code>try_buffered</code> method.",null,null],[3,"TryForEachConcurrent","","Future for the <code>try_for_each_concurrent</code> method.",null,null],[5,"iter","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …",null,[[],["iter",3]]],[3,"Iter","","Stream for the [<code>iter</code>] function.",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[],["repeat",3]]],[3,"Repeat","","Stream for the [<code>repeat</code>] function.",null,null],[5,"repeat_with","","Creates a new stream that repeats elements of type <code>A</code> …",null,[[["fnmut",8]],[["fnmut",8],["repeatwith",3]]]],[3,"RepeatWith","","An stream that repeats elements of type <code>A</code> endlessly by …",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty",3]]],[3,"Empty","","Stream for the [<code>empty</code>] function.",null,null],[5,"once","","Creates a stream of a single element.",null,[[["future",8]],[["once",3],["future",8]]]],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending",3]]],[3,"Pending","","Stream for the [<code>pending()</code>] function.",null,null],[5,"poll_fn","","Creates a new stream wrapping a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Stream for the [<code>poll_fn</code>] function.",null,null],[5,"select","","This function will attempt to pull items from both …",null,[[],["select",3]]],[3,"Select","","Stream for the [<code>select()</code>] function.",null,null],[5,"unfold","","Creates a <code>Stream</code> from a seed and a closure returning a …",null,[[],["unfold",3]]],[3,"Unfold","","Stream for the [<code>unfold</code>] function.",null,null],[3,"FuturesOrdered","","An unbounded queue of futures.",null,null],[3,"FuturesUnordered","","A set of futures which may complete in any order.",null,null],[5,"select_all","","Convert a list of streams into a <code>Stream</code> of results from …",null,[[],["selectall",3]]],[3,"SelectAll","","An unbounded set of streams",null,null],[0,"sink","futures_util","Asynchronous sinks.",null,null],[8,"Sink","futures_util::sink","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",16,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",16,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",16,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",16,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",16,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[3,"Close","","Future for the <code>close</code> method.",null,null],[5,"drain","","Create a sink that will just discard all items given to …",null,[[],["drain",3]]],[3,"Drain","","Sink for the [<code>drain</code>] function.",null,null],[3,"Fanout","","Sink that clones incoming items and forwards them to two …",null,null],[3,"Feed","","Future for the <code>feed</code> method.",null,null],[3,"Flush","","Future for the <code>flush</code> method.",null,null],[3,"SinkErrInto","","Sink for the <code>sink_err_into</code> method.",null,null],[3,"SinkMapErr","","Sink for the <code>sink_map_err</code> method.",null,null],[3,"Send","","Future for the <code>send</code> method.",null,null],[3,"SendAll","","Future for the <code>send_all</code> method.",null,null],[5,"unfold","","Create a sink from a function which processes one item at …",null,[[],["unfold",3]]],[3,"Unfold","","Sink for the [<code>unfold</code>] function.",null,null],[3,"With","","Sink for the <code>with</code> method.",null,null],[3,"WithFlatMap","","Sink for the <code>with_flat_map</code> method.",null,null],[3,"Buffer","","Sink for the <code>buffer</code> method.",null,null],[8,"SinkExt","","An extension trait for <code>Sink</code>s that provides a variety of …",null,null],[11,"with","","Composes a function <em>in front of</em> the sink.",17,[[],["with",3]]],[11,"with_flat_map","","Composes a function <em>in front of</em> the sink.",17,[[],["withflatmap",3]]],[11,"sink_map_err","","Transforms the error returned by the sink.",17,[[],["sinkmaperr",3]]],[11,"sink_err_into","","Map this sink’s error to a different error type using …",17,[[],["sinkerrinto",3]]],[11,"buffer","","Adds a fixed-size buffer to the current sink.",17,[[["usize",15]],["buffer",3]]],[11,"close","","Close the sink.",17,[[],["close",3]]],[11,"fanout","","Fanout items to multiple sinks.",17,[[],["fanout",3]]],[11,"flush","","Flush the sink, processing all pending items.",17,[[],["flush",3]]],[11,"send","","A future that completes after the given item has been …",17,[[],["send",3]]],[11,"feed","","A future that completes after the given item has been …",17,[[],["feed",3]]],[11,"send_all","","A future that completes after the given stream has been …",17,[[],[["sized",8],["sendall",3]]]],[11,"left_sink","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …",17,[[],["either",4]]],[11,"right_sink","","Wrap this stream in an <code>Either</code> stream, making it the …",17,[[],["either",4]]],[11,"poll_ready_unpin","","A convenience method for calling [<code>Sink::poll_ready</code>] on […",17,[[["context",3]],[["poll",4],["result",4]]]],[11,"start_send_unpin","","A convenience method for calling [<code>Sink::start_send</code>] on […",17,[[],["result",4]]],[11,"poll_flush_unpin","","A convenience method for calling [<code>Sink::poll_flush</code>] on […",17,[[["context",3]],[["poll",4],["result",4]]]],[11,"poll_close_unpin","","A convenience method for calling [<code>Sink::poll_close</code>] on […",17,[[["context",3]],[["poll",4],["result",4]]]],[0,"task","futures_util","Tools for working with tasks.",null,null],[3,"Context","futures_util::task","The <code>Context</code> of an asynchronous task.",null,null],[4,"Poll","","Indicates whether a value is available or if the current …",null,null],[13,"Ready","","Represents that a value is immediately ready.",18,null],[13,"Pending","","Represents that a value is not ready yet.",18,null],[3,"Waker","","A <code>Waker</code> is a handle for waking up a task by notifying its …",null,null],[3,"RawWaker","","A <code>RawWaker</code> allows the implementor of a task executor to …",null,null],[3,"RawWakerVTable","","A virtual function pointer table (vtable) that specifies …",null,null],[8,"Spawn","","The <code>Spawn</code> trait allows for pushing futures onto an …",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",19,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status","","Determines whether the executor is able to spawn new …",19,[[],[["result",4],["spawnerror",3]]]],[8,"LocalSpawn","","The <code>LocalSpawn</code> is similar to [<code>Spawn</code>], but allows spawning …",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",20,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",20,[[],[["result",4],["spawnerror",3]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",3,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",3,[[]]],[5,"noop_waker","","Create a new [<code>Waker</code>] which does nothing when <code>wake()</code> is …",null,[[],["waker",3]]],[8,"ArcWake","","A way of waking up a specific task.",null,null],[11,"wake","","Indicates that the associated task is ready to make …",21,[[["arc",3]]]],[10,"wake_by_ref","","Indicates that the associated task is ready to make …",21,[[["arc",3]]]],[5,"waker","","Creates a [<code>Waker</code>] from an <code>Arc<impl ArcWake></code>.",null,[[["arc",3]],["waker",3]]],[5,"waker_ref","","Creates a reference to a [<code>Waker</code>] from a reference to …",null,[[["arc",3]],["wakerref",3]]],[3,"WakerRef","","A [<code>Waker</code>] that is only valid for a given lifetime.",null,null],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[8,"SpawnExt","","Extension trait for <code>Spawn</code>.",null,null],[11,"spawn","","Spawns a task that polls the given future with output <code>()</code> …",22,[[],[["result",4],["spawnerror",3]]]],[8,"LocalSpawnExt","","Extension trait for <code>LocalSpawn</code>.",null,null],[11,"spawn_local","","Spawns a task that polls the given future with output <code>()</code> …",23,[[],[["result",4],["spawnerror",3]]]],[0,"never","futures_util","This module contains the <code>Never</code> type.",null,null],[6,"Never","futures_util::never","A type with no possible values.",null,null],[0,"lock","futures_util","Futures-powered synchronization primitives.",null,null],[14,"ready","","Extracts the successful type of a <code>Poll<T></code>.",null,null],[14,"pin_mut","","Pins a value on the stack.",null,null],[14,"poll","","A macro which returns the result of polling a future once …",null,null],[14,"pending","","A macro which yields to the event loop once.",null,null],[14,"join","","Polls multiple futures simultaneously, returning a tuple …",null,null],[14,"try_join","","Polls multiple futures simultaneously, resolving to a […",null,null],[14,"select_biased","","Polls multiple futures and streams simultaneously, …",null,null],[11,"borrow","futures_util::future","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_future","","",24,[[]]],[11,"try_poll","","",24,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_future","","",25,[[]]],[11,"try_poll","","",25,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"try_poll_next","","",26,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_future","","",27,[[]]],[11,"try_poll","","",27,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"try_poll_next","","",28,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_future","","",29,[[]]],[11,"try_poll","","",29,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_future","","",30,[[]]],[11,"try_poll","","",30,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_future","","",31,[[]]],[11,"try_poll","","",31,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_future","","",32,[[]]],[11,"try_poll","","",32,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_future","","",33,[[]]],[11,"try_poll","","",33,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_future","","",34,[[]]],[11,"try_poll","","",34,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_future","","",35,[[]]],[11,"try_poll","","",35,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"try_poll_next","","",36,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"try_poll_next","","",37,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_future","","",38,[[]]],[11,"try_poll","","",38,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_future","","",39,[[]]],[11,"try_poll","","",39,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_future","","",40,[[]]],[11,"try_poll","","",40,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_future","","",41,[[]]],[11,"try_poll","","",41,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_future","","",42,[[]]],[11,"try_poll","","",42,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_future","","",43,[[]]],[11,"try_poll","","",43,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_future","","",44,[[]]],[11,"try_poll","","",44,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_future","","",45,[[]]],[11,"try_poll","","",45,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_future","","",46,[[]]],[11,"try_poll","","",46,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_future","","",47,[[]]],[11,"try_poll","","",47,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_future","","",48,[[]]],[11,"try_poll","","",48,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_future","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_poll","","",49,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_future","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_future","","",51,[[]]],[11,"try_poll","","",51,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_future","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_poll","","",52,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_future","","",53,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_future","","",54,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_future","","",55,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_future","","",56,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_future","","",57,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_future","","",58,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_future","","",59,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_future","","",60,[[]]],[11,"try_poll","","",60,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_future","","",61,[[]]],[11,"try_poll","","",61,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_future","","",62,[[]]],[11,"try_poll","","",62,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_future","","",63,[[]]],[11,"try_poll","","",63,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_future","","",64,[[]]],[11,"try_poll","","",64,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_future","","",65,[[]]],[11,"try_poll","","",65,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_future","","",66,[[]]],[11,"try_poll","","",66,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_future","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_poll","","",8,[[["context",3],["pin",3]],["poll",4]]],[11,"try_poll_next","","",8,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_future","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_poll","","",67,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","futures_util::task","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_future","","",71,[[]]],[11,"try_poll","","",71,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_future","","",72,[[]]],[11,"try_poll","","",72,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","futures_util::stream","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"try_poll_next","","",73,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_future","","",74,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_future","","",75,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_future","","",76,[[]]],[11,"try_poll","","",76,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"try_poll_next","","",77,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"try_poll_next","","",79,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"try_poll_next","","",80,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_future","","",81,[[]]],[11,"try_poll","","",81,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_future","","",82,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"try_poll_next","","",83,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_future","","",84,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"try_poll_next","","",85,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_future","","",86,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_future","","",87,[[]]],[11,"try_poll","","",87,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"try_poll_next","","",88,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_future","","",89,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"try_poll_next","","",90,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"try_poll_next","","",91,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"try_poll_next","","",92,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"try_poll_next","","",93,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"try_poll_next","","",94,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"try_poll_next","","",95,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"try_poll_next","","",99,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"try_poll_next","","",100,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"try_poll_next","","",101,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_future","","",102,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"try_poll_next","","",103,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"try_poll_next","","",105,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"into_future","","",106,[[]]],[11,"try_poll","","",106,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"try_poll_next","","",107,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"try_poll_next","","",108,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"try_poll_next","","",109,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"try_poll_next","","",110,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"try_poll_next","","",111,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"into_future","","",112,[[]]],[11,"try_poll","","",112,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"into_future","","",113,[[]]],[11,"try_poll","","",113,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"try_poll_next","","",114,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"try_poll_next","","",115,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"try_poll_next","","",116,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"into_future","","",117,[[]]],[11,"try_poll","","",117,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"into_future","","",118,[[]]],[11,"try_poll","","",118,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"into_future","","",119,[[]]],[11,"try_poll","","",119,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"try_poll_next","","",120,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"try_poll_next","","",121,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"try_poll_next","","",122,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"try_poll_next","","",123,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"try_poll_next","","",124,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"into_future","","",125,[[]]],[11,"try_poll","","",125,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"try_poll_next","","",126,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"try_poll_next","","",127,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"try_poll_next","","",128,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"try_poll_next","","",129,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"try_poll_next","","",130,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"try_poll_next","","",131,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"try_poll_next","","",132,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"try_poll_next","","",133,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"try_poll_next","","",134,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"try_poll_next","","",135,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"try_poll_next","","",136,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"try_poll_next","","",137,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"try_poll_next","","",138,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"try_poll_next","","",139,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"try_poll_next","","",140,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","futures_util::stream::futures_unordered","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"into_iter","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"into_iter","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"into_iter","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"into_iter","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"borrow","futures_util::stream","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"try_poll_next","","",9,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"try_poll_next","","",145,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","futures_util::sink","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"into_future","","",146,[[]]],[11,"try_poll","","",146,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"into_future","","",149,[[]]],[11,"try_poll","","",149,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"into_future","","",150,[[]]],[11,"try_poll","","",150,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"try_poll_next","","",151,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"try_poll_next","","",152,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"into_future","","",153,[[]]],[11,"try_poll","","",153,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"into_future","","",154,[[]]],[11,"try_poll","","",154,[[["context",3],["pin",3]],["poll",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"try_poll_next","","",156,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"try_poll_next","","",157,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"try_poll_next","","",158,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"borrow","futures_util::task","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"to_string","","",163,[[],["string",3]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"hash","","",18,[[]]],[11,"cmp","","",18,[[["poll",4]],["ordering",4]]],[11,"clone","","",162,[[],["rawwakervtable",3]]],[11,"clone","","",18,[[],["poll",4]]],[11,"clone","","",160,[[],["waker",3]]],[11,"into_result","","",18,[[],["result",4]]],[11,"from_error","","",18,[[],[["poll",4],["option",4]]]],[11,"from_ok","","",18,[[],[["poll",4],["option",4]]]],[11,"into_result","","",18,[[],["result",4]]],[11,"from_error","","",18,[[],[["poll",4],["result",4]]]],[11,"from_ok","","",18,[[],[["poll",4],["result",4]]]],[11,"from","","Convert to a <code>Ready</code> variant.",18,[[],["poll",4]]],[11,"eq","","",161,[[["rawwaker",3]],["bool",15]]],[11,"ne","","",161,[[["rawwaker",3]],["bool",15]]],[11,"eq","","",18,[[["poll",4]],["bool",15]]],[11,"ne","","",18,[[["poll",4]],["bool",15]]],[11,"eq","","",162,[[["rawwakervtable",3]],["bool",15]]],[11,"ne","","",162,[[["rawwakervtable",3]],["bool",15]]],[11,"partial_cmp","","",18,[[["poll",4]],[["ordering",4],["option",4]]]],[11,"drop","","",160,[[]]],[11,"fmt","","",161,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",162,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",18,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",159,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",160,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","","",161,[[["arc",3]],["rawwaker",3]]],[11,"from","","",160,[[["arc",3]],["waker",3]]],[11,"default","","",165,[[],["atomicwaker",3]]],[11,"fmt","","",165,[[["formatter",3]],[["result",4],["error",3]]]],[11,"poll","","",72,[[["pin",3],["context",3],["localfutureobj",3]],["poll",4]]],[11,"poll","","",71,[[["pin",3],["futureobj",3],["context",3]],["poll",4]]],[11,"from","","",71,[[["future",8],["global",3],["box",3]],["futureobj",3]]],[11,"from","","",72,[[["box",3],["future",8],["global",3]],["localfutureobj",3]]],[11,"from","","",72,[[["box",3],["pin",3]],["localfutureobj",3]]],[11,"from","","",71,[[["pin",3],["box",3]],["futureobj",3]]],[11,"from","","",72,[[["box",3],["global",3]],["localfutureobj",3]]],[11,"from","","",71,[[["box",3],["global",3]],["futureobj",3]]],[11,"from","","",72,[[["pin",3],["box",3]],["localfutureobj",3]]],[11,"from","","",71,[[["box",3],["pin",3]],["futureobj",3]]],[11,"from","","",72,[[["futureobj",3]],["localfutureobj",3]]],[11,"drop","","",72,[[]]],[11,"fmt","","",163,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",71,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",163,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",72,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",164,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref","","",164,[[],["waker",3]]],[11,"fmt","futures_util::future","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",134,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream::futures_unordered","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::sink","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["fmtresult",6]]],[11,"fmt","","",149,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::future","",70,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream","",14,[[["formatter",3]],["result",6]]],[11,"eq","futures_util::future","",70,[[["aborted",3]],["bool",15]]],[11,"drop","futures_util::stream","",9,[[]]],[11,"from_iter","futures_util::future","",57,[[["intoiterator",8]]]],[11,"from_iter","","",59,[[["intoiterator",8]]]],[11,"from_iter","","",64,[[["intoiterator",8]]]],[11,"from_iter","","",66,[[["intoiterator",8]]]],[11,"from_iter","futures_util::stream","",140,[[]]],[11,"from_iter","","",9,[[]]],[11,"from_iter","","",145,[[["intoiterator",8]]]],[11,"from","futures_util::future","",50,[[["option",4]]]],[11,"next","futures_util::stream::futures_unordered","",141,[[],[["option",4],["pin",3]]]],[11,"size_hint","","",141,[[]]],[11,"next","","",142,[[],["option",4]]],[11,"size_hint","","",142,[[]]],[11,"next","","",143,[[],[["option",4],["pin",3]]]],[11,"size_hint","","",143,[[]]],[11,"next","","",144,[[],["option",4]]],[11,"size_hint","","",144,[[]]],[11,"extend","futures_util::stream","",140,[[]]],[11,"extend","","",9,[[]]],[11,"extend","","",145,[[["intoiterator",8]]]],[11,"clone","futures_util::future","",49,[[]]],[11,"clone","","",50,[[],["optionfuture",3]]],[11,"clone","","",52,[[],["ready",3]]],[11,"clone","","",8,[[],["either",4]]],[11,"clone","","",67,[[],["abortable",3]]],[11,"clone","","",69,[[],["aborthandle",3]]],[11,"clone","","",70,[[],["aborted",3]]],[11,"clone","futures_util::stream","",131,[[],["iter",3]]],[11,"clone","","",132,[[],["repeat",3]]],[11,"clone","","",133,[[],["repeatwith",3]]],[11,"clone","","",134,[[]]],[11,"clone","","",136,[[]]],[11,"clone","futures_util::sink","",152,[[],["sinkmaperr",3]]],[11,"clone","","",156,[[]]],[11,"default","futures_util::stream","",140,[[]]],[11,"default","","",9,[[]]],[11,"default","","",145,[[]]],[11,"poll","futures_util::future","",24,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",25,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",27,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",29,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",30,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",31,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",32,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",33,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",34,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",35,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",38,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",39,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",40,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",41,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",42,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",43,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",44,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",45,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",46,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",47,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",48,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",49,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",6,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",50,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",51,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",52,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",53,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",54,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",55,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",56,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",57,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",58,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",59,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",60,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",61,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",62,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",63,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",64,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",65,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",66,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",8,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",67,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","futures_util::stream","",74,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",75,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",76,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",81,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",106,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",82,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",84,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",86,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",87,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",89,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",102,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",112,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",113,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",117,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",118,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",119,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",125,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","futures_util::sink","",146,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",149,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",150,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",153,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",154,[[["context",3],["pin",3]],["poll",4]]],[11,"is_terminated","futures_util::future","",24,[[],["bool",15]]],[11,"is_terminated","","",25,[[],["bool",15]]],[11,"is_terminated","","",27,[[],["bool",15]]],[11,"is_terminated","","",29,[[],["bool",15]]],[11,"is_terminated","","",30,[[],["bool",15]]],[11,"is_terminated","","",31,[[],["bool",15]]],[11,"is_terminated","","",32,[[],["bool",15]]],[11,"is_terminated","","",33,[[],["bool",15]]],[11,"is_terminated","","",34,[[],["bool",15]]],[11,"is_terminated","","",35,[[],["bool",15]]],[11,"is_terminated","","",38,[[],["bool",15]]],[11,"is_terminated","","",39,[[],["bool",15]]],[11,"is_terminated","","",40,[[],["bool",15]]],[11,"is_terminated","","",41,[[],["bool",15]]],[11,"is_terminated","","",42,[[],["bool",15]]],[11,"is_terminated","","",43,[[],["bool",15]]],[11,"is_terminated","","",44,[[],["bool",15]]],[11,"is_terminated","","",45,[[],["bool",15]]],[11,"is_terminated","","",46,[[],["bool",15]]],[11,"is_terminated","","",47,[[],["bool",15]]],[11,"is_terminated","","",48,[[],["bool",15]]],[11,"is_terminated","","",49,[[],["bool",15]]],[11,"is_terminated","","",6,[[],["bool",15]]],[11,"is_terminated","","",7,[[],["bool",15]]],[11,"is_terminated","","",50,[[],["bool",15]]],[11,"is_terminated","","",52,[[],["bool",15]]],[11,"is_terminated","","",53,[[],["bool",15]]],[11,"is_terminated","","",54,[[],["bool",15]]],[11,"is_terminated","","",55,[[],["bool",15]]],[11,"is_terminated","","",56,[[],["bool",15]]],[11,"is_terminated","","",58,[[],["bool",15]]],[11,"is_terminated","","",8,[[],["bool",15]]],[11,"is_terminated","futures_util::stream","",74,[[],["bool",15]]],[11,"is_terminated","","",75,[[],["bool",15]]],[11,"is_terminated","","",76,[[],["bool",15]]],[11,"is_terminated","","",81,[[],["bool",15]]],[11,"is_terminated","","",106,[[],["bool",15]]],[11,"is_terminated","","",82,[[],["bool",15]]],[11,"is_terminated","","",84,[[],["bool",15]]],[11,"is_terminated","","",86,[[],["bool",15]]],[11,"is_terminated","","",87,[[],["bool",15]]],[11,"is_terminated","","",89,[[],["bool",15]]],[11,"is_terminated","","",102,[[],["bool",15]]],[11,"is_terminated","","",112,[[],["bool",15]]],[11,"is_terminated","","",117,[[],["bool",15]]],[11,"is_terminated","","",119,[[],["bool",15]]],[11,"is_terminated","","",125,[[],["bool",15]]],[11,"poll_next","futures_util::future","",26,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",26,[[]]],[11,"poll_next","","",28,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",28,[[]]],[11,"poll_next","","",36,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",36,[[]]],[11,"poll_next","","",37,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",37,[[]]],[11,"poll_next","","",8,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","futures_util::stream","",73,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",73,[[]]],[11,"poll_next","","",77,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",77,[[]]],[11,"poll_next","","",78,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",78,[[]]],[11,"poll_next","","",79,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",79,[[]]],[11,"poll_next","","",80,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",80,[[]]],[11,"poll_next","","",105,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",105,[[]]],[11,"poll_next","","",83,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",83,[[]]],[11,"poll_next","","",107,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",107,[[]]],[11,"poll_next","","",85,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",85,[[]]],[11,"poll_next","","",108,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",108,[[]]],[11,"poll_next","","",88,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",88,[[]]],[11,"poll_next","","",90,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",90,[[]]],[11,"poll_next","","",91,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",91,[[]]],[11,"poll_next","","",92,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",92,[[]]],[11,"poll_next","","",93,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",93,[[]]],[11,"poll_next","","",94,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",94,[[]]],[11,"poll_next","","",95,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",95,[[]]],[11,"poll_next","","",96,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",96,[[]]],[11,"poll_next","","",97,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",97,[[]]],[11,"poll_next","","",98,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",98,[[]]],[11,"poll_next","","",99,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",99,[[]]],[11,"poll_next","","",100,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",100,[[]]],[11,"poll_next","","",101,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",101,[[]]],[11,"poll_next","","",103,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",109,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",109,[[]]],[11,"poll_next","","",126,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",126,[[]]],[11,"poll_next","","",127,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",127,[[]]],[11,"poll_next","","",128,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",128,[[]]],[11,"poll_next","","",110,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",110,[[]]],[11,"poll_next","","",129,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",129,[[]]],[11,"poll_next","","",130,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",130,[[]]],[11,"poll_next","","",111,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",111,[[]]],[11,"poll_next","","",114,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",114,[[]]],[11,"poll_next","","",115,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",115,[[]]],[11,"poll_next","","",116,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",120,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",121,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",121,[[]]],[11,"poll_next","","",122,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",122,[[]]],[11,"poll_next","","",123,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",124,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",131,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",131,[[]]],[11,"poll_next","","",132,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",132,[[]]],[11,"poll_next","","",133,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",133,[[]]],[11,"poll_next","","",134,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",134,[[]]],[11,"poll_next","","",135,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",135,[[]]],[11,"poll_next","","",136,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",136,[[]]],[11,"poll_next","","",137,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",138,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",139,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",140,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",140,[[]]],[11,"poll_next","","",9,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",9,[[]]],[11,"poll_next","","",145,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"poll_next","futures_util::sink","",151,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",151,[[]]],[11,"poll_next","","",152,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",152,[[]]],[11,"poll_next","","",156,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",156,[[]]],[11,"poll_next","","",157,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",157,[[]]],[11,"poll_next","","",158,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",158,[[]]],[11,"is_terminated","futures_util::future","",26,[[],["bool",15]]],[11,"is_terminated","","",28,[[],["bool",15]]],[11,"is_terminated","","",36,[[],["bool",15]]],[11,"is_terminated","","",37,[[],["bool",15]]],[11,"is_terminated","","",8,[[],["bool",15]]],[11,"is_terminated","futures_util::stream","",73,[[],["bool",15]]],[11,"is_terminated","","",77,[[],["bool",15]]],[11,"is_terminated","","",78,[[],["bool",15]]],[11,"is_terminated","","",79,[[],["bool",15]]],[11,"is_terminated","","",80,[[],["bool",15]]],[11,"is_terminated","","",105,[[],["bool",15]]],[11,"is_terminated","","",83,[[],["bool",15]]],[11,"is_terminated","","",107,[[],["bool",15]]],[11,"is_terminated","","",85,[[],["bool",15]]],[11,"is_terminated","","",108,[[],["bool",15]]],[11,"is_terminated","","",88,[[],["bool",15]]],[11,"is_terminated","","",90,[[],["bool",15]]],[11,"is_terminated","","",91,[[],["bool",15]]],[11,"is_terminated","","",92,[[],["bool",15]]],[11,"is_terminated","","",93,[[],["bool",15]]],[11,"is_terminated","","",94,[[],["bool",15]]],[11,"is_terminated","","",95,[[],["bool",15]]],[11,"is_terminated","","",96,[[],["bool",15]]],[11,"is_terminated","","",97,[[],["bool",15]]],[11,"is_terminated","","",98,[[],["bool",15]]],[11,"is_terminated","","",99,[[],["bool",15]]],[11,"is_terminated","","",100,[[],["bool",15]]],[11,"is_terminated","","",109,[[],["bool",15]]],[11,"is_terminated","","",126,[[],["bool",15]]],[11,"is_terminated","","",127,[[],["bool",15]]],[11,"is_terminated","","",128,[[],["bool",15]]],[11,"is_terminated","","",110,[[],["bool",15]]],[11,"is_terminated","","",129,[[],["bool",15]]],[11,"is_terminated","","",130,[[],["bool",15]]],[11,"is_terminated","","",111,[[],["bool",15]]],[11,"is_terminated","","",114,[[],["bool",15]]],[11,"is_terminated","","",115,[[],["bool",15]]],[11,"is_terminated","","",116,[[],["bool",15]]],[11,"is_terminated","","",121,[[],["bool",15]]],[11,"is_terminated","","",122,[[],["bool",15]]],[11,"is_terminated","","",132,[[],["bool",15]]],[11,"is_terminated","","",133,[[],["bool",15]]],[11,"is_terminated","","",134,[[],["bool",15]]],[11,"is_terminated","","",135,[[],["bool",15]]],[11,"is_terminated","","",136,[[],["bool",15]]],[11,"is_terminated","","",138,[[],["bool",15]]],[11,"is_terminated","","",139,[[],["bool",15]]],[11,"is_terminated","","",140,[[],["bool",15]]],[11,"is_terminated","","",9,[[],["bool",15]]],[11,"is_terminated","","",145,[[],["bool",15]]],[11,"is_terminated","futures_util::sink","",151,[[],["bool",15]]],[11,"is_terminated","","",152,[[],["bool",15]]],[11,"is_terminated","","",157,[[],["bool",15]]],[11,"is_terminated","","",158,[[],["bool",15]]],[11,"spawn_obj","futures_util::stream","",9,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"spawn_local_obj","","",9,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"poll_ready","futures_util::future","",26,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",26,[[["pin",3]],["result",4]]],[11,"poll_flush","","",26,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",26,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",36,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",36,[[["pin",3]],["result",4]]],[11,"poll_flush","","",36,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",36,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",37,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",37,[[["pin",3]],["result",4]]],[11,"poll_flush","","",37,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",37,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",8,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",8,[[["pin",3]],["result",4]]],[11,"poll_flush","","",8,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",8,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","futures_util::stream","",78,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",78,[[["pin",3]],["result",4]]],[11,"poll_flush","","",78,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",78,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",79,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",79,[[["pin",3]],["result",4]]],[11,"poll_flush","","",79,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",79,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",80,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",80,[[["pin",3]],["result",4]]],[11,"poll_flush","","",80,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",80,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",105,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",105,[[["pin",3]],["result",4]]],[11,"poll_flush","","",105,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",105,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",83,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",83,[[["pin",3]],["result",4]]],[11,"poll_flush","","",83,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",83,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",107,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",107,[[["pin",3]],["result",4]]],[11,"poll_flush","","",107,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",107,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",85,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",85,[[["pin",3]],["result",4]]],[11,"poll_flush","","",85,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",85,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",108,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",108,[[["pin",3]],["result",4]]],[11,"poll_flush","","",108,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",108,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",88,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",88,[[["pin",3]],["result",4]]],[11,"poll_flush","","",88,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",88,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",90,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",90,[[["pin",3]],["result",4]]],[11,"poll_flush","","",90,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",90,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",91,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",91,[[["pin",3]],["result",4]]],[11,"poll_flush","","",91,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",91,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",92,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",92,[[["pin",3]],["result",4]]],[11,"poll_flush","","",92,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",92,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",93,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",93,[[["pin",3]],["result",4]]],[11,"poll_flush","","",93,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",93,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",94,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",94,[[["pin",3]],["result",4]]],[11,"poll_flush","","",94,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",94,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",95,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",95,[[["pin",3]],["result",4]]],[11,"poll_flush","","",95,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",95,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",97,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",97,[[["pin",3]],["result",4]]],[11,"poll_flush","","",97,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",97,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",98,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",98,[[["pin",3]],["result",4]]],[11,"poll_flush","","",98,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",98,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",99,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",99,[[["pin",3]],["result",4]]],[11,"poll_flush","","",99,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",99,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",100,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",100,[[["pin",3]],["result",4]]],[11,"poll_flush","","",100,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",100,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",101,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",101,[[["pin",3]],["result",4]]],[11,"poll_flush","","",101,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",101,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",104,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",104,[[["pin",3]],["result",4]]],[11,"poll_flush","","",104,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",104,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",109,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",109,[[["pin",3]],["result",4]]],[11,"poll_flush","","",109,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",109,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",126,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",126,[[["pin",3]],["result",4]]],[11,"poll_flush","","",126,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",126,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",127,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",127,[[["pin",3]],["result",4]]],[11,"poll_flush","","",127,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",127,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",128,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",128,[[["pin",3]],["result",4]]],[11,"poll_flush","","",128,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",128,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",110,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",110,[[["pin",3]],["result",4]]],[11,"poll_flush","","",110,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",110,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",129,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",129,[[["pin",3]],["result",4]]],[11,"poll_flush","","",129,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",129,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",130,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",130,[[["pin",3]],["result",4]]],[11,"poll_flush","","",130,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",130,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",111,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",111,[[["pin",3]],["result",4]]],[11,"poll_flush","","",111,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",111,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",114,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",114,[[["pin",3]],["result",4]]],[11,"poll_flush","","",114,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",114,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",115,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",115,[[["pin",3]],["result",4]]],[11,"poll_flush","","",115,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",115,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",116,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",116,[[["pin",3]],["result",4]]],[11,"poll_flush","","",116,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",116,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",121,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",121,[[["pin",3]],["result",4]]],[11,"poll_flush","","",121,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",121,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",122,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",122,[[["pin",3]],["result",4]]],[11,"poll_flush","","",122,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",122,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",123,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",123,[[["pin",3]],["result",4]]],[11,"poll_flush","","",123,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",123,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",124,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",124,[[["pin",3]],["result",4]]],[11,"poll_flush","","",124,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",124,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","futures_util::sink","",147,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",147,[[["pin",3]],["result",4]]],[11,"poll_flush","","",147,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",147,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",148,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",148,[[["pin",3]],["result",4]]],[11,"poll_flush","","",148,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",148,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",151,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"start_send","","",151,[[["pin",3]],["result",4]]],[11,"poll_flush","","",151,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_close","","",151,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[11,"poll_ready","","",152,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",152,[[["pin",3]],["result",4]]],[11,"poll_flush","","",152,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",152,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",155,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",155,[[["pin",3]],["result",4]]],[11,"poll_flush","","",155,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",155,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",156,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",156,[[["pin",3]],["result",4]]],[11,"poll_flush","","",156,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",156,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",157,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",157,[[["pin",3]],["result",4]]],[11,"poll_flush","","",157,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",157,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",158,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"start_send","","",158,[[["pin",3]],["result",4]]],[11,"poll_flush","","",158,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",158,[[["context",3],["pin",3]],[["poll",4],["result",4]]]],[11,"terminated","futures_util::future","Creates a new <code>Fuse</code>-wrapped future which is already …",24,[[]]],[11,"map","","Map this future’s output to a different type, returning …",4,[[],["map",3]]],[11,"map_into","","Map this future’s output to a different type, returning …",4,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",4,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",4,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",4,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",4,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",4,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",4,[[],["inspect",3]]],[11,"boxed","","Wrap the future in a Box, pinning it.",4,[[],["boxfuture",6]]],[11,"boxed_local","","Wrap the future in a Box, pinning it.",4,[[],["localboxfuture",6]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",4,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",4,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",4,[[],["option",4]]],[11,"flatten_sink","","Flattens the execution of this future when the successful …",5,[[],["flattensink",3]]],[11,"map_ok","","Maps this future’s success value to a different value.",5,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future’s success value to a different value, …",5,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future’s error value to a different value.",5,[[],["maperr",3]]],[11,"err_into","","Maps this future’s <code>Error</code> to a new error type using the …",5,[[],["errinto",3]]],[11,"ok_into","","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> …",5,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",5,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",5,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",5,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",5,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",5,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",5,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future’s ouput, producing a future with …",5,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",5,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",5,[[["context",3]],[["poll",4],["result",4]]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",6,[[["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>MaybeDone</code> without driving …",6,[[["pin",3]],["option",4]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",7,[[["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>TryMaybeDone</code> without …",7,[[["pin",3]],["option",4]]],[11,"into_inner","","Unwraps the value from this immediately ready future.",52,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",8,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",8,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",8,[[]]],[11,"new","","Creates a new <code>Abortable</code> future using an existing …",67,[[["abortregistration",3]]]],[11,"new_pair","","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which …",69,[[]]],[11,"abort","","Abort the <code>Abortable</code> future associated with this handle.",69,[[]]],[11,"new","futures_util::task","Create a <code>FutureObj</code> from a custom trait object …",71,[[],["futureobj",3]]],[11,"new","","Create a <code>LocalFutureObj</code> from a custom trait object …",72,[[],["localfutureobj",3]]],[11,"into_future_obj","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.",72,[[],["futureobj",3]]],[11,"get_ref","futures_util::stream","Acquires a reference to the underlying sink or stream …",78,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",78,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",78,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",78,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",79,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",79,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",79,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",79,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",80,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",80,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",80,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",80,[[]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",83,[[],["bool",15]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",83,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",83,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",83,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",83,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",84,[[],["option",4]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",84,[[],["option",4]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",84,[[["pin",3]],[["pin",3],["option",4]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",84,[[],["option",4]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",85,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",85,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",85,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",85,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",88,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",88,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",88,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",88,[[]]],[11,"peek","","Produces a <code>Peek</code> future which retrieves a reference to the …",88,[[["pin",3]],["peek",3]]],[11,"poll_peek","","Peek retrieves a reference to the next item in the stream.",88,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",90,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",90,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",90,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",90,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",91,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",91,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",91,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",91,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",92,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",92,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",92,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",92,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",93,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",93,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",93,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",93,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",94,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",94,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",94,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",94,[[]]],[11,"take_future","","Extract the stopping future out of the combinator. The …",94,[[],["option",4]]],[11,"take_result","","Once the stopping future is resolved, this method can be …",94,[[],["option",4]]],[11,"is_stopped","","Whether the stream was stopped yet by the stopping future …",94,[[],["bool",15]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",95,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",95,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",95,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",95,[[]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",96,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",96,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",96,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",96,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",97,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",97,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",97,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",97,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",98,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",98,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",98,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",98,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",99,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",99,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",99,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",99,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",100,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",100,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",100,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",100,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",101,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",101,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",101,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",101,[[]]],[11,"reunite","","Attempts to put the two “halves” of a split …",103,[[["splitsink",3]],[["reuniteerror",3],["result",4]]]],[11,"reunite","","Attempts to put the two “halves” of a split …",104,[[["splitstream",3]],[["reuniteerror",3],["result",4]]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",105,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",105,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",105,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",105,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",107,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",107,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",107,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",107,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",108,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",108,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",108,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",108,[[]]],[11,"next","","Creates a future that resolves to the next item in the …",13,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",13,[[],["streamfuture",3]]],[11,"map","","Maps this stream’s items to a different type, returning …",13,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",13,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",13,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",13,[[],["filtermap",3]]],[11,"then","","Computes from this stream’s items new items of a …",13,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",13,[[],[["default",8],["extend",8],["collect",3]]]],[11,"unzip","","Converts a stream of pairs into a future, which resolves …",13,[[],["unzip",3]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",13,[[],["concat",3]]],[11,"cycle","","Repeats a stream endlessly.",13,[[],["cycle",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",13,[[],["fold",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",13,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",13,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",13,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",13,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",13,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",13,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",13,[[],["foreach",3]]],[11,"for_each_concurrent","","Runs this stream to completion, executing the provided …",13,[[],["foreachconcurrent",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",13,[[["usize",15]],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",13,[[["usize",15]],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",13,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",13,[[]]],[11,"boxed","","Wrap the stream in a Box, pinning it.",13,[[],["boxstream",6]]],[11,"boxed_local","","Wrap the stream in a Box, pinning it.",13,[[],["localboxstream",6]]],[11,"buffered","","An adaptor for creating a buffered list of pending …",13,[[["usize",15]],["buffered",3]]],[11,"buffer_unordered","","An adaptor for creating a buffered list of pending …",13,[[["usize",15]],["bufferunordered",3]]],[11,"zip","","An adapter for zipping two streams together.",13,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",13,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",13,[[],["peekable",3]]],[11,"chunks","","An adaptor for chunking up items of the stream inside a …",13,[[["usize",15]],["chunks",3]]],[11,"ready_chunks","","An adaptor for chunking up ready items of the stream …",13,[[["usize",15]],["readychunks",3]]],[11,"forward","","A future that completes after the given stream has been …",13,[[],["forward",3]]],[11,"split","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …",13,[[]]],[11,"inspect","","Do something with each item of this stream, afterwards …",13,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",13,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",13,[[["context",3]],[["poll",4],["option",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",13,[[],["selectnextsome",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",109,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",109,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",109,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",109,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",110,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",110,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",110,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",110,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",111,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",111,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",111,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",111,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",114,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",114,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",114,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",114,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",115,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",115,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",115,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",115,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",116,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",116,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",116,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",116,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",121,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",121,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",121,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",121,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",122,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",122,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",122,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",122,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",123,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",123,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",123,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",123,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",124,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",124,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",124,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",124,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",126,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",126,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",126,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",126,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",127,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",127,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",127,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",127,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",128,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",128,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",128,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",128,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",129,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",129,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",129,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",129,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",130,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",130,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",130,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",130,[[]]],[11,"err_into","","Wraps the current stream in a new stream which converts …",15,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",15,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",15,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",15,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",15,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",15,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",15,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",15,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",15,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",15,[[],["tryskipwhile",3]]],[11,"try_take_while","","Take elements on this stream while the provided …",15,[[],["trytakewhile",3]]],[11,"try_for_each_concurrent","","Attempts to run this stream to completion, executing the …",15,[[],["tryforeachconcurrent",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",15,[[],[["default",8],["extend",8],["trycollect",3]]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",15,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",15,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",15,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",15,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",15,[[],["tryconcat",3]]],[11,"try_buffer_unordered","","Attempt to execute several futures from a stream …",15,[[["usize",15]],["trybufferunordered",3]]],[11,"try_buffered","","Attempt to execute several futures from a stream …",15,[[["usize",15]],["trybuffered",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",15,[[["context",3]],[["option",4],["poll",4]]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",138,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",138,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",138,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",138,[[]]],[11,"new","","Constructs a new, empty <code>FuturesOrdered</code>",140,[[]]],[11,"len","","Returns the number of futures contained in the queue.",140,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the queue contains no futures",140,[[],["bool",15]]],[11,"push","","Push a future into the queue.",140,[[]]],[11,"new","","Constructs a new, empty <code>SelectAll</code>",145,[[]]],[11,"len","","Returns the number of streams contained in the set.",145,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no streams",145,[[],["bool",15]]],[11,"push","","Push a stream into the set.",145,[[]]],[11,"get_ref","futures_util::sink","Get a shared reference to the inner sinks.",148,[[]]],[11,"get_mut","","Get a mutable reference to the inner sinks.",148,[[]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner sinks.",148,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying sinks.",148,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",151,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",151,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",151,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",151,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",152,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",152,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",152,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",152,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",156,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",156,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",156,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",156,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",157,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",157,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",157,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",157,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",158,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",158,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",158,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",158,[[]]],[11,"spawn","futures_util::task","Spawns a task that polls the given future with output <code>()</code> …",22,[[],[["result",4],["spawnerror",3]]]],[11,"spawn_local","","Spawns a task that polls the given future with output <code>()</code> …",23,[[],[["result",4],["spawnerror",3]]]],[11,"from_waker","","Create a new <code>Context</code> from a <code>&Waker</code>.",159,[[["waker",3]],["context",3]]],[11,"waker","","Returns a reference to the <code>Waker</code> for the current task.",159,[[],["waker",3]]],[11,"map","","Changes the ready value of this <code>Poll</code> with the closure …",18,[[],["poll",4]]],[11,"is_ready","","Returns <code>true</code> if this is <code>Poll::Ready</code>",18,[[],["bool",15]]],[11,"is_pending","","Returns <code>true</code> if this is <code>Poll::Pending</code>",18,[[],["bool",15]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",18,[[],[["poll",4],["result",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",18,[[],[["poll",4],["result",4]]]],[11,"map_ok","","Changes the success value of this <code>Poll</code> with the closure …",18,[[],[["option",4],["poll",4]]]],[11,"map_err","","Changes the error value of this <code>Poll</code> with the closure …",18,[[],[["option",4],["poll",4]]]],[11,"wake","","Wake up the task associated with this <code>Waker</code>.",160,[[]]],[11,"wake_by_ref","","Wake up the task associated with this <code>Waker</code> without …",160,[[]]],[11,"will_wake","","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> have awoken …",160,[[["waker",3]],["bool",15]]],[11,"from_raw","","Creates a new <code>Waker</code> from [<code>RawWaker</code>].",160,[[["rawwaker",3]],["waker",3]]],[11,"new","","Creates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …",161,[[["rawwakervtable",3]],["rawwaker",3]]],[11,"new","","Creates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>…",162,[[],["rawwakervtable",3]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",163,[[],["spawnerror",3]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut …",163,[[],["bool",15]]],[11,"new","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] reference.",164,[[["waker",3]],["wakerref",3]]],[11,"new_unowned","","Create a new [<code>WakerRef</code>] from a [<code>Waker</code>] that must not be …",164,[[["waker",3],["manuallydrop",3]],["wakerref",3]]],[11,"new","","Create an <code>AtomicWaker</code>.",165,[[],["atomicwaker",3]]],[11,"register","","Registers the waker to be notified on calls to <code>wake</code>.",165,[[["waker",3]]]],[11,"wake","","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.",165,[[]]],[11,"take","","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …",165,[[],[["option",4],["waker",3]]]]],"p":[[8,"FusedFuture"],[8,"Future"],[8,"TryFuture"],[8,"UnsafeFutureObj"],[8,"FutureExt"],[8,"TryFutureExt"],[4,"MaybeDone"],[4,"TryMaybeDone"],[4,"Either"],[3,"FuturesUnordered"],[8,"FusedStream"],[8,"Stream"],[8,"TryStream"],[8,"StreamExt"],[3,"ReuniteError"],[8,"TryStreamExt"],[8,"Sink"],[8,"SinkExt"],[4,"Poll"],[8,"Spawn"],[8,"LocalSpawn"],[8,"ArcWake"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[3,"Fuse"],[3,"Flatten"],[3,"FlattenStream"],[3,"Map"],[3,"IntoStream"],[3,"MapInto"],[3,"Then"],[3,"Inspect"],[3,"NeverError"],[3,"UnitError"],[3,"IntoFuture"],[3,"TryFlatten"],[3,"TryFlattenStream"],[3,"FlattenSink"],[3,"AndThen"],[3,"OrElse"],[3,"ErrInto"],[3,"OkInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"MapOkOrElse"],[3,"UnwrapOrElse"],[3,"Lazy"],[3,"Pending"],[3,"OptionFuture"],[3,"PollFn"],[3,"Ready"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"JoinAll"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TryJoinAll"],[3,"TrySelect"],[3,"SelectOk"],[3,"Abortable"],[3,"AbortRegistration"],[3,"AbortHandle"],[3,"Aborted"],[3,"FutureObj"],[3,"LocalFutureObj"],[3,"Chain"],[3,"Collect"],[3,"Unzip"],[3,"Concat"],[3,"Cycle"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Fold"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Map"],[3,"Next"],[3,"SelectNextSome"],[3,"Peekable"],[3,"Peek"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"TakeUntil"],[3,"Then"],[3,"Zip"],[3,"Chunks"],[3,"ReadyChunks"],[3,"Scan"],[3,"BufferUnordered"],[3,"Buffered"],[3,"ForEachConcurrent"],[3,"SplitStream"],[3,"SplitSink"],[3,"Flatten"],[3,"Forward"],[3,"Inspect"],[3,"FlatMap"],[3,"AndThen"],[3,"IntoStream"],[3,"OrElse"],[3,"TryNext"],[3,"TryForEach"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryFold"],[3,"TryUnfold"],[3,"TrySkipWhile"],[3,"TryTakeWhile"],[3,"TryBufferUnordered"],[3,"TryBuffered"],[3,"TryForEachConcurrent"],[3,"ErrInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"Iter"],[3,"Repeat"],[3,"RepeatWith"],[3,"Empty"],[3,"Once"],[3,"Pending"],[3,"PollFn"],[3,"Select"],[3,"Unfold"],[3,"FuturesOrdered"],[3,"IterPinMut"],[3,"IterMut"],[3,"IterPinRef"],[3,"Iter"],[3,"SelectAll"],[3,"Close"],[3,"Drain"],[3,"Fanout"],[3,"Feed"],[3,"Flush"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"Send"],[3,"SendAll"],[3,"Unfold"],[3,"With"],[3,"WithFlatMap"],[3,"Buffer"],[3,"Context"],[3,"Waker"],[3,"RawWaker"],[3,"RawWakerVTable"],[3,"SpawnError"],[3,"WakerRef"],[3,"AtomicWaker"]]},\
"getrandom":{"doc":"Interface to the random number generator of the operating …","i":[[3,"Error","getrandom","A small and <code>no_std</code> compatible error type.",null,null],[5,"getrandom","","Fill <code>dest</code> with random bytes from the system’s preferred …",null,[[],[["result",4],["error",3]]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["error",3]],["bool",15]]],[11,"ne","","",0,[[["error",3]],["bool",15]]],[11,"from","","",0,[[["nonzerou32",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"clone","","",0,[[],["error",3]]],[18,"UNKNOWN","","Unknown error.",0,null],[18,"UNAVAILABLE","","System entropy source is unavailable.",0,null],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive …",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to …",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from …",0,[[],[["option",4],["i32",15]]]],[11,"code","","Extract the bare error code.",0,[[],["nonzerou32",3]]]],"p":[[3,"Error"]]},\
"git_version":{"doc":"Embed git information in your code at compile-time.","i":[[14,"git_version","git_version","Get the git version for the source code.",null,null],[14,"git_describe","","Run <code>git describe</code> at compile time with custom flags.",null,null]],"p":[]},\
"git_version_macro":{"doc":"","i":[[14,"proc_macro_hack_git_version","git_version_macro","",null,null]],"p":[]},\
"hashbrown":{"doc":"This crate is a Rust port of Google’s high-performance …","i":[[0,"hash_map","hashbrown","A hash map implemented with quadratic probing and SIMD …",null,null],[6,"DefaultHashBuilder","hashbrown::hash_map","Default hasher for <code>HashMap</code>.",null,null],[3,"HashMap","","A hash map implemented with quadratic probing and SIMD …",null,null],[3,"Iter","","An iterator over the entries of a <code>HashMap</code>.",null,null],[3,"IterMut","","A mutable iterator over the entries of a <code>HashMap</code>.",null,null],[3,"IntoIter","","An owning iterator over the entries of a <code>HashMap</code>.",null,null],[3,"Keys","","An iterator over the keys of a <code>HashMap</code>.",null,null],[3,"Values","","An iterator over the values of a <code>HashMap</code>.",null,null],[3,"Drain","","A draining iterator over the entries of a <code>HashMap</code>.",null,null],[3,"DrainFilter","","A draining iterator over entries of a <code>HashMap</code> which don’…",null,null],[3,"ValuesMut","","A mutable iterator over the values of a <code>HashMap</code>.",null,null],[3,"RawEntryBuilderMut","","A builder for computing where in a [<code>HashMap</code>] a key-value …",null,null],[4,"RawEntryMut","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","An occupied entry.",0,null],[13,"Vacant","","A vacant entry.",0,null],[3,"RawOccupiedEntryMut","","A view into an occupied entry in a <code>HashMap</code>. It is part of …",null,null],[3,"RawVacantEntryMut","","A view into a vacant entry in a <code>HashMap</code>. It is part of …",null,null],[3,"RawEntryBuilder","","A builder for computing where in a [<code>HashMap</code>] a key-value …",null,null],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","An occupied entry.",1,null],[13,"Vacant","","A vacant entry.",1,null],[3,"OccupiedEntry","","A view into an occupied entry in a <code>HashMap</code>. It is part of …",null,null],[3,"VacantEntry","","A view into a vacant entry in a <code>HashMap</code>. It is part of …",null,null],[0,"hash_set","hashbrown","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[3,"HashSet","hashbrown::hash_set","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[3,"Iter","","An iterator over the items of a <code>HashSet</code>.",null,null],[3,"IntoIter","","An owning iterator over the items of a <code>HashSet</code>.",null,null],[3,"Drain","","A draining iterator over the items of a <code>HashSet</code>.",null,null],[3,"DrainFilter","","A draining iterator over entries of a <code>HashSet</code> which don’…",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of …",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of …",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric …",null,null],[3,"Union","","A lazy iterator producing elements in the union of <code>HashSet</code>…",null,null],[3,"HashMap","hashbrown","A hash map implemented with quadratic probing and SIMD …",null,null],[3,"HashSet","","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[4,"TryReserveError","","The error type for <code>try_reserve</code> methods.",null,null],[13,"CapacityOverflow","","Error due to the computed capacity exceeding the …",2,null],[13,"AllocError","","The memory allocator returned an error",2,null],[12,"layout","hashbrown::TryReserveError","The layout of the allocation request that failed.",3,null],[11,"borrow","hashbrown::hash_map","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"into_iter","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","hashbrown::hash_set","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"into_iter","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"into_iter","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"into_iter","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"into_iter","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"into_iter","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"into_iter","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"into_iter","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"into_iter","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","hashbrown","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"fmt","hashbrown::hash_map","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown::hash_set","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown","",2,[[["formatter",3]],["result",6]]],[11,"eq","hashbrown::hash_map","",4,[[],["bool",15]]],[11,"eq","hashbrown::hash_set","",19,[[],["bool",15]]],[11,"eq","hashbrown","",2,[[["tryreserveerror",4]],["bool",15]]],[11,"ne","","",2,[[["tryreserveerror",4]],["bool",15]]],[11,"drop","hashbrown::hash_map","",11,[[]]],[11,"drop","hashbrown::hash_set","",23,[[]]],[11,"index","hashbrown::hash_map","Returns a reference to the value corresponding to the …",4,[[]]],[11,"len","","",5,[[],["usize",15]]],[11,"len","","",6,[[],["usize",15]]],[11,"len","","",7,[[],["usize",15]]],[11,"len","","",8,[[],["usize",15]]],[11,"len","","",9,[[],["usize",15]]],[11,"len","","",12,[[],["usize",15]]],[11,"len","","",10,[[],["usize",15]]],[11,"len","hashbrown::hash_set","",20,[[],["usize",15]]],[11,"len","","",21,[[],["usize",15]]],[11,"len","","",22,[[],["usize",15]]],[11,"from_iter","hashbrown::hash_map","",4,[[["intoiterator",8]]]],[11,"from_iter","hashbrown::hash_set","",19,[[["intoiterator",8]]]],[11,"next","hashbrown::hash_map","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","hashbrown::hash_set","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"next","","",23,[[],["option",4]]],[11,"size_hint","","",23,[[]]],[11,"next","","",24,[[],["option",4]]],[11,"size_hint","","",24,[[]]],[11,"next","","",25,[[],["option",4]]],[11,"size_hint","","",25,[[]]],[11,"next","","",26,[[],["option",4]]],[11,"size_hint","","",26,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"into_iter","hashbrown::hash_map","Creates a consuming iterator, that is, one that moves …",4,[[],["intoiter",3]]],[11,"into_iter","hashbrown::hash_set","Creates a consuming iterator, that is, one that moves …",19,[[],["intoiter",3]]],[11,"extend","hashbrown::hash_map","",4,[[["intoiterator",8]]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"extend","hashbrown::hash_set","",19,[[["intoiterator",8]]]],[11,"extend","","",19,[[["intoiterator",8]]]],[11,"clone","hashbrown::hash_map","",4,[[]]],[11,"clone_from","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","hashbrown::hash_set","",19,[[]]],[11,"clone_from","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","hashbrown","",2,[[],["tryreserveerror",4]]],[11,"default","hashbrown::hash_map","Creates an empty <code>HashMap<K, V, S></code>, with the <code>Default</code> value …",4,[[]]],[11,"default","hashbrown::hash_set","Creates an empty <code>HashSet<T, S></code> with the <code>Default</code> value for …",19,[[]]],[11,"new","hashbrown::hash_map","Creates an empty <code>HashMap</code>.",4,[[]]],[11,"with_capacity","","Creates an empty <code>HashMap</code> with the specified capacity.",4,[[["usize",15]]]],[11,"with_hasher","","Creates an empty <code>HashMap</code> which will use the given hash …",4,[[]]],[11,"with_capacity_and_hasher","","Creates an empty <code>HashMap</code> with the specified capacity, …",4,[[["usize",15]]]],[11,"hasher","","Returns a reference to the map’s <code>BuildHasher</code>.",4,[[]]],[11,"capacity","","Returns the number of elements the map can hold without …",4,[[],["usize",15]]],[11,"keys","","An iterator visiting all keys in arbitrary order. The …",4,[[],["keys",3]]],[11,"values","","An iterator visiting all values in arbitrary order. The …",4,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary …",4,[[],["valuesmut",3]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary …",4,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary …",4,[[],["itermut",3]]],[11,"len","","Returns the number of elements in the map.",4,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the map contains no elements.",4,[[],["bool",15]]],[11,"drain","","Clears the map, returning all key-value pairs as an …",4,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",4,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate, …",4,[[],["drainfilter",3]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the …",4,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",4,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",4,[[["usize",15]],[["result",4],["tryreserveerror",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It …",4,[[]]],[11,"shrink_to","","Shrinks the capacity of the map with a lower limit. It …",4,[[["usize",15]]]],[11,"entry","","Gets the given key’s corresponding entry in the map for …",4,[[],["entry",4]]],[11,"get","","Returns a reference to the value corresponding to the key.",4,[[],["option",4]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied …",4,[[],["option",4]]],[11,"get_key_value_mut","","Returns the key-value pair corresponding to the supplied …",4,[[],["option",4]]],[11,"contains_key","","Returns <code>true</code> if the map contains a value for the …",4,[[],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",4,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map.",4,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the …",4,[[],["option",4]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and …",4,[[],["option",4]]],[11,"raw_entry_mut","","Creates a raw entry builder for the HashMap.",4,[[],["rawentrybuildermut",3]]],[11,"raw_entry","","Creates a raw immutable entry builder for the HashMap.",4,[[],["rawentrybuilder",3]]],[11,"from_key","","Creates a <code>RawEntryMut</code> from the given key.",13,[[],["rawentrymut",4]]],[11,"from_key_hashed_nocheck","","Creates a <code>RawEntryMut</code> from the given key and its hash.",13,[[["u64",15]],["rawentrymut",4]]],[11,"from_hash","","Creates a <code>RawEntryMut</code> from the given hash.",13,[[["u64",15]],["rawentrymut",4]]],[11,"from_key","","Access an entry by key.",16,[[],["option",4]]],[11,"from_key_hashed_nocheck","","Access an entry by a key and its hash.",16,[[["u64",15]],["option",4]]],[11,"from_hash","","Access an entry by hash.",16,[[["u64",15]],["option",4]]],[11,"insert","","Sets the value of the entry, and returns a …",0,[[],["rawoccupiedentrymut",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",0,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",0,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",0,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the …",0,[[]]],[11,"key","","Gets a reference to the key in the entry.",14,[[]]],[11,"key_mut","","Gets a mutable reference to the key in the entry.",14,[[]]],[11,"into_key","","Converts the entry into a mutable reference to the key in …",14,[[]]],[11,"get","","Gets a reference to the value in the entry.",14,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to …",14,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",14,[[]]],[11,"get_key_value","","Gets a reference to the key and value in the entry.",14,[[]]],[11,"get_key_value_mut","","Gets a mutable reference to the key and value in the …",14,[[]]],[11,"into_key_value","","Converts the OccupiedEntry into a mutable reference to …",14,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry’s …",14,[[]]],[11,"insert_key","","Sets the value of the entry, and returns the entry’s …",14,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",14,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",14,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the …",14,[[],["rawentrymut",4]]],[11,"insert","","Sets the value of the entry with the VacantEntry’s key, …",15,[[]]],[11,"insert_hashed_nocheck","","Sets the value of the entry with the VacantEntry’s key, …",15,[[["u64",15]]]],[11,"insert_with_hasher","","Set the value of an entry with a custom hasher function.",15,[[["u64",15]]]],[11,"insert","","Sets the value of the entry, and returns an OccupiedEntry.",1,[[],["occupiedentry",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",1,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",1,[[["fnonce",8]]]],[11,"or_insert_with_key","","Ensures a value is in the entry by inserting, if empty, …",1,[[["fnonce",8]]]],[11,"key","","Returns a reference to this entry’s key.",1,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",1,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the …",1,[[]]],[11,"or_default","","Ensures a value is in the entry by inserting the default …",1,[[]]],[11,"key","","Gets a reference to the key in the entry.",17,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",17,[[]]],[11,"get","","Gets a reference to the value in the entry.",17,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",17,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to …",17,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry’s …",17,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",17,[[]]],[11,"replace_entry","","Replaces the entry, returning the old key and value. The …",17,[[]]],[11,"replace_key","","Replaces the key in the hash map with the key used to …",17,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the …",17,[[],["entry",4]]],[11,"key","","Gets a reference to the key that would be used when …",18,[[]]],[11,"into_key","","Take ownership of the key.",18,[[]]],[11,"insert","","Sets the value of the entry with the VacantEntry’s key, …",18,[[]]],[11,"new","hashbrown::hash_set","Creates an empty <code>HashSet</code>.",19,[[]]],[11,"with_capacity","","Creates an empty <code>HashSet</code> with the specified capacity.",19,[[["usize",15]]]],[11,"with_hasher","","Creates a new empty hash set which will use the given …",19,[[]]],[11,"with_capacity_and_hasher","","Creates an empty <code>HashSet</code> with the specified capacity, …",19,[[["usize",15]]]],[11,"capacity","","Returns the number of elements the set can hold without …",19,[[],["usize",15]]],[11,"iter","","An iterator visiting all elements in arbitrary order. The …",19,[[],["iter",3]]],[11,"len","","Returns the number of elements in the set.",19,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no elements.",19,[[],["bool",15]]],[11,"drain","","Clears the set, returning all elements in an iterator.",19,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",19,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate, …",19,[[],["drainfilter",3]]],[11,"clear","","Clears the set, removing all values.",19,[[]]],[11,"hasher","","Returns a reference to the set’s <code>BuildHasher</code>.",19,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",19,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",19,[[["usize",15]],[["result",4],["tryreserveerror",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It …",19,[[]]],[11,"shrink_to","","Shrinks the capacity of the set with a lower limit. It …",19,[[["usize",15]]]],[11,"difference","","Visits the values representing the difference, i.e., the …",19,[[],["difference",3]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference, …",19,[[],["symmetricdifference",3]]],[11,"intersection","","Visits the values representing the intersection, i.e., …",19,[[],["intersection",3]]],[11,"union","","Visits the values representing the union, i.e., all the …",19,[[],["union",3]]],[11,"contains","","Returns <code>true</code> if the set contains a value.",19,[[],["bool",15]]],[11,"get","","Returns a reference to the value in the set, if any, that …",19,[[],["option",4]]],[11,"get_or_insert","","Inserts the given <code>value</code> into the set if it is not …",19,[[]]],[11,"get_or_insert_owned","","Inserts an owned copy of the given <code>value</code> into the set if …",19,[[]]],[11,"get_or_insert_with","","Inserts a value computed from <code>f</code> into the set if the given …",19,[[]]],[11,"is_disjoint","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.…",19,[[],["bool",15]]],[11,"is_subset","","Returns <code>true</code> if the set is a subset of another, i.e., …",19,[[],["bool",15]]],[11,"is_superset","","Returns <code>true</code> if the set is a superset of another, i.e., …",19,[[],["bool",15]]],[11,"insert","","Adds a value to the set.",19,[[],["bool",15]]],[11,"replace","","Adds a value to the set, replacing the existing value, if …",19,[[],["option",4]]],[11,"remove","","Removes a value from the set. Returns whether the value …",19,[[],["bool",15]]],[11,"take","","Removes and returns the value in the set, if any, that is …",19,[[],["option",4]]]],"p":[[4,"RawEntryMut"],[4,"Entry"],[4,"TryReserveError"],[13,"AllocError"],[3,"HashMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DrainFilter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"]]},\
"humantime":{"doc":"Human-friendly time parser and formatter","i":[[5,"parse_duration","humantime","Parse duration object <code>1hour 12min 5s</code>",null,[[["str",15]],[["result",4],["error",4],["duration",3]]]],[4,"DurationError","","Error parsing human-friendly duration",null,null],[13,"InvalidCharacter","","Invalid character during parsing",0,null],[13,"NumberExpected","","Non-numeric value where number is expected",0,null],[13,"UnknownUnit","","Unit in the number is not one of allowed units",0,null],[12,"start","humantime::DurationError","Start of the invalid unit inside the original string",1,null],[12,"end","","End of the invalid unit inside the original string",1,null],[12,"unit","","The unit verbatim",1,null],[12,"value","","A number associated with the unit",1,null],[13,"NumberOverflow","humantime","The numeric value is too large",0,null],[13,"Empty","","The value was an empty string (or consists only …",0,null],[5,"format_duration","","Formats duration into a human-readable string",null,[[["duration",3]],["formattedduration",3]]],[3,"FormattedDuration","","A wrapper type that allows you to Display a Duration",null,null],[3,"Duration","","A wrapper for duration that has <code>FromStr</code> implementation",null,null],[3,"Timestamp","","A wrapper for SystemTime that has <code>FromStr</code> implementation",null,null],[5,"parse_rfc3339","","Parse RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>",null,[[["str",15]],[["systemtime",3],["error",4],["result",4]]]],[5,"parse_rfc3339_weak","","Parse RFC3339-like timestamp <code>2018-02-14 00:28:07</code>",null,[[["str",15]],[["systemtime",3],["error",4],["result",4]]]],[4,"TimestampError","","Error parsing datetime (timestamp)",null,null],[13,"OutOfRange","","Numeric component is out of range",2,null],[13,"InvalidDigit","","Bad character where digit is expected",2,null],[13,"InvalidFormat","","Other formatting errors",2,null],[5,"format_rfc3339","","Format an RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>",null,[[["systemtime",3]],["rfc3339timestamp",3]]],[5,"format_rfc3339_micros","","Format an RFC3339 timestamp <code>2018-02-14T00:28:07.000000Z</code>",null,[[["systemtime",3]],["rfc3339timestamp",3]]],[5,"format_rfc3339_millis","","Format an RFC3339 timestamp <code>2018-02-14T00:28:07.000Z</code>",null,[[["systemtime",3]],["rfc3339timestamp",3]]],[5,"format_rfc3339_nanos","","Format an RFC3339 timestamp <code>2018-02-14T00:28:07.000000000Z</code>",null,[[["systemtime",3]],["rfc3339timestamp",3]]],[5,"format_rfc3339_seconds","","Format an RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>",null,[[["systemtime",3]],["rfc3339timestamp",3]]],[3,"Rfc3339Timestamp","","A wrapper type that allows you to Display a SystemTime",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"as_ref","","",4,[[],["stdduration",3]]],[11,"as_ref","","",5,[[],["systemtime",3]]],[11,"from","","",4,[[["stdduration",3]],["duration",3]]],[11,"from","","",5,[[["systemtime",3]],["timestamp",3]]],[11,"into","","",4,[[],["stdduration",3]]],[11,"into","","",5,[[],["systemtime",3]]],[11,"clone","","",0,[[],["error",4]]],[11,"clone","","",3,[[],["formattedduration",3]]],[11,"clone","","",4,[[],["duration",3]]],[11,"clone","","",5,[[],["timestamp",3]]],[11,"clone","","",2,[[],["error",4]]],[11,"clone","","",6,[[],["rfc3339timestamp",3]]],[11,"eq","","",0,[[["error",4]],["bool",15]]],[11,"ne","","",0,[[["error",4]],["bool",15]]],[11,"eq","","",4,[[["duration",3]],["bool",15]]],[11,"ne","","",4,[[["duration",3]],["bool",15]]],[11,"eq","","",5,[[["timestamp",3]],["bool",15]]],[11,"ne","","",5,[[["timestamp",3]],["bool",15]]],[11,"eq","","",2,[[["error",4]],["bool",15]]],[11,"deref","","",4,[[],["stdduration",3]]],[11,"deref","","",5,[[],["systemtime",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"hash","","",4,[[]]],[11,"from_str","","",4,[[["str",15]],[["result",4],["duration",3]]]],[11,"from_str","","",5,[[["str",15]],[["timestamp",3],["result",4]]]],[11,"get_ref","","Returns a reference to the [<code>Duration</code>][] that is being …",3,[[],["duration",3]]],[11,"get_ref","","Returns a reference to the [<code>SystemTime</code>][] that is being …",6,[[],["systemtime",3]]]],"p":[[4,"DurationError"],[13,"UnknownUnit"],[4,"TimestampError"],[3,"FormattedDuration"],[3,"Duration"],[3,"Timestamp"],[3,"Rfc3339Timestamp"]]},\
"kernel_hal":{"doc":"Hardware Abstraction Layer","i":[[0,"defs","kernel_hal","",null,null],[3,"MMUFlags","kernel_hal::defs","",null,null],[18,"CACHE_1","","",0,null],[18,"CACHE_2","","",0,null],[18,"READ","","",0,null],[18,"WRITE","","",0,null],[18,"EXECUTE","","",0,null],[18,"USER","","",0,null],[18,"RXW","","",0,null],[11,"empty","","Returns an empty set of flags",0,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",0,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",0,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",0,[[["usize",15]],[["mmuflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",0,[[["usize",15]],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",0,[[["usize",15]],["mmuflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",0,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",0,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",0,[[["mmuflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",0,[[["mmuflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",0,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",0,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",0,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",0,[[["bool",15],["mmuflags",3]]]],[4,"CachePolicy","","",null,null],[13,"Cached","","",1,null],[13,"Uncached","","",1,null],[13,"UncachedDevice","","",1,null],[13,"WriteCombining","","",1,null],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"user","kernel_hal","",null,null],[3,"UserPtr","kernel_hal::user","",null,null],[8,"Policy","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[4,"In","","",null,null],[4,"Out","","",null,null],[4,"InOut","","",null,null],[6,"UserInPtr","","",null,null],[6,"UserOutPtr","","",null,null],[6,"UserInOutPtr","","",null,null],[4,"Error","","The error type which is returned from user pointer.",null,null],[13,"InvalidUtf8","","",2,null],[13,"InvalidPointer","","",2,null],[13,"BufferTooSmall","","",2,null],[13,"InvalidLength","","",2,null],[13,"InvalidVectorAddress","","",2,null],[11,"from_addr_size","","",3,[[["usize",15]],[["result",4],["error",4]]]],[11,"is_null","","",3,[[],["bool",15]]],[11,"add","","",3,[[["usize",15]]]],[11,"as_ptr","","",3,[[]]],[11,"check","","",3,[[],[["result",4],["error",4]]]],[11,"as_ref","","",3,[[],[["error",4],["result",4]]]],[11,"read","","",3,[[],[["error",4],["result",4]]]],[11,"read_if_not_null","","",3,[[],[["option",4],["result",4],["error",4]]]],[11,"read_array","","",3,[[["usize",15]],[["result",4],["vec",3],["error",4]]]],[11,"read_string","","",3,[[["usize",15]],[["string",3],["error",4],["result",4]]]],[11,"read_cstring","","",3,[[],[["string",3],["error",4],["result",4]]]],[11,"read_cstring_array","","",3,[[],[["result",4],["vec",3],["error",4]]]],[11,"write","","",3,[[],[["result",4],["error",4]]]],[11,"write_if_not_null","","",3,[[],[["result",4],["error",4]]]],[11,"write_array","","",3,[[],[["result",4],["error",4]]]],[11,"write_cstring","","",3,[[["str",15]],[["result",4],["error",4]]]],[3,"IoVec","","",null,null],[6,"IoVecIn","","",null,null],[6,"IoVecOut","","",null,null],[3,"IoVecs","","A valid IoVecs request from user",null,null],[11,"read_iovecs","","",3,[[["usize",15]],[["result",4],["error",4],["iovecs",3]]]],[11,"read_iovecs","","",4,[[["usize",15]],[["result",4],["error",4],["iovecs",3]]]],[11,"total_len","","",5,[[],["usize",15]]],[11,"read_to_vec","","",5,[[],[["result",4],["error",4],["vec",3]]]],[11,"write_from_buf","","",5,[[],[["result",4],["usize",15],["error",4]]]],[11,"is_null","","",6,[[],["bool",15]]],[11,"len","","",6,[[],["usize",15]]],[11,"is_empty","","",6,[[],["bool",15]]],[11,"check","","",6,[[],[["result",4],["error",4]]]],[11,"as_slice","","",6,[[],[["result",4],["error",4]]]],[11,"as_mut_slice","","",6,[[],[["result",4],["error",4]]]],[0,"vdso","kernel_hal","",null,null],[3,"VdsoConstants","kernel_hal::vdso","This struct contains constants that are initialized by …",null,null],[12,"max_num_cpus","","Maximum number of CPUs that might be online during the …",7,null],[12,"features","","Bit map indicating features.",7,null],[12,"dcache_line_size","","Number of bytes in a data cache line.",7,null],[12,"icache_line_size","","Number of bytes in an instruction cache line.",7,null],[12,"ticks_per_second","","Conversion factor for zx_ticks_get return values to …",7,null],[12,"ticks_to_mono_numerator","","Ratio which relates ticks (zx_ticks_get) to clock …",7,null],[12,"ticks_to_mono_denominator","","",7,null],[12,"physmem","","Total amount of physical memory in the system, in bytes.",7,null],[12,"version_string_len","","Actual length of <code>version_string</code>, not including the NUL …",7,null],[12,"version_string","","A NUL-terminated UTF-8 string returned by …",7,null],[3,"Features","","Bit map indicating features.",null,null],[12,"cpu","","",8,null],[12,"hw_breakpoint_count","","Total amount of debug registers available in the system.",8,null],[12,"hw_watchpoint_count","","",8,null],[11,"set_version_string","","Set version string.",7,[[["str",15]]]],[3,"VersionString","","",null,null],[3,"VectorRegs","kernel_hal","",null,null],[12,"fcw","","",9,null],[12,"fsw","","",9,null],[12,"ftw","","",9,null],[12,"_pad0","","",9,null],[12,"fop","","",9,null],[12,"fip","","",9,null],[12,"fcs","","",9,null],[12,"_pad1","","",9,null],[12,"fdp","","",9,null],[12,"fds","","",9,null],[12,"_pad2","","",9,null],[12,"mxcsr","","",9,null],[12,"mxcsr_mask","","",9,null],[12,"mm","","",9,null],[12,"xmm","","",9,null],[12,"reserved","","",9,null],[12,"available","","",9,null],[3,"U128","","",null,null],[12,"0","","",10,null],[3,"HalError","","The error type which is returned from HAL functions.",null,null],[6,"Result","","The result type returned by HAL functions.",null,null],[3,"Thread","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[8,"PageTableTrait","","",null,null],[10,"map","","Map the page of <code>vaddr</code> to the frame of <code>paddr</code> with <code>flags</code>.",11,[[["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",6]]],[10,"unmap","","Unmap the page of <code>vaddr</code>.",11,[[["virtaddr",6]],["result",6]]],[10,"protect","","Change the <code>flags</code> of the page of <code>vaddr</code>.",11,[[["virtaddr",6],["mmuflags",3]],["result",6]]],[10,"query","","Query the physical address which the page of <code>vaddr</code> maps …",11,[[["virtaddr",6]],[["result",6],["physaddr",6]]]],[10,"table_phys","","Get the physical address of root page table.",11,[[],["physaddr",6]]],[11,"map_many","","",11,[[["virtaddr",6],["mmuflags",3]],["result",6]]],[11,"map_cont","","",11,[[["usize",15],["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",6]]],[11,"unmap_cont","","",11,[[["usize",15],["virtaddr",6]],["result",6]]],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[5,"pmem_read","","Read physical memory from <code>paddr</code> to <code>buf</code>.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to <code>paddr</code> from <code>buf</code>.",null,[[["physaddr",6]]]],[5,"pmem_zero","","Zero physical memory at <code>[paddr, paddr + len)</code>",null,[[["usize",15],["physaddr",6]]]],[5,"frame_copy","","Copy content of <code>src</code> frame to <code>target</code> frame.",null,[[["physaddr",6]]]],[5,"frame_flush","","Flush the physical frame.",null,[[["physaddr",6]]]],[5,"serial_set_callback","","Register a callback of serial readable event.",null,[[["box",3],["fn",8]]]],[5,"serial_read","","Read a string from console.",null,[[],["usize",15]]],[5,"serial_write","","Output a string to console.",null,[[["str",15]]]],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[5,"timer_set","","Set a new timer. After <code>deadline</code>, the <code>callback</code> will be …",null,[[["fnonce",8],["box",3],["duration",3]]]],[5,"timer_tick","","Check timers, call when timer interrupt happened.",null,[[]]],[3,"InterruptManager","","",null,null],[5,"vdso_constants","","Get platform specific information.",null,[[],["vdsoconstants",3]]],[5,"fetch_fault_vaddr","","Get fault address of the last page fault.",null,[[],["virtaddr",6]]],[5,"pc_firmware_tables","","Get physical address of <code>acpi_rsdp</code> and <code>smbios</code> on x86_64.",null,[[]]],[5,"get_acpi_table","","Get ACPI Table",null,[[],[["acpi",3],["option",4]]]],[5,"outpd","","IO Ports access on x86 platform",null,[[["u32",15],["u16",15]]]],[5,"inpd","","",null,[[["u16",15]],["u32",15]]],[5,"apic_local_id","","Get local APIC ID",null,[[],["u8",15]]],[5,"fill_random","","Fill random bytes to the buffer",null,[[]]],[5,"yield_now","","Yields execution back to the async runtime.",null,[[]]],[5,"sleep_until","","Sleeps until the specified of time.",null,[[["duration",3]]]],[3,"SleepFuture","","",null,null],[5,"serial_getchar","","Get a char from serial.",null,[[]]],[3,"SerialFuture","","",null,null],[3,"GeneralRegs","","General registers",null,null],[12,"rax","","",12,null],[12,"rbx","","",12,null],[12,"rcx","","",12,null],[12,"rdx","","",12,null],[12,"rsi","","",12,null],[12,"rdi","","",12,null],[12,"rbp","","",12,null],[12,"rsp","","",12,null],[12,"r8","","",12,null],[12,"r9","","",12,null],[12,"r10","","",12,null],[12,"r11","","",12,null],[12,"r12","","",12,null],[12,"r13","","",12,null],[12,"r14","","",12,null],[12,"r15","","",12,null],[12,"rip","","",12,null],[12,"rflags","","",12,null],[12,"fsbase","","",12,null],[12,"gsbase","","",12,null],[3,"UserContext","","User space context",null,null],[12,"general","","",13,null],[12,"trap_num","","",13,null],[12,"error_code","","",13,null],[11,"borrow","kernel_hal::defs","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","kernel_hal","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_future","","",19,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_future","","",20,[[]]],[11,"borrow","kernel_hal::user","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","kernel_hal::vdso","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"borrow","kernel_hal","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"clone","","",12,[[],["generalregs",3]]],[11,"clone","","",13,[[],["usercontext",3]]],[11,"default","","",13,[[],["usercontext",3]]],[11,"default","","",12,[[],["generalregs",3]]],[11,"eq","","",13,[[["usercontext",3]],["bool",15]]],[11,"ne","","",13,[[["usercontext",3]],["bool",15]]],[11,"eq","","",12,[[["generalregs",3]],["bool",15]]],[11,"ne","","",12,[[["generalregs",3]],["bool",15]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"map","","Map the page of <code>vaddr</code> to the frame of <code>paddr</code> with <code>flags</code>.",16,[[["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",6]]],[11,"unmap","","Unmap the page of <code>vaddr</code>.",16,[[["virtaddr",6]],["result",6]]],[11,"protect","","Change the <code>flags</code> of the page of <code>vaddr</code>.",16,[[["virtaddr",6],["mmuflags",3]],["result",6]]],[11,"query","","Query the physical address which the page of <code>vaddr</code> maps …",16,[[["virtaddr",6]],[["result",6],["physaddr",6]]]],[11,"table_phys","","Get the physical address of root page table.",16,[[],["physaddr",6]]],[11,"unmap_cont","","",16,[[["usize",15],["virtaddr",6]],["result",6]]],[11,"deref","kernel_hal::user","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"fmt","kernel_hal::defs","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal::user","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal::vdso","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","kernel_hal::defs","Returns the set difference of the two sets of flags.",0,[[["mmuflags",3]],["mmuflags",3]]],[11,"eq","","",0,[[["mmuflags",3]],["bool",15]]],[11,"ne","","",0,[[["mmuflags",3]],["bool",15]]],[11,"eq","","",1,[[["cachepolicy",4]],["bool",15]]],[11,"eq","kernel_hal::user","",2,[[["error",4]],["bool",15]]],[11,"cmp","kernel_hal::defs","",0,[[["mmuflags",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["mmuflags",3]],[["ordering",4],["option",4]]]],[11,"sub_assign","","Disables all flags enabled in the set.",0,[[["mmuflags",3]]]],[11,"not","","Returns the complement of this set of flags.",0,[[],["mmuflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",0,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",0,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",0,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",0,[[["mmuflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",0,[[["mmuflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",0,[[["mmuflags",3]]]],[11,"drop","kernel_hal","",17,[[]]],[11,"hash","kernel_hal::defs","",0,[[]]],[11,"try_from","","",1,[[["u32",15]],[["result",4],["u32",15]]]],[11,"from_iter","","",0,[[["intoiterator",8]],["mmuflags",3]]],[11,"from","kernel_hal::user","",3,[[["usize",15]]]],[11,"fmt","kernel_hal::defs","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"clone","","",0,[[],["mmuflags",3]]],[11,"clone","","",1,[[],["cachepolicy",4]]],[11,"clone","kernel_hal","",9,[[],["vectorregs",3]]],[11,"clone","","",10,[[],["u128",3]]],[11,"clone","kernel_hal::user","",2,[[],["error",4]]],[11,"default","kernel_hal","",9,[[]]],[11,"default","","",10,[[],["u128",3]]],[11,"default","kernel_hal::vdso","",24,[[]]],[11,"poll","kernel_hal","",19,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",20,[[["context",3],["pin",3]],["poll",4]]],[11,"spawn","","Spawn a new thread.",15,[[["box",3],["usize",15],["pin",3]]]],[11,"set_tid","","Set tid and pid of current task.",15,[[["u64",15]]]],[11,"get_tid","","Get tid and pid of current task.",15,[[]]],[11,"map_many","","",11,[[["virtaddr",6],["mmuflags",3]],["result",6]]],[11,"map_cont","","",11,[[["usize",15],["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",6]]],[11,"unmap_cont","","",11,[[["usize",15],["virtaddr",6]],["result",6]]],[11,"current","","Get current page table",16,[[]]],[11,"new","","Create a new <code>PageTable</code>.",16,[[]]],[11,"alloc","","",17,[[],["option",4]]],[11,"alloc_contiguous_base","","",17,[[["usize",15]],[["physaddr",6],["option",4]]]],[11,"alloc_contiguous","","",17,[[["usize",15]],["vec",3]]],[11,"addr","","",17,[[],["physaddr",6]]],[11,"zero_frame_addr","","",17,[[],["physaddr",6]]],[11,"handle","","Handle IRQ.",18,[[["u8",15]]]],[11,"set_ioapic_handle","","",18,[[["u32",15],["box",3],["fn",8]],[["option",4],["u8",15]]]],[11,"add_handle","","Add an interrupt handle to an irq",18,[[["fn",8],["box",3],["u8",15]],[["option",4],["u8",15]]]],[11,"reset_ioapic_handle","","",18,[[["u32",15]],["bool",15]]],[11,"remove_handle","","Remove the interrupt handle of an irq",18,[[["u8",15]],["bool",15]]],[11,"allocate_block","","Allocate contiguous positions for irq",18,[[["u32",15]],["option",4]]],[11,"free_block","","",18,[[["u32",15]]]],[11,"overwrite_handler","","",18,[[["u32",15],["box",3],["fn",8]],["bool",15]]],[11,"enable","","Enable IRQ.",18,[[["u32",15]]]],[11,"disable","","Disable IRQ.",18,[[["u32",15]]]],[11,"maxinstr","","Get IO APIC maxinstr",18,[[["u32",15]],[["option",4],["u8",15]]]],[11,"configure","","",18,[[["u32",15],["u8",15],["bool",15]],["bool",15]]],[11,"is_valid","","",18,[[["u32",15]],["bool",15]]],[11,"run_fncall","","Go to user context by function return, within the same …",13,[[]]],[11,"get_syscall_num","","Get number of syscall",13,[[],["usize",15]]],[11,"get_syscall_ret","","Get return value of syscall",13,[[],["usize",15]]],[11,"set_syscall_ret","","Set return value of syscall",13,[[["usize",15]]]],[11,"get_syscall_args","","Get syscall args",13,[[]]],[11,"set_ip","","Set instruction pointer",13,[[["usize",15]]]],[11,"set_sp","","Set stack pointer",13,[[["usize",15]]]],[11,"get_sp","","Get stack pointer",13,[[],["usize",15]]],[11,"set_tls","","Set tls pointer",13,[[["usize",15]]]]],"p":[[3,"MMUFlags"],[4,"CachePolicy"],[4,"Error"],[3,"UserPtr"],[6,"UserInPtr"],[3,"IoVecs"],[3,"IoVec"],[3,"VdsoConstants"],[3,"Features"],[3,"VectorRegs"],[3,"U128"],[8,"PageTableTrait"],[3,"GeneralRegs"],[3,"UserContext"],[3,"HalError"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"InterruptManager"],[3,"SleepFuture"],[3,"SerialFuture"],[4,"In"],[4,"Out"],[4,"InOut"],[3,"VersionString"]]},\
"kernel_hal_unix":{"doc":"","i":[[3,"MMUFlags","kernel_hal_unix","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"defs","","",null,null],[3,"MMUFlags","kernel_hal_unix::defs","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"user","kernel_hal_unix","",null,null],[3,"UserPtr","kernel_hal_unix::user","",null,null],[8,"Policy","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[4,"In","","",null,null],[4,"Out","","",null,null],[4,"InOut","","",null,null],[6,"UserInPtr","","",null,null],[6,"UserOutPtr","","",null,null],[6,"UserInOutPtr","","",null,null],[4,"Error","","The error type which is returned from user pointer.",null,null],[13,"InvalidUtf8","","",1,null],[13,"InvalidPointer","","",1,null],[13,"BufferTooSmall","","",1,null],[13,"InvalidLength","","",1,null],[13,"InvalidVectorAddress","","",1,null],[3,"IoVec","","",null,null],[6,"IoVecIn","","",null,null],[6,"IoVecOut","","",null,null],[3,"IoVecs","","A valid IoVecs request from user",null,null],[0,"vdso","kernel_hal_unix","",null,null],[3,"VdsoConstants","kernel_hal_unix::vdso","This struct contains constants that are initialized by …",null,null],[12,"max_num_cpus","","Maximum number of CPUs that might be online during the …",2,null],[12,"features","","Bit map indicating features.",2,null],[12,"dcache_line_size","","Number of bytes in a data cache line.",2,null],[12,"icache_line_size","","Number of bytes in an instruction cache line.",2,null],[12,"ticks_per_second","","Conversion factor for zx_ticks_get return values to …",2,null],[12,"ticks_to_mono_numerator","","Ratio which relates ticks (zx_ticks_get) to clock …",2,null],[12,"ticks_to_mono_denominator","","",2,null],[12,"physmem","","Total amount of physical memory in the system, in bytes.",2,null],[12,"version_string_len","","Actual length of <code>version_string</code>, not including the NUL …",2,null],[12,"version_string","","A NUL-terminated UTF-8 string returned by …",2,null],[3,"Features","","Bit map indicating features.",null,null],[12,"cpu","","",3,null],[12,"hw_breakpoint_count","","Total amount of debug registers available in the system.",3,null],[12,"hw_watchpoint_count","","",3,null],[3,"VersionString","","",null,null],[3,"GeneralRegs","kernel_hal_unix","General registers",null,null],[12,"rax","","",4,null],[12,"rbx","","",4,null],[12,"rcx","","",4,null],[12,"rdx","","",4,null],[12,"rsi","","",4,null],[12,"rdi","","",4,null],[12,"rbp","","",4,null],[12,"rsp","","",4,null],[12,"r8","","",4,null],[12,"r9","","",4,null],[12,"r10","","",4,null],[12,"r11","","",4,null],[12,"r12","","",4,null],[12,"r13","","",4,null],[12,"r14","","",4,null],[12,"r15","","",4,null],[12,"rip","","",4,null],[12,"rflags","","",4,null],[12,"fsbase","","",4,null],[12,"gsbase","","",4,null],[3,"UserContext","","User space context",null,null],[12,"general","","",5,null],[12,"trap_num","","",5,null],[12,"error_code","","",5,null],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[6,"Result","","The result type returned by HAL functions.",null,null],[3,"Thread","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[8,"PageTableTrait","","",null,null],[10,"map","","Map the page of <code>vaddr</code> to the frame of <code>paddr</code> with <code>flags</code>.",6,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[10,"unmap","","Unmap the page of <code>vaddr</code>.",6,[[["usize",15]],[["result",4],["halerror",3]]]],[10,"protect","","Change the <code>flags</code> of the page of <code>vaddr</code>.",6,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[10,"query","","Query the physical address which the page of <code>vaddr</code> maps …",6,[[["usize",15]],[["usize",15],["halerror",3],["result",4]]]],[10,"table_phys","","Get the physical address of root page table.",6,[[],["usize",15]]],[11,"map_many","","",6,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[11,"map_cont","","",6,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[11,"unmap_cont","","",6,[[["usize",15]],[["result",4],["halerror",3]]]],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[5,"pmem_read","","Read physical memory from <code>paddr</code> to <code>buf</code>.",null,[[["usize",15]]]],[5,"pmem_write","","Write physical memory to <code>paddr</code> from <code>buf</code>.",null,[[["usize",15]]]],[5,"pmem_zero","","Zero physical memory at <code>[paddr, paddr + len)</code>",null,[[["usize",15]]]],[5,"frame_copy","","Copy content of <code>src</code> frame to <code>target</code> frame.",null,[[["usize",15]]]],[5,"frame_flush","","Flush the physical frame.",null,[[["usize",15]]]],[5,"serial_set_callback","","Register a callback of serial readable event.",null,[[["fn",8],["box",3],["global",3]]]],[5,"serial_read","","Read a string from console.",null,[[],["usize",15]]],[5,"serial_write","","Output a string to console.",null,[[["str",15]]]],[5,"timer_set","","Set a new timer. After <code>deadline</code>, the <code>callback</code> will be …",null,[[["global",3],["duration",3],["fnonce",8],["box",3]]]],[5,"timer_tick","","Check timers, call when timer interrupt happened.",null,[[]]],[3,"InterruptManager","","",null,null],[5,"vdso_constants","","Get platform specific information.",null,[[],["vdsoconstants",3]]],[5,"fetch_fault_vaddr","","Get fault address of the last page fault.",null,[[],["usize",15]]],[5,"pc_firmware_tables","","Get physical address of <code>acpi_rsdp</code> and <code>smbios</code> on x86_64.",null,[[]]],[5,"get_acpi_table","","Get ACPI Table",null,[[],[["acpi",3],["option",4]]]],[5,"outpd","","IO Ports access on x86 platform",null,[[["u32",15],["u16",15]]]],[5,"inpd","","",null,[[["u16",15]],["u32",15]]],[5,"apic_local_id","","Get local APIC ID",null,[[],["u8",15]]],[5,"fill_random","","Fill random bytes to the buffer",null,[[]]],[5,"yield_now","","Yields execution back to the async runtime.",null,[[]]],[5,"sleep_until","","Sleeps until the specified of time.",null,[[["duration",3]]]],[3,"SleepFuture","","",null,null],[5,"serial_getchar","","Get a char from serial.",null,[[]]],[3,"SerialFuture","","",null,null],[3,"MMUFlags","","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[3,"VectorRegs","","",null,null],[12,"fcw","","",7,null],[12,"fsw","","",7,null],[12,"ftw","","",7,null],[12,"_pad0","","",7,null],[12,"fop","","",7,null],[12,"fip","","",7,null],[12,"fcs","","",7,null],[12,"_pad1","","",7,null],[12,"fdp","","",7,null],[12,"fds","","",7,null],[12,"_pad2","","",7,null],[12,"mxcsr","","",7,null],[12,"mxcsr_mask","","",7,null],[12,"mm","","",7,null],[12,"xmm","","",7,null],[12,"reserved","","",7,null],[12,"available","","",7,null],[3,"U128","","",null,null],[12,"0","","",8,null],[3,"HalError","","The error type which is returned from HAL functions.",null,null],[5,"syscall_entry","","The syscall entry of function call.",null,[[]]],[3,"Thread","","",null,null],[11,"spawn","","",9,[[["usize",15],["box",3],["pin",3]]]],[11,"set_tid","","",9,[[["u64",15]]]],[11,"get_tid","","",9,[[]]],[3,"PageTable","","Page Table",null,null],[11,"new","","Create a new <code>PageTable</code>.",10,[[]]],[3,"PhysFrame","","",null,null],[11,"alloc","","",11,[[],["option",4]]],[11,"zero_frame_addr","","",11,[[],["physaddr",6]]],[5,"pmem_read","","Read physical memory from <code>paddr</code> to <code>buf</code>.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to <code>paddr</code> from <code>buf</code>.",null,[[["physaddr",6]]]],[5,"pmem_zero","","Zero physical memory at <code>[paddr, paddr + len)</code>",null,[[["physaddr",6],["usize",15]]]],[5,"frame_copy","","Copy content of <code>src</code> frame to <code>target</code> frame",null,[[["physaddr",6]]]],[5,"frame_flush","","Flush the physical frame.",null,[[["physaddr",6]]]],[5,"serial_set_callback","","",null,[[["fn",8],["box",3]]]],[5,"serial_read","","",null,[[],["usize",15]]],[5,"serial_write","","Output a char to console.",null,[[["str",15]]]],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[5,"timer_set","","Set a new timer.",null,[[["box",3],["duration",3],["fnonce",8]]]],[5,"vdso_constants","","",null,[[],["vdsoconstants",3]]],[5,"init","","Initialize the HAL.",null,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","kernel_hal_unix::user","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","kernel_hal_unix::vdso","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","kernel_hal_unix","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_future","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_future","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"clone","kernel_hal_unix::user","",1,[[],["error",4]]],[11,"clone","kernel_hal_unix","",8,[[],["u128",3]]],[11,"clone","","",7,[[],["vectorregs",3]]],[11,"clone","","",12,[[],["mmuflags",3]]],[11,"clone","","",0,[[],["cachepolicy",4]]],[11,"deref","kernel_hal_unix::user","",18,[[]]],[11,"drop","kernel_hal_unix","",22,[[]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"deref_mut","kernel_hal_unix::user","",18,[[]]],[11,"fmt","kernel_hal_unix","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["mmuflags",3]]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["mmuflags",3]]]],[11,"try_from","","",0,[[["u32",15]],[["result",4],["u32",15],["cachepolicy",4]]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["mmuflags",3]]]],[11,"eq","","",12,[[["mmuflags",3]],["bool",15]]],[11,"ne","","",12,[[["mmuflags",3]],["bool",15]]],[11,"eq","","",0,[[["cachepolicy",4]],["bool",15]]],[11,"eq","kernel_hal_unix::user","",1,[[["error",4]],["bool",15]]],[11,"fmt","kernel_hal_unix","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["mmuflags",3]]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"hash","","",12,[[]]],[11,"default","","",7,[[],["vectorregs",3]]],[11,"default","kernel_hal_unix::vdso","",19,[[],["versionstring",3]]],[11,"default","kernel_hal_unix","",8,[[],["u128",3]]],[11,"not","","Returns the complement of this set of flags.",12,[[],["mmuflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["mmuflags",3]],["mmuflags",3]]],[11,"extend","","",12,[[]]],[11,"map","","Map the page of <code>vaddr</code> to the frame of <code>paddr</code> with <code>flags</code>.",21,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[11,"unmap","","Unmap the page of <code>vaddr</code>.",21,[[["usize",15]],[["result",4],["halerror",3]]]],[11,"protect","","Change the <code>flags</code> of the page of <code>vaddr</code>.",21,[[["usize",15],["mmuflags",3]],[["result",4],["halerror",3]]]],[11,"query","","Query the physical address which the page of <code>vaddr</code> maps …",21,[[["usize",15]],[["usize",15],["halerror",3],["result",4]]]],[11,"table_phys","","Get the physical address of root page table.",21,[[],["usize",15]]],[11,"unmap_cont","","",21,[[["usize",15]],[["result",4],["halerror",3]]]],[11,"from_iter","","",12,[[],["mmuflags",3]]],[11,"poll","","",24,[[["context",3],["pin",3],["sleepfuture",3]],["poll",4]]],[11,"poll","","",25,[[["context",3],["serialfuture",3],["pin",3]],["poll",4]]],[11,"from","kernel_hal_unix::user","",13,[[["usize",15]],["userptr",3]]],[11,"partial_cmp","kernel_hal_unix","",12,[[["mmuflags",3]],[["option",4],["ordering",4]]]],[11,"cmp","","",12,[[["mmuflags",3]],["ordering",4]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::user","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::user","",18,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::vdso","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::user","",17,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::vdso","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::user","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::vdso","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix","",26,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",4,[[],["generalregs",3]]],[11,"clone","","",5,[[],["usercontext",3]]],[11,"default","","",5,[[],["usercontext",3]]],[11,"default","","",4,[[],["generalregs",3]]],[11,"eq","","",5,[[["usercontext",3]],["bool",15]]],[11,"ne","","",5,[[["usercontext",3]],["bool",15]]],[11,"eq","","",4,[[["generalregs",3]],["bool",15]]],[11,"ne","","",4,[[["generalregs",3]],["bool",15]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"drop","","",11,[[]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"map","","Map the page of <code>vaddr</code> to the frame of <code>paddr</code> with <code>flags</code>.",10,[[["physaddr",6],["virtaddr",6],["mmuflags",3]],["result",6]]],[11,"unmap","","Unmap the page of <code>vaddr</code>.",10,[[["virtaddr",6]],["result",6]]],[11,"protect","","Change the <code>flags</code> of the page of <code>vaddr</code>.",10,[[["virtaddr",6],["mmuflags",3]],["result",6]]],[11,"query","","Query the physical address which the page of <code>vaddr</code> maps …",10,[[["virtaddr",6]],[["physaddr",6],["result",6]]]],[11,"table_phys","","Get the physical address of root page table.",10,[[],["physaddr",6]]],[11,"unmap_cont","","",10,[[["usize",15],["virtaddr",6]],["result",6]]],[18,"CACHE_1","","",12,null],[18,"CACHE_2","","",12,null],[18,"READ","","",12,null],[18,"WRITE","","",12,null],[18,"EXECUTE","","",12,null],[18,"USER","","",12,null],[18,"RXW","","",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",12,[[["usize",15]],[["option",4],["mmuflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",12,[[["usize",15]],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["usize",15]],["mmuflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",12,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",12,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",12,[[["mmuflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",12,[[["mmuflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",12,[[["bool",15],["mmuflags",3]]]],[11,"from_addr_size","kernel_hal_unix::user","",13,[[["usize",15]],[["error",4],["userptr",3],["result",4]]]],[11,"is_null","","",13,[[],["bool",15]]],[11,"add","","",13,[[["usize",15]],["userptr",3]]],[11,"as_ptr","","",13,[[]]],[11,"check","","",13,[[],[["result",4],["error",4]]]],[11,"as_ref","","",13,[[],[["error",4],["result",4]]]],[11,"read","","",13,[[],[["error",4],["result",4]]]],[11,"read_if_not_null","","",13,[[],[["error",4],["result",4],["option",4]]]],[11,"read_array","","",13,[[["usize",15]],[["vec",3],["error",4],["result",4]]]],[11,"read_string","","",13,[[["usize",15]],[["error",4],["result",4],["string",3]]]],[11,"read_cstring","","",13,[[],[["error",4],["result",4],["string",3]]]],[11,"read_cstring_array","","",13,[[],[["vec",3],["error",4],["result",4]]]],[11,"write","","",13,[[],[["result",4],["error",4]]]],[11,"write_if_not_null","","",13,[[],[["result",4],["error",4]]]],[11,"write_array","","",13,[[],[["result",4],["error",4]]]],[11,"write_cstring","","",13,[[["str",15]],[["result",4],["error",4]]]],[11,"read_iovecs","","",13,[[["usize",15]],[["iovecs",3],["error",4],["result",4]]]],[11,"is_null","","",17,[[],["bool",15]]],[11,"len","","",17,[[],["usize",15]]],[11,"is_empty","","",17,[[],["bool",15]]],[11,"check","","",17,[[],[["result",4],["error",4]]]],[11,"as_slice","","",17,[[],[["error",4],["result",4]]]],[11,"as_mut_slice","","",17,[[],[["error",4],["result",4]]]],[11,"total_len","","",18,[[],["usize",15]]],[11,"read_to_vec","","",18,[[],[["error",4],["result",4],["vec",3]]]],[11,"write_from_buf","","",18,[[],[["usize",15],["error",4],["result",4]]]],[11,"set_version_string","kernel_hal_unix::vdso","Set version string.",2,[[["str",15]]]],[11,"run_fncall","kernel_hal_unix","Go to user context by function return, within the same …",5,[[]]],[11,"get_syscall_num","","Get number of syscall",5,[[],["usize",15]]],[11,"get_syscall_ret","","Get return value of syscall",5,[[],["usize",15]]],[11,"set_syscall_ret","","Set return value of syscall",5,[[["usize",15]]]],[11,"get_syscall_args","","Get syscall args",5,[[]]],[11,"set_ip","","Set instruction pointer",5,[[["usize",15]]]],[11,"set_sp","","Set stack pointer",5,[[["usize",15]]]],[11,"get_sp","","Get stack pointer",5,[[],["usize",15]]],[11,"set_tls","","Set tls pointer",5,[[["usize",15]]]],[11,"spawn","","Spawn a new thread.",20,[[["box",3],["usize",15],["pin",3]],["thread",3]]],[11,"set_tid","","Set tid and pid of current task.",20,[[["u64",15]]]],[11,"get_tid","","Get tid and pid of current task.",20,[[]]],[11,"current","","Get current page table",21,[[],["pagetable",3]]],[11,"new","","Create a new <code>PageTable</code>.",21,[[],["pagetable",3]]],[11,"alloc","","",22,[[],[["option",4],["physframe",3]]]],[11,"alloc_contiguous_base","","",22,[[["usize",15]],[["usize",15],["option",4]]]],[11,"alloc_contiguous","","",22,[[["usize",15]],[["physframe",3],["global",3],["vec",3]]]],[11,"addr","","",22,[[],["usize",15]]],[11,"zero_frame_addr","","",22,[[],["usize",15]]],[11,"handle","","Handle IRQ.",23,[[["u8",15]]]],[11,"set_ioapic_handle","","",23,[[["u32",15],["global",3],["fn",8],["box",3]],[["option",4],["u8",15]]]],[11,"add_handle","","Add an interrupt handle to an irq",23,[[["global",3],["u8",15],["fn",8],["box",3]],[["option",4],["u8",15]]]],[11,"reset_ioapic_handle","","",23,[[["u32",15]],["bool",15]]],[11,"remove_handle","","Remove the interrupt handle of an irq",23,[[["u8",15]],["bool",15]]],[11,"allocate_block","","Allocate contiguous positions for irq",23,[[["u32",15]],["option",4]]],[11,"free_block","","",23,[[["u32",15]]]],[11,"overwrite_handler","","",23,[[["u32",15],["global",3],["fn",8],["box",3]],["bool",15]]],[11,"enable","","Enable IRQ.",23,[[["u32",15]]]],[11,"disable","","Disable IRQ.",23,[[["u32",15]]]],[11,"maxinstr","","Get IO APIC maxinstr",23,[[["u32",15]],[["option",4],["u8",15]]]],[11,"configure","","",23,[[["u32",15],["u8",15],["bool",15]],["bool",15]]],[11,"is_valid","","",23,[[["u32",15]],["bool",15]]]],"p":[[4,"CachePolicy"],[4,"Error"],[3,"VdsoConstants"],[3,"Features"],[3,"GeneralRegs"],[3,"UserContext"],[8,"PageTableTrait"],[3,"VectorRegs"],[3,"U128"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"MMUFlags"],[3,"UserPtr"],[4,"In"],[4,"Out"],[4,"InOut"],[3,"IoVec"],[3,"IoVecs"],[3,"VersionString"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"InterruptManager"],[3,"SleepFuture"],[3,"SerialFuture"],[3,"HalError"]]},\
"kv_log_macro":{"doc":"Log macro for log’s kv-unstable backend.","i":[[4,"Level","kv_log_macro","An enum representing the available verbosity levels of …",null,null],[13,"Error","","The “error” level.",0,null],[13,"Warn","","The “warn” level.",0,null],[13,"Info","","The “info” level.",0,null],[13,"Debug","","The “debug” level.",0,null],[13,"Trace","","The “trace” level.",0,null],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[14,"log","","The standard logging macro.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_str","","",0,[[["str",15]],[["level",4],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"le","","",0,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",0,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",0,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["level",4]],["bool",15]]],[11,"le","","",0,[[["level",4]],["bool",15]]],[11,"gt","","",0,[[["level",4]],["bool",15]]],[11,"ge","","",0,[[["level",4]],["bool",15]]],[11,"hash","","",0,[[]]],[11,"clone","","",0,[[],["level",4]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"eq","","",0,[[["level",4]],["bool",15]]],[11,"eq","","",0,[[["levelfilter",4]],["bool",15]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.",0,[[],["levelfilter",4]]]],"p":[[4,"Level"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[8,"LazyStatic","lazy_static","Support trait for enabling a few common operation on lazy …",null,null],[5,"initialize","","Takes a shared reference to a lazy static and initializes …",null,[[]]],[14,"lazy_static","","",null,null]],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","i":[[5,"isalnum","libc","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"open_wmemstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"timegm","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"endservent","","",null,null],[5,"getservbyname","","",null,null],[5,"getservbyport","","",null,null],[5,"getservent","","",null,null],[5,"setservent","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has …",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"clock_getcpuclockid","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"posix_fadvise64","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"getspnam_r","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"accept4","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sendfile64","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"fanotify_init","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"fgetspent_r","","",null,null],[5,"sgetspent_r","","",null,null],[5,"getspent_r","","",null,null],[5,"qsort_r","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"memmem","","",null,null],[5,"getauxval","","",null,null],[5,"adjtimex","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"copy_file_range","","",null,null],[5,"fanotify_mark","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"dlmopen","","",null,null],[5,"dlinfo","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[4,"DIR","","",null,null],[6,"locale_t","","",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[4,"timezone","","",null,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"CLOCK_TAI","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_OPTIONS","","",null,null],[17,"IP_ROUTER_ALERT","","",null,null],[17,"IP_RECVOPTS","","",null,null],[17,"IP_RETOPTS","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_PKTOPTIONS","","",null,null],[17,"IP_MTU_DISCOVER","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_RECVTTL","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_MTU","","",null,null],[17,"IP_FREEBIND","","",null,null],[17,"IP_IPSEC_POLICY","","",null,null],[17,"IP_XFRM_POLICY","","",null,null],[17,"IP_PASSSEC","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IP_MINTTL","","",null,null],[17,"IP_NODEFRAG","","",null,null],[17,"IP_CHECKSUM","","",null,null],[17,"IP_BIND_ADDRESS_NO_PORT","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_UNBLOCK_SOURCE","","",null,null],[17,"IP_BLOCK_SOURCE","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_MSFILTER","","",null,null],[17,"IP_MULTICAST_ALL","","",null,null],[17,"IP_UNICAST_IF","","",null,null],[17,"IP_DEFAULT_MULTICAST_TTL","","",null,null],[17,"IP_DEFAULT_MULTICAST_LOOP","","",null,null],[17,"IP_PMTUDISC_DONT","","",null,null],[17,"IP_PMTUDISC_WANT","","",null,null],[17,"IP_PMTUDISC_DO","","",null,null],[17,"IP_PMTUDISC_PROBE","","",null,null],[17,"IP_PMTUDISC_INTERFACE","","",null,null],[17,"IP_PMTUDISC_OMIT","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"MCAST_EXCLUDE","","",null,null],[17,"MCAST_INCLUDE","","",null,null],[17,"MCAST_JOIN_GROUP","","",null,null],[17,"MCAST_BLOCK_SOURCE","","",null,null],[17,"MCAST_UNBLOCK_SOURCE","","",null,null],[17,"MCAST_LEAVE_GROUP","","",null,null],[17,"MCAST_JOIN_SOURCE_GROUP","","",null,null],[17,"MCAST_LEAVE_SOURCE_GROUP","","",null,null],[17,"MCAST_MSFILTER","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_AUTHHDR","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_IPSEC_POLICY","","",null,null],[17,"IPV6_XFRM_POLICY","","",null,null],[17,"IPV6_HDRINCL","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVHOPLIMIT","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVHOPOPTS","","",null,null],[17,"IPV6_HOPOPTS","","",null,null],[17,"IPV6_RTHDRDSTOPTS","","",null,null],[17,"IPV6_RECVRTHDR","","",null,null],[17,"IPV6_RTHDR","","",null,null],[17,"IPV6_RECVDSTOPTS","","",null,null],[17,"IPV6_DSTOPTS","","",null,null],[17,"IPV6_RECVPATHMTU","","",null,null],[17,"IPV6_PATHMTU","","",null,null],[17,"IPV6_DONTFRAG","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_AUTOFLOWLABEL","","",null,null],[17,"IPV6_ADDR_PREFERENCES","","",null,null],[17,"IPV6_MINHOPCOUNT","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_TRANSPARENT","","",null,null],[17,"IPV6_UNICAST_IF","","",null,null],[17,"IPV6_PREFER_SRC_TMP","","",null,null],[17,"IPV6_PREFER_SRC_PUBLIC","","",null,null],[17,"IPV6_PREFER_SRC_PUBTMP_DEFAULT","","",null,null],[17,"IPV6_PREFER_SRC_COA","","",null,null],[17,"IPV6_PREFER_SRC_HOME","","",null,null],[17,"IPV6_PREFER_SRC_CGA","","",null,null],[17,"IPV6_PREFER_SRC_NONCGA","","",null,null],[17,"IPV6_PMTUDISC_DONT","","",null,null],[17,"IPV6_PMTUDISC_WANT","","",null,null],[17,"IPV6_PMTUDISC_DO","","",null,null],[17,"IPV6_PMTUDISC_PROBE","","",null,null],[17,"IPV6_PMTUDISC_INTERFACE","","",null,null],[17,"IPV6_PMTUDISC_OMIT","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"UIO_MAXIOV","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"ADDR_NO_RANDOMIZE","","",null,null],[17,"MMAP_PAGE_ZERO","","",null,null],[17,"ADDR_COMPAT_LAYOUT","","",null,null],[17,"READ_IMPLIES_EXEC","","",null,null],[17,"ADDR_LIMIT_32BIT","","",null,null],[17,"SHORT_INODE","","",null,null],[17,"WHOLE_SECONDS","","",null,null],[17,"STICKY_TIMEOUTS","","",null,null],[17,"ADDR_LIMIT_3GB","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"P_PIDFD","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]],["bool",15]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]],["bool",15]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]],["bool",15]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]],["bool",15]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]],["bool",15]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]],["bool",15]]],[5,"W_EXITCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"W_STOPCODE","","",null,[[["c_int",6]],["c_int",6]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[5,"IPOPT_COPIED","","",null,[[["u8",15]],["u8",15]]],[5,"IPOPT_CLASS","","",null,[[["u8",15]],["u8",15]]],[5,"IPOPT_NUMBER","","",null,[[["u8",15]],["u8",15]]],[5,"IPTOS_ECN","","",null,[[["u8",15]],["u8",15]]],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"canid_t","","",null,null],[6,"can_err_mask_t","","",null,null],[4,"fpos64_t","","",null,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_reserved","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",77,null],[12,"mnt_dir","","",77,null],[12,"mnt_type","","",77,null],[12,"mnt_opts","","",77,null],[12,"mnt_freq","","",77,null],[12,"mnt_passno","","",77,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",78,null],[12,"version","","",78,null],[12,"reserved","","",78,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",79,null],[12,"ipi6_ifindex","","",79,null],[3,"arpd_request","","",null,null],[12,"req","","",80,null],[12,"ip","","",80,null],[12,"dev","","",80,null],[12,"stamp","","",80,null],[12,"updated","","",80,null],[12,"ha","","",80,null],[3,"inotify_event","","",null,null],[12,"wd","","",81,null],[12,"mask","","",81,null],[12,"cookie","","",81,null],[12,"len","","",81,null],[3,"fanotify_response","","",null,null],[12,"fd","","",82,null],[12,"response","","",82,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",83,null],[12,"svm_reserved1","","",83,null],[12,"svm_port","","",83,null],[12,"svm_cid","","",83,null],[12,"svm_zero","","",83,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",84,null],[12,"rm_eo","","",84,null],[3,"sock_extended_err","","",null,null],[12,"ee_errno","","",85,null],[12,"ee_origin","","",85,null],[12,"ee_type","","",85,null],[12,"ee_code","","",85,null],[12,"ee_pad","","",85,null],[12,"ee_info","","",85,null],[12,"ee_data","","",85,null],[3,"__c_anonymous_sockaddr_can_tp","","",null,null],[12,"rx_id","","",86,null],[12,"tx_id","","",86,null],[3,"__c_anonymous_sockaddr_can_j1939","","",null,null],[12,"name","","",87,null],[12,"pgn","","",87,null],[12,"addr","","",87,null],[3,"can_filter","","",null,null],[12,"can_id","","",88,null],[12,"can_mask","","",88,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",89,null],[12,"nl_pid","","",89,null],[12,"nl_groups","","",89,null],[3,"dirent","","",null,null],[12,"d_ino","","",90,null],[12,"d_off","","",90,null],[12,"d_reclen","","",90,null],[12,"d_type","","",90,null],[12,"d_name","","",90,null],[3,"dirent64","","",null,null],[12,"d_ino","","",91,null],[12,"d_off","","",91,null],[12,"d_reclen","","",91,null],[12,"d_type","","",91,null],[12,"d_name","","",91,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",92,null],[12,"salg_type","","",92,null],[12,"salg_feat","","",92,null],[12,"salg_mask","","",92,null],[12,"salg_name","","",92,null],[3,"af_alg_iv","","WARNING: The <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of …",null,null],[12,"ivlen","","",93,null],[12,"iv","","",93,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",94,null],[12,"mq_maxmsg","","",94,null],[12,"mq_msgsize","","",94,null],[12,"mq_curmsgs","","",94,null],[19,"__c_anonymous_sockaddr_can_can_addr","","",null,null],[12,"tp","","",95,null],[12,"j1939","","",95,null],[3,"sockaddr_can","","",null,null],[12,"can_family","","",96,null],[12,"can_ifindex","","",96,null],[12,"can_addr","","",96,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_GSO_MAX_SEGS","","",null,null],[17,"IFLA_GSO_MAX_SIZE","","",null,null],[17,"IFLA_PAD","","",null,null],[17,"IFLA_XDP","","",null,null],[17,"IFLA_EVENT","","",null,null],[17,"IFLA_NEW_NETNSID","","",null,null],[17,"IFLA_IF_NETNSID","","",null,null],[17,"IFLA_TARGET_NETNSID","","",null,null],[17,"IFLA_CARRIER_UP_COUNT","","",null,null],[17,"IFLA_CARRIER_DOWN_COUNT","","",null,null],[17,"IFLA_NEW_IFINDEX","","",null,null],[17,"IFLA_MIN_MTU","","",null,null],[17,"IFLA_MAX_MTU","","",null,null],[17,"IFLA_PROP_LIST","","",null,null],[17,"IFLA_ALT_IFNAME","","",null,null],[17,"IFLA_PERM_ADDRESS","","",null,null],[17,"IFLA_PROTO_DOWN_REASON","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_ULP","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_MPTCP","","Multipath TCP",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_RECVFRAGSIZE","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_MULTICAST_ALL","","",null,null],[17,"IPV6_ROUTER_ALERT_ISOLATE","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_RECVFRAGSIZE","","",null,null],[17,"IPV6_FREEBIND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IPV6_RTHDR_LOOSE","","",null,null],[17,"IPV6_RTHDR_STRICT","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"NFQNL_MSG_PACKET","","",null,null],[17,"NFQNL_MSG_VERDICT","","",null,null],[17,"NFQNL_MSG_CONFIG","","",null,null],[17,"NFQNL_MSG_VERDICT_BATCH","","",null,null],[17,"NFQA_UNSPEC","","",null,null],[17,"NFQA_PACKET_HDR","","",null,null],[17,"NFQA_VERDICT_HDR","","",null,null],[17,"NFQA_MARK","","",null,null],[17,"NFQA_TIMESTAMP","","",null,null],[17,"NFQA_IFINDEX_INDEV","","",null,null],[17,"NFQA_IFINDEX_OUTDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFQA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFQA_HWADDR","","",null,null],[17,"NFQA_PAYLOAD","","",null,null],[17,"NFQA_CT","","",null,null],[17,"NFQA_CT_INFO","","",null,null],[17,"NFQA_CAP_LEN","","",null,null],[17,"NFQA_SKB_INFO","","",null,null],[17,"NFQA_EXP","","",null,null],[17,"NFQA_UID","","",null,null],[17,"NFQA_GID","","",null,null],[17,"NFQA_SECCTX","","",null,null],[17,"NFQNL_CFG_CMD_NONE","","",null,null],[17,"NFQNL_CFG_CMD_BIND","","",null,null],[17,"NFQNL_CFG_CMD_UNBIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFQNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFQNL_COPY_NONE","","",null,null],[17,"NFQNL_COPY_META","","",null,null],[17,"NFQNL_COPY_PACKET","","",null,null],[17,"NFQA_CFG_UNSPEC","","",null,null],[17,"NFQA_CFG_CMD","","",null,null],[17,"NFQA_CFG_PARAMS","","",null,null],[17,"NFQA_CFG_QUEUE_MAXLEN","","",null,null],[17,"NFQA_CFG_MASK","","",null,null],[17,"NFQA_CFG_FLAGS","","",null,null],[17,"NFQA_CFG_F_FAIL_OPEN","","",null,null],[17,"NFQA_CFG_F_CONNTRACK","","",null,null],[17,"NFQA_CFG_F_GSO","","",null,null],[17,"NFQA_CFG_F_UID_GID","","",null,null],[17,"NFQA_CFG_F_SECCTX","","",null,null],[17,"NFQA_CFG_F_MAX","","",null,null],[17,"NFQA_SKB_CSUMNOTREADY","","",null,null],[17,"NFQA_SKB_GSO","","",null,null],[17,"NFQA_SKB_CSUM_NOTVERIFIED","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"IP6T_SO_ORIGINAL_DST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"UDP_CORK","","",null,null],[17,"UDP_ENCAP","","",null,null],[17,"UDP_NO_CHECK6_TX","","",null,null],[17,"UDP_NO_CHECK6_RX","","",null,null],[17,"UDP_SEGMENT","","",null,null],[17,"UDP_GRO","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_LOCAL","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"KEY_SPEC_THREAD_KEYRING","","",null,null],[17,"KEY_SPEC_PROCESS_KEYRING","","",null,null],[17,"KEY_SPEC_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_USER_KEYRING","","",null,null],[17,"KEY_SPEC_USER_SESSION_KEYRING","","",null,null],[17,"KEY_SPEC_GROUP_KEYRING","","",null,null],[17,"KEY_SPEC_REQKEY_AUTH_KEY","","",null,null],[17,"KEY_SPEC_REQUESTOR_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_NO_CHANGE","","",null,null],[17,"KEY_REQKEY_DEFL_DEFAULT","","",null,null],[17,"KEY_REQKEY_DEFL_THREAD_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_PROCESS_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_USER_SESSION_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_GROUP_KEYRING","","",null,null],[17,"KEY_REQKEY_DEFL_REQUESTOR_KEYRING","","",null,null],[17,"KEYCTL_GET_KEYRING_ID","","",null,null],[17,"KEYCTL_JOIN_SESSION_KEYRING","","",null,null],[17,"KEYCTL_UPDATE","","",null,null],[17,"KEYCTL_REVOKE","","",null,null],[17,"KEYCTL_CHOWN","","",null,null],[17,"KEYCTL_SETPERM","","",null,null],[17,"KEYCTL_DESCRIBE","","",null,null],[17,"KEYCTL_CLEAR","","",null,null],[17,"KEYCTL_LINK","","",null,null],[17,"KEYCTL_UNLINK","","",null,null],[17,"KEYCTL_SEARCH","","",null,null],[17,"KEYCTL_READ","","",null,null],[17,"KEYCTL_INSTANTIATE","","",null,null],[17,"KEYCTL_NEGATE","","",null,null],[17,"KEYCTL_SET_REQKEY_KEYRING","","",null,null],[17,"KEYCTL_SET_TIMEOUT","","",null,null],[17,"KEYCTL_ASSUME_AUTHORITY","","",null,null],[17,"KEYCTL_GET_SECURITY","","",null,null],[17,"KEYCTL_SESSION_TO_PARENT","","",null,null],[17,"KEYCTL_REJECT","","",null,null],[17,"KEYCTL_INSTANTIATE_IOV","","",null,null],[17,"KEYCTL_INVALIDATE","","",null,null],[17,"KEYCTL_GET_PERSISTENT","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FAN_ACCESS","","",null,null],[17,"FAN_MODIFY","","",null,null],[17,"FAN_CLOSE_WRITE","","",null,null],[17,"FAN_CLOSE_NOWRITE","","",null,null],[17,"FAN_OPEN","","",null,null],[17,"FAN_Q_OVERFLOW","","",null,null],[17,"FAN_OPEN_PERM","","",null,null],[17,"FAN_ACCESS_PERM","","",null,null],[17,"FAN_ONDIR","","",null,null],[17,"FAN_EVENT_ON_CHILD","","",null,null],[17,"FAN_CLOSE","","",null,null],[17,"FAN_CLOEXEC","","",null,null],[17,"FAN_NONBLOCK","","",null,null],[17,"FAN_CLASS_NOTIF","","",null,null],[17,"FAN_CLASS_CONTENT","","",null,null],[17,"FAN_CLASS_PRE_CONTENT","","",null,null],[17,"FAN_UNLIMITED_QUEUE","","",null,null],[17,"FAN_UNLIMITED_MARKS","","",null,null],[17,"FAN_MARK_ADD","","",null,null],[17,"FAN_MARK_REMOVE","","",null,null],[17,"FAN_MARK_DONT_FOLLOW","","",null,null],[17,"FAN_MARK_ONLYDIR","","",null,null],[17,"FAN_MARK_INODE","","",null,null],[17,"FAN_MARK_MOUNT","","",null,null],[17,"FAN_MARK_FILESYSTEM","","",null,null],[17,"FAN_MARK_IGNORED_MASK","","",null,null],[17,"FAN_MARK_IGNORED_SURV_MODIFY","","",null,null],[17,"FAN_MARK_FLUSH","","",null,null],[17,"FANOTIFY_METADATA_VERSION","","",null,null],[17,"FAN_ALLOW","","",null,null],[17,"FAN_DENY","","",null,null],[17,"FAN_NOFD","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_ENOSYS","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"SO_EE_ORIGIN_NONE","","",null,null],[17,"SO_EE_ORIGIN_LOCAL","","",null,null],[17,"SO_EE_ORIGIN_ICMP","","",null,null],[17,"SO_EE_ORIGIN_ICMP6","","",null,null],[17,"SO_EE_ORIGIN_TXSTATUS","","",null,null],[17,"SO_EE_ORIGIN_TIMESTAMPING","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"CAN_EFF_FLAG","","",null,null],[17,"CAN_RTR_FLAG","","",null,null],[17,"CAN_ERR_FLAG","","",null,null],[17,"CAN_SFF_MASK","","",null,null],[17,"CAN_EFF_MASK","","",null,null],[17,"CAN_ERR_MASK","","",null,null],[17,"CAN_SFF_ID_BITS","","",null,null],[17,"CAN_EFF_ID_BITS","","",null,null],[17,"CAN_MAX_DLC","","",null,null],[17,"CAN_MAX_DLEN","","",null,null],[17,"CANFD_MAX_DLC","","",null,null],[17,"CANFD_MAX_DLEN","","",null,null],[17,"CANFD_BRS","","",null,null],[17,"CANFD_ESI","","",null,null],[17,"CAN_MTU","","",null,null],[17,"CANFD_MTU","","",null,null],[17,"CAN_RAW","","",null,null],[17,"CAN_BCM","","",null,null],[17,"CAN_TP16","","",null,null],[17,"CAN_TP20","","",null,null],[17,"CAN_MCNET","","",null,null],[17,"CAN_ISOTP","","",null,null],[17,"CAN_J1939","","",null,null],[17,"CAN_NPROTO","","",null,null],[17,"SOL_CAN_BASE","","",null,null],[17,"CAN_INV_FILTER","","",null,null],[17,"CAN_RAW_FILTER_MAX","","",null,null],[5,"NLA_ALIGN","","",null,[[["c_int",6]],["c_int",6]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ALLOC_SIZE","","",null,[[["c_int",6]],["size_t",6]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t",3]]]],[5,"CPU_SET","","",null,[[["usize",15],["cpu_set_t",3]]]],[5,"CPU_CLR","","",null,[[["usize",15],["cpu_set_t",3]]]],[5,"CPU_ISSET","","",null,[[["usize",15],["cpu_set_t",3]],["bool",15]]],[5,"CPU_COUNT_S","","",null,[[["usize",15],["cpu_set_t",3]],["c_int",6]]],[5,"CPU_COUNT","","",null,[[["cpu_set_t",3]],["c_int",6]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t",3]],["bool",15]]],[5,"major","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"minor","","",null,[[["dev_t",6]],["c_uint",6]]],[5,"makedev","","",null,[[["c_uint",6]],["dev_t",6]]],[5,"IPTOS_TOS","","",null,[[["u8",15]],["u8",15]]],[5,"IPTOS_PREC","","",null,[[["u8",15]],["u8",15]]],[5,"RT_TOS","","",null,[[["u8",15]],["u8",15]]],[5,"RT_ADDRCLASS","","",null,[[["u32",15]],["u32",15]]],[5,"RT_LOCALADDR","","",null,[[["u32",15]],["bool",15]]],[5,"SO_EE_OFFENDER","","",null,[[]]],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"Lmid_t","","",null,null],[6,"regoff_t","","",null,null],[3,"statx","","",null,null],[12,"stx_mask","","",97,null],[12,"stx_blksize","","",97,null],[12,"stx_attributes","","",97,null],[12,"stx_nlink","","",97,null],[12,"stx_uid","","",97,null],[12,"stx_gid","","",97,null],[12,"stx_mode","","",97,null],[12,"__statx_pad1","","",97,null],[12,"stx_ino","","",97,null],[12,"stx_size","","",97,null],[12,"stx_blocks","","",97,null],[12,"stx_attributes_mask","","",97,null],[12,"stx_atime","","",97,null],[12,"stx_btime","","",97,null],[12,"stx_ctime","","",97,null],[12,"stx_mtime","","",97,null],[12,"stx_rdev_major","","",97,null],[12,"stx_rdev_minor","","",97,null],[12,"stx_dev_major","","",97,null],[12,"stx_dev_minor","","",97,null],[12,"__statx_pad2","","",97,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",98,null],[12,"tv_nsec","","",98,null],[12,"__statx_timestamp_pad1","","",98,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",99,null],[12,"aio_lio_opcode","","",99,null],[12,"aio_reqprio","","",99,null],[12,"aio_buf","","",99,null],[12,"aio_nbytes","","",99,null],[12,"aio_sigevent","","",99,null],[12,"aio_offset","","",99,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",100,null],[12,"e_exit","","",100,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",101,null],[12,"tv_usec","","",101,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",102,null],[12,"gl_pathv","","",102,null],[12,"gl_offs","","",102,null],[12,"gl_flags","","",102,null],[3,"msghdr","","",null,null],[12,"msg_name","","",103,null],[12,"msg_namelen","","",103,null],[12,"msg_iov","","",103,null],[12,"msg_iovlen","","",103,null],[12,"msg_control","","",103,null],[12,"msg_controllen","","",103,null],[12,"msg_flags","","",103,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",104,null],[12,"cmsg_level","","",104,null],[12,"cmsg_type","","",104,null],[3,"termios","","",null,null],[12,"c_iflag","","",105,null],[12,"c_oflag","","",105,null],[12,"c_cflag","","",105,null],[12,"c_lflag","","",105,null],[12,"c_line","","",105,null],[12,"c_cc","","",105,null],[12,"c_ispeed","","",105,null],[12,"c_ospeed","","",105,null],[3,"mallinfo","","",null,null],[12,"arena","","",106,null],[12,"ordblks","","",106,null],[12,"smblks","","",106,null],[12,"hblks","","",106,null],[12,"hblkhd","","",106,null],[12,"usmblks","","",106,null],[12,"fsmblks","","",106,null],[12,"uordblks","","",106,null],[12,"fordblks","","",106,null],[12,"keepcost","","",106,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",107,null],[12,"nlmsg_type","","",107,null],[12,"nlmsg_flags","","",107,null],[12,"nlmsg_seq","","",107,null],[12,"nlmsg_pid","","",107,null],[3,"nlmsgerr","","",null,null],[12,"error","","",108,null],[12,"msg","","",108,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",109,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",110,null],[12,"nm_block_nr","","",110,null],[12,"nm_frame_size","","",110,null],[12,"nm_frame_nr","","",110,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",111,null],[12,"nm_len","","",111,null],[12,"nm_group","","",111,null],[12,"nm_pid","","",111,null],[12,"nm_uid","","",111,null],[12,"nm_gid","","",111,null],[3,"nlattr","","",null,null],[12,"nla_len","","",112,null],[12,"nla_type","","",112,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",113,null],[12,"rt_dst","","",113,null],[12,"rt_gateway","","",113,null],[12,"rt_genmask","","",113,null],[12,"rt_flags","","",113,null],[12,"rt_pad2","","",113,null],[12,"rt_pad3","","",113,null],[12,"rt_tos","","",113,null],[12,"rt_class","","",113,null],[12,"rt_pad4","","",113,null],[12,"rt_metric","","",113,null],[12,"rt_dev","","",113,null],[12,"rt_mtu","","",113,null],[12,"rt_window","","",113,null],[12,"rt_irtt","","",113,null],[3,"timex","","",null,null],[12,"modes","","",114,null],[12,"offset","","",114,null],[12,"freq","","",114,null],[12,"maxerror","","",114,null],[12,"esterror","","",114,null],[12,"status","","",114,null],[12,"constant","","",114,null],[12,"precision","","",114,null],[12,"tolerance","","",114,null],[12,"time","","",114,null],[12,"tick","","",114,null],[12,"ppsfreq","","",114,null],[12,"jitter","","",114,null],[12,"shift","","",114,null],[12,"stabil","","",114,null],[12,"jitcnt","","",114,null],[12,"calcnt","","",114,null],[12,"errcnt","","",114,null],[12,"stbcnt","","",114,null],[12,"tai","","",114,null],[12,"__unused1","","",114,null],[12,"__unused2","","",114,null],[12,"__unused3","","",114,null],[12,"__unused4","","",114,null],[12,"__unused5","","",114,null],[12,"__unused6","","",114,null],[12,"__unused7","","",114,null],[12,"__unused8","","",114,null],[12,"__unused9","","",114,null],[12,"__unused10","","",114,null],[12,"__unused11","","",114,null],[3,"ntptimeval","","",null,null],[12,"time","","",115,null],[12,"maxerror","","",115,null],[12,"esterror","","",115,null],[12,"tai","","",115,null],[12,"__glibc_reserved1","","",115,null],[12,"__glibc_reserved2","","",115,null],[12,"__glibc_reserved3","","",115,null],[12,"__glibc_reserved4","","",115,null],[3,"regex_t","","",null,null],[3,"utmpx","","",null,null],[12,"ut_type","","",116,null],[12,"ut_pid","","",116,null],[12,"ut_line","","",116,null],[12,"ut_id","","",116,null],[12,"ut_user","","",116,null],[12,"ut_host","","",116,null],[12,"ut_exit","","",116,null],[12,"ut_session","","",116,null],[12,"ut_tv","","",116,null],[12,"ut_addr_v6","","",116,null],[17,"HUGETLB_FLAG_ENCODE_SHIFT","","",null,null],[17,"HUGETLB_FLAG_ENCODE_MASK","","",null,null],[17,"HUGETLB_FLAG_ENCODE_64KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512KB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_8MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_32MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_256MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_512MB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_1GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_2GB","","",null,null],[17,"HUGETLB_FLAG_ENCODE_16GB","","",null,null],[17,"MAP_HUGE_SHIFT","","",null,null],[17,"MAP_HUGE_MASK","","",null,null],[17,"MAP_HUGE_64KB","","",null,null],[17,"MAP_HUGE_512KB","","",null,null],[17,"MAP_HUGE_1MB","","",null,null],[17,"MAP_HUGE_2MB","","",null,null],[17,"MAP_HUGE_8MB","","",null,null],[17,"MAP_HUGE_16MB","","",null,null],[17,"MAP_HUGE_32MB","","",null,null],[17,"MAP_HUGE_256MB","","",null,null],[17,"MAP_HUGE_512MB","","",null,null],[17,"MAP_HUGE_1GB","","",null,null],[17,"MAP_HUGE_2GB","","",null,null],[17,"MAP_HUGE_16GB","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"LM_ID_BASE","","",null,null],[17,"LM_ID_NEWLM","","",null,null],[17,"RTLD_DI_LMID","","",null,null],[17,"RTLD_DI_LINKMAP","","",null,null],[17,"RTLD_DI_CONFIGADDR","","",null,null],[17,"RTLD_DI_SERINFO","","",null,null],[17,"RTLD_DI_SERINFOSIZE","","",null,null],[17,"RTLD_DI_ORIGIN","","",null,null],[17,"RTLD_DI_PROFILENAME","","",null,null],[17,"RTLD_DI_PROFILEOUT","","",null,null],[17,"RTLD_DI_TLS_MODID","","",null,null],[17,"RTLD_DI_TLS_DATA","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"TCP_FASTOPEN_CONNECT","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening …",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"AFS_SUPER_MAGIC","","",null,null],[17,"AUTOFS_SUPER_MAGIC","","",null,null],[17,"BINDERFS_SUPER_MAGIC","","",null,null],[17,"BPF_FS_MAGIC","","",null,null],[17,"BTRFS_SUPER_MAGIC","","",null,null],[17,"CGROUP2_SUPER_MAGIC","","",null,null],[17,"CGROUP_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"DEBUGFS_MAGIC","","",null,null],[17,"DEVPTS_SUPER_MAGIC","","",null,null],[17,"ECRYPTFS_SUPER_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"F2FS_SUPER_MAGIC","","",null,null],[17,"FUTEXFS_SUPER_MAGIC","","",null,null],[17,"HOSTFS_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX3_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"NILFS_SUPER_MAGIC","","",null,null],[17,"OCFS2_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"OVERLAYFS_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"QNX6_SUPER_MAGIC","","",null,null],[17,"RDTGROUP_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"SYSFS_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"TRACEFS_MAGIC","","",null,null],[17,"UDF_SUPER_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"XENFS_SUPER_MAGIC","","",null,null],[17,"XFS_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"UNAME26","","",null,null],[17,"FDPIC_FUNCPTRS","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"KEYCTL_DH_COMPUTE","","",null,null],[17,"KEYCTL_PKEY_QUERY","","",null,null],[17,"KEYCTL_PKEY_ENCRYPT","","",null,null],[17,"KEYCTL_PKEY_DECRYPT","","",null,null],[17,"KEYCTL_PKEY_SIGN","","",null,null],[17,"KEYCTL_PKEY_VERIFY","","",null,null],[17,"KEYCTL_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_SUPPORTS_ENCRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_DECRYPT","","",null,null],[17,"KEYCTL_SUPPORTS_SIGN","","",null,null],[17,"KEYCTL_SUPPORTS_VERIFY","","",null,null],[17,"KEYCTL_MOVE","","",null,null],[17,"KEYCTL_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_CAPABILITIES","","",null,null],[17,"KEYCTL_CAPS0_PERSISTENT_KEYRINGS","","",null,null],[17,"KEYCTL_CAPS0_DIFFIE_HELLMAN","","",null,null],[17,"KEYCTL_CAPS0_PUBLIC_KEY","","",null,null],[17,"KEYCTL_CAPS0_BIG_KEY","","",null,null],[17,"KEYCTL_CAPS0_INVALIDATE","","",null,null],[17,"KEYCTL_CAPS0_RESTRICT_KEYRING","","",null,null],[17,"KEYCTL_CAPS0_MOVE","","",null,null],[17,"KEYCTL_CAPS1_NS_KEYRING_NAME","","",null,null],[17,"KEYCTL_CAPS1_NS_KEY_TAG","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"AT_NULL","","",null,null],[17,"AT_IGNORE","","",null,null],[17,"AT_EXECFD","","",null,null],[17,"AT_PHDR","","",null,null],[17,"AT_PHENT","","",null,null],[17,"AT_PHNUM","","",null,null],[17,"AT_PAGESZ","","",null,null],[17,"AT_BASE","","",null,null],[17,"AT_FLAGS","","",null,null],[17,"AT_ENTRY","","",null,null],[17,"AT_NOTELF","","",null,null],[17,"AT_UID","","",null,null],[17,"AT_EUID","","",null,null],[17,"AT_GID","","",null,null],[17,"AT_EGID","","",null,null],[17,"AT_PLATFORM","","",null,null],[17,"AT_HWCAP","","",null,null],[17,"AT_CLKTCK","","",null,null],[17,"AT_SECURE","","",null,null],[17,"AT_BASE_PLATFORM","","",null,null],[17,"AT_RANDOM","","",null,null],[17,"AT_HWCAP2","","",null,null],[17,"AT_EXECFN","","",null,null],[17,"ADJ_OFFSET","","",null,null],[17,"ADJ_FREQUENCY","","",null,null],[17,"ADJ_MAXERROR","","",null,null],[17,"ADJ_ESTERROR","","",null,null],[17,"ADJ_STATUS","","",null,null],[17,"ADJ_TIMECONST","","",null,null],[17,"ADJ_TAI","","",null,null],[17,"ADJ_SETOFFSET","","",null,null],[17,"ADJ_MICRO","","",null,null],[17,"ADJ_NANO","","",null,null],[17,"ADJ_TICK","","",null,null],[17,"ADJ_OFFSET_SINGLESHOT","","",null,null],[17,"ADJ_OFFSET_SS_READ","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"NTP_API","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"TIME_BAD","","",null,null],[17,"MAXTC","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_EEND","","",null,null],[17,"REG_ESIZE","","",null,null],[17,"REG_ERPAREN","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",117,null],[12,"loads","","",117,null],[12,"totalram","","",117,null],[12,"freeram","","",117,null],[12,"sharedram","","",117,null],[12,"bufferram","","",117,null],[12,"totalswap","","",117,null],[12,"freeswap","","",117,null],[12,"procs","","",117,null],[12,"pad","","",117,null],[12,"totalhigh","","",117,null],[12,"freehigh","","",117,null],[12,"mem_unit","","",117,null],[12,"_f","","",117,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",118,null],[12,"msg_stime","","",118,null],[12,"msg_rtime","","",118,null],[12,"msg_ctime","","",118,null],[12,"msg_qnum","","",118,null],[12,"msg_qbytes","","",118,null],[12,"msg_lspid","","",118,null],[12,"msg_lrpid","","",118,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",119,null],[12,"sa_mask","","",119,null],[12,"sa_flags","","",119,null],[12,"sa_restorer","","",119,null],[3,"statfs","","",null,null],[12,"f_type","","",120,null],[12,"f_bsize","","",120,null],[12,"f_blocks","","",120,null],[12,"f_bfree","","",120,null],[12,"f_bavail","","",120,null],[12,"f_files","","",120,null],[12,"f_ffree","","",120,null],[12,"f_fsid","","",120,null],[12,"f_namelen","","",120,null],[12,"f_frsize","","",120,null],[3,"flock","","",null,null],[12,"l_type","","",121,null],[12,"l_whence","","",121,null],[12,"l_start","","",121,null],[12,"l_len","","",121,null],[12,"l_pid","","",121,null],[3,"flock64","","",null,null],[12,"l_type","","",122,null],[12,"l_whence","","",122,null],[12,"l_start","","",122,null],[12,"l_len","","",122,null],[12,"l_pid","","",122,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",123,null],[12,"si_errno","","",123,null],[12,"si_code","","",123,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",124,null],[12,"ss_flags","","",124,null],[12,"ss_size","","",124,null],[3,"stat","","",null,null],[12,"st_dev","","",125,null],[12,"st_ino","","",125,null],[12,"st_nlink","","",125,null],[12,"st_mode","","",125,null],[12,"st_uid","","",125,null],[12,"st_gid","","",125,null],[12,"st_rdev","","",125,null],[12,"st_size","","",125,null],[12,"st_blksize","","",125,null],[12,"st_blocks","","",125,null],[12,"st_atime","","",125,null],[12,"st_atime_nsec","","",125,null],[12,"st_mtime","","",125,null],[12,"st_mtime_nsec","","",125,null],[12,"st_ctime","","",125,null],[12,"st_ctime_nsec","","",125,null],[3,"stat64","","",null,null],[12,"st_dev","","",126,null],[12,"st_ino","","",126,null],[12,"st_nlink","","",126,null],[12,"st_mode","","",126,null],[12,"st_uid","","",126,null],[12,"st_gid","","",126,null],[12,"st_rdev","","",126,null],[12,"st_size","","",126,null],[12,"st_blksize","","",126,null],[12,"st_blocks","","",126,null],[12,"st_atime","","",126,null],[12,"st_atime_nsec","","",126,null],[12,"st_mtime","","",126,null],[12,"st_mtime_nsec","","",126,null],[12,"st_ctime","","",126,null],[12,"st_ctime_nsec","","",126,null],[3,"statfs64","","",null,null],[12,"f_type","","",127,null],[12,"f_bsize","","",127,null],[12,"f_blocks","","",127,null],[12,"f_bfree","","",127,null],[12,"f_bavail","","",127,null],[12,"f_files","","",127,null],[12,"f_ffree","","",127,null],[12,"f_fsid","","",127,null],[12,"f_namelen","","",127,null],[12,"f_frsize","","",127,null],[12,"f_flags","","",127,null],[12,"f_spare","","",127,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",128,null],[12,"f_frsize","","",128,null],[12,"f_blocks","","",128,null],[12,"f_bfree","","",128,null],[12,"f_bavail","","",128,null],[12,"f_files","","",128,null],[12,"f_ffree","","",128,null],[12,"f_favail","","",128,null],[12,"f_fsid","","",128,null],[12,"f_flag","","",128,null],[12,"f_namemax","","",128,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",129,null],[12,"exponent","","",129,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",130,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",131,null],[12,"swd","","",131,null],[12,"ftw","","",131,null],[12,"fop","","",131,null],[12,"rip","","",131,null],[12,"rdp","","",131,null],[12,"mxcsr","","",131,null],[12,"mxcr_mask","","",131,null],[12,"_st","","",131,null],[12,"_xmm","","",131,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",132,null],[12,"r14","","",132,null],[12,"r13","","",132,null],[12,"r12","","",132,null],[12,"rbp","","",132,null],[12,"rbx","","",132,null],[12,"r11","","",132,null],[12,"r10","","",132,null],[12,"r9","","",132,null],[12,"r8","","",132,null],[12,"rax","","",132,null],[12,"rcx","","",132,null],[12,"rdx","","",132,null],[12,"rsi","","",132,null],[12,"rdi","","",132,null],[12,"orig_rax","","",132,null],[12,"rip","","",132,null],[12,"cs","","",132,null],[12,"eflags","","",132,null],[12,"rsp","","",132,null],[12,"ss","","",132,null],[12,"fs_base","","",132,null],[12,"gs_base","","",132,null],[12,"ds","","",132,null],[12,"es","","",132,null],[12,"fs","","",132,null],[12,"gs","","",132,null],[3,"user","","",null,null],[12,"regs","","",133,null],[12,"u_fpvalid","","",133,null],[12,"i387","","",133,null],[12,"u_tsize","","",133,null],[12,"u_dsize","","",133,null],[12,"u_ssize","","",133,null],[12,"start_code","","",133,null],[12,"start_stack","","",133,null],[12,"signal","","",133,null],[12,"u_ar0","","",133,null],[12,"u_fpstate","","",133,null],[12,"magic","","",133,null],[12,"u_comm","","",133,null],[12,"u_debugreg","","",133,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",134,null],[12,"fpregs","","",134,null],[3,"ipc_perm","","",null,null],[12,"__key","","",135,null],[12,"uid","","",135,null],[12,"gid","","",135,null],[12,"cuid","","",135,null],[12,"cgid","","",135,null],[12,"mode","","",135,null],[12,"__seq","","",135,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",136,null],[12,"shm_segsz","","",136,null],[12,"shm_atime","","",136,null],[12,"shm_dtime","","",136,null],[12,"shm_ctime","","",136,null],[12,"shm_cpid","","",136,null],[12,"shm_lpid","","",136,null],[12,"shm_nattch","","",136,null],[3,"termios2","","",null,null],[12,"c_iflag","","",137,null],[12,"c_oflag","","",137,null],[12,"c_cflag","","",137,null],[12,"c_lflag","","",137,null],[12,"c_line","","",137,null],[12,"c_cc","","",137,null],[12,"c_ispeed","","",137,null],[12,"c_ospeed","","",137,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",138,null],[12,"imr_address","","",138,null],[12,"imr_ifindex","","",138,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",139,null],[12,"swd","","",139,null],[12,"ftw","","",139,null],[12,"fop","","",139,null],[12,"rip","","",139,null],[12,"rdp","","",139,null],[12,"mxcsr","","",139,null],[12,"mxcr_mask","","",139,null],[12,"st_space","","",139,null],[12,"xmm_space","","",139,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",140,null],[12,"uc_link","","",140,null],[12,"uc_stack","","",140,null],[12,"uc_mcontext","","",140,null],[12,"uc_sigmask","","",140,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_CBPF","","",null,null],[17,"SO_ATTACH_REUSEPORT_EBPF","","",null,null],[17,"SO_CNX_ADVICE","","",null,null],[17,"SCM_TIMESTAMPING_OPT_STATS","","",null,null],[17,"SO_MEMINFO","","",null,null],[17,"SO_INCOMING_NAPI_ID","","",null,null],[17,"SO_COOKIE","","",null,null],[17,"SCM_TIMESTAMPING_PKTINFO","","",null,null],[17,"SO_PEERGROUPS","","",null,null],[17,"SO_ZEROCOPY","","",null,null],[17,"SO_TXTIME","","",null,null],[17,"SCM_TXTIME","","",null,null],[17,"SO_BINDTOIFINDEX","","",null,null],[17,"SO_TIMESTAMP_NEW","","",null,null],[17,"SO_TIMESTAMPNS_NEW","","",null,null],[17,"SO_TIMESTAMPING_NEW","","",null,null],[17,"SO_RCVTIMEO_NEW","","",null,null],[17,"SO_SNDTIMEO_NEW","","",null,null],[17,"SO_DETACH_REUSEPORT_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_OFD_GETLK","","",null,null],[17,"F_OFD_SETLK","","",null,null],[17,"F_OFD_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_SYNC","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"PTRACE_SYSEMU","","",null,null],[17,"PTRACE_SYSEMU_SINGLESTEP","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",141,null],[12,"f_frsize","","",141,null],[12,"f_blocks","","",141,null],[12,"f_bfree","","",141,null],[12,"f_bavail","","",141,null],[12,"f_files","","",141,null],[12,"f_ffree","","",141,null],[12,"f_favail","","",141,null],[12,"f_fsid","","",141,null],[12,"f_flag","","",141,null],[12,"f_namemax","","",141,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[17,"SYS_pidfd_open","","",null,null],[17,"SYS_clone3","","",null,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"fanotify_event_metadata","","",null,null],[12,"event_len","","",142,null],[12,"vers","","",142,null],[12,"reserved","","",142,null],[12,"metadata_len","","",142,null],[12,"mask","","",142,null],[12,"fd","","",142,null],[12,"pid","","",142,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"can_frame","","",null,null],[12,"can_id","","",143,null],[12,"can_dlc","","",143,null],[12,"data","","",143,null],[3,"canfd_frame","","",null,null],[12,"can_id","","",144,null],[12,"len","","",144,null],[12,"flags","","",144,null],[12,"data","","",144,null],[4,"c_void","","Equivalent to C’s <code>void</code> type when used as a pointer.",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",145,null],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"fmt","","",168,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",165,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",166,[[],["file",4]]],[11,"clone","","",167,[[],["fpos_t",4]]],[11,"clone","","",162,[[],["timezone",4]]],[11,"clone","","",17,[[],["in_addr",3]]],[11,"clone","","",18,[[],["ip_mreq",3]]],[11,"clone","","",19,[[],["ip_mreq_source",3]]],[11,"clone","","",20,[[],["sockaddr",3]]],[11,"clone","","",21,[[],["sockaddr_in",3]]],[11,"clone","","",22,[[],["sockaddr_in6",3]]],[11,"clone","","",23,[[],["addrinfo",3]]],[11,"clone","","",24,[[],["sockaddr_ll",3]]],[11,"clone","","",163,[[],["fd_set",3]]],[11,"clone","","",25,[[],["tm",3]]],[11,"clone","","",26,[[],["sched_param",3]]],[11,"clone","","",27,[[],["dl_info",3]]],[11,"clone","","",28,[[],["lconv",3]]],[11,"clone","","",29,[[],["in_pktinfo",3]]],[11,"clone","","",30,[[],["ifaddrs",3]]],[11,"clone","","",164,[[],["in6_rtmsg",3]]],[11,"clone","","",31,[[],["arpreq",3]]],[11,"clone","","",32,[[],["arpreq_old",3]]],[11,"clone","","",33,[[],["arphdr",3]]],[11,"clone","","",34,[[],["mmsghdr",3]]],[11,"clone","","",35,[[],["epoll_event",3]]],[11,"clone","","",36,[[],["sockaddr_un",3]]],[11,"clone","","",37,[[],["sockaddr_storage",3]]],[11,"clone","","",38,[[],["utsname",3]]],[11,"clone","","",39,[[],["sigevent",3]]],[11,"clone","","",151,[[],["fpos64_t",4]]],[11,"clone","","",40,[[],["rlimit64",3]]],[11,"clone","","",41,[[],["glob_t",3]]],[11,"clone","","",42,[[],["passwd",3]]],[11,"clone","","",43,[[],["spwd",3]]],[11,"clone","","",44,[[],["dqblk",3]]],[11,"clone","","",45,[[],["signalfd_siginfo",3]]],[11,"clone","","",46,[[],["itimerspec",3]]],[11,"clone","","",152,[[],["fsid_t",3]]],[11,"clone","","",47,[[],["packet_mreq",3]]],[11,"clone","","",153,[[],["cpu_set_t",3]]],[11,"clone","","",48,[[],["if_nameindex",3]]],[11,"clone","","",49,[[],["msginfo",3]]],[11,"clone","","",50,[[],["sembuf",3]]],[11,"clone","","",51,[[],["input_event",3]]],[11,"clone","","",52,[[],["input_id",3]]],[11,"clone","","",53,[[],["input_absinfo",3]]],[11,"clone","","",54,[[],["input_keymap_entry",3]]],[11,"clone","","",55,[[],["input_mask",3]]],[11,"clone","","",56,[[],["ff_replay",3]]],[11,"clone","","",57,[[],["ff_trigger",3]]],[11,"clone","","",58,[[],["ff_envelope",3]]],[11,"clone","","",59,[[],["ff_constant_effect",3]]],[11,"clone","","",60,[[],["ff_ramp_effect",3]]],[11,"clone","","",61,[[],["ff_condition_effect",3]]],[11,"clone","","",62,[[],["ff_periodic_effect",3]]],[11,"clone","","",63,[[],["ff_rumble_effect",3]]],[11,"clone","","",64,[[],["ff_effect",3]]],[11,"clone","","",65,[[],["dl_phdr_info",3]]],[11,"clone","","",66,[[],["elf32_ehdr",3]]],[11,"clone","","",67,[[],["elf64_ehdr",3]]],[11,"clone","","",68,[[],["elf32_sym",3]]],[11,"clone","","",69,[[],["elf64_sym",3]]],[11,"clone","","",70,[[],["elf32_phdr",3]]],[11,"clone","","",71,[[],["elf64_phdr",3]]],[11,"clone","","",72,[[],["elf32_shdr",3]]],[11,"clone","","",73,[[],["elf64_shdr",3]]],[11,"clone","","",74,[[],["elf32_chdr",3]]],[11,"clone","","",75,[[],["elf64_chdr",3]]],[11,"clone","","",76,[[],["ucred",3]]],[11,"clone","","",77,[[],["mntent",3]]],[11,"clone","","",154,[[],["posix_spawn_file_actions_t",3]]],[11,"clone","","",155,[[],["posix_spawnattr_t",3]]],[11,"clone","","",78,[[],["genlmsghdr",3]]],[11,"clone","","",79,[[],["in6_pktinfo",3]]],[11,"clone","","",80,[[],["arpd_request",3]]],[11,"clone","","",81,[[],["inotify_event",3]]],[11,"clone","","",82,[[],["fanotify_response",3]]],[11,"clone","","",83,[[],["sockaddr_vm",3]]],[11,"clone","","",84,[[],["regmatch_t",3]]],[11,"clone","","",85,[[],["sock_extended_err",3]]],[11,"clone","","",86,[[],["__c_anonymous_sockaddr_can_tp",3]]],[11,"clone","","",87,[[],["__c_anonymous_sockaddr_can_j1939",3]]],[11,"clone","","",88,[[],["can_filter",3]]],[11,"clone","","",89,[[],["sockaddr_nl",3]]],[11,"clone","","",90,[[],["dirent",3]]],[11,"clone","","",91,[[],["dirent64",3]]],[11,"clone","","",92,[[],["sockaddr_alg",3]]],[11,"clone","","",93,[[],["af_alg_iv",3]]],[11,"clone","","",94,[[],["mq_attr",3]]],[11,"clone","","",95,[[],["__c_anonymous_sockaddr_can_can_addr",19]]],[11,"clone","","",96,[[],["sockaddr_can",3]]],[11,"clone","","",97,[[],["statx",3]]],[11,"clone","","",98,[[],["statx_timestamp",3]]],[11,"clone","","",99,[[],["aiocb",3]]],[11,"clone","","",100,[[],["__exit_status",3]]],[11,"clone","","",101,[[],["__timeval",3]]],[11,"clone","","",102,[[],["glob64_t",3]]],[11,"clone","","",103,[[],["msghdr",3]]],[11,"clone","","",104,[[],["cmsghdr",3]]],[11,"clone","","",105,[[],["termios",3]]],[11,"clone","","",106,[[],["mallinfo",3]]],[11,"clone","","",107,[[],["nlmsghdr",3]]],[11,"clone","","",108,[[],["nlmsgerr",3]]],[11,"clone","","",109,[[],["nl_pktinfo",3]]],[11,"clone","","",110,[[],["nl_mmap_req",3]]],[11,"clone","","",111,[[],["nl_mmap_hdr",3]]],[11,"clone","","",112,[[],["nlattr",3]]],[11,"clone","","",113,[[],["rtentry",3]]],[11,"clone","","",114,[[],["timex",3]]],[11,"clone","","",115,[[],["ntptimeval",3]]],[11,"clone","","",150,[[],["regex_t",3]]],[11,"clone","","",116,[[],["utmpx",3]]],[11,"clone","","",148,[[],["sigset_t",3]]],[11,"clone","","",117,[[],["sysinfo",3]]],[11,"clone","","",118,[[],["msqid_ds",3]]],[11,"clone","","",119,[[],["sigaction",3]]],[11,"clone","","",120,[[],["statfs",3]]],[11,"clone","","",121,[[],["flock",3]]],[11,"clone","","",122,[[],["flock64",3]]],[11,"clone","","",123,[[],["siginfo_t",3]]],[11,"clone","","",124,[[],["stack_t",3]]],[11,"clone","","",125,[[],["stat",3]]],[11,"clone","","",126,[[],["stat64",3]]],[11,"clone","","",127,[[],["statfs64",3]]],[11,"clone","","",128,[[],["statvfs64",3]]],[11,"clone","","",147,[[],["pthread_attr_t",3]]],[11,"clone","","",129,[[],["_libc_fpxreg",3]]],[11,"clone","","",130,[[],["_libc_xmmreg",3]]],[11,"clone","","",131,[[],["_libc_fpstate",3]]],[11,"clone","","",132,[[],["user_regs_struct",3]]],[11,"clone","","",133,[[],["user",3]]],[11,"clone","","",134,[[],["mcontext_t",3]]],[11,"clone","","",135,[[],["ipc_perm",3]]],[11,"clone","","",136,[[],["shmid_ds",3]]],[11,"clone","","",137,[[],["termios2",3]]],[11,"clone","","",138,[[],["ip_mreqn",3]]],[11,"clone","","",139,[[],["user_fpregs_struct",3]]],[11,"clone","","",140,[[],["ucontext_t",3]]],[11,"clone","","",141,[[],["statvfs",3]]],[11,"clone","","",146,[[],["max_align_t",3]]],[11,"clone","","",149,[[],["sem_t",3]]],[11,"clone","","",156,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",157,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",158,[[],["pthread_condattr_t",3]]],[11,"clone","","",142,[[],["fanotify_event_metadata",3]]],[11,"clone","","",159,[[],["pthread_cond_t",3]]],[11,"clone","","",160,[[],["pthread_mutex_t",3]]],[11,"clone","","",161,[[],["pthread_rwlock_t",3]]],[11,"clone","","",143,[[],["can_frame",3]]],[11,"clone","","",144,[[],["canfd_frame",3]]],[11,"clone","","",145,[[],["in6_addr",3]]],[11,"si_addr","","",123,[[]]],[11,"si_value","","",123,[[],["sigval",3]]],[11,"si_pid","","",123,[[],["pid_t",6]]],[11,"si_uid","","",123,[[],["uid_t",6]]],[11,"si_status","","",123,[[],["c_int",6]]],[11,"si_utime","","",123,[[],["c_long",6]]],[11,"si_stime","","",123,[[],["c_long",6]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"sock_extended_err"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"fanotify_event_metadata"],[3,"can_frame"],[3,"canfd_frame"],[3,"in6_addr"],[3,"max_align_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"regex_t"],[4,"fpos64_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"timezone"],[3,"fd_set"],[3,"in6_rtmsg"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"c_void"]]},\
"linux_loader":{"doc":"Linux LibOS","i":[[5,"run","linux_loader","Create and run main Linux process",null,[[["string",3],["filesystem",8],["arc",3],["vec",3]],[["process",3],["arc",3]]]]],"p":[]},\
"linux_object":{"doc":"Linux kernel objects","i":[[0,"error","linux_object","Linux error codes",null,null],[6,"LxResult","linux_object::error","Linux Result defination",null,null],[6,"SysResult","","SysResult Result defination (same as Linux Result)",null,null],[4,"LxError","","Linux error codes defination",null,null],[13,"EUNDEF","","Undefined",0,null],[13,"EPERM","","Operation not permitted",0,null],[13,"ENOENT","","No such file or directory",0,null],[13,"ESRCH","","No such process",0,null],[13,"EINTR","","Interrupted system call",0,null],[13,"EIO","","I/O error",0,null],[13,"ENXIO","","No such device or address",0,null],[13,"E2BIG","","Arg list too long",0,null],[13,"ENOEXEC","","Exec format error",0,null],[13,"EBADF","","Bad file number",0,null],[13,"ECHILD","","No child processes",0,null],[13,"EAGAIN","","Try again",0,null],[13,"ENOMEM","","Out of memory",0,null],[13,"EACCES","","Permission denied",0,null],[13,"EFAULT","","Bad address",0,null],[13,"ENOTBLK","","Block device required",0,null],[13,"EBUSY","","Device or resource busy",0,null],[13,"EEXIST","","File exists",0,null],[13,"EXDEV","","Cross-device link",0,null],[13,"ENODEV","","No such device",0,null],[13,"ENOTDIR","","Not a directory",0,null],[13,"EISDIR","","Is a directory",0,null],[13,"EINVAL","","Invalid argument",0,null],[13,"ENFILE","","File table overflow",0,null],[13,"EMFILE","","Too many open files",0,null],[13,"ENOTTY","","Not a tty device",0,null],[13,"ETXTBSY","","Text file busy",0,null],[13,"EFBIG","","File too large",0,null],[13,"ENOSPC","","No space left on device",0,null],[13,"ESPIPE","","Illegal seek",0,null],[13,"EROFS","","Read-only file system",0,null],[13,"EMLINK","","Too many links",0,null],[13,"EPIPE","","Broken pipe",0,null],[13,"EDOM","","Math argument out of domain",0,null],[13,"ERANGE","","Math result not representable",0,null],[13,"EDEADLK","","Resource deadlock would occur",0,null],[13,"ENAMETOOLONG","","Filename too long",0,null],[13,"ENOLCK","","No record locks available",0,null],[13,"ENOSYS","","Function not implemented",0,null],[13,"ENOTEMPTY","","Directory not empty",0,null],[13,"ELOOP","","Too many symbolic links encountered",0,null],[13,"EIDRM","","Identifier removed",0,null],[13,"ENOTSOCK","","Socket operation on non-socket",0,null],[13,"ENOPROTOOPT","","Protocol not available",0,null],[13,"EPFNOSUPPORT","","Protocol family not supported",0,null],[13,"EAFNOSUPPORT","","Address family not supported by protocol",0,null],[13,"ENOBUFS","","No buffer space available",0,null],[13,"EISCONN","","Transport endpoint is already connected",0,null],[13,"ENOTCONN","","Transport endpoint is not connected",0,null],[13,"ECONNREFUSED","","Connection refused",0,null],[0,"fs","linux_object","Linux file objects",null,null],[3,"MemBuf","linux_object::fs","memory buffer for device",null,null],[3,"FcntlFlags","","fcntl flags",null,null],[3,"FileFlags","","file operate flags",null,null],[3,"File","","file implement struct",null,null],[12,"options","","file open options",1,null],[12,"path","","file path",1,null],[3,"OpenOptions","","file open options struct",null,null],[12,"read","","open as readable",2,null],[12,"write","","open as writeable",2,null],[12,"append","","Before each write, the file offset is positioned at the …",2,null],[12,"nonblock","","non block open",2,null],[12,"fd_cloexec","","close on exec",2,null],[4,"SeekFrom","","file seek type",null,null],[13,"Start","","seek from start point",3,null],[13,"End","","seek from end",3,null],[13,"Current","","seek from current",3,null],[4,"PipeEnd","","Pipe end specify",null,null],[13,"Read","","read end",4,null],[13,"Write","","write end",4,null],[3,"PipeData","","Pipe inner data",null,null],[3,"Pipe","","pipe struct",null,null],[3,"Pseudo","","Pseudo INode struct",null,null],[3,"RandomINodeData","","random INode data struct",null,null],[3,"RandomINode","","random INode struct",null,null],[3,"STDIN","","STDIN global reference",null,null],[3,"STDOUT","","STDOUT global reference",null,null],[3,"Stdin","","Stdin struct, for Stdin buffer",null,null],[3,"Stdout","","Stdout struct, empty now",null,null],[0,"vfs","","",null,null],[8,"INode","linux_object::fs::vfs","Abstract file system object such as file or directory.",null,null],[10,"read_at","","Read bytes at <code>offset</code> into <code>buf</code>, return the number of bytes …",5,[[["usize",15]],[["usize",15],["result",4],["fserror",4]]]],[10,"write_at","","Write bytes at <code>offset</code> from <code>buf</code>, return the number of …",5,[[["usize",15]],[["usize",15],["result",4],["fserror",4]]]],[10,"poll","","Poll the events, return a bitmap of events.",5,[[],[["result",4],["pollstatus",3],["fserror",4]]]],[11,"async_poll","","Poll the events, return a bitmap of events, async version.",5,[[],[["pin",3],["box",3]]]],[11,"metadata","","Get metadata of the INode",5,[[],[["result",4],["metadata",3],["fserror",4]]]],[11,"set_metadata","","Set metadata of the INode",5,[[["metadata",3]],[["result",4],["fserror",4]]]],[11,"sync_all","","Sync all data and metadata",5,[[],[["result",4],["fserror",4]]]],[11,"sync_data","","Sync data (not include metadata)",5,[[],[["result",4],["fserror",4]]]],[11,"resize","","Resize the file",5,[[["usize",15]],[["result",4],["fserror",4]]]],[11,"create","","Create a new INode in the directory",5,[[["u32",15],["filetype",4],["str",15]],[["result",4],["fserror",4],["arc",3]]]],[11,"create2","","Create a new INode in the directory, with a data field …",5,[[["u32",15],["usize",15],["filetype",4],["str",15]],[["result",4],["fserror",4],["arc",3]]]],[11,"link","","Create a hard link <code>name</code> to <code>other</code>",5,[[["arc",3],["str",15]],[["result",4],["fserror",4]]]],[11,"unlink","","Delete a hard link <code>name</code>",5,[[["str",15]],[["result",4],["fserror",4]]]],[11,"move_","","Move INode <code>self/old_name</code> to <code>target/new_name</code>. If <code>target</code> …",5,[[["arc",3],["str",15]],[["result",4],["fserror",4]]]],[11,"find","","Find the INode <code>name</code> in the directory",5,[[["str",15]],[["result",4],["fserror",4],["arc",3]]]],[11,"get_entry","","Get the name of directory entry",5,[[["usize",15]],[["fserror",4],["result",4],["string",3]]]],[11,"get_entry_with_metadata","","Get the name of directory entry with metadata",5,[[["usize",15]],[["fserror",4],["result",4]]]],[11,"io_control","","Control device",5,[[["u32",15],["usize",15]],[["usize",15],["result",4],["fserror",4]]]],[11,"mmap","","Map files or devices into memory",5,[[["mmaparea",3]],[["result",4],["fserror",4]]]],[11,"fs","","Get the file system of the INode",5,[[],[["arc",3],["filesystem",8]]]],[10,"as_any_ref","","This is used to implement dynamics cast. Simply return …",5,[[],["any",8]]],[4,"IOCTLError","","",null,null],[13,"NotValidFD","","",6,null],[13,"NotValidMemory","","",6,null],[13,"NotValidParam","","",6,null],[13,"NotCharDevice","","",6,null],[3,"PollStatus","","",null,null],[12,"read","","",7,null],[12,"write","","",7,null],[12,"error","","",7,null],[3,"MMapArea","","",null,null],[12,"start_vaddr","","Start virtual address",8,null],[12,"end_vaddr","","End virtual address",8,null],[12,"prot","","Access permissions",8,null],[12,"flags","","Flags",8,null],[12,"offset","","Offset from the file in bytes",8,null],[3,"Metadata","","Metadata of INode",null,null],[12,"dev","","Device ID",9,null],[12,"inode","","Inode number",9,null],[12,"size","","Size in bytes",9,null],[12,"blk_size","","A file system-specific preferred I/O block size for this …",9,null],[12,"blocks","","Size in blocks",9,null],[12,"atime","","Time of last access",9,null],[12,"mtime","","Time of last modification",9,null],[12,"ctime","","Time of last change",9,null],[12,"type_","","Type of file",9,null],[12,"mode","","Permission",9,null],[12,"nlinks","","Number of hard links",9,null],[12,"uid","","User ID",9,null],[12,"gid","","Group ID",9,null],[12,"rdev","","Raw device id e.g. /dev/null: makedev(0x1, 0x3)",9,null],[3,"Timespec","","",null,null],[12,"sec","","",10,null],[12,"nsec","","",10,null],[4,"FileType","","",null,null],[13,"File","","",11,null],[13,"Dir","","",11,null],[13,"SymLink","","",11,null],[13,"CharDevice","","",11,null],[13,"BlockDevice","","",11,null],[13,"NamedPipe","","",11,null],[13,"Socket","","",11,null],[3,"FsInfo","","Metadata of FileSystem",null,null],[12,"bsize","","File system block size",12,null],[12,"frsize","","Fundamental file system block size",12,null],[12,"blocks","","Total number of blocks on file system in units of <code>frsize</code>",12,null],[12,"bfree","","Total number of free blocks",12,null],[12,"bavail","","Number of free blocks available to non-privileged process",12,null],[12,"files","","Total number of file serial numbers",12,null],[12,"ffree","","Total number of free file serial numbers",12,null],[12,"namemax","","Maximum filename length",12,null],[4,"FsError","","",null,null],[13,"NotSupported","","",13,null],[13,"NotFile","","",13,null],[13,"IsDir","","",13,null],[13,"NotDir","","",13,null],[13,"EntryNotFound","","",13,null],[13,"EntryExist","","",13,null],[13,"NotSameFs","","",13,null],[13,"InvalidParam","","",13,null],[13,"NoDeviceSpace","","",13,null],[13,"DirRemoved","","",13,null],[13,"DirNotEmpty","","",13,null],[13,"WrongFs","","",13,null],[13,"DeviceError","","",13,null],[13,"IOCTLError","","",13,null],[13,"NoDevice","","",13,null],[13,"Again","","",13,null],[13,"SymLoop","","",13,null],[13,"Busy","","",13,null],[13,"Interrupted","","",13,null],[6,"Result","","",null,null],[8,"FileSystem","","Abstract file system",null,null],[10,"sync","","Sync all data to the storage",14,[[],[["result",4],["fserror",4]]]],[10,"root_inode","","Get the root INode of the file system",14,[[],[["inode",8],["arc",3]]]],[10,"info","","Get the file system information",14,[[],["fsinfo",3]]],[5,"make_rdev","","",null,[[["usize",15]],["usize",15]]],[8,"FileLike","linux_object::fs","Generic file interface",null,null],[10,"read","","read to buffer",15,[[],[["box",3],["pin",3]]]],[10,"write","","write from buffer",15,[[],[["usize",15],["lxresult",6]]]],[10,"read_at","","read to buffer at given offset",15,[[["u64",15]],[["box",3],["pin",3]]]],[10,"write_at","","write from buffer at given offset",15,[[["u64",15]],[["usize",15],["lxresult",6]]]],[10,"poll","","wait for some event on a file descriptor",15,[[],[["pollstatus",3],["lxresult",6]]]],[10,"async_poll","","wait for some event on a file descriptor use async",15,[[],[["box",3],["pin",3]]]],[10,"ioctl","","manipulates the underlying device parameters of special …",15,[[["usize",15]],[["usize",15],["lxresult",6]]]],[10,"fcntl","","manipulate file descriptor",15,[[["usize",15]],[["usize",15],["lxresult",6]]]],[11,"is","","Returns true if the trait object wraps an object of type …",15,[[],["bool",15]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",15,[[["box",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",15,[[["rc",3]],[["rc",3],["rc",3],["result",4]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",15,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",15,[[],["option",4]]],[11,"downcast_arc","","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …",15,[[["arc",3]],[["arc",3],["arc",3],["result",4]]]],[3,"FileDesc","","file descriptor wrapper",null,null],[18,"CWD","","Pathname is interpreted relative to the current working …",16,null],[5,"create_root_fs","","create root filesystem, mount DevFS and RamFS",null,[[["arc",3],["filesystem",8]],[["inode",8],["arc",3]]]],[8,"INodeExt","","extension for INode",null,null],[10,"read_as_vec","","similar to read, but return a u8 vector",17,[[],[["result",6],["vec",3]]]],[5,"split_path","","Split a <code>path</code> str to <code>(base_path, file_name)</code>",null,[[["str",15]]]],[0,"ipc","linux_object","Linux Inter-Process Communication",null,null],[3,"SemidDs","linux_object::ipc","semid data structure",null,null],[12,"perm","","Ownership and permissions",18,null],[12,"otime","","Last semop time",18,null],[12,"ctime","","Last change time",18,null],[12,"nsems","","number of semaphores in set",18,null],[3,"SemArray","","A System V semaphore set",null,null],[12,"semid_ds","","semid data structure",19,null],[3,"ShmidDs","","shmid data structure",null,null],[12,"perm","","Ownership and permissions",20,null],[12,"segsz","","Size of segment (bytes)",20,null],[12,"atime","","Last attach time",20,null],[12,"dtime","","Last detach time",20,null],[12,"ctime","","Last change time",20,null],[12,"cpid","","PID of creator",20,null],[12,"lpid","","PID of last shmat(2)/shmdt(2)",20,null],[12,"nattch","","number of current attaches",20,null],[3,"ShmIdentifier","","shared memory Identifier for process",null,null],[12,"addr","","Shared memory address",21,null],[12,"guard","","Shared memory buffer and data",21,null],[3,"ShmGuard","","shared memory buffer and data",null,null],[12,"shared_guard","","shared memory buffer",22,null],[12,"shmid_ds","","shared memory data",22,null],[3,"SemProc","","Semaphore table in a process",null,null],[3,"ShmProc","","Shared_memory table in a process",null,null],[3,"IpcPerm","","structure specifies the access permissions on the …",null,null],[12,"key","","Key supplied to semget(2)",23,null],[12,"uid","","Effective UID of owner",23,null],[12,"gid","","Effective GID of owner",23,null],[12,"cuid","","Effective UID of creator",23,null],[12,"cgid","","Effective GID of creator",23,null],[12,"mode","","Permissions",23,null],[12,"__seq","","Sequence number",23,null],[12,"__pad1","","pad1",23,null],[12,"__pad2","","pad2",23,null],[11,"add","","Insert the <code>array</code> and return its ID",24,[[["arc",3],["semarray",3]],["usize",15]]],[11,"remove","","Remove an <code>array</code> by ID",24,[[["usize",15]]]],[11,"get","","Get an semaphore set by <code>id</code>",24,[[["usize",15]],[["arc",3],["option",4]]]],[11,"add_undo","","Add an undo operation",24,[[["usize",15],["i16",15],["u16",15]]]],[11,"add","","Insert the <code>SharedGuard</code> and return its ID",25,[[["arc",3],["mutex",3]],["usize",15]]],[11,"get","","Get an semaphore set by <code>id</code>",25,[[["usize",15]],[["option",4],["shmidentifier",3]]]],[11,"set","","Used to set Virtual Addr",25,[[["usize",15],["shmidentifier",3]]]],[11,"get_id","","get id from virtaddr",25,[[["usize",15]],[["usize",15],["option",4]]]],[11,"pop","","Pop Shared Area",25,[[["usize",15]]]],[0,"loader","linux_object","Linux ELF Program Loader",null,null],[3,"LinuxElfLoader","linux_object::loader","Linux ELF Program Loader.",null,null],[12,"syscall_entry","","syscall entry",26,null],[12,"stack_pages","","stack page number",26,null],[12,"root_inode","","root inode of LinuxElfLoader",26,null],[11,"load","","load a Linux ElfFile and return a tuple of (entry,sp)",26,[[["vec",3],["arc",3],["string",3]],["lxresult",6]]],[0,"process","linux_object","Linux Process",null,null],[8,"ProcessExt","linux_object::process","Process extension for linux",null,null],[10,"create_linux","","create Linux process",27,[[["arc",3],["arc",3],["filesystem",8]],[["zxresult",6],["arc",3]]]],[10,"linux","","get linux process",27,[[],["linuxprocess",3]]],[10,"fork_from","","fork from current linux process",27,[[["arc",3],["bool",15]],[["zxresult",6],["arc",3]]]],[5,"wait_child","","Wait for state changes in a child of the calling process, …",null,[[["koid",6],["arc",3],["bool",15]]]],[5,"wait_child_any","","Wait for state changes in a child of the calling process.",null,[[["bool",15],["arc",3]]]],[3,"LinuxProcess","","Linux specific process information.",null,null],[3,"RLimit","","resource limit",null,null],[12,"cur","","soft limit",28,null],[12,"max","","hard limit",28,null],[6,"ExitCode","","The type of process exit code.",null,null],[11,"new","","Create a new process.",29,[[["arc",3],["filesystem",8]]]],[11,"get_futex","","Get futex object.",29,[[["virtaddr",6]],[["futex",3],["arc",3]]]],[11,"add_file","","Add a file to the file descriptor table.",29,[[["filelike",8],["arc",3]],[["filedesc",3],["lxresult",6]]]],[11,"add_file_at","","Add a file to the file descriptor table at given <code>fd</code>.",29,[[["filedesc",3],["filelike",8],["arc",3]],[["filedesc",3],["lxresult",6]]]],[11,"file_limit","","get and set file limit number",29,[[["option",4],["rlimit",3]],["rlimit",3]]],[11,"get_file","","Get the <code>File</code> with given <code>fd</code>.",29,[[["filedesc",3]],[["lxresult",6],["arc",3]]]],[11,"get_file_like","","Get the <code>FileLike</code> with given <code>fd</code>.",29,[[["filedesc",3]],[["arc",3],["lxresult",6]]]],[11,"get_files","","get all files",29,[[],[["hashmap",3],["lxresult",6]]]],[11,"close_file","","Close file descriptor <code>fd</code>.",29,[[["filedesc",3]],["lxresult",6]]],[11,"root_inode","","Get root INode of the process.",29,[[],["arc",3]]],[11,"parent","","Get parent process.",29,[[],[["arc",3],["option",4]]]],[11,"current_working_directory","","Get current working directory.",29,[[],["string",3]]],[11,"change_directory","","Change working directory.",29,[[["str",15]]]],[11,"execute_path","","Get execute path.",29,[[],["string",3]]],[11,"set_execute_path","","Set execute path.",29,[[["str",15]]]],[11,"signal_action","","Get signal action.",29,[[["linuxsignal",4]],["signalaction",3]]],[11,"set_signal_action","","Set signal action.",29,[[["linuxsignal",4],["signalaction",3]]]],[11,"remove_cloexec_files","","Close file that FD_CLOEXEC is set",29,[[]]],[11,"semaphores_add","","Insert a <code>SemArray</code> and return its ID",29,[[["arc",3],["semarray",3]],["usize",15]]],[11,"semaphores_get","","Get an semaphore set by <code>id</code>",29,[[["usize",15]],[["arc",3],["option",4]]]],[11,"semaphores_add_undo","","Add an undo operation",29,[[["usize",15],["i16",15],["u16",15]]]],[11,"semaphores_remove","","Remove an <code>SemArray</code> by ID",29,[[["usize",15]]]],[11,"shm_get_id","","get ShmId from Virtual Addr",29,[[["usize",15]],[["usize",15],["option",4]]]],[11,"shm_get","","get the ShmIdentifier from shm_identifiers",29,[[["usize",15]],[["option",4],["shmidentifier",3]]]],[11,"shm_pop","","Delete the ShmIdentifier from shm_identifiers",29,[[["usize",15]]]],[11,"shm_add","","Insert the <code>SharedGuard</code> and return its ID",29,[[["arc",3],["mutex",3]],["usize",15]]],[11,"shm_set","","Set Virtual Addr for shared memory",29,[[["usize",15],["shmidentifier",3]]]],[0,"signal","linux_object","Linux signals",null,null],[17,"SIG_ERR","linux_object::signal","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[3,"Sigset","","Linux struct sigset_t",null,null],[3,"SignalAction","","Linux struct sigaction",null,null],[12,"handler","","",30,null],[12,"flags","","",30,null],[12,"restorer","","",30,null],[12,"mask","","",30,null],[19,"SiginfoFields","","",null,null],[3,"SigInfo","","",null,null],[12,"signo","","",31,null],[12,"errno","","",31,null],[12,"code","","",31,null],[12,"field","","",31,null],[4,"SignalCode","","A code identifying the cause of the signal.",null,null],[13,"ASYNCNL","","",32,null],[13,"TKILL","","",32,null],[13,"SIGIO","","",32,null],[13,"ASYNCIO","","",32,null],[13,"MESGQ","","",32,null],[13,"TIMER","","",32,null],[13,"QUEUE","","",32,null],[13,"USER","","from user",32,null],[13,"KERNEL","","from kernel",32,null],[3,"SignalActionFlags","","",null,null],[3,"MachineContext","","struct mcontext",null,null],[12,"r8","","",33,null],[12,"r9","","",33,null],[12,"r10","","",33,null],[12,"r11","","",33,null],[12,"r12","","",33,null],[12,"r13","","",33,null],[12,"r14","","",33,null],[12,"r15","","",33,null],[12,"rdi","","",33,null],[12,"rsi","","",33,null],[12,"rbp","","",33,null],[12,"rbx","","",33,null],[12,"rdx","","",33,null],[12,"rax","","",33,null],[12,"rcx","","",33,null],[12,"rsp","","",33,null],[12,"rip","","",33,null],[12,"eflags","","",33,null],[12,"cs","","",33,null],[12,"gs","","",33,null],[12,"fs","","",33,null],[12,"_pad","","",33,null],[12,"err","","",33,null],[12,"trapno","","",33,null],[12,"oldmask","","",33,null],[12,"cr2","","",33,null],[12,"fpstate","","",33,null],[12,"_reserved1","","",33,null],[4,"Signal","","",null,null],[13,"SIGHUP","","",34,null],[13,"SIGINT","","",34,null],[13,"SIGQUIT","","",34,null],[13,"SIGILL","","",34,null],[13,"SIGTRAP","","",34,null],[13,"SIGABRT","","",34,null],[13,"SIGBUS","","",34,null],[13,"SIGFPE","","",34,null],[13,"SIGKILL","","",34,null],[13,"SIGUSR1","","",34,null],[13,"SIGSEGV","","",34,null],[13,"SIGUSR2","","",34,null],[13,"SIGPIPE","","",34,null],[13,"SIGALRM","","",34,null],[13,"SIGTERM","","",34,null],[13,"SIGSTKFLT","","",34,null],[13,"SIGCHLD","","",34,null],[13,"SIGCONT","","",34,null],[13,"SIGSTOP","","",34,null],[13,"SIGTSTP","","",34,null],[13,"SIGTTIN","","",34,null],[13,"SIGTTOU","","",34,null],[13,"SIGURG","","",34,null],[13,"SIGXCPU","","",34,null],[13,"SIGXFSZ","","",34,null],[13,"SIGVTALRM","","",34,null],[13,"SIGPROF","","",34,null],[13,"SIGWINCH","","",34,null],[13,"SIGIO","","",34,null],[13,"SIGPWR","","",34,null],[13,"SIGSYS","","",34,null],[13,"SIGRT32","","",34,null],[13,"SIGRT33","","",34,null],[13,"SIGRT34","","",34,null],[13,"SIGRT35","","",34,null],[13,"SIGRT36","","",34,null],[13,"SIGRT37","","",34,null],[13,"SIGRT38","","",34,null],[13,"SIGRT39","","",34,null],[13,"SIGRT40","","",34,null],[13,"SIGRT41","","",34,null],[13,"SIGRT42","","",34,null],[13,"SIGRT43","","",34,null],[13,"SIGRT44","","",34,null],[13,"SIGRT45","","",34,null],[13,"SIGRT46","","",34,null],[13,"SIGRT47","","",34,null],[13,"SIGRT48","","",34,null],[13,"SIGRT49","","",34,null],[13,"SIGRT50","","",34,null],[13,"SIGRT51","","",34,null],[13,"SIGRT52","","",34,null],[13,"SIGRT53","","",34,null],[13,"SIGRT54","","",34,null],[13,"SIGRT55","","",34,null],[13,"SIGRT56","","",34,null],[13,"SIGRT57","","",34,null],[13,"SIGRT58","","",34,null],[13,"SIGRT59","","",34,null],[13,"SIGRT60","","",34,null],[13,"SIGRT61","","",34,null],[13,"SIGRT62","","",34,null],[13,"SIGRT63","","",34,null],[13,"SIGRT64","","",34,null],[18,"RTMIN","","",34,null],[18,"RTMAX","","",34,null],[11,"is_standard","","",34,[[],["bool",15]]],[3,"SignalUserContext","","See musl struct __ucontext",null,null],[12,"flags","","",35,null],[12,"link","","",35,null],[12,"stack","","",35,null],[12,"context","","",35,null],[12,"sig_mask","","",35,null],[3,"SignalFrame","","",null,null],[12,"ret_code_addr","","point to ret_code",36,null],[12,"info","","Signal Frame info",36,null],[12,"ucontext","","adapt interface, a little bit waste",36,null],[12,"ret_code","","call sys_sigreturn",36,null],[3,"SignalStackFlags","","",null,null],[18,"ONSTACK","","",37,null],[18,"DISABLE","","",37,null],[18,"AUTODISARM","","",37,null],[11,"empty","","Returns an empty set of flags",37,[[],["signalstackflags",3]]],[11,"all","","Returns the set containing all flags.",37,[[],["signalstackflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",37,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",37,[[["u32",15]],[["option",4],["signalstackflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",37,[[["u32",15]],["signalstackflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",37,[[["u32",15]],["signalstackflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",37,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",37,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",37,[[["signalstackflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",37,[[["signalstackflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",37,[[["signalstackflags",3]]]],[11,"remove","","Removes the specified flags in-place.",37,[[["signalstackflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",37,[[["signalstackflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",37,[[["bool",15],["signalstackflags",3]]]],[3,"SignalStack","","Linux struct stack_t",null,null],[12,"sp","","",38,null],[12,"flags","","",38,null],[12,"size","","",38,null],[0,"sync","linux_object","Useful synchronization primitives.",null,null],[3,"Event","linux_object::sync","event bus Event flags",null,null],[6,"EventHandler","","handler of event in the event bus",null,null],[3,"EventBus","","event bus struct",null,null],[5,"wait_for_event","","wait for a event async",null,[[["arc",3],["event",3],["mutex",3]]]],[3,"Semaphore","","A counting, blocking, semaphore.",null,null],[3,"SemaphoreGuard","","An RAII guard which will release a resource acquired from …",null,null],[0,"thread","linux_object","Linux Thread",null,null],[8,"ThreadExt","linux_object::thread","Thread extension for linux",null,null],[10,"create_linux","","create linux thread",39,[[["arc",3]],[["zxresult",6],["arc",3]]]],[10,"lock_linux","","lock and get Linux thread",39,[[],[["linuxthread",3],["mutexguard",3]]]],[10,"set_tid_address","","Set pointer to thread ID.",39,[[["useroutptr",6],["i32",15]]]],[8,"CurrentThreadExt","","CurrentThread extension for linux",null,null],[10,"exit_linux","","exit linux thread",40,[[["i32",15]]]],[3,"LinuxThread","","Linux specific thread information.",null,null],[12,"signal_mask","","Signal mask",41,null],[12,"signal_alternate_stack","","signal alternate stack",41,null],[0,"time","linux_object","Linux time objects",null,null],[3,"TimeSpec","linux_object::time","TimeSpec struct for clock_gettime, similar to Timespec",null,null],[12,"sec","","seconds",42,null],[12,"nsec","","nano seconds",42,null],[3,"TimeVal","","TimeVal struct for gettimeofday",null,null],[12,"sec","","seconds",43,null],[12,"usec","","microsecond",43,null],[11,"now","","create TimeVal",43,[[],["timeval",3]]],[11,"to_msec","","to msec",43,[[],["usize",15]]],[11,"now","","create TimeSpec",42,[[],["timespec",3]]],[11,"update","","update TimeSpec for a file inode TODO: more precise; …",42,[[["arc",3]]]],[11,"to_msec","","to msec",42,[[],["usize",15]]],[3,"RUsage","","RUsage for sys_getrusage() ignore other fields for now",null,null],[12,"utime","","user CPU time used",44,null],[12,"stime","","system CPU time used",44,null],[3,"Tms","","Tms for times()",null,null],[12,"tms_utime","","user time",45,null],[12,"tms_stime","","system time",45,null],[12,"tms_cutime","","user time of children",45,null],[12,"tms_cstime","","system time of children",45,null],[11,"borrow","linux_object::error","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",0,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"borrow","linux_object::fs","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_any_arc","","",46,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",46,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",46,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"into_any_arc","","",47,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",47,[[],[["result",4],["zxerror",4]]]],[11,"get_hash","","",47,[[],["u64",15]]],[11,"into_any","","",47,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"into_any_arc","","",48,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",48,[[],[["result",4],["zxerror",4]]]],[11,"get_hash","","",48,[[],["u64",15]]],[11,"into_any","","",48,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any_arc","","",1,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",1,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any_arc","","",2,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",2,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any_arc","","",3,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",3,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"into_any_arc","","",4,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",4,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",4,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_result","","",49,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",49,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"into_any_arc","","",50,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",50,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",50,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_any_arc","","",51,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",51,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",51,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_any_arc","","",52,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",52,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",52,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"into_any_arc","","",53,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",53,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",53,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_any_arc","","",54,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",54,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",54,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_any_arc","","",55,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",55,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",55,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_any_arc","","",56,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",56,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",56,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_any_arc","","",57,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",57,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",57,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"borrow","linux_object::fs::vfs","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_any_arc","","",6,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",6,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",6,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any_arc","","",7,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",7,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",7,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any_arc","","",8,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",8,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",8,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"into_any_arc","","",9,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",9,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",9,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"into_any_arc","","",10,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",10,[[],[["result",4],["zxerror",4]]]],[11,"get_hash","","",10,[[],["u64",15]]],[11,"into_any","","",10,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"into_any_arc","","",11,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",11,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",11,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any_arc","","",12,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",12,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",12,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_string","","",13,[[],["string",3]]],[11,"into_any_arc","","",13,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",13,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",13,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"borrow","linux_object::fs","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"into_any_arc","","",16,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",16,[[],[["result",4],["zxerror",4]]]],[11,"get_hash","","",16,[[],["u64",15]]],[11,"into_any","","",16,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"borrow","linux_object::ipc","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"into_any_arc","","",18,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",18,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",18,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any_arc","","",19,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",19,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",19,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"into_any_arc","","",20,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",20,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",20,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"into_any_arc","","",21,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",21,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",21,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any_arc","","",22,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",22,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",22,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"into_any_arc","","",24,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",24,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",24,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"into_any_arc","","",25,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",25,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",25,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"into_any_arc","","",23,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",23,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",23,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"borrow","linux_object::loader","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_any_arc","","",26,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",26,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",26,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"borrow","linux_object::process","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_any_arc","","",29,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",29,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",29,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"into_any_arc","","",28,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",28,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",28,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"borrow","linux_object::signal","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"into_any_arc","","",58,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",58,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",58,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"into_any_arc","","",30,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",30,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",30,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"into_any_arc","","",59,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",59,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",59,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"into_any_arc","","",31,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",31,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",31,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"into_any_arc","","",32,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",32,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",32,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"into_any_arc","","",60,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",60,[[],[["result",4],["zxerror",4]]]],[11,"get_hash","","",60,[[],["u64",15]]],[11,"into_any","","",60,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"into_any_arc","","",33,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",33,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",33,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"into_any_arc","","",34,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",34,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",34,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"into_any_arc","","",35,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",35,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",35,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"into_any_arc","","",36,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",36,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",36,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"into_any_arc","","",37,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",37,[[],[["result",4],["zxerror",4]]]],[11,"get_hash","","",37,[[],["u64",15]]],[11,"into_any","","",37,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"into_any_arc","","",38,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",38,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",38,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"borrow","linux_object::sync","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"into_any_arc","","",61,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",61,[[],[["result",4],["zxerror",4]]]],[11,"get_hash","","",61,[[],["u64",15]]],[11,"into_any","","",61,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_result","","",62,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",62,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_any_arc","","",63,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",63,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",63,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_any_arc","","",64,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",64,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",64,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"borrow","linux_object::thread","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_any_arc","","",41,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",41,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",41,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"borrow","linux_object::time","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"into_any_arc","","",42,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",42,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",42,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"into_any_arc","","",43,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",43,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",43,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_any_arc","","",44,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",44,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",44,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"into_any_arc","","",45,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",45,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",45,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"fmt","linux_object::fs::vfs","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","","",10,[[]]],[11,"from","","",13,[[["deverror",3]],["fserror",4]]],[11,"from","","",9,[[["metadata",3]],["metadata",3]]],[11,"from","","",13,[[["error",3]],["fserror",4]]],[11,"partial_cmp","","",10,[[["timespec",3]],[["ordering",4],["option",4]]]],[11,"default","","",7,[[],["pollstatus",3]]],[11,"clone","","",9,[[],["metadata",3]]],[11,"clone","","",10,[[],["timespec",3]]],[11,"clone","","",11,[[],["filetype",4]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",10,[[["timespec",3]],["ordering",4]]],[11,"eq","","",9,[[["metadata",3]],["bool",15]]],[11,"ne","","",9,[[["metadata",3]],["bool",15]]],[11,"eq","","",13,[[["fserror",4]],["bool",15]]],[11,"eq","","",11,[[["filetype",4]],["bool",15]]],[11,"eq","","",10,[[["timespec",3]],["bool",15]]],[11,"ne","","",10,[[["timespec",3]],["bool",15]]],[11,"from","","",11,[[["filetype",4]],["filetype",4]]],[11,"read_as_vec","","",5,[[],[["result",6],["vec",3]]]],[11,"read","linux_object::fs","",1,[[],[["box",3],["pin",3]]]],[11,"write","","",1,[[],[["usize",15],["lxresult",6]]]],[11,"read_at","","",1,[[["u64",15]],[["box",3],["pin",3]]]],[11,"write_at","","",1,[[["u64",15]],[["usize",15],["lxresult",6]]]],[11,"poll","","",1,[[],[["pollstatus",3],["lxresult",6]]]],[11,"async_poll","","",1,[[],[["box",3],["pin",3]]]],[11,"ioctl","","",1,[[["usize",15]],[["usize",15],["lxresult",6]]]],[11,"fcntl","","",1,[[["usize",15]],[["usize",15],["lxresult",6]]]],[11,"deref","","",54,[[],["arc",3]]],[11,"deref","","",55,[[],["arc",3]]],[11,"deref","linux_object::sync","",64,[[]]],[11,"fmt","linux_object::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::ipc","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::process","",28,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",61,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::time","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::error","",0,[[["formatter",3]],["result",6]]],[11,"sub","linux_object::fs","Returns the set difference of the two sets of flags.",47,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",48,[[["fileflags",3]],["fileflags",3]]],[11,"sub","linux_object::signal","Returns the set difference of the two sets of flags.",60,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",37,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"sub","linux_object::sync","Returns the set difference of the two sets of flags.",61,[[["event",3]],["event",3]]],[11,"eq","linux_object::fs","",47,[[["fcntlflags",3]],["bool",15]]],[11,"ne","","",47,[[["fcntlflags",3]],["bool",15]]],[11,"eq","","",48,[[["fileflags",3]],["bool",15]]],[11,"ne","","",48,[[["fileflags",3]],["bool",15]]],[11,"eq","","",4,[[["pipeend",4]],["bool",15]]],[11,"eq","","",16,[[["filedesc",3]],["bool",15]]],[11,"ne","","",16,[[["filedesc",3]],["bool",15]]],[11,"eq","linux_object::signal","",60,[[["signalactionflags",3]],["bool",15]]],[11,"ne","","",60,[[["signalactionflags",3]],["bool",15]]],[11,"eq","","",34,[[["signal",4]],["bool",15]]],[11,"eq","","",37,[[["signalstackflags",3]],["bool",15]]],[11,"ne","","",37,[[["signalstackflags",3]],["bool",15]]],[11,"eq","linux_object::sync","",61,[[["event",3]],["bool",15]]],[11,"ne","","",61,[[["event",3]],["bool",15]]],[11,"cmp","linux_object::fs","",47,[[["fcntlflags",3]],["ordering",4]]],[11,"cmp","","",48,[[["fileflags",3]],["ordering",4]]],[11,"cmp","","",16,[[["filedesc",3]],["ordering",4]]],[11,"cmp","linux_object::signal","",60,[[["signalactionflags",3]],["ordering",4]]],[11,"cmp","","",37,[[["signalstackflags",3]],["ordering",4]]],[11,"cmp","linux_object::sync","",61,[[["event",3]],["ordering",4]]],[11,"partial_cmp","linux_object::fs","",47,[[["fcntlflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",48,[[["fileflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",16,[[["filedesc",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","linux_object::signal","",60,[[["signalactionflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",37,[[["signalstackflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","linux_object::sync","",61,[[["event",3]],[["ordering",4],["option",4]]]],[11,"sub_assign","linux_object::fs","Disables all flags enabled in the set.",47,[[["fcntlflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",48,[[["fileflags",3]]]],[11,"sub_assign","linux_object::signal","Disables all flags enabled in the set.",60,[[["signalactionflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",37,[[["signalstackflags",3]]]],[11,"sub_assign","linux_object::sync","Disables all flags enabled in the set.",61,[[["event",3]]]],[11,"not","linux_object::fs","Returns the complement of this set of flags.",47,[[],["fcntlflags",3]]],[11,"not","","Returns the complement of this set of flags.",48,[[],["fileflags",3]]],[11,"not","linux_object::signal","Returns the complement of this set of flags.",60,[[],["signalactionflags",3]]],[11,"not","","Returns the complement of this set of flags.",37,[[],["signalstackflags",3]]],[11,"not","linux_object::sync","Returns the complement of this set of flags.",61,[[],["event",3]]],[11,"bitand","linux_object::fs","Returns the intersection between the two sets of flags.",47,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",48,[[["fileflags",3]],["fileflags",3]]],[11,"bitand","linux_object::signal","Returns the intersection between the two sets of flags.",60,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",37,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"bitand","linux_object::sync","Returns the intersection between the two sets of flags.",61,[[["event",3]],["event",3]]],[11,"bitor","linux_object::fs","Returns the union of the two sets of flags.",47,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",48,[[["fileflags",3]],["fileflags",3]]],[11,"bitor","linux_object::signal","Returns the union of the two sets of flags.",60,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",37,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"bitor","linux_object::sync","Returns the union of the two sets of flags.",61,[[["event",3]],["event",3]]],[11,"bitxor","linux_object::fs","Returns the left flags, but with all the right flags …",47,[[["fcntlflags",3]],["fcntlflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",48,[[["fileflags",3]],["fileflags",3]]],[11,"bitxor","linux_object::signal","Returns the left flags, but with all the right flags …",60,[[["signalactionflags",3]],["signalactionflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",37,[[["signalstackflags",3]],["signalstackflags",3]]],[11,"bitxor","linux_object::sync","Returns the left flags, but with all the right flags …",61,[[["event",3]],["event",3]]],[11,"bitand_assign","linux_object::fs","Disables all flags disabled in the set.",47,[[["fcntlflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",48,[[["fileflags",3]]]],[11,"bitand_assign","linux_object::signal","Disables all flags disabled in the set.",60,[[["signalactionflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",37,[[["signalstackflags",3]]]],[11,"bitand_assign","linux_object::sync","Disables all flags disabled in the set.",61,[[["event",3]]]],[11,"bitor_assign","linux_object::fs","Adds the set of flags.",47,[[["fcntlflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",48,[[["fileflags",3]]]],[11,"bitor_assign","linux_object::signal","Adds the set of flags.",60,[[["signalactionflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",37,[[["signalstackflags",3]]]],[11,"bitor_assign","linux_object::sync","Adds the set of flags.",61,[[["event",3]]]],[11,"bitxor_assign","linux_object::fs","Toggles the set of flags.",47,[[["fcntlflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",48,[[["fileflags",3]]]],[11,"bitxor_assign","linux_object::signal","Toggles the set of flags.",60,[[["signalactionflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",37,[[["signalstackflags",3]]]],[11,"bitxor_assign","linux_object::sync","Toggles the set of flags.",61,[[["event",3]]]],[11,"drop","linux_object::fs","",50,[[]]],[11,"drop","linux_object::ipc","",24,[[]]],[11,"drop","linux_object::sync","",64,[[]]],[11,"index","linux_object::ipc","",19,[[["usize",15]],["semaphore",3]]],[11,"hash","linux_object::fs","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",16,[[]]],[11,"hash","linux_object::signal","",60,[[]]],[11,"hash","","",37,[[]]],[11,"hash","linux_object::sync","",61,[[]]],[11,"try_from","linux_object::fs","",16,[[["str",15]],["lxresult",6]]],[11,"try_from","linux_object::signal","",34,[[["u8",15]],[["result",4],["u8",15]]]],[11,"from_iter","linux_object::fs","",47,[[["intoiterator",8]],["fcntlflags",3]]],[11,"from_iter","","",48,[[["intoiterator",8]],["fileflags",3]]],[11,"from_iter","linux_object::signal","",60,[[["intoiterator",8]],["signalactionflags",3]]],[11,"from_iter","","",37,[[["intoiterator",8]],["signalstackflags",3]]],[11,"from_iter","linux_object::sync","",61,[[["intoiterator",8]],["event",3]]],[11,"from","linux_object::error","",0,[[["zxerror",4]]]],[11,"from","","",0,[[["fserror",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","linux_object::fs","",16,[[["usize",15]]]],[11,"from","","",16,[[["i32",15]]]],[11,"from","linux_object::fs::vfs","",10,[[["timespec",3]]]],[11,"from","linux_object::time","",43,[[["timespec",3]]]],[11,"fmt","linux_object::fs","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",61,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",61,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",61,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::signal","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::sync","",61,[[["formatter",3]],["result",6]]],[11,"extend","linux_object::fs","",47,[[["intoiterator",8]]]],[11,"extend","","",48,[[["intoiterator",8]]]],[11,"extend","linux_object::signal","",60,[[["intoiterator",8]]]],[11,"extend","","",37,[[["intoiterator",8]]]],[11,"extend","linux_object::sync","",61,[[["intoiterator",8]]]],[11,"clone","linux_object::fs","",47,[[],["fcntlflags",3]]],[11,"clone","","",48,[[],["fileflags",3]]],[11,"clone","","",4,[[],["pipeend",4]]],[11,"clone","","",50,[[],["pipe",3]]],[11,"clone","","",53,[[],["randominode",3]]],[11,"clone","","",16,[[],["filedesc",3]]],[11,"clone","linux_object::ipc","",18,[[],["semidds",3]]],[11,"clone","","",20,[[],["shmidds",3]]],[11,"clone","","",21,[[],["shmidentifier",3]]],[11,"clone","","",25,[[],["shmproc",3]]],[11,"clone","","",23,[[],["ipcperm",3]]],[11,"clone","","",24,[[]]],[11,"clone","linux_object::process","",28,[[],["rlimit",3]]],[11,"clone","linux_object::signal","",58,[[],["sigset",3]]],[11,"clone","","",30,[[],["signalaction",3]]],[11,"clone","","",59,[[],["siginfofields",19]]],[11,"clone","","",31,[[],["siginfo",3]]],[11,"clone","","",32,[[],["signalcode",4]]],[11,"clone","","",60,[[],["signalactionflags",3]]],[11,"clone","","",33,[[],["machinecontext",3]]],[11,"clone","","",34,[[],["signal",4]]],[11,"clone","","",35,[[],["signalusercontext",3]]],[11,"clone","","",36,[[],["signalframe",3]]],[11,"clone","","",37,[[],["signalstackflags",3]]],[11,"clone","","",38,[[],["signalstack",3]]],[11,"clone","linux_object::sync","",61,[[],["event",3]]],[11,"clone","linux_object::time","",42,[[],["timespec",3]]],[11,"clone","","",43,[[],["timeval",3]]],[11,"clone","","",45,[[],["tms",3]]],[11,"default","linux_object::fs","",56,[[],["stdin",3]]],[11,"default","","",57,[[],["stdout",3]]],[11,"default","linux_object::ipc","",24,[[],["semproc",3]]],[11,"default","","",25,[[],["shmproc",3]]],[11,"default","linux_object::process","",28,[[]]],[11,"default","linux_object::signal","",58,[[],["sigset",3]]],[11,"default","","",30,[[],["signalaction",3]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[],["signalactionflags",3]]],[11,"default","","",38,[[]]],[11,"default","linux_object::sync","",61,[[],["event",3]]],[11,"default","","",62,[[],["eventbus",3]]],[11,"default","linux_object::time","",42,[[],["timespec",3]]],[11,"default","","",43,[[],["timeval",3]]],[11,"read_at","linux_object::fs","",46,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",46,[[["usize",15]],[["usize",15],["result",6]]]],[11,"sync","","",46,[[],["result",6]]],[11,"read_at","","read from pipe",50,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","write to pipe",50,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","monitoring events and determine whether the pipe is …",50,[[],[["result",6],["pollstatus",3]]]],[11,"async_poll","","",50,[[],[["pin",3],["box",3]]]],[11,"as_any_ref","","return the any ref",50,[[],["any",8]]],[11,"read_at","","",51,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",51,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",51,[[],[["result",6],["pollstatus",3]]]],[11,"metadata","","",51,[[],[["result",6],["metadata",3]]]],[11,"as_any_ref","","",51,[[],["any",8]]],[11,"read_at","","",53,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",53,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",53,[[],[["result",6],["pollstatus",3]]]],[11,"metadata","","",53,[[],[["result",6],["metadata",3]]]],[11,"as_any_ref","","",53,[[],["any",8]]],[11,"read_at","","",56,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",56,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",56,[[],[["result",6],["pollstatus",3]]]],[11,"async_poll","","",56,[[],[["pin",3],["box",3]]]],[11,"as_any_ref","","",56,[[],["any",8]]],[11,"read_at","","",57,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",57,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",57,[[],[["result",6],["pollstatus",3]]]],[11,"io_control","","",57,[[["u32",15],["usize",15]],[["usize",15],["result",6]]]],[11,"as_any_ref","","",57,[[],["any",8]]],[11,"id","","",1,[[],["koid",6]]],[11,"type_name","","",1,[[],["str",15]]],[11,"name","","",1,[[],["string",3]]],[11,"set_name","","",1,[[["str",15]]]],[11,"signal","","",1,[[],["signal",3]]],[11,"signal_set","","",1,[[["signal",3]]]],[11,"signal_clear","","",1,[[["signal",3]]]],[11,"signal_change","","",1,[[["signal",3]]]],[11,"add_signal_callback","","",1,[[["signalhandler",6]]]],[11,"initialize","","",54,[[]]],[11,"initialize","","",55,[[]]],[11,"new","","create a MemBuf struct",46,[[]]],[18,"F_DUPFD","","dup",47,null],[18,"F_GETFD","","get close_on_exec",47,null],[18,"F_SETFD","","set/clear close_on_exec",47,null],[18,"F_GETFL","","get file->f_flags",47,null],[18,"F_SETFL","","set file->f_flags",47,null],[18,"F_GETLK","","Get record locking info.",47,null],[18,"F_SETLK","","Set record locking info (non-blocking).",47,null],[18,"F_SETLKW","","Set record locking info (blocking).",47,null],[18,"FD_CLOEXEC","","closed during a successful execve",47,null],[18,"F_DUPFD_CLOEXEC","","like F_DUPFD, but additionally set the close-on-exec flag",47,null],[11,"empty","","Returns an empty set of flags",47,[[],["fcntlflags",3]]],[11,"all","","Returns the set containing all flags.",47,[[],["fcntlflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",47,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",47,[[["usize",15]],[["option",4],["fcntlflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",47,[[["usize",15]],["fcntlflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",47,[[["usize",15]],["fcntlflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",47,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",47,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",47,[[["fcntlflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",47,[[["fcntlflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",47,[[["fcntlflags",3]]]],[11,"remove","","Removes the specified flags in-place.",47,[[["fcntlflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",47,[[["fcntlflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",47,[[["bool",15],["fcntlflags",3]]]],[18,"O_NONBLOCK","","not blocking",48,null],[18,"O_APPEND","","move the flag bit to the end of the file before each write",48,null],[18,"O_CLOEXEC","","set close_on_exec",48,null],[11,"empty","","Returns an empty set of flags",48,[[],["fileflags",3]]],[11,"all","","Returns the set containing all flags.",48,[[],["fileflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",48,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",48,[[["usize",15]],[["option",4],["fileflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",48,[[["usize",15]],["fileflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",48,[[["usize",15]],["fileflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",48,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",48,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",48,[[["fileflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",48,[[["fileflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",48,[[["fileflags",3]]]],[11,"remove","","Removes the specified flags in-place.",48,[[["fileflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",48,[[["fileflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",48,[[["bool",15],["fileflags",3]]]],[11,"new","","create a file struct",1,[[["inode",8],["openoptions",3],["arc",3],["string",3]],["arc",3]]],[11,"read","","read from file",1,[[]]],[11,"read_at","","read from file at given offset",1,[[["u64",15]]]],[11,"write","","write to file",1,[[],[["usize",15],["lxresult",6]]]],[11,"write_at","","write to file at given offset",1,[[["u64",15]],[["usize",15],["lxresult",6]]]],[11,"seek","","seek from given type and offset",1,[[["seekfrom",4]],[["lxresult",6],["u64",15]]]],[11,"set_len","","resize the file",1,[[["u64",15]],["lxresult",6]]],[11,"sync_all","","Sync all data and metadata",1,[[],["lxresult",6]]],[11,"sync_data","","Sync data (not include metadata)",1,[[],["lxresult",6]]],[11,"metadata","","get metadata of file",1,[[],[["lxresult",6],["metadata",3]]]],[11,"lookup_follow","","lookup the file following the link",1,[[["usize",15],["str",15]],[["lxresult",6],["arc",3]]]],[11,"read_entry","","get the name of dir entry",1,[[],[["string",3],["lxresult",6]]]],[11,"poll","","wait for some event on a file",1,[[],[["pollstatus",3],["lxresult",6]]]],[11,"async_poll","","wait for some event on a file using async",1,[[]]],[11,"io_control","","manipulates the underlying device parameters of special …",1,[[["u32",15],["usize",15]],[["usize",15],["lxresult",6]]]],[11,"inode","","get INode of this file",1,[[],[["inode",8],["arc",3]]]],[11,"fcntl","","manipulate file descriptor unimplemented",1,[[["usize",15]],[["usize",15],["lxresult",6]]]],[11,"create_pair","","Create a pair of INode: (read, write)",50,[[]]],[11,"new","","create a Pseudo INode",51,[[["filetype",4],["str",15]]]],[11,"new","","create a random INode",53,[[["bool",15]],["randominode",3]]],[11,"push","","push a char in Stdin buffer",56,[[["char",15]]]],[11,"pop","","pop a char in Stdin buffer",56,[[],["char",15]]],[11,"can_read","","specify whether the Stdin buffer is readable",56,[[],["bool",15]]],[11,"downcast_ref","linux_object::fs::vfs","Downcast the INode to specific struct",5,[[],["option",4]]],[11,"list","","Get all directory entries as a Vec",5,[[],[["result",4],["vec",3],["fserror",4]]]],[11,"lookup","","Lookup path from current INode, and do not follow symlinks",5,[[["str",15]],[["result",4],["fserror",4],["arc",3]]]],[11,"lookup_follow","","Lookup path from current INode, and follow symlinks at …",5,[[["usize",15],["str",15]],[["result",4],["fserror",4],["arc",3]]]],[11,"lookup_inode_at","linux_object::process","Lookup INode from the process.",29,[[["bool",15],["filedesc",3],["str",15]],[["lxresult",6],["arc",3]]]],[11,"lookup_inode","","Lookup INode from the process.",29,[[["str",15]],[["lxresult",6],["arc",3]]]],[11,"remove","linux_object::ipc","remove semaphores",19,[[]]],[11,"otime","","set last semop time",19,[[]]],[11,"ctime","","set last change time",19,[[]]],[11,"set","","for IPC_SET see man semctl(2)",19,[[["semidds",3]]]],[11,"get_or_create","","Get the semaphore array with <code>key</code>. If not exist, create a …",19,[[["u32",15],["usize",15]],[["arc",3],["result",4],["lxerror",4]]]],[11,"set_addr","","set the shared memory address on attach",21,[[["usize",15]]]],[11,"new_shared_guard","","Get or create a ShmGuard",21,[[["u32",15],["usize",15]],[["arc",3],["lxerror",4],["result",4]]]],[11,"attach","","set last attach time",22,[[["u32",15]]]],[11,"detach","","set last detach time",22,[[["u32",15]]]],[11,"ctime","","set last change time",22,[[]]],[11,"set","","for IPC_SET see man shmctl(2)",22,[[["shmidds",3]]]],[11,"remove","","remove Shared memory",22,[[]]],[11,"empty","linux_object::signal","",58,[[]]],[11,"contains","","",58,[[["signal",4]],["bool",15]]],[11,"insert","","",58,[[["signal",4]]]],[11,"insert_set","","",58,[[["sigset",3]]]],[11,"remove","","",58,[[["signal",4]]]],[11,"remove_set","","",58,[[["sigset",3]]]],[18,"NOCLDSTOP","","",60,null],[18,"NOCLDWAIT","","",60,null],[18,"SIGINFO","","",60,null],[18,"ONSTACK","","",60,null],[18,"RESTART","","",60,null],[18,"NODEFER","","",60,null],[18,"RESETHAND","","",60,null],[18,"RESTORER","","",60,null],[11,"empty","","Returns an empty set of flags",60,[[],["signalactionflags",3]]],[11,"all","","Returns the set containing all flags.",60,[[],["signalactionflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",60,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",60,[[["usize",15]],[["option",4],["signalactionflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",60,[[["usize",15]],["signalactionflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",60,[[["usize",15]],["signalactionflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",60,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",60,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",60,[[["signalactionflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",60,[[["signalactionflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",60,[[["signalactionflags",3]]]],[11,"remove","","Removes the specified flags in-place.",60,[[["signalactionflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",60,[[["signalactionflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",60,[[["bool",15],["signalactionflags",3]]]],[18,"READABLE","linux_object::sync","File: is readable",61,null],[18,"WRITABLE","","File: is writeable",61,null],[18,"ERROR","","File: has error",61,null],[18,"CLOSED","","File: is closed",61,null],[18,"PROCESS_QUIT","","Process: is Quit",61,null],[18,"CHILD_PROCESS_QUIT","","Process: child process is Quit",61,null],[18,"RECEIVE_SIGNAL","","Process: received signal",61,null],[18,"SEMAPHORE_REMOVED","","Semaphore: is removed",61,null],[18,"SEMAPHORE_CAN_ACQUIRE","","Semaphore: can acquired a resource of this semaphore",61,null],[11,"empty","","Returns an empty set of flags",61,[[],["event",3]]],[11,"all","","Returns the set containing all flags.",61,[[],["event",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",61,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",61,[[["u32",15]],[["event",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",61,[[["u32",15]],["event",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",61,[[["u32",15]],["event",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",61,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",61,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",61,[[["event",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",61,[[["event",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",61,[[["event",3]]]],[11,"remove","","Removes the specified flags in-place.",61,[[["event",3]]]],[11,"toggle","","Toggles the specified flags in-place.",61,[[["event",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",61,[[["event",3],["bool",15]]]],[11,"new","","create an event bus",62,[[],[["mutex",3],["arc",3]]]],[11,"set","","set event flag",62,[[["event",3]]]],[11,"clear","","clear all event flag",62,[[["event",3]]]],[11,"change","","change event flag",62,[[["event",3]]]],[11,"subscribe","","push a EventHandler into the callback vector",62,[[["eventhandler",6]]]],[11,"get_callback_len","","get the callback vector length",62,[[],["usize",15]]],[11,"new","","Creates a new semaphore with the initial count specified.",63,[[["isize",15]],["semaphore",3]]],[11,"remove","","Set the semaphore in removed statue",63,[[]]],[11,"acquire","","Acquires a resource of this semaphore, blocking the …",63,[[]]],[11,"release","","Release a resource from this semaphore.",63,[[]]],[11,"access","","Acquires a resource of this semaphore, returning an RAII …",63,[[]]],[11,"get","","Get the current count",63,[[],["isize",15]]],[11,"get_ncnt","","Get the current eventbus callback length",63,[[],["usize",15]]],[11,"get_pid","","Get the current pid",63,[[],["usize",15]]],[11,"set_pid","","Set the current pid",63,[[["usize",15]]]],[11,"set","","Set the current count",63,[[["isize",15]]]]],"p":[[4,"LxError"],[3,"File"],[3,"OpenOptions"],[4,"SeekFrom"],[4,"PipeEnd"],[8,"INode"],[4,"IOCTLError"],[3,"PollStatus"],[3,"MMapArea"],[3,"Metadata"],[3,"Timespec"],[4,"FileType"],[3,"FsInfo"],[4,"FsError"],[8,"FileSystem"],[8,"FileLike"],[3,"FileDesc"],[8,"INodeExt"],[3,"SemidDs"],[3,"SemArray"],[3,"ShmidDs"],[3,"ShmIdentifier"],[3,"ShmGuard"],[3,"IpcPerm"],[3,"SemProc"],[3,"ShmProc"],[3,"LinuxElfLoader"],[8,"ProcessExt"],[3,"RLimit"],[3,"LinuxProcess"],[3,"SignalAction"],[3,"SigInfo"],[4,"SignalCode"],[3,"MachineContext"],[4,"Signal"],[3,"SignalUserContext"],[3,"SignalFrame"],[3,"SignalStackFlags"],[3,"SignalStack"],[8,"ThreadExt"],[8,"CurrentThreadExt"],[3,"LinuxThread"],[3,"TimeSpec"],[3,"TimeVal"],[3,"RUsage"],[3,"Tms"],[3,"MemBuf"],[3,"FcntlFlags"],[3,"FileFlags"],[3,"PipeData"],[3,"Pipe"],[3,"Pseudo"],[3,"RandomINodeData"],[3,"RandomINode"],[3,"STDIN"],[3,"STDOUT"],[3,"Stdin"],[3,"Stdout"],[3,"Sigset"],[19,"SiginfoFields"],[3,"SignalActionFlags"],[3,"Event"],[3,"EventBus"],[3,"Semaphore"],[3,"SemaphoreGuard"]]},\
"linux_syscall":{"doc":"Linux syscall implementations","i":[[3,"Syscall","linux_syscall","The struct of Syscall which stores the information about …",null,null],[12,"thread","","the thread making a syscall",0,null],[12,"syscall_entry","","the entry of current syscall",0,null],[12,"regs","","store the regs statues",0,null],[12,"thread_fn","","new thread function",0,null],[11,"syscall","","syscall entry function",0,[[["u32",15]]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["arc",3],["any",8]]]],[11,"into_result","","",0,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["global",3],["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"sys_getcwd","","return a null-terminated string containing an absolute …",0,[[["useroutptr",6],["usize",15],["u8",15]],["sysresult",6]]],[11,"sys_chdir","","Change the current directory.",0,[[["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_mkdir","","Make a directory.",0,[[["userinptr",6],["usize",15],["u8",15]],["sysresult",6]]],[11,"sys_mkdirat","","create directory relative to directory file descriptor",0,[[["usize",15],["userinptr",6],["filedesc",3],["u8",15]],["sysresult",6]]],[11,"sys_rmdir","","Remove a directory.",0,[[["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_getdents64","","get directory entries TODO: get ino from dirent",0,[[["usize",15],["useroutptr",6],["filedesc",3],["u8",15]],["sysresult",6]]],[11,"sys_link","","creates a new link (also known as a hard link) to an …",0,[[["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_linkat","","create file link relative to directory file descriptors …",0,[[["usize",15],["userinptr",6],["filedesc",3],["u8",15]],["sysresult",6]]],[11,"sys_unlink","","delete name/possibly file it refers to If that name was …",0,[[["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_unlinkat","","remove directory entry relative to directory file …",0,[[["usize",15],["userinptr",6],["filedesc",3],["u8",15]],["sysresult",6]]],[11,"sys_rename","","change name/location of file",0,[[["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_renameat","","rename file relative to directory file descriptors",0,[[["userinptr",6],["filedesc",3],["u8",15]],["sysresult",6]]],[11,"sys_readlink","","read value of symbolic link",0,[[["usize",15],["userinptr",6],["useroutptr",6],["u8",15]],["sysresult",6]]],[11,"sys_readlinkat","","read value of symbolic link relative to directory file …",0,[[["usize",15],["userinptr",6],["filedesc",3],["u8",15],["useroutptr",6]],["sysresult",6]]],[11,"sys_open","","Opens or creates a file, depending on the flags passed to …",0,[[["usize",15],["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_openat","","open file relative to directory file descriptor",0,[[["usize",15],["userinptr",6],["filedesc",3],["u8",15]],["sysresult",6]]],[11,"sys_close","","Closes a file descriptor, so that it no longer refers to …",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_dup2","","create a copy of the file descriptor oldfd.",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_dup","","create a copy of the file descriptor fd, and uses the …",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_pipe","","Creates a pipe, a unidirectional data channel that can be …",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_pipe2","","Creates a pipe, a unidirectional data channel that can be …",0,[[["usize",15],["useroutptr",6]],["sysresult",6]]],[11,"sys_flock","","apply or remove an advisory lock on an open file TODO: …",0,[[["filedesc",3],["usize",15]],["sysresult",6]]],[11,"sys_read","","Reads from a specified file using a file descriptor. …",0,[[["usize",15],["useroutptr",6],["filedesc",3],["u8",15]]]],[11,"sys_write","","Writes to a specified file using a file descriptor. …",0,[[["usize",15],["userinptr",6],["filedesc",3],["u8",15]],["sysresult",6]]],[11,"sys_pread","","read from or write to a file descriptor at a given offset …",0,[[["usize",15],["useroutptr",6],["filedesc",3],["u8",15],["u64",15]]]],[11,"sys_pwrite","","writes up to count bytes from the buffer starting at buf …",0,[[["usize",15],["userinptr",6],["filedesc",3],["u8",15],["u64",15]],["sysresult",6]]],[11,"sys_readv","","works just like read except that multiple buffers are …",0,[[["usize",15],["filedesc",3],["iovecout",6],["userinptr",6]]]],[11,"sys_writev","","works just like write except that multiple buffers are …",0,[[["usize",15],["iovecin",6],["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_lseek","","repositions the offset of the open file associated with …",0,[[["filedesc",3],["i64",15],["u8",15]],["sysresult",6]]],[11,"sys_truncate","","cause the regular file named by path to be truncated to a …",0,[[["userinptr",6],["usize",15],["u8",15]],["sysresult",6]]],[11,"sys_ftruncate","","cause the regular file referenced by fd to be truncated …",0,[[["filedesc",3],["usize",15]],["sysresult",6]]],[11,"sys_sendfile","","copies data between one file descriptor and another.",0,[[["usize",15],["userinoutptr",6],["u64",15],["filedesc",3]]]],[11,"sys_copy_file_range","","copies data between one file descriptor and anothe, read …",0,[[["usize",15],["userinoutptr",6],["u64",15],["filedesc",3]]]],[11,"sys_sync","","causes all buffered modifications to file metadata and …",0,[[],["sysresult",6]]],[11,"sys_fsync","","transfers (“flushes”) all modified in-core data of …",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_fdatasync","","is similar to fsync(), but does not flush modified …",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_ioctl","","Set parameters of device files.",0,[[["filedesc",3],["usize",15]],["sysresult",6]]],[11,"sys_fcntl","","Manipulate a file descriptor.",0,[[["filedesc",3],["usize",15]],["sysresult",6]]],[11,"sys_access","","Checks whether the calling process can access the file …",0,[[["userinptr",6],["usize",15],["u8",15]],["sysresult",6]]],[11,"sys_faccessat","","Check user’s permissions of a file relative to a …",0,[[["usize",15],["userinptr",6],["filedesc",3],["u8",15]],["sysresult",6]]],[11,"sys_utimensat","","change file timestamps with nanosecond precision",0,[[["usize",15],["userinptr",6],["filedesc",3],["u8",15],["userinoutptr",6]],["sysresult",6]]],[11,"sys_poll","","Wait for some event on a file descriptor",0,[[["usize",15],["userinoutptr",6],["pollfd",3]]]],[11,"sys_ppoll","","Wait for some event on a file descriptor",0,[[["usize",15],["timespec",3],["userinoutptr",6],["pollfd",3],["userinptr",6]]]],[11,"sys_pselect6","","similar to select, but have sigmask argument",0,[[["usize",15],["u32",15],["userinoutptr",6],["userinptr",6],["timeval",3]]]],[11,"sys_select","","allow a program to monitor multiple file descriptors, …",0,[[["usize",15],["u32",15],["userinoutptr",6],["userinptr",6],["timeval",3]]]],[11,"sys_lstat","","Works exactly like the stat syscall, but if the file in …",0,[[["stat",3],["userinptr",6],["u8",15],["useroutptr",6]],["sysresult",6]]],[11,"sys_fstat","","Works exactly like the stat syscall except a file …",0,[[["filedesc",3],["useroutptr",6],["stat",3]],["sysresult",6]]],[11,"sys_fstatat","","get file status relative to a directory file descriptor",0,[[["usize",15],["stat",3],["userinptr",6],["filedesc",3],["u8",15],["useroutptr",6]],["sysresult",6]]],[11,"sys_stat","","Returns information about a file in a structure named …",0,[[["stat",3],["userinptr",6],["u8",15],["useroutptr",6]],["sysresult",6]]],[11,"sys_semget","","returns the semaphore set identifier associated with the …",0,[[["usize",15]],["sysresult",6]]],[11,"sys_semop","","semaphore operations",0,[[["usize",15],["sembuf",3],["userinptr",6]]]],[11,"sys_semctl","","semaphore control operations",0,[[["usize",15]],["sysresult",6]]],[11,"sys_shmget","","allocates a shared memory segment",0,[[["usize",15]],["sysresult",6]]],[11,"sys_shmat","","attaches the shared memory segment identified by shmid to …",0,[[["usize",15],["virtaddr",6]],["sysresult",6]]],[11,"sys_shmdt","","detaches the shared memory segment located at the address …",0,[[["usize",15],["virtaddr",6]],["sysresult",6]]],[11,"sys_shmctl","","shared memory control",0,[[["usize",15]],["sysresult",6]]],[11,"sys_arch_prctl","","set architecture-specific thread state for x86_64 …",0,[[["usize",15],["i32",15]],["sysresult",6]]],[11,"sys_uname","","get name and information about current kernel",0,[[["useroutptr",6],["u8",15]],["sysresult",6]]],[11,"sys_sysinfo","","provides a simple way of getting overall system statistics",0,[[["useroutptr",6],["sysinfo",3]],["sysresult",6]]],[11,"sys_futex","","provides a method for waiting until a certain condition …",0,[[["usize",15],["u32",15],["i32",15],["userinptr",6],["timespec",3]]]],[11,"sys_prlimit64","","Combines and extends the functionality of setrlimit() and …",0,[[["usize",15],["rlimit",3],["userinptr",6],["useroutptr",6]],["sysresult",6]]],[11,"sys_getrandom","","fills the buffer pointed to by <code>buf</code> with up to <code>buflen</code> …",0,[[["usize",15],["u32",15],["useroutptr",6],["u8",15]],["sysresult",6]]],[11,"sys_rt_sigaction","","Used to change the action taken by a process on receipt …",0,[[["usize",15],["useroutptr",6],["signalaction",3],["userinptr",6]],["sysresult",6]]],[11,"sys_rt_sigprocmask","","Used to fetch and/or change the signal mask of the …",0,[[["useroutptr",6],["usize",15],["i32",15],["userinptr",6],["sigset",3]],["sysresult",6]]],[11,"sys_sigaltstack","","Allows a process to define a new alternate signal stack …",0,[[["signalstack",3],["userinptr",6],["useroutptr",6]],["sysresult",6]]],[11,"sys_fork","","Fork the current process. Return the child’s PID.",0,[[],["sysresult",6]]],[11,"sys_vfork","","creates a child process of the calling process, similar …",0,[[]]],[11,"sys_clone","","Create a new thread in the current process. The new thread…",0,[[["usize",15],["useroutptr",6],["i32",15]],["sysresult",6]]],[11,"sys_wait4","","Wait for a child process exited.",0,[[["u32",15],["useroutptr",6],["i32",15]]]],[11,"sys_execve","","Replaces the current ** process ** with a new process …",0,[[["userinptr",6],["userinptr",6],["u8",15]],["sysresult",6]]],[11,"sys_gettid","","Get the current thread ID.",0,[[],["sysresult",6]]],[11,"sys_getpid","","Get the current process ID.",0,[[],["sysresult",6]]],[11,"sys_getppid","","Get the parent process ID.",0,[[],["sysresult",6]]],[11,"sys_exit","","Exit the current thread",0,[[["i32",15]],["sysresult",6]]],[11,"sys_exit_group","","Exit the current thread group (i.e. process)",0,[[["i32",15]],["sysresult",6]]],[11,"sys_nanosleep","","Allows the calling thread to sleep for an interval …",0,[[["userinptr",6],["timespec",3]]]],[11,"sys_set_tid_address","","set pointer to thread ID returns the caller’s thread ID",0,[[["useroutptr",6],["i32",15]],["sysresult",6]]],[11,"sys_clock_gettime","","finds the resolution (precision) of the specified clock …",0,[[["usize",15],["useroutptr",6],["timespec",3]],["sysresult",6]]],[11,"sys_gettimeofday","","get the time with second and microseconds",0,[[["useroutptr",6],["u8",15],["userinptr",6],["timeval",3]],["sysresult",6]]],[11,"sys_time","","get time in seconds",0,[[["useroutptr",6],["u64",15]],["sysresult",6]]],[11,"sys_getrusage","","get resource usage currently only support ru_utime and …",0,[[["usize",15],["useroutptr",6],["rusage",3]],["sysresult",6]]],[11,"sys_times","","stores the current process times in the struct tms that …",0,[[["useroutptr",6],["tms",3]],["sysresult",6]]],[11,"sys_mmap","","creates a new mapping in the virtual address space of the …",0,[[["usize",15],["filedesc",3],["u64",15]]]],[11,"sys_mprotect","","changes the access protections for the calling process’…",0,[[["usize",15]],["sysresult",6]]],[11,"sys_munmap","","Deletes the mappings for the specified address range, and …",0,[[["usize",15]],["sysresult",6]]]],"p":[[3,"Syscall"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[0,"kv","log","<strong>UNSTABLE:</strong> Structured key-value pairs.",null,null],[0,"value","log::kv","Structured values.",null,null],[8,"Fill","log::kv::value","A type that requires extra work to convert into a <code>Value</code>.",null,null],[10,"fill","","Fill a value.",0,[[["slot",3]],[["result",4],["error",3]]]],[3,"Slot","","A value slot to fill using the <code>Fill</code> trait.",null,null],[3,"Error","","An error encountered while working with structured data.",null,null],[8,"ToValue","","A type that can be converted into a <code>Value</code>.",null,null],[10,"to_value","","Perform the conversion.",1,[[],["value",3]]],[3,"Value","","A value in a structured key-value pair.",null,null],[3,"Error","log::kv","An error encountered while working with structured data.",null,null],[3,"Key","","A key in a structured key-value pair.",null,null],[8,"ToKey","","A type that can be converted into a <code>Key</code>.",null,null],[10,"to_key","","Perform the conversion.",2,[[],["key",3]]],[8,"Source","","A source of key-value pairs.",null,null],[10,"visit","","Visit key-value pairs.",3,[[["visitor",8]],[["result",4],["error",3]]]],[11,"get","","Get the value for a given key.",3,[[["key",3]],[["value",3],["option",4]]]],[11,"count","","Count the number of key-value pairs that can be visited.",3,[[],["usize",15]]],[8,"Visitor","","A visitor for the key-value pairs in a <code>Source</code>.",null,null],[10,"visit_pair","","Visit a key-value pair.",4,[[["key",3],["value",3]],[["result",4],["error",3]]]],[8,"ToValue","","A type that can be converted into a <code>Value</code>.",null,null],[10,"to_value","","Perform the conversion.",1,[[],["value",3]]],[3,"Value","","A value in a structured key-value pair.",null,null],[4,"Level","log","An enum representing the available verbosity levels of …",null,null],[13,"Error","","The “error” level.",5,null],[13,"Warn","","The “warn” level.",5,null],[13,"Info","","The “info” level.",5,null],[13,"Debug","","The “debug” level.",5,null],[13,"Trace","","The “trace” level.",5,null],[11,"max","","Returns the most verbose logging level.",5,[[],["level",4]]],[11,"to_level_filter","","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.",5,[[],["levelfilter",4]]],[4,"LevelFilter","","An enum representing the available verbosity level …",null,null],[13,"Off","","A level lower than all log levels.",6,null],[13,"Error","","Corresponds to the <code>Error</code> log level.",6,null],[13,"Warn","","Corresponds to the <code>Warn</code> log level.",6,null],[13,"Info","","Corresponds to the <code>Info</code> log level.",6,null],[13,"Debug","","Corresponds to the <code>Debug</code> log level.",6,null],[13,"Trace","","Corresponds to the <code>Trace</code> log level.",6,null],[11,"max","","Returns the most verbose logging level filter.",6,[[],["levelfilter",4]]],[11,"to_level","","Converts <code>self</code> to the equivalent <code>Level</code>.",6,[[],[["option",4],["level",4]]]],[3,"Record","","The “payload” of a log message.",null,null],[11,"builder","","Returns a new builder.",7,[[],["recordbuilder",3]]],[11,"args","","The message body.",7,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",7,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",7,[[],["level",4]]],[11,"target","","The name of the target of the directive.",7,[[],["str",15]]],[11,"module_path","","The module path of the message.",7,[[],[["option",4],["str",15]]]],[11,"module_path_static","","The module path of the message, if it is a <code>\'static</code> string.",7,[[],[["option",4],["str",15]]]],[11,"file","","The source file containing the message.",7,[[],[["option",4],["str",15]]]],[11,"file_static","","The module path of the message, if it is a <code>\'static</code> string.",7,[[],[["option",4],["str",15]]]],[11,"line","","The line containing the message.",7,[[],[["u32",15],["option",4]]]],[11,"key_values","","The structued key-value pairs associated with the message.",7,[[],["source",8]]],[11,"to_builder","","Create a new <code>RecordBuilder</code> based on this record.",7,[[],["recordbuilder",3]]],[3,"RecordBuilder","","Builder for <code>Record</code>.",null,null],[11,"new","","Construct new <code>RecordBuilder</code>.",8,[[],["recordbuilder",3]]],[11,"args","","Set <code>args</code>.",8,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …",8,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set <code>Metadata::level</code>.",8,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set <code>Metadata::target</code>",8,[[["str",15]],["recordbuilder",3]]],[11,"module_path","","Set <code>module_path</code>",8,[[["option",4],["str",15]],["recordbuilder",3]]],[11,"module_path_static","","Set <code>module_path</code> to a <code>\'static</code> string",8,[[["option",4],["str",15]],["recordbuilder",3]]],[11,"file","","Set <code>file</code>",8,[[["option",4],["str",15]],["recordbuilder",3]]],[11,"file_static","","Set <code>file</code> to a <code>\'static</code> string.",8,[[["option",4],["str",15]],["recordbuilder",3]]],[11,"line","","Set <code>line</code>",8,[[["u32",15],["option",4]],["recordbuilder",3]]],[11,"key_values","","Set <code>key_values</code>",8,[[["source",8]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a <code>Record</code>",8,[[],["record",3]]],[3,"Metadata","","Metadata about a log message.",null,null],[11,"builder","","Returns a new builder.",9,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",9,[[],["level",4]]],[11,"target","","The name of the target of the directive.",9,[[],["str",15]]],[3,"MetadataBuilder","","Builder for <code>Metadata</code>.",null,null],[11,"new","","Construct a new <code>MetadataBuilder</code>.",10,[[],["metadatabuilder",3]]],[11,"level","","Setter for <code>level</code>.",10,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for <code>target</code>.",10,[[["str",15]],["metadatabuilder",3]]],[11,"build","","Returns a <code>Metadata</code> object.",10,[[],["metadata",3]]],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata …",11,[[["metadata",3]],["bool",15]]],[10,"log","","Logs the <code>Record</code>.",11,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",11,[[]]],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_boxed_logger","","Sets the global logger to a <code>Box<Log></code>.",null,[[["box",3],["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger","","Sets the global logger to a <code>&\'static Log</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger_racy","","A thread-unsafe version of <code>set_logger</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[3,"SetLoggerError","","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …",null,null],[3,"ParseLevelError","","The type returned by <code>from_str</code> when the string doesn’t …",null,null],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in …",null,null],[11,"from","log::kv::value","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","log::kv","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","log::kv::value","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","log::kv","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","log","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_key","log::kv","",13,[[],["key",3]]],[11,"to_value","","",15,[[],["value",3]]],[11,"as_ref","","",13,[[],["str",15]]],[11,"from","log::kv::value","",12,[[["error",3]]]],[11,"from","","",12,[[["error",3]]]],[11,"from","log::kv","",13,[[["str",15]]]],[11,"from","","",15,[[["str",15]]]],[11,"from","","",15,[[["arguments",3]]]],[11,"from","","",15,[[["usize",15]]]],[11,"from","","",15,[[["u8",15]]]],[11,"from","","",15,[[["u16",15]]]],[11,"from","","",15,[[["u32",15]]]],[11,"from","","",15,[[["u64",15]]]],[11,"from","","",15,[[["isize",15]]]],[11,"from","","",15,[[["i8",15]]]],[11,"from","","",15,[[["i16",15]]]],[11,"from","","",15,[[["i32",15]]]],[11,"from","","",15,[[["i64",15]]]],[11,"from","","",15,[[["f32",15]]]],[11,"from","","",15,[[["f64",15]]]],[11,"from","","",15,[[["char",15]]]],[11,"from","","",15,[[["bool",15]]]],[11,"clone","","",13,[[],["key",3]]],[11,"clone","log","",5,[[],["level",4]]],[11,"clone","","",6,[[],["levelfilter",4]]],[11,"clone","","",7,[[],["record",3]]],[11,"clone","","",9,[[],["metadata",3]]],[11,"cmp","log::kv","",13,[[],["ordering",4]]],[11,"cmp","log","",5,[[["level",4]],["ordering",4]]],[11,"cmp","","",6,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",9,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",10,[[["metadatabuilder",3]],["ordering",4]]],[11,"eq","log::kv","",13,[[["key",3]],["bool",15]]],[11,"eq","log","",5,[[["level",4]],["bool",15]]],[11,"eq","","",5,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",6,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",6,[[["level",4]],["bool",15]]],[11,"eq","","",9,[[["metadata",3]],["bool",15]]],[11,"ne","","",9,[[["metadata",3]],["bool",15]]],[11,"eq","","",10,[[["metadatabuilder",3]],["bool",15]]],[11,"ne","","",10,[[["metadatabuilder",3]],["bool",15]]],[11,"eq","","",17,[[["parselevelerror",3]],["bool",15]]],[11,"ne","","",17,[[["parselevelerror",3]],["bool",15]]],[11,"partial_cmp","log::kv","",13,[[["key",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","log","",5,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["level",4]],["bool",15]]],[11,"le","","",5,[[["level",4]],["bool",15]]],[11,"gt","","",5,[[["level",4]],["bool",15]]],[11,"ge","","",5,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",5,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["levelfilter",4]],["bool",15]]],[11,"le","","",5,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",5,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",5,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",6,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["levelfilter",4]],["bool",15]]],[11,"le","","",6,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",6,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",6,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",6,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["level",4]],["bool",15]]],[11,"le","","",6,[[["level",4]],["bool",15]]],[11,"gt","","",6,[[["level",4]],["bool",15]]],[11,"ge","","",6,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",9,[[["metadata",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",10,[[["metadatabuilder",3]],[["option",4],["ordering",4]]]],[11,"fmt","log::kv::value","",12,[[["formatter",3]],["result",6]]],[11,"fmt","log::kv","",13,[[["formatter",3]],["result",6]]],[11,"fmt","log::kv::value","",14,[[["formatter",3]],["result",6]]],[11,"fmt","log::kv","",15,[[["formatter",3]],["result",6]]],[11,"fmt","log","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","log::kv::value","",12,[[["formatter",3]],["result",6]]],[11,"fmt","log::kv","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","log","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"hash","log::kv","",13,[[]]],[11,"hash","log","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"borrow","log::kv","",13,[[],["str",15]]],[11,"from_str","log","",5,[[["str",15]],[["result",4],["level",4]]]],[11,"from_str","","",6,[[["str",15]],[["levelfilter",4],["result",4]]]],[11,"boxed","log::kv::value","Create an error from a standard error type.",12,[[]]],[11,"msg","","Create an error from a message.",12,[[["str",15]]]],[11,"from_str","log::kv","Get a key from a borrowed string.",13,[[["str",15]]]],[11,"as_str","","Get a borrowed string from this key.",13,[[],["str",15]]],[11,"get","","Get the value for a given key.",3,[[["key",3]],[["value",3],["option",4]]]],[11,"count","","Count the number of key-value pairs that can be visited.",3,[[],["usize",15]]],[11,"from_fill","","Get a value from a fillable slot.",15,[[]]],[11,"fill_any","log::kv::value","Fill the slot with a value.",14,[[],[["result",4],["error",3]]]],[11,"to_str","log::kv","Try get a <code>usize</code> from this value.",15,[[],[["option",4],["cow",4]]]],[11,"to_usize","","Try get a <code>usize</code> from this value.",15,[[],[["usize",15],["option",4]]]],[11,"to_u8","","Try get a <code>u8</code> from this value.",15,[[],[["option",4],["u8",15]]]],[11,"to_u16","","Try get a <code>u16</code> from this value.",15,[[],[["option",4],["u16",15]]]],[11,"to_u32","","Try get a <code>u32</code> from this value.",15,[[],[["u32",15],["option",4]]]],[11,"to_u64","","Try get a <code>u64</code> from this value.",15,[[],[["option",4],["u64",15]]]],[11,"to_isize","","Try get a <code>isize</code> from this value.",15,[[],[["option",4],["isize",15]]]],[11,"to_i8","","Try get a <code>i8</code> from this value.",15,[[],[["i8",15],["option",4]]]],[11,"to_i16","","Try get a <code>i16</code> from this value.",15,[[],[["i16",15],["option",4]]]],[11,"to_i32","","Try get a <code>i32</code> from this value.",15,[[],[["option",4],["i32",15]]]],[11,"to_i64","","Try get a <code>i64</code> from this value.",15,[[],[["i64",15],["option",4]]]],[11,"to_f32","","Try get a <code>f32</code> from this value.",15,[[],[["f32",15],["option",4]]]],[11,"to_f64","","Try get a <code>f64</code> from this value.",15,[[],[["option",4],["f64",15]]]],[11,"to_bool","","Try get a <code>bool</code> from this value.",15,[[],[["option",4],["bool",15]]]],[11,"to_char","","Try get a <code>char</code> from this value.",15,[[],[["option",4],["char",15]]]],[11,"to_borrowed_str","","Try get a <code>str</code> from this value.",15,[[],[["option",4],["str",15]]]],[11,"from_debug","","Get a value from a debuggable type.",15,[[]]],[11,"from_display","","Get a value from a displayable type.",15,[[]]],[11,"fill_debug","log::kv::value","Fill the slot with a debuggable value.",14,[[],[["result",4],["error",3]]]],[11,"fill_display","","Fill the slot with a displayable value.",14,[[],[["result",4],["error",3]]]]],"p":[[8,"Fill"],[8,"ToValue"],[8,"ToKey"],[8,"Source"],[8,"Visitor"],[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"Error"],[3,"Key"],[3,"Slot"],[3,"Value"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"memchr":{"doc":"The <code>memchr</code> crate provides heavily optimized routines for …","i":[[3,"Memchr","memchr","An iterator for <code>memchr</code>.",null,null],[3,"Memchr2","","An iterator for <code>memchr2</code>.",null,null],[3,"Memchr3","","An iterator for <code>memchr3</code>.",null,null],[5,"memchr_iter","","An iterator over all occurrences of the needle in a …",null,[[["u8",15]],["memchr",3]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],["memchr2",3]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],["memchr3",3]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a …",null,[[["u8",15]],[["memchr",3],["rev",3]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],[["rev",3],["memchr2",3]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],[["rev",3],["memchr3",3]]]],[5,"memchr","","Search for the first occurrence of a byte in a slice.",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memchr2","","Like <code>memchr</code>, but searches for either of two bytes instead …",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memchr3","","Like <code>memchr</code>, but searches for any of three bytes instead …",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memrchr2","","Like <code>memrchr</code>, but searches for either of two bytes …",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memrchr3","","Like <code>memrchr</code>, but searches for any of three bytes instead …",null,[[["u8",15]],[["usize",15],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_back","","",0,[[],["option",4]]],[11,"next_back","","",1,[[],["option",4]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next","","",0,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",0,[[]]],[11,"next","","",1,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",1,[[]]],[11,"next","","",2,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",2,[[]]],[11,"new","","Creates a new iterator that yields all positions of …",0,[[["u8",15]],["memchr",3]]],[11,"new","","Creates a new iterator that yields all positions of …",1,[[["u8",15]],["memchr2",3]]],[11,"new","","Create a new <code>Memchr3</code> that’s initialized to zero with a …",2,[[["u8",15]],["memchr3",3]]]],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"]]},\
"nb_connect":{"doc":"Non-blocking TCP or Unix connect.","i":[[5,"unix","nb_connect","Creates a pending Unix connection to the specified path.",null,[[["asref",8],["path",3]],[["result",6],["unixstream",3]]]],[5,"tcp","","Creates a pending TCP connection to the specified address.",null,[[["into",8],["socketaddr",4]],[["result",6],["tcpstream",3]]]]],"p":[]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs …","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current …",null,[[],["usize",15]]],[5,"get_physical","","Returns the number of physical cores of the current …",null,[[],["usize",15]]]],"p":[]},\
"numeric_enum_macro":{"doc":"A declarative macro for type-safe enum-to-numbers …","i":[[14,"numeric_enum","numeric_enum_macro","Declares an enum with a given numeric representation …",null,null]],"p":[]},\
"once_cell":{"doc":"Overview<code>once_cell</code> provides two new cell-like types, …","i":[[0,"unsync","once_cell","",null,null],[3,"OnceCell","once_cell::unsync","A cell which can be written to only once. It is not …",null,null],[11,"new","","Creates a new empty cell.",0,[[],["oncecell",3]]],[11,"get","","Gets a reference to the underlying value.",0,[[],["option",4]]],[11,"get_mut","","Gets a mutable reference to the underlying value.",0,[[],["option",4]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",0,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",0,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",0,[[],["result",4]]],[11,"take","","Takes the value out of this <code>OnceCell</code>, moving it back to …",0,[[],["option",4]]],[11,"into_inner","","Consumes the <code>OnceCell</code>, returning the wrapped value.",0,[[],["option",4]]],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new lazy value with the given initializing …",1,[[],["lazy",3]]],[11,"force","","Forces the evaluation of this lazy value and returns a …",1,[[["lazy",3]]]],[0,"sync","once_cell","",null,null],[3,"OnceCell","once_cell::sync","A thread-safe cell which can be written to only once.",null,null],[11,"new","","Creates a new empty cell.",2,[[],["oncecell",3]]],[11,"get","","Gets the reference to the underlying value.",2,[[],["option",4]]],[11,"get_mut","","Gets the mutable reference to the underlying value.",2,[[],["option",4]]],[11,"get_unchecked","","Get the reference to the underlying value, without …",2,[[]]],[11,"set","","Sets the contents of this cell to <code>value</code>.",2,[[],["result",4]]],[11,"get_or_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",2,[[]]],[11,"get_or_try_init","","Gets the contents of the cell, initializing it with <code>f</code> if …",2,[[],["result",4]]],[11,"take","","Takes the value out of this <code>OnceCell</code>, moving it back to …",2,[[],["option",4]]],[11,"into_inner","","Consumes the <code>OnceCell</code>, returning the wrapped value. …",2,[[],["option",4]]],[3,"Lazy","","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new lazy value with the given initializing …",3,[[],["lazy",3]]],[11,"force","","Forces the evaluation of this lazy value and returns a …",3,[[["lazy",3]]]],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","once_cell::sync","",2,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","once_cell::unsync","",0,[[]]],[11,"from","once_cell::sync","",2,[[]]],[11,"clone","once_cell::unsync","",0,[[],["oncecell",3]]],[11,"clone","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","once_cell::unsync","",0,[[]]],[11,"default","","Creates a new lazy value using <code>Default</code> as the …",1,[[],["lazy",3]]],[11,"default","once_cell::sync","",2,[[],["oncecell",3]]],[11,"default","","Creates a new lazy value using <code>Default</code> as the …",3,[[],["lazy",3]]],[11,"eq","once_cell::unsync","",0,[[],["bool",15]]],[11,"eq","once_cell::sync","",2,[[["oncecell",3]],["bool",15]]],[11,"deref","once_cell::unsync","",1,[[]]],[11,"deref","once_cell::sync","",3,[[]]],[11,"deref_mut","once_cell::unsync","",1,[[]]],[11,"deref_mut","once_cell::sync","",3,[[]]],[11,"fmt","once_cell::unsync","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","once_cell::sync","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]]],"p":[[3,"OnceCell"],[3,"Lazy"],[3,"OnceCell"],[3,"Lazy"]]},\
"parking":{"doc":"Thread parking and unparking.","i":[[5,"pair","parking","Creates a parker and an associated unparker.",null,[[]]],[3,"Parker","","Waits for a notification.",null,null],[11,"new","","Creates a new parker.",0,[[],["parker",3]]],[11,"park","","Blocks until notified and then goes back into unnotified …",0,[[]]],[11,"park_timeout","","Blocks until notified and then goes back into unnotified …",0,[[["duration",3]],["bool",15]]],[11,"park_deadline","","Blocks until notified and then goes back into unnotified …",0,[[["instant",3]],["bool",15]]],[11,"unpark","","Notifies the parker.",0,[[],["bool",15]]],[11,"unparker","","Returns a handle for unparking.",0,[[],["unparker",3]]],[3,"Unparker","","Notifies a parker.",null,null],[11,"unpark","","Notifies the associated parker.",1,[[],["bool",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",1,[[],["unparker",3]]],[11,"default","","",0,[[],["parker",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"Parker"],[3,"Unparker"]]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","i":[[14,"pin_project","pin_project_lite","A macro that creates a projection type covering all the …",null,null]],"p":[]},\
"pin_utils":{"doc":"Utilities for pinning","i":[[14,"pin_mut","pin_utils","Pins a value on the stack.",null,null],[14,"unsafe_pinned","","A pinned projection of a struct field.",null,null],[14,"unsafe_unpinned","","An unpinned projection of a struct field.",null,null]],"p":[]},\
"polling":{"doc":"Portable interface to epoll, kqueue, event ports, and …","i":[[3,"Event","polling","Indicates that a file descriptor or socket can read or …",null,null],[12,"key","","Key identifying the file descriptor or socket.",0,null],[12,"readable","","Can it do a read operation without blocking?",0,null],[12,"writable","","Can it do a write operation without blocking?",0,null],[11,"all","","All kinds of events (readable and writable).",0,[[["usize",15]],["event",3]]],[11,"readable","","Only the readable event.",0,[[["usize",15]],["event",3]]],[11,"writable","","Only the writable event.",0,[[["usize",15]],["event",3]]],[11,"none","","No events.",0,[[["usize",15]],["event",3]]],[3,"Poller","","Waits for I/O events.",null,null],[11,"new","","Creates a new poller.",1,[[],[["result",6],["poller",3]]]],[11,"add","","Adds a file descriptor or socket to the poller.",1,[[["event",3]],["result",6]]],[11,"modify","","Modifies the interest in a file descriptor or socket.",1,[[["event",3]],["result",6]]],[11,"delete","","Removes a file descriptor or socket from the poller.",1,[[],["result",6]]],[11,"wait","","Waits for at least one I/O event and returns the number …",1,[[["duration",3],["option",4],["vec",3]],[["result",6],["usize",15]]]],[11,"notify","","Wakes up the current or the following invocation of <code>wait()</code>…",1,[[],["result",6]]],[8,"Source","","A [<code>RawFd</code>] or a reference to a type implementing [<code>AsRawFd</code>].",null,null],[10,"raw","","Returns the [<code>RawFd</code>] for this I/O object.",2,[[],["rawfd",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"Event"],[3,"Poller"],[8,"Source"]]},\
"ppv_lite86":{"doc":"","i":[[0,"x86_64","ppv_lite86","",null,null],[3,"YesS3","ppv_lite86::x86_64","",null,null],[3,"NoS3","","",null,null],[3,"YesS4","","",null,null],[3,"NoS4","","",null,null],[3,"YesA1","","",null,null],[3,"NoA1","","",null,null],[3,"YesA2","","",null,null],[3,"NoA2","","",null,null],[3,"YesNI","","",null,null],[3,"NoNI","","",null,null],[3,"SseMachine","","",null,null],[3,"Avx2Machine","","",null,null],[6,"SSE2","","",null,null],[6,"SSSE3","","",null,null],[6,"SSE41","","",null,null],[6,"AVX","","AVX but not AVX2: only 128-bit integer operations, but …",null,null],[6,"AVX2","","",null,null],[19,"vec128_storage","","Generic wrapper for unparameterized storage of any of the …",null,null],[19,"vec256_storage","","",null,null],[11,"new128","","",0,[[]]],[11,"split128","","",0,[[]]],[19,"vec512_storage","","",null,null],[11,"new128","","",1,[[]]],[11,"split128","","",1,[[]]],[8,"AndNot","ppv_lite86","",null,null],[16,"Output","","",2,null],[10,"andnot","","",2,[[]]],[8,"BSwap","","",null,null],[10,"bswap","","",3,[[]]],[8,"ArithOps","","Ops that depend on word size",null,null],[8,"BitOps0","","Ops that are independent of word size and endian",null,null],[8,"BitOps32","","",null,null],[8,"BitOps64","","",null,null],[8,"BitOps128","","",null,null],[8,"RotateEachWord32","","",null,null],[10,"rotate_each_word_right7","","",4,[[]]],[10,"rotate_each_word_right8","","",4,[[]]],[10,"rotate_each_word_right11","","",4,[[]]],[10,"rotate_each_word_right12","","",4,[[]]],[10,"rotate_each_word_right16","","",4,[[]]],[10,"rotate_each_word_right20","","",4,[[]]],[10,"rotate_each_word_right24","","",4,[[]]],[10,"rotate_each_word_right25","","",4,[[]]],[8,"RotateEachWord64","","",null,null],[10,"rotate_each_word_right32","","",5,[[]]],[8,"RotateEachWord128","","",null,null],[8,"UnsafeFrom","","",null,null],[10,"unsafe_from","","",6,[[]]],[8,"Vec2","","A vector composed of two elements, which may be words or …",null,null],[10,"extract","","",7,[[["u32",15]]]],[10,"insert","","",7,[[["u32",15]]]],[8,"Vec4","","A vector composed of four elements, which may be words or …",null,null],[10,"extract","","",8,[[["u32",15]]]],[10,"insert","","",8,[[["u32",15]]]],[8,"Words4","","A vector composed of four words; depending on their size, …",null,null],[10,"shuffle1230","","",9,[[]]],[10,"shuffle2301","","",9,[[]]],[10,"shuffle3012","","",9,[[]]],[8,"LaneWords4","","A vector composed one or more lanes each composed of four …",null,null],[10,"shuffle_lane_words1230","","",10,[[]]],[10,"shuffle_lane_words2301","","",10,[[]]],[10,"shuffle_lane_words3012","","",10,[[]]],[8,"Swap64","","Exchange neigboring ranges of bits of the specified size",null,null],[10,"swap1","","",11,[[]]],[10,"swap2","","",11,[[]]],[10,"swap4","","",11,[[]]],[10,"swap8","","",11,[[]]],[10,"swap16","","",11,[[]]],[10,"swap32","","",11,[[]]],[10,"swap64","","",11,[[]]],[8,"u32x4","","",null,null],[8,"u64x2","","",null,null],[8,"u128x1","","",null,null],[8,"u32x4x2","","",null,null],[8,"u64x2x2","","",null,null],[8,"u64x4","","",null,null],[8,"u128x2","","",null,null],[8,"u32x4x4","","",null,null],[8,"u64x2x4","","",null,null],[8,"u128x4","","",null,null],[8,"MultiLane","","A vector composed of multiple 128-bit lanes.",null,null],[10,"to_lanes","","Split a multi-lane vector into single-lane vectors.",12,[[]]],[10,"from_lanes","","Build a multi-lane vector from individual lanes.",12,[[]]],[8,"VZip","","Combine single vectors into a multi-lane vector.",null,null],[10,"vzip","","",13,[[]]],[8,"Machine","","",null,null],[16,"u32x4","","",14,null],[16,"u64x2","","",14,null],[16,"u128x1","","",14,null],[16,"u32x4x2","","",14,null],[16,"u64x2x2","","",14,null],[16,"u64x4","","",14,null],[16,"u128x2","","",14,null],[16,"u32x4x4","","",14,null],[16,"u64x2x4","","",14,null],[16,"u128x4","","",14,null],[11,"unpack","","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]],[10,"instance","","SafetyCaller must ensure the type of Self is appropriate …",14,[[]]],[8,"Store","","",null,null],[10,"unpack","","SafetyCaller must ensure the type of Self is appropriate …",15,[[]]],[8,"StoreBytes","","",null,null],[10,"unsafe_read_le","","SafetyCaller must ensure the type of Self is appropriate …",16,[[]]],[10,"unsafe_read_be","","SafetyCaller must ensure the type of Self is appropriate …",16,[[]]],[10,"write_le","","",16,[[]]],[10,"write_be","","",16,[[]]],[14,"dispatch","","Generate the full set of optimized implementations to …",null,null],[14,"dispatch_light128","","Generate only the basic implementations necessary to be …",null,null],[14,"dispatch_light256","","Generate only the basic implementations necessary to be …",null,null],[11,"borrow","ppv_lite86::x86_64","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"instance","","",27,[[]]],[11,"instance","","",28,[[]]],[11,"unpack","","",29,[[["vec128_storage",19]]]],[11,"eq","","",29,[[],["bool",15]]],[11,"eq","","",0,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"clone","","",17,[[],["yess3",3]]],[11,"clone","","",18,[[],["nos3",3]]],[11,"clone","","",19,[[],["yess4",3]]],[11,"clone","","",20,[[],["nos4",3]]],[11,"clone","","",21,[[],["yesa1",3]]],[11,"clone","","",22,[[],["noa1",3]]],[11,"clone","","",23,[[],["yesa2",3]]],[11,"clone","","",24,[[],["noa2",3]]],[11,"clone","","",25,[[],["yesni",3]]],[11,"clone","","",26,[[],["noni",3]]],[11,"clone","","",27,[[],["ssemachine",3]]],[11,"clone","","",28,[[],["avx2machine",3]]],[11,"clone","","",29,[[],["vec128_storage",19]]],[11,"clone","","",0,[[],["vec256_storage",19]]],[11,"clone","","",1,[[],["vec512_storage",19]]],[11,"default","","",29,[[]]],[11,"default","","",0,[[]]],[11,"default","","",1,[[]]],[11,"unpack","ppv_lite86","",14,[[],["store",8]]],[11,"vec","","",14,[[]]],[11,"read_le","","",14,[[]]],[11,"read_be","","",14,[[]]]],"p":[[19,"vec256_storage"],[19,"vec512_storage"],[8,"AndNot"],[8,"BSwap"],[8,"RotateEachWord32"],[8,"RotateEachWord64"],[8,"UnsafeFrom"],[8,"Vec2"],[8,"Vec4"],[8,"Words4"],[8,"LaneWords4"],[8,"Swap64"],[8,"MultiLane"],[8,"VZip"],[8,"Machine"],[8,"Store"],[8,"StoreBytes"],[3,"YesS3"],[3,"NoS3"],[3,"YesS4"],[3,"NoS4"],[3,"YesA1"],[3,"NoA1"],[3,"YesA2"],[3,"NoA2"],[3,"YesNI"],[3,"NoNI"],[3,"SseMachine"],[3,"Avx2Machine"],[19,"vec128_storage"]]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the compiler…","i":[[0,"token_stream","proc_macro2","Public implementation details for the <code>TokenStream</code> type, …",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.",null,null],[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a …",null,null],[3,"LexError","","Error returned from <code>TokenStream::from_str</code>.",null,null],[11,"new","","Returns an empty <code>TokenStream</code> containing no token trees.",0,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this <code>TokenStream</code> is empty.",0,[[],["bool",15]]],[3,"Span","","A region of source code, along with macro expansion …",null,null],[11,"call_site","","The span of the invocation of the current procedural …",1,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural …",1,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information …",1,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior …",1,[[["span",3]],["span",3]]],[11,"unwrap","","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.",1,[[],["span",3]]],[11,"join","","Create a new span encompassing <code>self</code> and <code>other</code>.",1,[[["span",3]],[["span",3],["option",4]]]],[4,"TokenTree","","A single token or a delimited sequence of token trees …",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",2,null],[13,"Ident","","An identifier.",2,null],[13,"Punct","","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).",2,null],[13,"Literal","","A literal character (<code>\'a\'</code>), string (<code>\\\"hello\\\"</code>), number (<code>2.3</code>…",2,null],[11,"span","","Returns the span of this tree, delegating to the <code>span</code> …",2,[[],["span",3]]],[11,"set_span","","Configures the span for <em>only this token</em>.",2,[[["span",3]]]],[3,"Group","","A delimited token stream.",null,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","<code>( ... )</code>",3,null],[13,"Brace","","<code>{ ... }</code>",3,null],[13,"Bracket","","<code>[ ... ]</code>",3,null],[13,"None","","<code>Ø ... Ø</code>",3,null],[11,"new","","Creates a new <code>Group</code> with the given delimiter and token …",4,[[["delimiter",4],["tokenstream",3]],["group",3]]],[11,"delimiter","","Returns the delimiter of this <code>Group</code>",4,[[],["delimiter",4]]],[11,"stream","","Returns the <code>TokenStream</code> of tokens that are delimited in …",4,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream, …",4,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of …",4,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of …",4,[[],["span",3]]],[11,"set_span","","Configures the span for this <code>Group</code>’s delimiters, but …",4,[[["span",3]]]],[3,"Punct","","An <code>Punct</code> is an single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>…",null,null],[4,"Spacing","","Whether an <code>Punct</code> is followed immediately by another <code>Punct</code> …",null,null],[13,"Alone","","E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.",5,null],[13,"Joint","","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>\'</code> is <code>Joint</code> in <code>\'#</code>.",5,null],[11,"new","","Creates a new <code>Punct</code> from the given character and spacing.",6,[[["spacing",4],["char",15]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as <code>char</code>.",6,[[],["char",15]]],[11,"spacing","","Returns the spacing of this punctuation character, …",6,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",6,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["span",3]]]],[3,"Ident","","A word of Rust code, which may be a keyword or legal …",null,null],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",7,[[["span",3],["str",15]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",7,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",7,[[["span",3]]]],[3,"Literal","","A literal string (<code>\\\"hello\\\"</code>), byte string (<code>b\\\"hello\\\"</code>), …",null,null],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["u8",15]],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["u16",15]],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["u32",15]],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["u64",15]],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["u128",15]],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["usize",15]],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["i8",15]],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["i16",15]],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["i32",15]],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["i64",15]],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["i128",15]],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified …",8,[[["isize",15]],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["u8",15]],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["u16",15]],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["u32",15]],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["u64",15]],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["u128",15]],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["usize",15]],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["i8",15]],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["i16",15]],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["i32",15]],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["i64",15]],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["i128",15]],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the …",8,[[["isize",15]],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f64",15]],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f64",15]],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32",15]],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f32",15]],["literal",3]]],[11,"string","","String literal.",8,[[["str",15]],["literal",3]]],[11,"character","","Character literal.",8,[[["char",15]],["literal",3]]],[11,"byte_string","","Byte string literal.",8,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",8,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["span",3]]]],[11,"subspan","","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …",8,[[["usize",15],["rangebounds",8]],[["span",3],["option",4]]]],[11,"from","proc_macro2::token_stream","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","proc_macro2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[["span",3]],["span",3]]],[11,"from","","",0,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[["tokentree",4]]]],[11,"from","","",2,[[["group",3]],["tokentree",4]]],[11,"from","","",2,[[["ident",3]],["tokentree",4]]],[11,"from","","",2,[[["punct",3]],["tokentree",4]]],[11,"from","","",2,[[["literal",3]],["tokentree",4]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",9,[[],[["option",4],["tokentree",4]]]],[11,"clone","proc_macro2","",0,[[],["tokenstream",3]]],[11,"clone","","",1,[[],["span",3]]],[11,"clone","","",2,[[],["tokentree",4]]],[11,"clone","","",4,[[],["group",3]]],[11,"clone","","",3,[[],["delimiter",4]]],[11,"clone","","",6,[[],["punct",3]]],[11,"clone","","",5,[[],["spacing",4]]],[11,"clone","","",7,[[],["ident",3]]],[11,"clone","","",8,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",9,[[],["intoiter",3]]],[11,"default","proc_macro2","",0,[[]]],[11,"cmp","","",7,[[["ident",3]],["ordering",4]]],[11,"eq","","",3,[[["delimiter",4]],["bool",15]]],[11,"eq","","",5,[[["spacing",4]],["bool",15]]],[11,"eq","","",7,[[["ident",3]],["bool",15]]],[11,"eq","","",7,[[],["bool",15]]],[11,"partial_cmp","","",7,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",9,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"from_str","","",0,[[["str",15]],[["result",4],["lexerror",3],["tokenstream",3]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]]],"p":[[3,"TokenStream"],[3,"Span"],[4,"TokenTree"],[4,"Delimiter"],[3,"Group"],[4,"Spacing"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"],[3,"LexError"]]},\
"proc_macro_hack":{"doc":"github crates-io docs-rs","i":[[23,"proc_macro_hack","proc_macro_hack","",null,null]],"p":[]},\
"proc_macro_nested":{"doc":"Support for nested invocations of proc-macro-hack …","i":[],"p":[]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending …",null,null],[10,"append","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_all","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_separated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_terminated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by <code>format_ident!</code>.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["option",4],["span",3]]]],[8,"ToTokens","","Types that can be interpolated inside a <code>quote!</code> invocation.",null,null],[10,"to_tokens","","Write <code>self</code> to the given <code>TokenStream</code>.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing <code>Ident</code>s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as <code>quote!</code>, but applies a given span to all tokens …",null,null],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["option",4],["span",3]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"radium":{"doc":"<code>radium</code> provides a series of helpers for a uniform API …","i":[[0,"types","radium","Best-effort atomic types",null,null],[6,"RadiumBool","radium::types","Best-effort atomic <code>bool</code> type.",null,null],[6,"RadiumI8","","Best-effort atomic <code>i8</code> type.",null,null],[6,"RadiumU8","","Best-effort atomic <code>u8</code> type.",null,null],[6,"RadiumI16","","Best-effort atomic <code>i16</code> type.",null,null],[6,"RadiumU16","","Best-effort atomic <code>u16</code> type.",null,null],[6,"RadiumI32","","Best-effort atomic <code>i32</code> type.",null,null],[6,"RadiumU32","","Best-effort atomic <code>u32</code> type.",null,null],[6,"RadiumI64","","Best-effort atomic <code>i64</code> type.",null,null],[6,"RadiumU64","","Best-effort atomic <code>u64</code> type.",null,null],[6,"RadiumIsize","","Best-effort atomic <code>isize</code> type.",null,null],[6,"RadiumUsize","","Best-effort atomic <code>usize</code> type.",null,null],[6,"RadiumPtr","","Best-effort atomic pointer type.",null,null],[0,"marker","radium","Marker traits used by [<code>Radium</code>].",null,null],[8,"BitOps","radium::marker","Types supporting maybe-atomic bitwise operations.",null,null],[8,"NumericOps","","Types supporting maybe-atomic arithmetic operations.",null,null],[8,"Radium","radium","A maybe-atomic shared mutable fundamental type <code>T</code>.",null,null],[16,"Item","","",0,null],[10,"new","","Creates a new value of this type.",0,[[]]],[10,"fence","","If the underlying value is atomic, calls <code>fence</code> with the …",0,[[["ordering",4]]]],[10,"get_mut","","Returns a mutable reference to the underlying value.",0,[[]]],[10,"into_inner","","Consumes the wrapper and returns the contained value.",0,[[]]],[10,"load","","Load a value from this object.",0,[[["ordering",4]]]],[10,"store","","Store a value in this object.",0,[[["ordering",4]]]],[10,"swap","","Swap with the value stored in this object.",0,[[["ordering",4]]]],[10,"compare_and_swap","","Stores a value into this object if the currently-stored …",0,[[["ordering",4]]]],[10,"compare_exchange","","Stores a value into this object if the currently-stored …",0,[[["ordering",4]],["result",4]]],[10,"compare_exchange_weak","","Stores a value into this object if the currently-stored …",0,[[["ordering",4]],["result",4]]],[10,"fetch_and","","Performs a bitwise “and” on the currently-stored …",0,[[["ordering",4]]]],[10,"fetch_nand","","Performs a bitwise “nand” on the currently-stored …",0,[[["ordering",4]]]],[10,"fetch_or","","Performs a bitwise “or” on the currently-stored value …",0,[[["ordering",4]]]],[10,"fetch_xor","","Performs a bitwise “xor” on the currently-stored …",0,[[["ordering",4]]]],[10,"fetch_add","","Adds <code>value</code> to the currently-stored value, wrapping on …",0,[[["ordering",4]]]],[10,"fetch_sub","","Subtracts <code>value</code> from the currently-stored value, wrapping …",0,[[["ordering",4]]]],[14,"if_atomic","","Conditional compilation based on the presence of atomic …",null,null]],"p":[[8,"Radium"]]},\
"rand":{"doc":"Utilities for random number generation","i":[[0,"distributions","rand","Generating random samples from probability distributions",null,null],[0,"uniform","rand::distributions","A distribution uniformly sampling numbers within a given …",null,null],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",null,null],[11,"new","","Create a new <code>Uniform</code> instance which samples uniformly …",0,[[],["uniform",3]]],[11,"new_inclusive","","Create a new <code>Uniform</code> instance which samples uniformly …",0,[[],["uniform",3]]],[8,"SampleUniform","","Helper trait for creating objects using the correct …",null,null],[16,"Sampler","","The <code>UniformSampler</code> implementation supporting type <code>X</code>.",1,null],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",null,null],[16,"X","","The type sampled by this implementation.",2,null],[10,"new","","Construct self, with inclusive lower bound and exclusive …",2,[[]]],[10,"new_inclusive","","Construct self, with inclusive bounds <code>[low, high]</code>.",2,[[]]],[10,"sample","","Sample a value.",2,[[]]],[11,"sample_single","","Sample a single value uniformly from a range with …",2,[[]]],[8,"SampleBorrow","","Helper trait similar to <code>Borrow</code> but implemented only for …",null,null],[10,"borrow","","Immutably borrows from an owned value. See <code>Borrow::borrow</code>",3,[[]]],[3,"UniformInt","","The back-end implementing [<code>UniformSampler</code>] for integer …",null,null],[3,"UniformFloat","","The back-end implementing [<code>UniformSampler</code>] for …",null,null],[3,"UniformDuration","","The back-end implementing [<code>UniformSampler</code>] for <code>Duration</code>.",null,null],[0,"weighted","rand::distributions","Weighted index sampling",null,null],[0,"alias_method","rand::distributions::weighted","This module contains an implementation of alias method …",null,null],[3,"WeightedIndex","rand::distributions::weighted::alias_method","A distribution using weighted sampling to pick a …",null,null],[11,"new","","Creates a new [<code>WeightedIndex</code>].",4,[[["vec",3]],[["result",4],["weightederror",4]]]],[8,"Weight","","Trait that must be implemented for weights, that are used …",null,null],[18,"MAX","","Maximum number representable by <code>Self</code>.",5,null],[18,"ZERO","","Element of <code>Self</code> equivalent to 0.",5,null],[10,"try_from_u32_lossy","","Produce an instance of <code>Self</code> from a <code>u32</code> value, or return …",5,[[["u32",15]],["option",4]]],[11,"sum","","Sums all values in slice <code>values</code>.",5,[[]]],[3,"WeightedIndex","rand::distributions::weighted","A distribution using weighted sampling to pick a …",null,null],[11,"new","","Creates a new a <code>WeightedIndex</code> [<code>Distribution</code>] using the …",6,[[],[["weightedindex",3],["result",4],["weightederror",4]]]],[11,"update_weights","","Update a subset of weights, without changing the number …",6,[[],[["weightederror",4],["result",4]]]],[4,"WeightedError","","Error type returned from <code>WeightedIndex::new</code>.",null,null],[13,"NoItem","","The provided weight collection contains no items.",7,null],[13,"InvalidWeight","","A weight is either less than zero, greater than the …",7,null],[13,"AllWeightsZero","","All items in the provided weight collection are zero.",7,null],[13,"TooMany","","Too many weights are provided (length greater than …",7,null],[3,"Bernoulli","rand::distributions","The Bernoulli distribution.",null,null],[4,"BernoulliError","","Error type returned from <code>Bernoulli::new</code>.",null,null],[13,"InvalidProbability","","<code>p < 0</code> or <code>p > 1</code>.",8,null],[3,"Open01","","A distribution to sample floating point numbers uniformly …",null,null],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly …",null,null],[3,"Alphanumeric","","Sample a <code>char</code>, uniformly distributed over ASCII letters …",null,null],[3,"Uniform","","Sample values uniformly between two bounds.",null,null],[3,"Binomial","","The binomial distribution <code>Binomial(n, p)</code>.",null,null],[3,"Cauchy","","The Cauchy distribution <code>Cauchy(median, scale)</code>.",null,null],[3,"Dirichlet","","The dirichelet distribution <code>Dirichlet(alpha)</code>.",null,null],[3,"Exp","","The exponential distribution <code>Exp(lambda)</code>.",null,null],[3,"Exp1","","Samples floating-point numbers according to the …",null,null],[3,"Beta","","The Beta distribution with shape parameters <code>alpha</code> and <code>beta</code>…",null,null],[3,"ChiSquared","","The chi-squared distribution <code>χ²(k)</code>, where <code>k</code> is the …",null,null],[3,"FisherF","","The Fisher F distribution <code>F(m, n)</code>.",null,null],[3,"Gamma","","The Gamma distribution <code>Gamma(shape, scale)</code> distribution.",null,null],[3,"StudentT","","The Student t distribution, <code>t(nu)</code>, where <code>nu</code> is the …",null,null],[3,"LogNormal","","The log-normal distribution <code>ln N(mean, std_dev**2)</code>.",null,null],[3,"Normal","","The normal distribution <code>N(mean, std_dev**2)</code>.",null,null],[3,"StandardNormal","","Samples floating-point numbers according to the normal …",null,null],[3,"Pareto","","Samples floating-point numbers according to the Pareto …",null,null],[3,"Poisson","","The Poisson distribution <code>Poisson(lambda)</code>.",null,null],[3,"Triangular","","The triangular distribution.",null,null],[3,"UnitCircle","","Samples uniformly from the edge of the unit circle in two …",null,null],[3,"UnitSphereSurface","","Samples uniformly from the surface of the unit sphere in …",null,null],[3,"Weibull","","Samples floating-point numbers according to the Weibull …",null,null],[8,"Distribution","","Types (distributions) that can be used to create a random …",null,null],[10,"sample","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …",9,[[]]],[11,"sample_iter","","Create an iterator that generates random values of <code>T</code>, …",9,[[],["distiter",3]]],[3,"DistIter","","An iterator that generates random values of <code>T</code> with …",null,null],[3,"Standard","","A generic random value distribution, implemented for many …",null,null],[0,"prelude","rand","Convenience re-export of common members",null,null],[0,"rngs","","Random number generators and adapters",null,null],[0,"adapter","rand::rngs","Wrappers / adapters forming RNGs",null,null],[3,"ReadError","rand::rngs::adapter","<code>ReadRng</code> error type",null,null],[3,"ReadRng","","An RNG that reads random bytes straight from any type …",null,null],[3,"ReseedingRng","","A wrapper around any PRNG that implements <code>BlockRngCore</code>, …",null,null],[0,"mock","rand::rngs","Mock random number generator",null,null],[3,"StepRng","rand::rngs::mock","A simple implementation of <code>RngCore</code> for testing purposes.",null,null],[11,"new","","Create a <code>StepRng</code>, yielding an arithmetic sequence …",10,[[["u64",15]]]],[3,"EntropyRng","rand::rngs","An interface returning random data from external …",null,null],[3,"StdRng","","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …",null,null],[3,"ThreadRng","","The type returned by [<code>thread_rng</code>], essentially just a …",null,null],[3,"OsRng","","A random number generator that retrieves randomness from …",null,null],[0,"seq","rand","Sequence-related functionality",null,null],[0,"index","rand::seq","Low-level API for sampling indices",null,null],[4,"IndexVec","rand::seq::index","A vector of indices.",null,null],[11,"len","","Returns the number of indices",11,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the length is 0.",11,[[],["bool",15]]],[11,"index","","Return the value at the given <code>index</code>.",11,[[["usize",15]],["usize",15]]],[11,"into_vec","","Return result as a <code>Vec<usize></code>. Conversion may or may not …",11,[[],[["usize",15],["vec",3]]]],[11,"iter","","Iterate over the indices as a sequence of <code>usize</code> values",11,[[],["indexveciter",4]]],[11,"into_iter","","Convert into an iterator over the indices as a sequence …",11,[[],["indexvecintoiter",4]]],[4,"IndexVecIter","","Return type of <code>IndexVec::iter</code>.",null,null],[4,"IndexVecIntoIter","","Return type of <code>IndexVec::into_iter</code>.",null,null],[5,"sample","","Randomly sample exactly <code>amount</code> distinct indices from …",null,[[["usize",15]],["indexvec",4]]],[8,"SliceRandom","rand::seq","Extension trait on slices, providing random mutation and …",null,null],[16,"Item","","The element type.",12,null],[10,"choose","","Returns a reference to one random element of the slice, …",12,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the …",12,[[],["option",4]]],[10,"choose_multiple","","Chooses <code>amount</code> elements from the slice at random, without …",12,[[["usize",15]],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to <code>choose</code>, but where the likelihood of each …",12,[[],[["result",4],["weightederror",4]]]],[10,"choose_weighted_mut","","Similar to <code>choose_mut</code>, but where the likelihood of each …",12,[[],[["weightederror",4],["result",4]]]],[10,"shuffle","","Shuffle a mutable slice in place.",12,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",12,[[["usize",15]]]],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling …",null,null],[11,"choose","","Choose one element at random from the iterator.",13,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a …",13,[[],["usize",15]]],[11,"choose_multiple","","Collects <code>amount</code> values at random from the iterator into a …",13,[[["usize",15]],["vec",3]]],[3,"SliceChooseIter","","An iterator over multiple slice elements.",null,null],[8,"CryptoRng","rand","A marker trait used to indicate that an [<code>RngCore</code>] or …",null,null],[3,"Error","","Error type of random number generators",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random <code>u32</code>.",14,[[],["u32",15]]],[10,"next_u64","","Return the next random <code>u64</code>.",14,[[],["u64",15]]],[10,"fill_bytes","","Fill <code>dest</code> with random data.",14,[[]]],[10,"try_fill_bytes","","Fill <code>dest</code> entirely with random data.",14,[[],[["result",4],["error",3]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types …",15,null],[10,"from_seed","","Create a new PRNG using the given seed.",15,[[]]],[11,"seed_from_u64","","Create a new PRNG using a <code>u64</code> seed.",15,[[["u64",15]]]],[11,"from_rng","","Create a new PRNG seeded from another <code>Rng</code>.",15,[[],[["error",3],["result",4]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via <code>getrandom</code>.",15,[[]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random …",null,[[],["threadrng",3]]],[8,"Rng","","An automatically-implemented extension trait on [<code>RngCore</code>] …",null,null],[11,"gen","","Return a random value supporting the <code>Standard</code> …",16,[[]]],[11,"gen_range","","Generate a random value in the range [<code>low</code>, <code>high</code>), i.e. …",16,[[],["sampleuniform",8]]],[11,"sample","","Sample a new value, using the given distribution.",16,[[["distribution",8]]]],[11,"sample_iter","","Create an iterator that generates values using the given …",16,[[],["distiter",3]]],[11,"fill","","Fill <code>dest</code> entirely with random bytes (uniform value …",16,[[]]],[11,"try_fill","","Fill <code>dest</code> entirely with random bytes (uniform value …",16,[[],[["error",3],["result",4]]]],[11,"gen_bool","","Return a bool with a probability <code>p</code> of being true.",16,[[["f64",15]],["bool",15]]],[11,"gen_ratio","","Return a bool with a probability of <code>numerator/denominator</code> …",16,[[["u32",15]],["bool",15]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",null,null],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",17,[[]]],[10,"to_le","","Call <code>to_le</code> on each element (i.e. byte-swap on Big Endian …",17,[[]]],[5,"random","","Generates a random value using the thread-local random …",null,[[]]],[11,"from","rand::distributions","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","rand::distributions::uniform","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","rand::distributions","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","rand::distributions::weighted::alias_method","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","rand::distributions::weighted","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","rand::distributions","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","rand::rngs::adapter","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","rand::rngs","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","rand::rngs::mock","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","rand::rngs","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","rand::seq::index","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","rand::seq","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","rand","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"next_u32","rand::rngs","",52,[[],["u32",15]]],[11,"next_u64","","",52,[[],["u64",15]]],[11,"fill_bytes","","",52,[[]]],[11,"try_fill_bytes","","",52,[[],[["result",4],["error",3]]]],[11,"default","","",52,[[],["osrng",3]]],[11,"clone","","",52,[[],["osrng",3]]],[11,"fmt","","",52,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rand","",56,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",56,[[["formatter",3]],[["result",4],["error",3]]]],[11,"source","","",56,[[],[["error",8],["option",4]]]],[11,"read","","",14,[[],[["usize",15],["result",4],["error",3]]]],[11,"from","","",56,[[["nonzerou32",3]],["error",3]]],[11,"from","","",56,[[["error",3]],["error",3]]],[11,"new","rand::distributions::uniform","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",35,[[]]],[11,"new_inclusive","","",35,[[]]],[11,"sample","","",35,[[]]],[11,"sample_single","","",35,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",36,[[]]],[11,"new_inclusive","","",36,[[]]],[11,"sample","","",36,[[]]],[11,"sample_single","","",36,[[]]],[11,"new","","",37,[[]]],[11,"new_inclusive","","",37,[[]]],[11,"sample","","",37,[[],["duration",3]]],[11,"sample","rand::distributions","",18,[[],["bool",15]]],[11,"sample","","",19,[[],["u64",15]]],[11,"sample","","",20,[[],["f64",15]]],[11,"sample","","",21,[[],[["f64",15],["vec",3]]]],[11,"sample","","",22,[[],["f64",15]]],[11,"sample","","",23,[[],["f64",15]]],[11,"sample","","",24,[[],["f64",15]]],[11,"sample","","",25,[[],["f64",15]]],[11,"sample","","",26,[[],["f64",15]]],[11,"sample","","",27,[[],["f64",15]]],[11,"sample","","",28,[[],["f64",15]]],[11,"sample","","",29,[[],["f64",15]]],[11,"sample","","",30,[[],["f64",15]]],[11,"sample","","",31,[[],["f64",15]]],[11,"sample","","",32,[[],["f64",15]]],[11,"sample","","",33,[[],["u64",15]]],[11,"sample","","",34,[[],["f64",15]]],[11,"sample","","",0,[[]]],[11,"sample","","",38,[[]]],[11,"sample","","",39,[[]]],[11,"sample","","",40,[[],["f64",15]]],[11,"sample","rand::distributions::weighted::alias_method","",4,[[],["usize",15]]],[11,"sample","rand::distributions::weighted","",6,[[],["usize",15]]],[11,"sample","rand::distributions","",45,[[],["f32",15]]],[11,"sample","","",41,[[],["f32",15]]],[11,"sample","","",42,[[],["f32",15]]],[11,"sample","","",45,[[],["f64",15]]],[11,"sample","","",41,[[],["f64",15]]],[11,"sample","","",42,[[],["f64",15]]],[11,"sample","","",45,[[],["u8",15]]],[11,"sample","","",45,[[],["u16",15]]],[11,"sample","","",45,[[],["u32",15]]],[11,"sample","","",45,[[],["u64",15]]],[11,"sample","","",45,[[],["u128",15]]],[11,"sample","","",45,[[],["usize",15]]],[11,"sample","","",45,[[],["i8",15]]],[11,"sample","","",45,[[],["i16",15]]],[11,"sample","","",45,[[],["i32",15]]],[11,"sample","","",45,[[],["i64",15]]],[11,"sample","","",45,[[],["i128",15]]],[11,"sample","","",45,[[],["isize",15]]],[11,"sample","","",45,[[],["nonzerou8",3]]],[11,"sample","","",45,[[],["nonzerou16",3]]],[11,"sample","","",45,[[],["nonzerou32",3]]],[11,"sample","","",45,[[],["nonzerou64",3]]],[11,"sample","","",45,[[],["nonzerou128",3]]],[11,"sample","","",45,[[],["nonzerousize",3]]],[11,"sample","","",45,[[],["char",15]]],[11,"sample","","",43,[[],["char",15]]],[11,"sample","","",45,[[],["bool",15]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[]]],[11,"sample","","",45,[[],["option",4]]],[11,"sample","","",45,[[],["wrapping",3]]],[11,"from","","",0,[[["range",3]],["uniform",3]]],[11,"from","","",0,[[["rangeinclusive",3]],["uniform",3]]],[11,"from","rand::seq::index","",11,[[["u32",15],["vec",3]]]],[11,"from","","",11,[[["usize",15],["vec",3]]]],[11,"len","rand::seq","",55,[[],["usize",15]]],[11,"next","rand::distributions","",44,[[],["option",4]]],[11,"size_hint","","",44,[[]]],[11,"next","rand::seq::index","",53,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",53,[[]]],[11,"next","","",54,[[],["option",4]]],[11,"size_hint","","",54,[[]]],[11,"next","rand::seq","",55,[[],["option",4]]],[11,"size_hint","","",55,[[]]],[11,"clone","rand::distributions","",18,[[],["bernoulli",3]]],[11,"clone","","",8,[[],["bernoullierror",4]]],[11,"clone","","",19,[[],["binomial",3]]],[11,"clone","","",20,[[],["cauchy",3]]],[11,"clone","","",21,[[],["dirichlet",3]]],[11,"clone","","",22,[[],["exp1",3]]],[11,"clone","","",23,[[],["exp",3]]],[11,"clone","","",24,[[],["gamma",3]]],[11,"clone","","",25,[[],["chisquared",3]]],[11,"clone","","",26,[[],["fisherf",3]]],[11,"clone","","",27,[[],["studentt",3]]],[11,"clone","","",28,[[],["beta",3]]],[11,"clone","","",29,[[],["standardnormal",3]]],[11,"clone","","",30,[[],["normal",3]]],[11,"clone","","",31,[[],["lognormal",3]]],[11,"clone","","",32,[[],["pareto",3]]],[11,"clone","","",33,[[],["poisson",3]]],[11,"clone","","",34,[[],["triangular",3]]],[11,"clone","","",0,[[],["uniform",3]]],[11,"clone","rand::distributions::uniform","",35,[[],["uniformint",3]]],[11,"clone","","",36,[[],["uniformfloat",3]]],[11,"clone","","",37,[[],["uniformduration",3]]],[11,"clone","rand::distributions","",38,[[],["unitcircle",3]]],[11,"clone","","",39,[[],["unitspheresurface",3]]],[11,"clone","","",40,[[],["weibull",3]]],[11,"clone","rand::distributions::weighted::alias_method","",4,[[]]],[11,"clone","rand::distributions::weighted","",6,[[],["weightedindex",3]]],[11,"clone","","",7,[[],["weightederror",4]]],[11,"clone","rand::distributions","",41,[[],["openclosed01",3]]],[11,"clone","","",42,[[],["open01",3]]],[11,"clone","","",45,[[],["standard",3]]],[11,"clone","rand::rngs::adapter","",48,[[],["reseedingrng",3]]],[11,"clone","rand::rngs::mock","",10,[[],["steprng",3]]],[11,"clone","rand::rngs","",50,[[],["stdrng",3]]],[11,"clone","","",51,[[],["threadrng",3]]],[11,"clone","rand::seq::index","",11,[[],["indexvec",4]]],[11,"clone","","",54,[[],["indexvecintoiter",4]]],[11,"default","rand::rngs","",49,[[]]],[11,"default","","",51,[[],["threadrng",3]]],[11,"eq","rand::distributions","",8,[[["bernoullierror",4]],["bool",15]]],[11,"eq","rand::distributions::weighted","",7,[[["weightederror",4]],["bool",15]]],[11,"eq","rand::seq::index","",11,[[["indexvec",4]],["bool",15]]],[11,"fmt","rand::distributions","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::uniform","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted::alias_method","",4,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",49,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::mock","",10,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq::index","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","rand::seq","",55,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions","",8,[[["formatter",3]],["result",6]]],[11,"fmt","rand::distributions::weighted","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rand::rngs::adapter","",47,[[["formatter",3]],["result",6]]],[11,"source","","",47,[[],[["error",8],["option",4]]]],[11,"next_u32","","",46,[[],["u32",15]]],[11,"next_u64","","",46,[[],["u64",15]]],[11,"fill_bytes","","",46,[[]]],[11,"try_fill_bytes","","",46,[[],[["error",3],["result",4]]]],[11,"next_u32","","",48,[[],["u32",15]]],[11,"next_u64","","",48,[[],["u64",15]]],[11,"fill_bytes","","",48,[[]]],[11,"try_fill_bytes","","",48,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs","",49,[[],["u32",15]]],[11,"next_u64","","",49,[[],["u64",15]]],[11,"fill_bytes","","",49,[[]]],[11,"try_fill_bytes","","",49,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs::mock","",10,[[],["u32",15]]],[11,"next_u64","","",10,[[],["u64",15]]],[11,"fill_bytes","","",10,[[]]],[11,"try_fill_bytes","","",10,[[],[["error",3],["result",4]]]],[11,"next_u32","rand::rngs","",50,[[],["u32",15]]],[11,"next_u64","","",50,[[],["u64",15]]],[11,"fill_bytes","","",50,[[]]],[11,"try_fill_bytes","","",50,[[],[["error",3],["result",4]]]],[11,"next_u32","","",51,[[],["u32",15]]],[11,"next_u64","","",51,[[],["u64",15]]],[11,"fill_bytes","","",51,[[]]],[11,"try_fill_bytes","","",51,[[],[["error",3],["result",4]]]],[11,"from_seed","","",50,[[]]],[11,"from_rng","","",50,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"new","rand::distributions","Construct a new <code>Bernoulli</code> with the given probability of …",18,[[["f64",15]],[["result",4],["bernoulli",3],["bernoullierror",4]]]],[11,"from_ratio","","Construct a new <code>Bernoulli</code> with the probability of success …",18,[[["u32",15]],[["result",4],["bernoulli",3],["bernoullierror",4]]]],[11,"new","","Construct a new <code>Binomial</code> with the given shape parameters <code>n</code>…",19,[[["f64",15],["u64",15]],["binomial",3]]],[11,"new","","Construct a new <code>Cauchy</code> with the given shape parameters …",20,[[["f64",15]],["cauchy",3]]],[11,"new","","Construct a new <code>Dirichlet</code> with the given alpha parameter …",21,[[["into",8],["vec",3]],["dirichlet",3]]],[11,"new_with_param","","Construct a new <code>Dirichlet</code> with the given shape parameter …",21,[[["f64",15],["usize",15]],["dirichlet",3]]],[11,"new","","Construct a new <code>Exp</code> with the given shape parameter <code>lambda</code>…",23,[[["f64",15]],["exp",3]]],[11,"new","","Construct an object representing the <code>Gamma(shape, scale)</code> …",24,[[["f64",15]],["gamma",3]]],[11,"new","","Create a new chi-squared distribution with …",25,[[["f64",15]],["chisquared",3]]],[11,"new","","Create a new <code>FisherF</code> distribution, with the given …",26,[[["f64",15]],["fisherf",3]]],[11,"new","","Create a new Student t distribution with <code>n</code> degrees of …",27,[[["f64",15]],["studentt",3]]],[11,"new","","Construct an object representing the <code>Beta(alpha, beta)</code> …",28,[[["f64",15]],["beta",3]]],[11,"new","","Construct a new <code>Normal</code> distribution with the given mean …",30,[[["f64",15]],["normal",3]]],[11,"new","","Construct a new <code>LogNormal</code> distribution with the given mean…",31,[[["f64",15]],["lognormal",3]]],[11,"new","","Construct a new Pareto distribution with given <code>scale</code> and …",32,[[["f64",15]],["pareto",3]]],[11,"new","","Construct a new <code>Poisson</code> with the given shape parameter …",33,[[["f64",15]],["poisson",3]]],[11,"new","","Construct a new <code>Triangular</code> with minimum <code>min</code>, maximum <code>max</code> …",34,[[["f64",15]],["triangular",3]]],[11,"new","","Construct a new <code>UnitCircle</code> distribution.",38,[[],["unitcircle",3]]],[11,"new","","Construct a new <code>UnitSphereSurface</code> distribution.",39,[[],["unitspheresurface",3]]],[11,"new","","Construct a new <code>Weibull</code> distribution with given <code>scale</code> and …",40,[[["f64",15]],["weibull",3]]],[11,"new","rand::rngs::adapter","Create a new <code>ReadRng</code> from a <code>Read</code>.",46,[[],["readrng",3]]],[11,"new","","Create a new <code>ReseedingRng</code> from an existing PRNG, combined …",48,[[["u64",15]]]],[11,"reseed","","Reseed the internal PRNG.",48,[[],[["error",3],["result",4]]]],[11,"new","rand::rngs","Create a new <code>EntropyRng</code>.",49,[[]]],[11,"new","rand","Construct from any type supporting <code>std::error::Error</code>",56,[[],["error",3]]],[11,"inner","","Reference the inner error (<code>std</code> only)",56,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (<code>std</code> only)",56,[[],[["global",3],["box",3],["error",8]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive …",56,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to …",56,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from …",56,[[],[["option",4],["i32",15]]]],[11,"code","","Retrieve the error code, if any.",56,[[],[["nonzerou32",3],["option",4]]]]],"p":[[3,"Uniform"],[8,"SampleUniform"],[8,"UniformSampler"],[8,"SampleBorrow"],[3,"WeightedIndex"],[8,"Weight"],[3,"WeightedIndex"],[4,"WeightedError"],[4,"BernoulliError"],[8,"Distribution"],[3,"StepRng"],[4,"IndexVec"],[8,"SliceRandom"],[8,"IteratorRandom"],[8,"RngCore"],[8,"SeedableRng"],[8,"Rng"],[8,"AsByteSliceMut"],[3,"Bernoulli"],[3,"Binomial"],[3,"Cauchy"],[3,"Dirichlet"],[3,"Exp1"],[3,"Exp"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"Beta"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Pareto"],[3,"Poisson"],[3,"Triangular"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"UnitCircle"],[3,"UnitSphereSurface"],[3,"Weibull"],[3,"OpenClosed01"],[3,"Open01"],[3,"Alphanumeric"],[3,"DistIter"],[3,"Standard"],[3,"ReadRng"],[3,"ReadError"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"OsRng"],[4,"IndexVecIter"],[4,"IndexVecIntoIter"],[3,"SliceChooseIter"],[3,"Error"]]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","i":[[3,"ChaCha12Core","rand_chacha","ChaCha with 12 rounds",null,null],[3,"ChaCha12Rng","","A cryptographically secure random number generator that …",null,null],[3,"ChaCha20Core","","ChaCha with 20 rounds",null,null],[3,"ChaCha20Rng","","A cryptographically secure random number generator that …",null,null],[3,"ChaCha8Core","","ChaCha with 8 rounds",null,null],[3,"ChaCha8Rng","","A cryptographically secure random number generator that …",null,null],[6,"ChaChaRng","","ChaCha with 20 rounds",null,null],[6,"ChaChaCore","","ChaCha with 20 rounds, low-level interface",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",1,[[["chacha20core",3]]]],[11,"from","","",3,[[["chacha12core",3]]]],[11,"from","","",5,[[["chacha8core",3]]]],[11,"clone","","",0,[[],["chacha20core",3]]],[11,"clone","","",1,[[],["chacha20rng",3]]],[11,"clone","","",2,[[],["chacha12core",3]]],[11,"clone","","",3,[[],["chacha12rng",3]]],[11,"clone","","",4,[[],["chacha8core",3]]],[11,"clone","","",5,[[],["chacha8rng",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"generate","","",0,[[]]],[11,"generate","","",2,[[]]],[11,"generate","","",4,[[]]],[11,"next_u32","","",1,[[],["u32",15]]],[11,"next_u64","","",1,[[],["u64",15]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",3,[[],["u32",15]]],[11,"next_u64","","",3,[[],["u64",15]]],[11,"fill_bytes","","",3,[[]]],[11,"try_fill_bytes","","",3,[[],[["error",3],["result",4]]]],[11,"next_u32","","",5,[[],["u32",15]]],[11,"next_u64","","",5,[[],["u64",15]]],[11,"fill_bytes","","",5,[[]]],[11,"try_fill_bytes","","",5,[[],[["error",3],["result",4]]]],[11,"from_seed","","",0,[[]]],[11,"from_seed","","",1,[[]]],[11,"from_seed","","",2,[[]]],[11,"from_seed","","",3,[[]]],[11,"from_seed","","",4,[[]]],[11,"from_seed","","",5,[[]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit …",1,[[],["u128",15]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit …",1,[[["u128",15]]]],[11,"set_stream","","Set the stream number.",1,[[["u64",15]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit …",3,[[],["u128",15]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit …",3,[[["u128",15]]]],[11,"set_stream","","Set the stream number.",3,[[["u64",15]]]],[11,"get_word_pos","","Get the offset from the start of the stream, in 32-bit …",5,[[],["u128",15]]],[11,"set_word_pos","","Set the offset from the start of the stream, in 32-bit …",5,[[["u128",15]]]],[11,"set_stream","","Set the stream number.",5,[[["u64",15]]]]],"p":[[3,"ChaCha20Core"],[3,"ChaCha20Rng"],[3,"ChaCha12Core"],[3,"ChaCha12Rng"],[3,"ChaCha8Core"],[3,"ChaCha8Rng"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[0,"block","rand_core","The <code>BlockRngCore</code> trait and implementation helpers",null,null],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers …",null,null],[16,"Item","","Results element type, e.g. <code>u32</code>.",0,null],[16,"Results","","Results type. This is the ‘block’ an RNG implementing …",0,null],[10,"generate","","Generate a new block of results.",0,[[]]],[3,"BlockRng","","A wrapper type implementing [<code>RngCore</code>] for some type …",null,null],[12,"core","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …",1,null],[11,"new","","Create a new <code>BlockRng</code> from an existing RNG implementing …",1,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",1,[[],["usize",15]]],[11,"reset","","Reset the number of available results. This will force a …",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the …",1,[[["usize",15]]]],[3,"BlockRng64","","A wrapper type implementing [<code>RngCore</code>] for some type …",null,null],[12,"core","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …",2,null],[11,"new","","Create a new <code>BlockRng</code> from an existing RNG implementing …",2,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",2,[[],["usize",15]]],[11,"reset","","Reset the number of available results. This will force a …",2,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the …",2,[[["usize",15]]]],[0,"impls","rand_core","Helper functions for implementing <code>RngCore</code> functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement <code>next_u64</code> via <code>next_u32</code>, little-endian order.",null,[[],["u64",15]]],[5,"fill_bytes_via_next","","Implement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …",null,[[]]],[5,"fill_via_u32_chunks","","Implement <code>fill_bytes</code> by reading chunks from the output …",null,[[]]],[5,"fill_via_u64_chunks","","Implement <code>fill_bytes</code> by reading chunks from the output …",null,[[]]],[5,"next_u32_via_fill","","Implement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.",null,[[],["u32",15]]],[5,"next_u64_via_fill","","Implement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.",null,[[],["u64",15]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>. …",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>. …",null,[[]]],[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from …",null,null],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random <code>u32</code>.",3,[[],["u32",15]]],[10,"next_u64","","Return the next random <code>u64</code>.",3,[[],["u64",15]]],[10,"fill_bytes","","Fill <code>dest</code> with random data.",3,[[]]],[10,"try_fill_bytes","","Fill <code>dest</code> entirely with random data.",3,[[],[["error",3],["result",4]]]],[8,"CryptoRng","","A marker trait used to indicate that an [<code>RngCore</code>] or …",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types …",4,null],[10,"from_seed","","Create a new PRNG using the given seed.",4,[[]]],[11,"seed_from_u64","","Create a new PRNG using a <code>u64</code> seed.",4,[[["u64",15]]]],[11,"from_rng","","Create a new PRNG seeded from another <code>Rng</code>.",4,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via <code>getrandom</code>.",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","rand_core::block","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","rand_core","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"next_u32","rand_core::block","",1,[[],["u32",15]]],[11,"next_u64","","",1,[[],["u64",15]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["error",3],["result",4]]]],[11,"next_u32","","",2,[[],["u32",15]]],[11,"next_u64","","",2,[[],["u64",15]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["error",3],["result",4]]]],[11,"next_u32","rand_core","",6,[[],["u32",15]]],[11,"next_u64","","",6,[[],["u64",15]]],[11,"fill_bytes","","",6,[[]]],[11,"try_fill_bytes","","",6,[[],[["error",3],["result",4]]]],[11,"from_seed","rand_core::block","",1,[[]]],[11,"seed_from_u64","","",1,[[["u64",15]]]],[11,"from_rng","","",1,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from_seed","","",2,[[]]],[11,"seed_from_u64","","",2,[[["u64",15]]]],[11,"from_rng","","",2,[[["rngcore",8]],[["result",4],["error",3]]]],[11,"from","rand_core","",5,[[["nonzerou32",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"clone","rand_core::block","",1,[[],["blockrng",3]]],[11,"clone","","",2,[[],["blockrng64",3]]],[11,"clone","rand_core","",6,[[],["osrng",3]]],[11,"default","","",6,[[],["osrng",3]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core::block","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"source","","",5,[[],[["error",8],["option",4]]]],[11,"read","","",3,[[],[["usize",15],["result",4],["error",3]]]],[11,"new","","Construct from any type supporting <code>std::error::Error</code>",5,[[]]],[11,"inner","","Reference the inner error (<code>std</code> only)",5,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (<code>std</code> only)",5,[[],[["box",3],["error",8]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive …",5,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to …",5,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from …",5,[[],[["option",4],["i32",15]]]],[11,"code","","Retrieve the error code, if any.",5,[[],[["nonzerou32",3],["option",4]]]]],"p":[[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"],[3,"Error"],[3,"OsRng"]]},\
"raw_cpuid":{"doc":"","i":[[0,"native_cpuid","raw_cpuid","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.",null,null],[5,"cpuid_count","raw_cpuid::native_cpuid","",null,[[["u32",15]],["cpuidresult",3]]],[3,"CpuId","raw_cpuid","Main type used to query for information about the CPU we…",null,null],[3,"CpuIdResult","","Low-level data-structure to store result of cpuid …",null,null],[12,"eax","","Return value EAX register",0,null],[12,"ebx","","Return value EBX register",0,null],[12,"ecx","","Return value ECX register",0,null],[12,"edx","","Return value EDX register",0,null],[11,"new","","Return new CPUID struct.",1,[[],["cpuid",3]]],[11,"get_vendor_info","","Return information about vendor. This is typically a …",1,[[],[["vendorinfo",3],["option",4]]]],[11,"get_feature_info","","Query a set of features that are available on this CPU.",1,[[],[["option",4],["featureinfo",3]]]],[11,"get_cache_info","","Query basic information about caches. This will just …",1,[[],[["cacheinfoiter",3],["option",4]]]],[11,"get_processor_serial","","Retrieve serial number of processor.",1,[[],[["processorserial",3],["option",4]]]],[11,"get_cache_parameters","","Retrieve more elaborate information about caches (as …",1,[[],[["option",4],["cacheparametersiter",3]]]],[11,"get_monitor_mwait_info","","Information about how monitor/mwait works on this CPU.",1,[[],[["option",4],["monitormwaitinfo",3]]]],[11,"get_thermal_power_info","","Query information about thermal and power management …",1,[[],[["thermalpowerinfo",3],["option",4]]]],[11,"get_extended_feature_info","","Find out about more features supported by this CPU.",1,[[],[["option",4],["extendedfeatures",3]]]],[11,"get_direct_cache_access_info","","Direct cache access info.",1,[[],[["directcacheaccessinfo",3],["option",4]]]],[11,"get_performance_monitoring_info","","Info about performance monitoring (how many counters …",1,[[],[["performancemonitoringinfo",3],["option",4]]]],[11,"get_extended_topology_info","","Information about topology (how many cores and what kind …",1,[[],[["option",4],["extendedtopologyiter",3]]]],[11,"get_extended_state_info","","Information for saving/restoring extended register state.",1,[[],[["extendedstateinfo",3],["option",4]]]],[11,"get_rdt_monitoring_info","","Quality of service informations.",1,[[],[["rdtmonitoringinfo",3],["option",4]]]],[11,"get_rdt_allocation_info","","Quality of service enforcement information.",1,[[],[["option",4],["rdtallocationinfo",3]]]],[11,"get_sgx_info","","",1,[[],[["sgxinfo",3],["option",4]]]],[11,"get_processor_trace_info","","Intel Processor Trace Enumeration Information.",1,[[],[["option",4],["processortraceinfo",3]]]],[11,"get_tsc_info","","Time Stamp Counter/Core Crystal Clock Information.",1,[[],[["tscinfo",3],["option",4]]]],[11,"get_processor_frequency_info","","Processor Frequency Information.",1,[[],[["processorfrequencyinfo",3],["option",4]]]],[11,"deterministic_address_translation_info","","",1,[[],[["datiter",3],["option",4]]]],[11,"get_soc_vendor_info","","",1,[[],[["socvendorinfo",3],["option",4]]]],[11,"get_hypervisor_info","","",1,[[],[["option",4],["hypervisorinfo",3]]]],[11,"get_extended_function_info","","Extended functionality of CPU described here (including …",1,[[],[["option",4],["extendedfunctioninfo",3]]]],[11,"get_memory_encryption_info","","",1,[[],[["memoryencryptioninfo",3],["option",4]]]],[3,"VendorInfo","","",null,null],[11,"as_string","","Return vendor identification as human readable string.",2,[[],["str",15]]],[3,"CacheInfoIter","","Used to iterate over cache information contained in cpuid …",null,null],[4,"CacheInfoType","","What type of cache are we dealing with?",null,null],[13,"General","","",3,null],[13,"Cache","","",3,null],[13,"TLB","","",3,null],[13,"STLB","","",3,null],[13,"DTLB","","",3,null],[13,"Prefetch","","",3,null],[3,"CacheInfo","","Describes any kind of cache (TLB, Data and Instruction …",null,null],[12,"num","","Number as retrieved from cpuid",4,null],[12,"typ","","Cache type",4,null],[11,"desc","","Description of the cache (from Intel Manual)",4,[[],["str",15]]],[17,"CACHE_INFO_TABLE","","This table is taken from Intel manual (Section CPUID …",null,null],[3,"ProcessorSerial","","",null,null],[11,"serial_lower","","Bits 00-31 of 96 bit processor serial number. (Available …",5,[[],["u32",15]]],[11,"serial_middle","","Bits 32-63 of 96 bit processor serial number. (Available …",5,[[],["u32",15]]],[11,"serial","","",5,[[],["u64",15]]],[3,"FeatureInfo","","",null,null],[11,"extended_family_id","","Version Information: Extended Family",6,[[],["u8",15]]],[11,"extended_model_id","","Version Information: Extended Model",6,[[],["u8",15]]],[11,"family_id","","Version Information: Family",6,[[],["u8",15]]],[11,"model_id","","Version Information: Model",6,[[],["u8",15]]],[11,"stepping_id","","Version Information: Stepping ID",6,[[],["u8",15]]],[11,"brand_index","","Brand Index",6,[[],["u8",15]]],[11,"cflush_cache_line_size","","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)",6,[[],["u8",15]]],[11,"initial_local_apic_id","","Initial APIC ID",6,[[],["u8",15]]],[11,"max_logical_processor_ids","","Maximum number of addressable IDs for logical processors …",6,[[],["u8",15]]],[11,"has_sse3","","Streaming SIMD Extensions 3 (SSE3). A value of 1 …",6,[[],["bool",15]]],[11,"has_pclmulqdq","","PCLMULQDQ. A value of 1 indicates the processor supports …",6,[[],["bool",15]]],[11,"has_ds_area","","64-bit DS Area. A value of 1 indicates the processor …",6,[[],["bool",15]]],[11,"has_monitor_mwait","","MONITOR/MWAIT. A value of 1 indicates the processor …",6,[[],["bool",15]]],[11,"has_cpl","","CPL Qualified Debug Store. A value of 1 indicates the …",6,[[],["bool",15]]],[11,"has_vmx","","Virtual Machine Extensions. A value of 1 indicates that …",6,[[],["bool",15]]],[11,"has_smx","","Safer Mode Extensions. A value of 1 indicates that the …",6,[[],["bool",15]]],[11,"has_eist","","Enhanced Intel SpeedStep® technology. A value of 1 …",6,[[],["bool",15]]],[11,"has_tm2","","Thermal Monitor 2. A value of 1 indicates whether the …",6,[[],["bool",15]]],[11,"has_ssse3","","A value of 1 indicates the presence of the Supplemental …",6,[[],["bool",15]]],[11,"has_cnxtid","","L1 Context ID. A value of 1 indicates the L1 data cache …",6,[[],["bool",15]]],[11,"has_fma","","A value of 1 indicates the processor supports FMA …",6,[[],["bool",15]]],[11,"has_cmpxchg16b","","CMPXCHG16B Available. A value of 1 indicates that the …",6,[[],["bool",15]]],[11,"has_pdcm","","Perfmon and Debug Capability: A value of 1 indicates the …",6,[[],["bool",15]]],[11,"has_pcid","","Process-context identifiers. A value of 1 indicates that …",6,[[],["bool",15]]],[11,"has_dca","","A value of 1 indicates the processor supports the ability …",6,[[],["bool",15]]],[11,"has_sse41","","A value of 1 indicates that the processor supports SSE4.1.",6,[[],["bool",15]]],[11,"has_sse42","","A value of 1 indicates that the processor supports SSE4.2.",6,[[],["bool",15]]],[11,"has_x2apic","","A value of 1 indicates that the processor supports x2APIC …",6,[[],["bool",15]]],[11,"has_movbe","","A value of 1 indicates that the processor supports MOVBE …",6,[[],["bool",15]]],[11,"has_popcnt","","A value of 1 indicates that the processor supports the …",6,[[],["bool",15]]],[11,"has_tsc_deadline","","A value of 1 indicates that the processors local APIC …",6,[[],["bool",15]]],[11,"has_aesni","","A value of 1 indicates that the processor supports the …",6,[[],["bool",15]]],[11,"has_xsave","","A value of 1 indicates that the processor supports the …",6,[[],["bool",15]]],[11,"has_oxsave","","A value of 1 indicates that the OS has enabled …",6,[[],["bool",15]]],[11,"has_avx","","A value of 1 indicates the processor supports the AVX …",6,[[],["bool",15]]],[11,"has_f16c","","A value of 1 indicates that processor supports 16-bit …",6,[[],["bool",15]]],[11,"has_rdrand","","A value of 1 indicates that processor supports RDRAND …",6,[[],["bool",15]]],[11,"has_hypervisor","","A value of 1 indicates the indicates the presence of a …",6,[[],["bool",15]]],[11,"has_fpu","","Floating Point Unit On-Chip. The processor contains an …",6,[[],["bool",15]]],[11,"has_vme","","Virtual 8086 Mode Enhancements. Virtual 8086 mode …",6,[[],["bool",15]]],[11,"has_de","","Debugging Extensions. Support for I/O breakpoints, …",6,[[],["bool",15]]],[11,"has_pse","","Page Size Extension. Large pages of size 4 MByte are …",6,[[],["bool",15]]],[11,"has_tsc","","Time Stamp Counter. The RDTSC instruction is supported, …",6,[[],["bool",15]]],[11,"has_msr","","Model Specific Registers RDMSR and WRMSR Instructions. …",6,[[],["bool",15]]],[11,"has_pae","","Physical Address Extension. Physical addresses greater …",6,[[],["bool",15]]],[11,"has_mce","","Machine Check Exception. Exception 18 is defined for …",6,[[],["bool",15]]],[11,"has_cmpxchg8b","","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …",6,[[],["bool",15]]],[11,"has_apic","","APIC On-Chip. The processor contains an Advanced …",6,[[],["bool",15]]],[11,"has_sysenter_sysexit","","SYSENTER and SYSEXIT Instructions. The SYSENTER and …",6,[[],["bool",15]]],[11,"has_mtrr","","Memory Type Range Registers. MTRRs are supported. The …",6,[[],["bool",15]]],[11,"has_pge","","Page Global Bit. The global bit is supported in …",6,[[],["bool",15]]],[11,"has_mca","","Machine Check Architecture. A value of 1 indicates the …",6,[[],["bool",15]]],[11,"has_cmov","","Conditional Move Instructions. The conditional move …",6,[[],["bool",15]]],[11,"has_pat","","Page Attribute Table. Page Attribute Table is supported. …",6,[[],["bool",15]]],[11,"has_pse36","","36-Bit Page Size Extension. 4-MByte pages addressing …",6,[[],["bool",15]]],[11,"has_psn","","Processor Serial Number. The processor supports the …",6,[[],["bool",15]]],[11,"has_clflush","","CLFLUSH Instruction. CLFLUSH Instruction is supported.",6,[[],["bool",15]]],[11,"has_ds","","Debug Store. The processor supports the ability to write …",6,[[],["bool",15]]],[11,"has_acpi","","Thermal Monitor and Software Controlled Clock Facilities. …",6,[[],["bool",15]]],[11,"has_mmx","","Intel MMX Technology. The processor supports the Intel …",6,[[],["bool",15]]],[11,"has_fxsave_fxstor","","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …",6,[[],["bool",15]]],[11,"has_sse","","SSE. The processor supports the SSE extensions.",6,[[],["bool",15]]],[11,"has_sse2","","SSE2. The processor supports the SSE2 extensions.",6,[[],["bool",15]]],[11,"has_ss","","Self Snoop. The processor supports the management of …",6,[[],["bool",15]]],[11,"has_htt","","Max APIC IDs reserved field is Valid. A value of 0 for …",6,[[],["bool",15]]],[11,"has_tm","","Thermal Monitor. The processor implements the thermal …",6,[[],["bool",15]]],[11,"has_pbe","","Pending Break Enable. The processor supports the use of …",6,[[],["bool",15]]],[3,"CacheParametersIter","","",null,null],[3,"CacheParameter","","",null,null],[4,"CacheType","","",null,null],[13,"Null","","Null - No more caches",7,null],[13,"Data","","Data cache",7,null],[13,"Instruction","","Instruction cache",7,null],[13,"Unified","","Data and Instruction cache",7,null],[13,"Reserved","","4-31 = Reserved",7,null],[11,"cache_type","","Cache Type",8,[[],["cachetype",4]]],[11,"level","","Cache Level (starts at 1)",8,[[],["u8",15]]],[11,"is_self_initializing","","Self Initializing cache level (does not need SW …",8,[[],["bool",15]]],[11,"is_fully_associative","","Fully Associative cache",8,[[],["bool",15]]],[11,"max_cores_for_cache","","Maximum number of addressable IDs for logical processors …",8,[[],["usize",15]]],[11,"max_cores_for_package","","Maximum number of addressable IDs for processor cores in …",8,[[],["usize",15]]],[11,"coherency_line_size","","System Coherency Line Size (Bits 11-00)",8,[[],["usize",15]]],[11,"physical_line_partitions","","Physical Line partitions (Bits 21-12)",8,[[],["usize",15]]],[11,"associativity","","Ways of associativity (Bits 31-22)",8,[[],["usize",15]]],[11,"sets","","Number of Sets (Bits 31-00)",8,[[],["usize",15]]],[11,"is_write_back_invalidate","","Write-Back Invalidate/Invalidate (Bit 0) False: …",8,[[],["bool",15]]],[11,"is_inclusive","","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …",8,[[],["bool",15]]],[11,"has_complex_indexing","","Complex Cache Indexing (Bit 2) False: Direct mapped cache.…",8,[[],["bool",15]]],[3,"MonitorMwaitInfo","","",null,null],[11,"smallest_monitor_line","","Smallest monitor-line size in bytes (default is processor…",9,[[],["u16",15]]],[11,"largest_monitor_line","","Largest monitor-line size in bytes (default is processor…",9,[[],["u16",15]]],[11,"extensions_supported","","Enumeration of Monitor-Mwait extensions (beyond EAX and …",9,[[],["bool",15]]],[11,"interrupts_as_break_event","","Supports treating interrupts as break-event for MWAIT, …",9,[[],["bool",15]]],[11,"supported_c0_states","","Number of C0 sub C-states supported using MWAIT (Bits 03 …",9,[[],["u16",15]]],[11,"supported_c1_states","","Number of C1 sub C-states supported using MWAIT (Bits 07 …",9,[[],["u16",15]]],[11,"supported_c2_states","","Number of C2 sub C-states supported using MWAIT (Bits 11 …",9,[[],["u16",15]]],[11,"supported_c3_states","","Number of C3 sub C-states supported using MWAIT (Bits 15 …",9,[[],["u16",15]]],[11,"supported_c4_states","","Number of C4 sub C-states supported using MWAIT (Bits 19 …",9,[[],["u16",15]]],[11,"supported_c5_states","","Number of C5 sub C-states supported using MWAIT (Bits 23 …",9,[[],["u16",15]]],[11,"supported_c6_states","","Number of C6 sub C-states supported using MWAIT (Bits 27 …",9,[[],["u16",15]]],[11,"supported_c7_states","","Number of C7 sub C-states supported using MWAIT (Bits 31 …",9,[[],["u16",15]]],[3,"ThermalPowerInfo","","",null,null],[11,"dts_irq_threshold","","Number of Interrupt Thresholds in Digital Thermal Sensor",10,[[],["u8",15]]],[11,"has_dts","","Digital temperature sensor is supported if set.",10,[[],["bool",15]]],[11,"has_turbo_boost","","Intel Turbo Boost Technology Available (see description …",10,[[],["bool",15]]],[11,"has_arat","","ARAT. APIC-Timer-always-running feature is supported if …",10,[[],["bool",15]]],[11,"has_pln","","PLN. Power limit notification controls are supported if …",10,[[],["bool",15]]],[11,"has_ecmd","","ECMD. Clock modulation duty cycle extension is supported …",10,[[],["bool",15]]],[11,"has_ptm","","PTM. Package thermal management is supported if set.",10,[[],["bool",15]]],[11,"has_hwp","","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …",10,[[],["bool",15]]],[11,"has_hwp_notification","","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …",10,[[],["bool",15]]],[11,"has_hwp_activity_window","","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …",10,[[],["bool",15]]],[11,"has_hwp_energy_performance_preference","","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …",10,[[],["bool",15]]],[11,"has_hwp_package_level_request","","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …",10,[[],["bool",15]]],[11,"has_hdc","","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …",10,[[],["bool",15]]],[11,"has_turbo_boost3","","Intel® Turbo Boost Max Technology 3.0 available.",10,[[],["bool",15]]],[11,"has_hwp_capabilities","","HWP Capabilities. Highest Performance change is supported …",10,[[],["bool",15]]],[11,"has_hwp_peci_override","","HWP PECI override is supported if set.",10,[[],["bool",15]]],[11,"has_flexible_hwp","","Flexible HWP is supported if set.",10,[[],["bool",15]]],[11,"has_hwp_fast_access_mode","","Fast access mode for the IA32_HWP_REQUEST MSR is …",10,[[],["bool",15]]],[11,"has_ignore_idle_processor_hwp_request","","Ignoring Idle Logical Processor HWP request is supported …",10,[[],["bool",15]]],[11,"has_hw_coord_feedback","","Hardware Coordination Feedback Capability (Presence of …",10,[[],["bool",15]]],[11,"has_energy_bias_pref","","The processor supports performance-energy bias preference …",10,[[],["bool",15]]],[3,"ExtendedFeatures","","",null,null],[11,"has_fsgsbase","","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …",11,[[],["bool",15]]],[11,"has_tsc_adjust_msr","","IA32_TSC_ADJUST MSR is supported if 1.",11,[[],["bool",15]]],[11,"has_bmi1","","BMI1",11,[[],["bool",15]]],[11,"has_hle","","HLE",11,[[],["bool",15]]],[11,"has_avx2","","AVX2",11,[[],["bool",15]]],[11,"has_fdp","","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …",11,[[],["bool",15]]],[11,"has_smep","","SMEP. Supports Supervisor-Mode Execution Prevention if 1.",11,[[],["bool",15]]],[11,"has_bmi2","","BMI2",11,[[],["bool",15]]],[11,"has_rep_movsb_stosb","","Supports Enhanced REP MOVSB/STOSB if 1.",11,[[],["bool",15]]],[11,"has_invpcid","","INVPCID. If 1, supports INVPCID instruction for system …",11,[[],["bool",15]]],[11,"has_rtm","","RTM",11,[[],["bool",15]]],[11,"has_rdtm","","Supports Intel Resource Director Technology (RDT) …",11,[[],["bool",15]]],[11,"has_fpu_cs_ds_deprecated","","Deprecates FPU CS and FPU DS values if 1.",11,[[],["bool",15]]],[11,"has_mpx","","MPX. Supports Intel Memory Protection Extensions if 1.",11,[[],["bool",15]]],[11,"has_rdta","","Supports Intel Resource Director Technology (RDT) …",11,[[],["bool",15]]],[11,"has_rdseed","","Supports RDSEED.",11,[[],["bool",15]]],[11,"has_rdseet","","Supports RDSEED (deprecated alias).",11,[[],["bool",15]]],[11,"has_adx","","Supports ADX.",11,[[],["bool",15]]],[11,"has_smap","","SMAP. Supports Supervisor-Mode Access Prevention (and the …",11,[[],["bool",15]]],[11,"has_clflushopt","","Supports CLFLUSHOPT.",11,[[],["bool",15]]],[11,"has_processor_trace","","Supports Intel Processor Trace.",11,[[],["bool",15]]],[11,"has_sha","","Supports SHA Instructions.",11,[[],["bool",15]]],[11,"has_sgx","","Supports Intel® Software Guard Extensions (Intel® SGX …",11,[[],["bool",15]]],[11,"has_avx512f","","Supports AVX512F.",11,[[],["bool",15]]],[11,"has_avx512dq","","Supports AVX512DQ.",11,[[],["bool",15]]],[11,"has_avx512_ifma","","AVX512_IFMA",11,[[],["bool",15]]],[11,"has_avx512pf","","AVX512PF",11,[[],["bool",15]]],[11,"has_avx512er","","AVX512ER",11,[[],["bool",15]]],[11,"has_avx512cd","","AVX512CD",11,[[],["bool",15]]],[11,"has_avx512bw","","AVX512BW",11,[[],["bool",15]]],[11,"has_avx512vl","","AVX512VL",11,[[],["bool",15]]],[11,"has_clwb","","CLWB",11,[[],["bool",15]]],[11,"has_prefetchwt1","","Has PREFETCHWT1 (Intel® Xeon Phi™ only).",11,[[],["bool",15]]],[11,"has_umip","","Supports user-mode instruction prevention if 1.",11,[[],["bool",15]]],[11,"has_pku","","Supports protection keys for user-mode pages.",11,[[],["bool",15]]],[11,"has_ospke","","OS has set CR4.PKE to enable protection keys (and the …",11,[[],["bool",15]]],[11,"has_rdpid","","RDPID and IA32_TSC_AUX are available.",11,[[],["bool",15]]],[11,"has_sgx_lc","","Supports SGX Launch Configuration.",11,[[],["bool",15]]],[11,"mawau_value","","The value of MAWAU used by the BNDLDX and BNDSTX …",11,[[],["u8",15]]],[3,"DirectCacheAccessInfo","","",null,null],[11,"get_dca_cap_value","","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR …",12,[[],["u32",15]]],[3,"PerformanceMonitoringInfo","","",null,null],[11,"version_id","","Version ID of architectural performance monitoring. (Bits …",13,[[],["u8",15]]],[11,"number_of_counters","","Number of general-purpose performance monitoring counter …",13,[[],["u8",15]]],[11,"counter_bit_width","","Bit width of general-purpose, performance monitoring …",13,[[],["u8",15]]],[11,"ebx_length","","Length of EBX bit vector to enumerate architectural …",13,[[],["u8",15]]],[11,"fixed_function_counters","","Number of fixed-function performance counters (if Version …",13,[[],["u8",15]]],[11,"fixed_function_counters_bit_width","","Bit width of fixed-function performance counters (if …",13,[[],["u8",15]]],[11,"has_any_thread_deprecation","","AnyThread deprecation",13,[[],["bool",15]]],[11,"is_core_cyc_ev_unavailable","","Core cycle event not available if 1.",13,[[],["bool",15]]],[11,"is_inst_ret_ev_unavailable","","Instruction retired event not available if 1.",13,[[],["bool",15]]],[11,"is_ref_cycle_ev_unavailable","","Reference cycles event not available if 1.",13,[[],["bool",15]]],[11,"is_cache_ref_ev_unavailable","","Last-level cache reference event not available if 1.",13,[[],["bool",15]]],[11,"is_ll_cache_miss_ev_unavailable","","Last-level cache misses event not available if 1.",13,[[],["bool",15]]],[11,"is_branch_inst_ret_ev_unavailable","","Branch instruction retired event not available if 1.",13,[[],["bool",15]]],[11,"is_branch_midpred_ev_unavailable","","Branch mispredict retired event not available if 1.",13,[[],["bool",15]]],[3,"ExtendedTopologyIter","","Iterates over the system topology in order to retrieve …",null,null],[3,"ExtendedTopologyLevel","","Gives detailed information about the current level in the …",null,null],[11,"processors","","Number of logical processors at this level type. The …",14,[[],["u16",15]]],[11,"level_number","","Level number.",14,[[],["u8",15]]],[11,"level_type","","",14,[[],["topologytype",4]]],[11,"x2apic_id","","x2APIC ID the current logical processor. (Bits 31-00)",14,[[],["u32",15]]],[11,"shift_right_for_next_apic_id","","Number of bits to shift right on x2APIC ID to get a …",14,[[],["u32",15]]],[4,"TopologyType","","What type of core we have at this level in the topology …",null,null],[13,"Invalid","","",15,null],[13,"SMT","","Hyper-thread (Simultaneous multithreading)",15,null],[13,"Core","","",15,null],[3,"ExtendedStateInfo","","",null,null],[11,"xcr0_supports_legacy_x87","","Support for legacy x87 in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_sse_128","","Support for SSE 128-bit in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_avx_256","","Support for AVX 256-bit in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_mpx_bndregs","","Support for MPX BNDREGS in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_mpx_bndcsr","","Support for MPX BNDCSR in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_avx512_opmask","","Support for AVX512 OPMASK in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_avx512_zmm_hi256","","Support for AVX512 ZMM Hi256 XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_avx512_zmm_hi16","","Support for AVX512 ZMM Hi16 in XCR0.",16,[[],["bool",15]]],[11,"xcr0_supports_pkru","","Support for PKRU in XCR0.",16,[[],["bool",15]]],[11,"ia32_xss_supports_pt","","Support for PT in IA32_XSS.",16,[[],["bool",15]]],[11,"ia32_xss_supports_hdc","","Support for HDC in IA32_XSS.",16,[[],["bool",15]]],[11,"xsave_area_size_enabled_features","","Maximum size (bytes, from the beginning of the …",16,[[],["u32",15]]],[11,"xsave_area_size_supported_features","","Maximum size (bytes, from the beginning of the …",16,[[],["u32",15]]],[11,"has_xsaveopt","","CPU has xsaveopt feature.",16,[[],["bool",15]]],[11,"has_xsavec","","Supports XSAVEC and the compacted form of XRSTOR if set.",16,[[],["bool",15]]],[11,"has_xgetbv","","Supports XGETBV with ECX = 1 if set.",16,[[],["bool",15]]],[11,"has_xsaves_xrstors","","Supports XSAVES/XRSTORS and IA32_XSS if set.",16,[[],["bool",15]]],[11,"xsave_size","","The size in bytes of the XSAVE area containing all states …",16,[[],["u32",15]]],[11,"iter","","Iterator over extended state enumeration levels >= 2.",16,[[],["extendedstateiter",3]]],[3,"ExtendedStateIter","","",null,null],[3,"ExtendedState","","",null,null],[12,"subleaf","","",17,null],[11,"size","","The size in bytes (from the offset specified in EBX) of …",17,[[],["u32",15]]],[11,"offset","","The offset in bytes of this extended state components …",17,[[],["u32",15]]],[11,"is_in_ia32_xss","","True if the bit n (corresponding to the sub-leaf index) …",17,[[],["bool",15]]],[11,"is_in_xcr0","","True if bit n is supported in XCR0.",17,[[],["bool",15]]],[11,"is_compacted_format","","Returns true when the compacted format of an XSAVE area …",17,[[],["bool",15]]],[3,"RdtMonitoringInfo","","",null,null],[11,"rmid_range","","Maximum range (zero-based) of RMID within this physical …",18,[[],["u32",15]]],[11,"has_l3_monitoring","","Supports L3 Cache Intel RDT Monitoring.",18,[[],["bool",15]]],[11,"l3_monitoring","","L3 Cache Monitoring.",18,[[],[["option",4],["l3monitoringinfo",3]]]],[3,"L3MonitoringInfo","","",null,null],[11,"conversion_factor","","Conversion factor from reported IA32_QM_CTR value to …",19,[[],["u32",15]]],[11,"maximum_rmid_range","","Maximum range (zero-based) of RMID of L3.",19,[[],["u32",15]]],[11,"has_occupancy_monitoring","","Supports occupancy monitoring.",19,[[],["bool",15]]],[11,"has_total_bandwidth_monitoring","","Supports total bandwidth monitoring.",19,[[],["bool",15]]],[11,"has_local_bandwidth_monitoring","","Supports local bandwidth monitoring.",19,[[],["bool",15]]],[3,"RdtAllocationInfo","","",null,null],[11,"has_l3_cat","","Supports L3 Cache Allocation.",20,[[],["bool",15]]],[11,"has_l2_cat","","Supports L2 Cache Allocation.",20,[[],["bool",15]]],[11,"has_memory_bandwidth_allocation","","Supports Memory Bandwidth Allocation.",20,[[],["bool",15]]],[11,"l3_cat","","L3 Cache Allocation Information.",20,[[],[["l3catinfo",3],["option",4]]]],[11,"l2_cat","","L2 Cache Allocation Information.",20,[[],[["option",4],["l2catinfo",3]]]],[11,"memory_bandwidth_allocation","","Memory Bandwidth Allocation Information.",20,[[],[["membwallocationinfo",3],["option",4]]]],[3,"L3CatInfo","","L3 Cache Allocation Technology Enumeration Sub-leaf (EAX …",null,null],[11,"capacity_mask_length","","Length of the capacity bit mask using minus-one notation.",21,[[],["u8",15]]],[11,"isolation_bitmap","","Bit-granular map of isolation/contention of allocation …",21,[[],["u32",15]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",21,[[],["u16",15]]],[11,"has_code_data_prioritization","","Is Code and Data Prioritization Technology supported?",21,[[],["bool",15]]],[3,"L2CatInfo","","L2 Cache Allocation Technology Enumeration Sub-leaf (EAX …",null,null],[11,"capacity_mask_length","","Length of the capacity bit mask using minus-one notation.",22,[[],["u8",15]]],[11,"isolation_bitmap","","Bit-granular map of isolation/contention of allocation …",22,[[],["u32",15]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",22,[[],["u16",15]]],[3,"MemBwAllocationInfo","","Memory Bandwidth Allocation Enumeration Sub-leaf (EAX = …",null,null],[11,"max_hba_throttling","","Reports the maximum MBA throttling value supported for …",23,[[],["u16",15]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",23,[[],["u16",15]]],[11,"has_linear_response_delay","","Reports whether the response of the delay values is …",23,[[],["bool",15]]],[3,"SgxInfo","","Intel SGX Capability Enumeration Leaf, sub-leaf 0 (EAX = …",null,null],[11,"has_sgx1","","Has SGX1 support.",24,[[],["bool",15]]],[11,"has_sgx2","","Has SGX2 support.",24,[[],["bool",15]]],[11,"has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","","Supports ENCLV instruction leaves EINCVIRTCHILD, …",24,[[],["bool",15]]],[11,"has_encls_leaves_etrackc_erdinfo_eldbc_elduc","","Supports ENCLS instruction leaves ETRACKC, ERDINFO, …",24,[[],["bool",15]]],[11,"miscselect","","Bit vector of supported extended SGX features.",24,[[],["u32",15]]],[11,"max_enclave_size_non_64bit","","The maximum supported enclave size in non-64-bit mode is …",24,[[],["u8",15]]],[11,"max_enclave_size_64bit","","The maximum supported enclave size in 64-bit mode is …",24,[[],["u8",15]]],[11,"secs_attributes","","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …",24,[[]]],[11,"iter","","Iterator over SGX sub-leafs.",24,[[],["sgxsectioniter",3]]],[3,"SgxSectionIter","","Iterator over the SGX sub-leafs (ECX >= 2).",null,null],[4,"SgxSectionInfo","","Intel SGX EPC Enumeration Leaf, sub-leaves (EAX = 12H, …",null,null],[13,"Epc","","",25,null],[3,"EpcSection","","EBX:EAX and EDX:ECX provide information on the Enclave …",null,null],[11,"physical_base","","The physical address of the base of the EPC section",26,[[],["u64",15]]],[11,"size","","Size of the corresponding EPC section within the …",26,[[],["u64",15]]],[3,"ProcessorTraceInfo","","",null,null],[11,"has_rtit_cr3_match","","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be …",27,[[],["bool",15]]],[11,"has_configurable_psb_and_cycle_accurate_mode","","If true, Indicates support of Configurable PSB and …",27,[[],["bool",15]]],[11,"has_ip_tracestop_filtering","","If true, Indicates support of IP Filtering, TraceStop …",27,[[],["bool",15]]],[11,"has_mtc_timing_packet_coefi_suppression","","If true, Indicates support of MTC timing packet and …",27,[[],["bool",15]]],[11,"has_ptwrite","","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…",27,[[],["bool",15]]],[11,"has_power_event_trace","","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…",27,[[],["bool",15]]],[11,"has_topa","","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …",27,[[],["bool",15]]],[11,"has_topa_maximum_entries","","If true, ToPA tables can hold any number of output …",27,[[],["bool",15]]],[11,"has_single_range_output_scheme","","If true, Indicates support of Single-Range Output scheme.",27,[[],["bool",15]]],[11,"has_trace_transport_subsystem","","If true, Indicates support of output to Trace Transport …",27,[[],["bool",15]]],[11,"has_lip_with_cs_base","","If true, Generated packets which contain IP payloads have …",27,[[],["bool",15]]],[11,"configurable_address_ranges","","Number of configurable Address Ranges for filtering (Bits …",27,[[],["u8",15]]],[11,"supported_mtc_period_encodings","","Bitmap of supported MTC period encodings (Bit 31:16).",27,[[],["u16",15]]],[11,"supported_cycle_threshold_value_encodings","","Bitmap of supported Cycle Threshold value encodings (Bits …",27,[[],["u16",15]]],[11,"supported_psb_frequency_encodings","","Bitmap of supported Configurable PSB frequency encodings …",27,[[],["u16",15]]],[3,"TscInfo","","Time Stamp Counter and Nominal Core Crystal Clock …",null,null],[11,"denominator","","An unsigned integer which is the denominator of the …",28,[[],["u32",15]]],[11,"numerator","","An unsigned integer which is the numerator of the …",28,[[],["u32",15]]],[11,"nominal_frequency","","An unsigned integer which is the nominal frequency of the …",28,[[],["u32",15]]],[11,"tsc_frequency","","“TSC frequency” = “core crystal clock frequency” …",28,[[],[["option",4],["u64",15]]]],[3,"ProcessorFrequencyInfo","","Processor Frequency Information",null,null],[11,"processor_base_frequency","","Processor Base Frequency (in MHz).",29,[[],["u16",15]]],[11,"processor_max_frequency","","Maximum Frequency (in MHz).",29,[[],["u16",15]]],[11,"bus_frequency","","Bus (Reference) Frequency (in MHz).",29,[[],["u16",15]]],[3,"DatIter","","Deterministic Address Translation Structure Iterator",null,null],[3,"DatInfo","","Deterministic Address Translation Structure",null,null],[11,"has_4k_entries","","4K page size entries supported by this structure",30,[[],["bool",15]]],[11,"has_2mb_entries","","2MB page size entries supported by this structure",30,[[],["bool",15]]],[11,"has_4mb_entries","","4MB page size entries supported by this structure",30,[[],["bool",15]]],[11,"has_1gb_entries","","1GB page size entries supported by this structure",30,[[],["bool",15]]],[11,"is_fully_associative","","Fully associative structure",30,[[],["bool",15]]],[11,"partitioning","","Partitioning (0: Soft partitioning between the logical …",30,[[],["u8",15]]],[11,"ways","","Ways of associativity.",30,[[],["u16",15]]],[11,"sets","","Number of Sets.",30,[[],["u32",15]]],[11,"cache_type","","Translation cache type field.",30,[[],["dattype",4]]],[11,"cache_level","","Translation cache level (starts at 1)",30,[[],["u8",15]]],[11,"max_addressable_ids","","Maximum number of addressable IDs for logical processors …",30,[[],["u16",15]]],[4,"DatType","","Deterministic Address Translation cache type (EDX bits 04 …",null,null],[13,"Null","","Null (indicates this sub-leaf is not valid).",31,null],[13,"DataTLB","","",31,null],[13,"InstructionTLB","","",31,null],[13,"UnifiedTLB","","Some unified TLBs will allow a single TLB entry to …",31,null],[13,"Unknown","","",31,null],[3,"SoCVendorInfo","","",null,null],[11,"get_soc_vendor_id","","",32,[[],["u16",15]]],[11,"get_project_id","","",32,[[],["u32",15]]],[11,"get_stepping_id","","",32,[[],["u32",15]]],[11,"get_vendor_brand","","",32,[[],["socvendorbrand",3]]],[11,"get_vendor_attributes","","",32,[[],[["option",4],["socvendorattributesiter",3]]]],[3,"SoCVendorAttributesIter","","",null,null],[3,"SoCVendorBrand","","",null,null],[11,"as_string","","",33,[[],["str",15]]],[3,"HypervisorInfo","","Information about Hypervisor …",null,null],[4,"Hypervisor","","Identifies the different Hypervisor products.",null,null],[13,"Xen","","",34,null],[13,"VMware","","",34,null],[13,"HyperV","","",34,null],[13,"KVM","","",34,null],[13,"Unknown","","",34,null],[11,"identify","","",35,[[],["hypervisor",4]]],[11,"tsc_frequency","","TSC frequency in kHz.",35,[[],[["u32",15],["option",4]]]],[11,"apic_frequency","","(Virtual) Bus (local apic timer) frequency in kHz.",35,[[],[["u32",15],["option",4]]]],[3,"ExtendedFunctionInfo","","",null,null],[4,"L2Associativity","","",null,null],[13,"Disabled","","",36,null],[13,"DirectMapped","","",36,null],[13,"TwoWay","","",36,null],[13,"FourWay","","",36,null],[13,"EightWay","","",36,null],[13,"SixteenWay","","",36,null],[13,"FullyAssiciative","","",36,null],[13,"Unknown","","",36,null],[11,"processor_brand_string","","Retrieve processor brand string.",37,[[],[["str",15],["option",4]]]],[11,"extended_signature","","Extended Processor Signature and Feature Bits.",37,[[],[["u32",15],["option",4]]]],[11,"cache_line_size","","Cache Line size in bytes",37,[[],[["option",4],["u8",15]]]],[11,"l2_associativity","","L2 Associativity field",37,[[],[["option",4],["l2associativity",4]]]],[11,"cache_size","","Cache size in 1K units",37,[[],[["option",4],["u16",15]]]],[11,"physical_address_bits","","#Physical Address Bits",37,[[],[["option",4],["u8",15]]]],[11,"linear_address_bits","","#Linear Address Bits",37,[[],[["option",4],["u8",15]]]],[11,"has_invariant_tsc","","Is Invariant TSC available?",37,[[],["bool",15]]],[11,"has_lahf_sahf","","Is LAHF/SAHF available in 64-bit mode?",37,[[],["bool",15]]],[11,"has_lzcnt","","Is LZCNT available?",37,[[],["bool",15]]],[11,"has_prefetchw","","Is PREFETCHW available?",37,[[],["bool",15]]],[11,"has_syscall_sysret","","Are fast system calls available.",37,[[],["bool",15]]],[11,"has_execute_disable","","Is there support for execute disable bit.",37,[[],["bool",15]]],[11,"has_1gib_pages","","Is there support for 1GiB pages.",37,[[],["bool",15]]],[11,"has_rdtscp","","Check support for rdtscp instruction.",37,[[],["bool",15]]],[11,"has_64bit_mode","","Check support for 64-bit mode.",37,[[],["bool",15]]],[3,"MemoryEncryptionInfo","","",null,null],[11,"has_sme","","Secure Memory Encryption is supported if set.",38,[[],["bool",15]]],[11,"has_sev","","Secure Encrypted Virtualization is supported if set.",38,[[],["bool",15]]],[11,"has_page_flush_msr","","The Page Flush MSR is available if set.",38,[[],["bool",15]]],[11,"has_sev_es","","SEV Encrypted State is supported if set.",38,[[],["bool",15]]],[11,"physical_address_reduction","","",38,[[],["u8",15]]],[11,"c_bit_position","","",38,[[],["u8",15]]],[11,"max_encrypted_guests","","",38,[[],["u32",15]]],[11,"min_sev_no_es_asid","","",38,[[],["u32",15]]],[14,"cpuid","","Macro which queries cpuid directly.",null,null],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"into_iter","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"into_iter","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"into_iter","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"into_iter","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"into_iter","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"into_iter","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"into_iter","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"eq","","",7,[[["cachetype",4]],["bool",15]]],[11,"eq","","",15,[[["topologytype",4]],["bool",15]]],[11,"eq","","",34,[[["hypervisor",4]],["bool",15]]],[11,"ne","","",34,[[["hypervisor",4]],["bool",15]]],[11,"eq","","",36,[[["l2associativity",4]],["bool",15]]],[11,"next","","Iterate over all cache information.",39,[[],[["option",4],["cacheinfo",3]]]],[11,"next","","Iterate over all caches for this CPU. Note: cpuid is …",40,[[],[["cacheparameter",3],["option",4]]]],[11,"next","","",41,[[],[["option",4],["extendedtopologylevel",3]]]],[11,"next","","",42,[[],[["extendedstate",3],["option",4]]]],[11,"next","","",43,[[],[["option",4],["sgxsectioninfo",4]]]],[11,"next","","Iterate over each sub-leaf with an  address translation …",44,[[],[["option",4],["datinfo",3]]]],[11,"next","","Iterate over all SoC vendor specific attributes.",45,[[],[["option",4],["cpuidresult",3]]]],[11,"clone","","",0,[[],["cpuidresult",3]]],[11,"clone","","",3,[[],["cacheinfotype",4]]],[11,"clone","","",4,[[],["cacheinfo",3]]],[11,"clone","","",8,[[],["cacheparameter",3]]],[11,"default","","",1,[[],["cpuid",3]]],[11,"default","","",0,[[],["cpuidresult",3]]],[11,"default","","",2,[[],["vendorinfo",3]]],[11,"default","","",39,[[],["cacheinfoiter",3]]],[11,"default","","",3,[[],["cacheinfotype",4]]],[11,"default","","",4,[[],["cacheinfo",3]]],[11,"default","","",5,[[],["processorserial",3]]],[11,"default","","",6,[[],["featureinfo",3]]],[11,"default","","",40,[[],["cacheparametersiter",3]]],[11,"default","","",8,[[],["cacheparameter",3]]],[11,"default","","",7,[[],["cachetype",4]]],[11,"default","","",9,[[],["monitormwaitinfo",3]]],[11,"default","","",10,[[],["thermalpowerinfo",3]]],[11,"default","","",11,[[],["extendedfeatures",3]]],[11,"default","","",12,[[],["directcacheaccessinfo",3]]],[11,"default","","",13,[[],["performancemonitoringinfo",3]]],[11,"default","","",41,[[],["extendedtopologyiter",3]]],[11,"default","","",14,[[],["extendedtopologylevel",3]]],[11,"default","","",15,[[],["topologytype",4]]],[11,"default","","",16,[[],["extendedstateinfo",3]]],[11,"default","","",42,[[],["extendedstateiter",3]]],[11,"default","","",17,[[],["extendedstate",3]]],[11,"default","","",18,[[],["rdtmonitoringinfo",3]]],[11,"default","","",19,[[],["l3monitoringinfo",3]]],[11,"default","","",20,[[],["rdtallocationinfo",3]]],[11,"default","","",21,[[],["l3catinfo",3]]],[11,"default","","",22,[[],["l2catinfo",3]]],[11,"default","","",23,[[],["membwallocationinfo",3]]],[11,"default","","",24,[[],["sgxinfo",3]]],[11,"default","","",43,[[],["sgxsectioniter",3]]],[11,"default","","",25,[[],["sgxsectioninfo",4]]],[11,"default","","",26,[[],["epcsection",3]]],[11,"default","","",27,[[],["processortraceinfo",3]]],[11,"default","","",28,[[],["tscinfo",3]]],[11,"default","","",29,[[],["processorfrequencyinfo",3]]],[11,"default","","",44,[[],["datiter",3]]],[11,"default","","",30,[[],["datinfo",3]]],[11,"default","","",31,[[],["dattype",4]]],[11,"default","","",32,[[],["socvendorinfo",3]]],[11,"default","","",45,[[],["socvendorattributesiter",3]]],[11,"default","","",33,[[],["socvendorbrand",3]]],[11,"default","","",37,[[],["extendedfunctioninfo",3]]],[11,"default","","",36,[[],["l2associativity",4]]],[11,"default","","",38,[[],["memoryencryptioninfo",3]]]],"p":[[3,"CpuIdResult"],[3,"CpuId"],[3,"VendorInfo"],[4,"CacheInfoType"],[3,"CacheInfo"],[3,"ProcessorSerial"],[3,"FeatureInfo"],[4,"CacheType"],[3,"CacheParameter"],[3,"MonitorMwaitInfo"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedTopologyLevel"],[4,"TopologyType"],[3,"ExtendedStateInfo"],[3,"ExtendedState"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxInfo"],[4,"SgxSectionInfo"],[3,"EpcSection"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatInfo"],[4,"DatType"],[3,"SoCVendorInfo"],[3,"SoCVendorBrand"],[4,"Hypervisor"],[3,"HypervisorInfo"],[4,"L2Associativity"],[3,"ExtendedFunctionInfo"],[3,"MemoryEncryptionInfo"],[3,"CacheInfoIter"],[3,"CacheParametersIter"],[3,"ExtendedTopologyIter"],[3,"ExtendedStateIter"],[3,"SgxSectionIter"],[3,"DatIter"],[3,"SoCVendorAttributesIter"]]},\
"rcore_fs":{"doc":"","i":[[0,"dev","rcore_fs","",null,null],[0,"block_cache","rcore_fs::dev","A naive LRU cache layer for <code>BlockDevice</code>",null,null],[3,"BlockCache","rcore_fs::dev::block_cache","",null,null],[11,"new","","",0,[[["usize",15]]]],[0,"std_impl","rcore_fs::dev","",null,null],[3,"StdTimeProvider","rcore_fs::dev::std_impl","",null,null],[8,"TimeProvider","rcore_fs::dev","A current time provider",null,null],[10,"current_time","","",1,[[],["timespec",3]]],[8,"Device","","Interface for FS to read & write",null,null],[10,"read_at","","",2,[[["usize",15]],[["usize",15],["result",6]]]],[10,"write_at","","",2,[[["usize",15]],[["usize",15],["result",6]]]],[10,"sync","","",2,[[],["result",6]]],[8,"BlockDevice","","Device which can only R/W in blocks",null,null],[18,"BLOCK_SIZE_LOG2","","",3,null],[10,"read_at","","",3,[[["blockid",6]],["result",6]]],[10,"write_at","","",3,[[["blockid",6]],["result",6]]],[10,"sync","","",3,[[],["result",6]]],[3,"DevError","","The error type for device.",null,null],[6,"Result","","A specialized <code>Result</code> type for device.",null,null],[6,"BlockId","","",null,null],[0,"dirty","rcore_fs","",null,null],[3,"Dirty","rcore_fs::dirty","Dirty wraps a value of type T with functions similiar to …",null,null],[11,"new","","Create a new Dirty",4,[[],["dirty",3]]],[11,"new_dirty","","Create a new Dirty with dirty set",4,[[],["dirty",3]]],[11,"dirty","","Returns true if dirty, false otherwise",4,[[],["bool",15]]],[11,"sync","","Reset dirty",4,[[]]],[0,"file","rcore_fs","",null,null],[3,"File","rcore_fs::file","",null,null],[11,"new","","",5,[[["inode",8],["bool",15],["arc",3]]]],[11,"read","","",5,[[],[["usize",15],["result",6]]]],[11,"write","","",5,[[],[["usize",15],["result",6]]]],[11,"info","","",5,[[],[["metadata",3],["result",6]]]],[11,"get_entry","","",5,[[["usize",15]],[["string",3],["result",6]]]],[0,"util","rcore_fs","",null,null],[3,"BlockIter","rcore_fs::util","Given a range and iterate sub-range for each block",null,null],[12,"begin","","",6,null],[12,"end","","",6,null],[12,"block_size_log2","","",6,null],[3,"BlockRange","","",null,null],[12,"block","","",7,null],[12,"begin","","",7,null],[12,"end","","",7,null],[12,"block_size_log2","","",7,null],[11,"len","","",7,[[],["usize",15]]],[11,"is_full","","",7,[[],["bool",15]]],[11,"origin_begin","","",7,[[],["usize",15]]],[11,"origin_end","","",7,[[],["usize",15]]],[0,"vfs","rcore_fs","",null,null],[8,"INode","rcore_fs::vfs","Abstract file system object such as file or directory.",null,null],[10,"read_at","","Read bytes at <code>offset</code> into <code>buf</code>, return the number of bytes …",8,[[["usize",15]],[["usize",15],["result",6]]]],[10,"write_at","","Write bytes at <code>offset</code> from <code>buf</code>, return the number of …",8,[[["usize",15]],[["usize",15],["result",6]]]],[10,"poll","","Poll the events, return a bitmap of events.",8,[[],[["pollstatus",3],["result",6]]]],[11,"async_poll","","Poll the events, return a bitmap of events, async version.",8,[[],[["pin",3],["box",3]]]],[11,"metadata","","Get metadata of the INode",8,[[],[["metadata",3],["result",6]]]],[11,"set_metadata","","Set metadata of the INode",8,[[["metadata",3]],["result",6]]],[11,"sync_all","","Sync all data and metadata",8,[[],["result",6]]],[11,"sync_data","","Sync data (not include metadata)",8,[[],["result",6]]],[11,"resize","","Resize the file",8,[[["usize",15]],["result",6]]],[11,"create","","Create a new INode in the directory",8,[[["filetype",4],["u32",15],["str",15]],[["result",6],["arc",3]]]],[11,"create2","","Create a new INode in the directory, with a data field …",8,[[["filetype",4],["u32",15],["usize",15],["str",15]],[["result",6],["arc",3]]]],[11,"link","","Create a hard link <code>name</code> to <code>other</code>",8,[[["arc",3],["str",15]],["result",6]]],[11,"unlink","","Delete a hard link <code>name</code>",8,[[["str",15]],["result",6]]],[11,"move_","","Move INode <code>self/old_name</code> to <code>target/new_name</code>. If <code>target</code> …",8,[[["arc",3],["str",15]],["result",6]]],[11,"find","","Find the INode <code>name</code> in the directory",8,[[["str",15]],[["result",6],["arc",3]]]],[11,"get_entry","","Get the name of directory entry",8,[[["usize",15]],[["string",3],["result",6]]]],[11,"get_entry_with_metadata","","Get the name of directory entry with metadata",8,[[["usize",15]],["result",6]]],[11,"io_control","","Control device",8,[[["u32",15],["usize",15]],[["usize",15],["result",6]]]],[11,"mmap","","Map files or devices into memory",8,[[["mmaparea",3]],["result",6]]],[11,"fs","","Get the file system of the INode",8,[[],[["filesystem",8],["arc",3]]]],[10,"as_any_ref","","This is used to implement dynamics cast. Simply return …",8,[[],["any",8]]],[11,"downcast_ref","","Downcast the INode to specific struct",8,[[],["option",4]]],[11,"list","","Get all directory entries as a Vec",8,[[],[["result",6],["vec",3]]]],[11,"lookup","","Lookup path from current INode, and do not follow symlinks",8,[[["str",15]],[["result",6],["arc",3]]]],[11,"lookup_follow","","Lookup path from current INode, and follow symlinks at …",8,[[["usize",15],["str",15]],[["result",6],["arc",3]]]],[4,"IOCTLError","","",null,null],[13,"NotValidFD","","",9,null],[13,"NotValidMemory","","",9,null],[13,"NotValidParam","","",9,null],[13,"NotCharDevice","","",9,null],[3,"PollStatus","","",null,null],[12,"read","","",10,null],[12,"write","","",10,null],[12,"error","","",10,null],[3,"MMapArea","","",null,null],[12,"start_vaddr","","Start virtual address",11,null],[12,"end_vaddr","","End virtual address",11,null],[12,"prot","","Access permissions",11,null],[12,"flags","","Flags",11,null],[12,"offset","","Offset from the file in bytes",11,null],[3,"Metadata","","Metadata of INode",null,null],[12,"dev","","Device ID",12,null],[12,"inode","","Inode number",12,null],[12,"size","","Size in bytes",12,null],[12,"blk_size","","A file system-specific preferred I/O block size for this …",12,null],[12,"blocks","","Size in blocks",12,null],[12,"atime","","Time of last access",12,null],[12,"mtime","","Time of last modification",12,null],[12,"ctime","","Time of last change",12,null],[12,"type_","","Type of file",12,null],[12,"mode","","Permission",12,null],[12,"nlinks","","Number of hard links",12,null],[12,"uid","","User ID",12,null],[12,"gid","","Group ID",12,null],[12,"rdev","","Raw device id e.g. /dev/null: makedev(0x1, 0x3)",12,null],[3,"Timespec","","",null,null],[12,"sec","","",13,null],[12,"nsec","","",13,null],[4,"FileType","","",null,null],[13,"File","","",14,null],[13,"Dir","","",14,null],[13,"SymLink","","",14,null],[13,"CharDevice","","",14,null],[13,"BlockDevice","","",14,null],[13,"NamedPipe","","",14,null],[13,"Socket","","",14,null],[3,"FsInfo","","Metadata of FileSystem",null,null],[12,"bsize","","File system block size",15,null],[12,"frsize","","Fundamental file system block size",15,null],[12,"blocks","","Total number of blocks on file system in units of <code>frsize</code>",15,null],[12,"bfree","","Total number of free blocks",15,null],[12,"bavail","","Number of free blocks available to non-privileged process",15,null],[12,"files","","Total number of file serial numbers",15,null],[12,"ffree","","Total number of free file serial numbers",15,null],[12,"namemax","","Maximum filename length",15,null],[4,"FsError","","",null,null],[13,"NotSupported","","",16,null],[13,"NotFile","","",16,null],[13,"IsDir","","",16,null],[13,"NotDir","","",16,null],[13,"EntryNotFound","","",16,null],[13,"EntryExist","","",16,null],[13,"NotSameFs","","",16,null],[13,"InvalidParam","","",16,null],[13,"NoDeviceSpace","","",16,null],[13,"DirRemoved","","",16,null],[13,"DirNotEmpty","","",16,null],[13,"WrongFs","","",16,null],[13,"DeviceError","","",16,null],[13,"IOCTLError","","",16,null],[13,"NoDevice","","",16,null],[13,"Again","","",16,null],[13,"SymLoop","","",16,null],[13,"Busy","","",16,null],[13,"Interrupted","","",16,null],[6,"Result","","",null,null],[8,"FileSystem","","Abstract file system",null,null],[10,"sync","","Sync all data to the storage",17,[[],["result",6]]],[10,"root_inode","","Get the root INode of the file system",17,[[],[["inode",8],["arc",3]]]],[10,"info","","Get the file system information",17,[[],["fsinfo",3]]],[5,"make_rdev","","",null,[[["usize",15]],["usize",15]]],[11,"read_at","rcore_fs::dev::block_cache","",0,[[["usize",15]],[["usize",15],["deverror",3],["result",4]]]],[11,"write_at","","",0,[[["usize",15]],[["usize",15],["deverror",3],["result",4]]]],[11,"sync","","",0,[[],[["result",4],["deverror",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","rcore_fs::dev::std_impl","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","rcore_fs::dev","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","rcore_fs::dirty","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","rcore_fs::file","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","rcore_fs::util","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","rcore_fs::vfs","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"current_time","rcore_fs::dev::std_impl","",18,[[],["timespec",3]]],[11,"read_at","rcore_fs::dev::block_cache","",0,[[["blockid",6]],["result",6]]],[11,"write_at","","",0,[[["blockid",6]],["result",6]]],[11,"sync","","",0,[[],["result",6]]],[11,"drop","","",0,[[]]],[11,"drop","rcore_fs::dirty","Guard it is not dirty when dropping",4,[[]]],[11,"from","rcore_fs::dev","",19,[[["error",3]]]],[11,"from","rcore_fs::vfs","",16,[[["deverror",3]]]],[11,"from","","",16,[[["error",3]]]],[11,"from","","",12,[[["metadata",3]]]],[11,"next","rcore_fs::util","",6,[[],["option",4]]],[11,"clone","rcore_fs::vfs","",12,[[],["metadata",3]]],[11,"clone","","",13,[[],["timespec",3]]],[11,"clone","","",14,[[],["filetype",4]]],[11,"default","","",10,[[],["pollstatus",3]]],[11,"cmp","","",13,[[["timespec",3]],["ordering",4]]],[11,"eq","rcore_fs::dev","",19,[[["deverror",3]],["bool",15]]],[11,"eq","rcore_fs::util","",7,[[["blockrange",3]],["bool",15]]],[11,"ne","","",7,[[["blockrange",3]],["bool",15]]],[11,"eq","rcore_fs::vfs","",12,[[["metadata",3]],["bool",15]]],[11,"ne","","",12,[[["metadata",3]],["bool",15]]],[11,"eq","","",13,[[["timespec",3]],["bool",15]]],[11,"ne","","",13,[[["timespec",3]],["bool",15]]],[11,"eq","","",14,[[["filetype",4]],["bool",15]]],[11,"eq","","",16,[[["fserror",4]],["bool",15]]],[11,"partial_cmp","","",13,[[["timespec",3]],[["option",4],["ordering",4]]]],[11,"deref","rcore_fs::dirty","Read the value",4,[[]]],[11,"deref_mut","","Writable value return, sets the dirty flag",4,[[]]],[11,"fmt","rcore_fs::dev","",19,[[["formatter",3]],["result",6]]],[11,"fmt","rcore_fs::dirty","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","rcore_fs::util","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rcore_fs::vfs","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"hash","","",13,[[]]]],"p":[[3,"BlockCache"],[8,"TimeProvider"],[8,"Device"],[8,"BlockDevice"],[3,"Dirty"],[3,"File"],[3,"BlockIter"],[3,"BlockRange"],[8,"INode"],[4,"IOCTLError"],[3,"PollStatus"],[3,"MMapArea"],[3,"Metadata"],[3,"Timespec"],[4,"FileType"],[3,"FsInfo"],[4,"FsError"],[8,"FileSystem"],[3,"StdTimeProvider"],[3,"DevError"]]},\
"rcore_fs_devfs":{"doc":"","i":[[0,"special","rcore_fs_devfs","Built-in special device files",null,null],[3,"NullINode","rcore_fs_devfs::special","",null,null],[3,"ZeroINode","","",null,null],[3,"DevFS","rcore_fs_devfs","Device file system",null,null],[11,"new","","",0,[[],["arc",3]]],[11,"add","","",0,[[["arc",3],["inode",8],["str",15]],["result",6]]],[11,"remove","","",0,[[["str",15]],["result",6]]],[11,"borrow","rcore_fs_devfs::special","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","rcore_fs_devfs","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","rcore_fs_devfs::special","",1,[[],["nullinode",3]]],[11,"default","","",2,[[],["zeroinode",3]]],[11,"read_at","","",1,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",1,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",1,[[],[["pollstatus",3],["result",6]]]],[11,"metadata","","",1,[[],[["result",6],["metadata",3]]]],[11,"set_metadata","","",1,[[["metadata",3]],["result",6]]],[11,"sync_all","","",1,[[],["result",6]]],[11,"sync_data","","",1,[[],["result",6]]],[11,"resize","","",1,[[["usize",15]],["result",6]]],[11,"create","","",1,[[["u32",15],["filetype",4],["str",15]],[["result",6],["arc",3]]]],[11,"unlink","","",1,[[["str",15]],["result",6]]],[11,"link","","",1,[[["arc",3],["str",15]],["result",6]]],[11,"move_","","",1,[[["arc",3],["str",15]],["result",6]]],[11,"find","","",1,[[["str",15]],[["result",6],["arc",3]]]],[11,"get_entry","","",1,[[["usize",15]],[["result",6],["string",3]]]],[11,"io_control","","",1,[[["u32",15],["usize",15]],[["usize",15],["result",6]]]],[11,"mmap","","",1,[[["mmaparea",3]],["result",6]]],[11,"fs","","",1,[[],[["filesystem",8],["arc",3]]]],[11,"as_any_ref","","",1,[[],["any",8]]],[11,"read_at","","",2,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",2,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",2,[[],[["pollstatus",3],["result",6]]]],[11,"metadata","","",2,[[],[["result",6],["metadata",3]]]],[11,"set_metadata","","",2,[[["metadata",3]],["result",6]]],[11,"sync_all","","",2,[[],["result",6]]],[11,"sync_data","","",2,[[],["result",6]]],[11,"resize","","",2,[[["usize",15]],["result",6]]],[11,"create","","",2,[[["u32",15],["filetype",4],["str",15]],[["result",6],["arc",3]]]],[11,"unlink","","",2,[[["str",15]],["result",6]]],[11,"link","","",2,[[["arc",3],["str",15]],["result",6]]],[11,"move_","","",2,[[["arc",3],["str",15]],["result",6]]],[11,"find","","",2,[[["str",15]],[["result",6],["arc",3]]]],[11,"get_entry","","",2,[[["usize",15]],[["result",6],["string",3]]]],[11,"io_control","","",2,[[["u32",15],["usize",15]],[["usize",15],["result",6]]]],[11,"mmap","","",2,[[["mmaparea",3]],["result",6]]],[11,"fs","","",2,[[],[["filesystem",8],["arc",3]]]],[11,"as_any_ref","","",2,[[],["any",8]]],[11,"sync","rcore_fs_devfs","",0,[[],["result",6]]],[11,"root_inode","","",0,[[],[["arc",3],["inode",8]]]],[11,"info","","",0,[[],["fsinfo",3]]]],"p":[[3,"DevFS"],[3,"NullINode"],[3,"ZeroINode"]]},\
"rcore_fs_hostfs":{"doc":"","i":[[3,"HostFS","rcore_fs_hostfs","File system at host",null,null],[3,"HNode","","INode for <code>HostFS</code>",null,null],[11,"new","","Create a new <code>HostFS</code> from host <code>path</code>",0,[[],[["hostfs",3],["arc",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"read_at","","",1,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",1,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",1,[[],[["pollstatus",3],["result",6]]]],[11,"metadata","","",1,[[],[["metadata",3],["result",6]]]],[11,"set_metadata","","",1,[[["metadata",3]],["result",6]]],[11,"sync_all","","",1,[[],["result",6]]],[11,"sync_data","","",1,[[],["result",6]]],[11,"resize","","",1,[[["usize",15]],["result",6]]],[11,"create","","",1,[[["u32",15],["filetype",4],["str",15]],[["arc",3],["result",6]]]],[11,"link","","",1,[[["arc",3],["str",15]],["result",6]]],[11,"unlink","","",1,[[["str",15]],["result",6]]],[11,"move_","","",1,[[["arc",3],["str",15]],["result",6]]],[11,"find","","",1,[[["str",15]],[["arc",3],["result",6]]]],[11,"get_entry","","",1,[[["usize",15]],[["string",3],["result",6]]]],[11,"io_control","","",1,[[["u32",15],["usize",15]],[["usize",15],["result",6]]]],[11,"mmap","","",1,[[["mmaparea",3]],["result",6]]],[11,"fs","","",1,[[],[["arc",3],["filesystem",8]]]],[11,"as_any_ref","","",1,[[],["any",8]]],[11,"sync","","",0,[[],["result",6]]],[11,"root_inode","","",0,[[],[["inode",8],["arc",3]]]],[11,"info","","",0,[[],["fsinfo",3]]]],"p":[[3,"HostFS"],[3,"HNode"]]},\
"rcore_fs_mountfs":{"doc":"","i":[[3,"MountFS","rcore_fs_mountfs","The filesystem on which all the other filesystems are …",null,null],[3,"MNode","","INode for <code>MountFS</code>",null,null],[12,"inode","","The inner INode",0,null],[12,"vfs","","Associated <code>MountFS</code>",0,null],[11,"new","","Create a <code>MountFS</code> wrapper for file system <code>fs</code>",1,[[["filesystem",8],["arc",3]],["arc",3]]],[11,"root_inode","","Strong type version of <code>root_inode</code>",1,[[],[["arc",3],["mnode",3]]]],[11,"mount","","Mount file system <code>fs</code> at this INode",0,[[["filesystem",8],["arc",3]],[["arc",3],["result",6]]]],[11,"create","","Strong type version of <code>create()</code>",0,[[["u32",15],["filetype",4],["str",15]],[["arc",3],["result",6]]]],[11,"find","","Strong type version of <code>find()</code>",0,[[["bool",15],["str",15]],[["arc",3],["result",6]]]],[11,"find_name_by_child","","If <code>child</code> is a child of <code>self</code>, return its name.",0,[[["arc",3]],[["result",6],["string",3]]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"read_at","","",0,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",0,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",0,[[],[["result",6],["pollstatus",3]]]],[11,"metadata","","",0,[[],[["result",6],["metadata",3]]]],[11,"set_metadata","","",0,[[["metadata",3]],["result",6]]],[11,"sync_all","","",0,[[],["result",6]]],[11,"sync_data","","",0,[[],["result",6]]],[11,"resize","","",0,[[["usize",15]],["result",6]]],[11,"create","","",0,[[["u32",15],["filetype",4],["str",15]],[["arc",3],["result",6]]]],[11,"link","","",0,[[["arc",3],["str",15]],["result",6]]],[11,"unlink","","",0,[[["str",15]],["result",6]]],[11,"move_","","",0,[[["arc",3],["str",15]],["result",6]]],[11,"find","","",0,[[["str",15]],[["arc",3],["result",6]]]],[11,"get_entry","","",0,[[["usize",15]],[["result",6],["string",3]]]],[11,"get_entry_with_metadata","","",0,[[["usize",15]],["result",6]]],[11,"io_control","","",0,[[["u32",15],["usize",15]],[["usize",15],["result",6]]]],[11,"mmap","","",0,[[["mmaparea",3]],["result",6]]],[11,"fs","","",0,[[],[["filesystem",8],["arc",3]]]],[11,"as_any_ref","","",0,[[],["any",8]]],[11,"sync","","",1,[[],["result",6]]],[11,"root_inode","","",1,[[],[["arc",3],["inode",8]]]],[11,"info","","",1,[[],["fsinfo",3]]]],"p":[[3,"MNode"],[3,"MountFS"]]},\
"rcore_fs_ramfs":{"doc":"","i":[[3,"RamFS","rcore_fs_ramfs","",null,null],[11,"new","","",0,[[],["arc",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"sync","","",0,[[],["result",6]]],[11,"root_inode","","",0,[[],[["inode",8],["arc",3]]]],[11,"info","","",0,[[],["fsinfo",3]]]],"p":[[3,"RamFS"]]},\
"rcore_fs_sfs":{"doc":"","i":[[3,"SuperBlock","rcore_fs_sfs","On-disk superblock",null,null],[12,"magic","","magic number, should be SFS_MAGIC",0,null],[12,"blocks","","number of blocks in fs",0,null],[12,"unused_blocks","","number of unused blocks in fs",0,null],[12,"info","","information for sfs",0,null],[12,"freemap_blocks","","number of freemap blocks",0,null],[3,"DiskINode","","inode (on disk)",null,null],[12,"size","","size of the file (in bytes) undefined in dir (256 * …",1,null],[12,"type_","","one of SYS_TYPE_* above",1,null],[12,"nlinks","","number of hard links to this file Note: “.” and “..…",1,null],[12,"blocks","","number of blocks",1,null],[12,"direct","","direct blocks",1,null],[12,"indirect","","indirect blocks",1,null],[12,"db_indirect","","double indirect blocks",1,null],[12,"device_inode_id","","device inode id for char/block device (major, minor)",1,null],[12,"atime","","Time of last access",1,null],[12,"mtime","","Time of last modification",1,null],[12,"ctime","","Time of last change",1,null],[6,"DeviceINode","","",null,null],[3,"IndirectBlock","","",null,null],[12,"entries","","",2,null],[3,"DiskEntry","","file entry (on disk)",null,null],[12,"id","","inode number",3,null],[12,"name","","file name",3,null],[3,"Str256","","",null,null],[12,"0","","",4,null],[3,"Str32","","",null,null],[12,"0","","",5,null],[8,"AsBuf","","Convert structs to [u8] slice",null,null],[11,"as_buf","","",6,[[]]],[11,"as_buf_mut","","",6,[[]]],[6,"BlockId","","",null,null],[6,"INodeId","","",null,null],[17,"NODEVICE","","",null,null],[17,"MAGIC","","magic number for sfs",null,null],[17,"BLKSIZE","","size of block",null,null],[17,"BLKSIZE_LOG2","","log2( size of block )",null,null],[17,"NDIRECT","","number of direct blocks in inode",null,null],[17,"DEFAULT_INFO","","default sfs infomation string",null,null],[17,"MAX_INFO_LEN","","max length of infomation",null,null],[17,"MAX_FNAME_LEN","","max length of filename",null,null],[17,"MAX_FILE_SIZE","","max file size in theory (48KB + 4MB + 4GB) however, the …",null,null],[17,"BLKN_SUPER","","block the superblock lives in",null,null],[17,"BLKN_ROOT","","location of the root dir inode",null,null],[17,"BLKN_FREEMAP","","1st block of the freemap",null,null],[17,"BLKBITS","","number of bits in a block",null,null],[17,"ENTRY_SIZE","","size of one entry",null,null],[17,"BLK_NENTRY","","number of entries in a block",null,null],[17,"DIRENT_SIZE","","size of a dirent used in the size field",null,null],[17,"MAX_NBLOCK_DIRECT","","max number of blocks with direct blocks",null,null],[17,"MAX_NBLOCK_INDIRECT","","max number of blocks with indirect blocks",null,null],[17,"MAX_NBLOCK_DOUBLE_INDIRECT","","max number of blocks with double indirect blocks",null,null],[4,"FileType","","file types",null,null],[13,"Invalid","","",7,null],[13,"File","","",7,null],[13,"Dir","","",7,null],[13,"SymLink","","",7,null],[13,"CharDevice","","",7,null],[13,"BlockDevice","","",7,null],[3,"INodeImpl","","INode for SFS",null,null],[11,"link_inodeimpl","","",8,[[["arc",3],["str",15]],["result",6]]],[3,"SimpleFileSystem","","filesystem for sfs",null,null],[11,"open","","Load SFS from device",9,[[["arc",3],["device",8]],[["result",6],["arc",3]]]],[11,"create","","Create a new SFS on blank disk",9,[[["arc",3],["usize",15],["device",8]],[["result",6],["arc",3]]]],[11,"new_device_inode","","",9,[[["usize",15],["arc",3],["deviceinode",6]]]],[11,"new_inode_chardevice","","Create a new INode chardevice",9,[[["usize",15]],[["result",6],["arc",3]]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",7,[[["filetype",4]],["bool",15]]],[11,"drop","","Auto sync when drop",8,[[]]],[11,"drop","","Auto sync when drop",9,[[]]],[11,"from","","",4,[[["str",15]]]],[11,"from","","",5,[[["str",15]]]],[11,"as_ref","","",4,[[],["str",15]]],[11,"as_ref","","",5,[[],["str",15]]],[11,"clone","","",7,[[],["filetype",4]]],[11,"read_at","","",8,[[["usize",15]],[["usize",15],["result",6]]]],[11,"write_at","","",8,[[["usize",15]],[["usize",15],["result",6]]]],[11,"poll","","",8,[[],[["result",6],["pollstatus",3]]]],[11,"metadata","","the size returned here is logical size(entry num for …",8,[[],[["result",6],["metadata",3]]]],[11,"set_metadata","","",8,[[["metadata",3]],["result",6]]],[11,"sync_all","","",8,[[],["result",6]]],[11,"sync_data","","",8,[[],["result",6]]],[11,"resize","","",8,[[["usize",15]],["result",6]]],[11,"create2","","",8,[[["filetype",4],["u32",15],["usize",15],["str",15]],[["result",6],["arc",3]]]],[11,"link","","",8,[[["arc",3],["str",15]],["result",6]]],[11,"unlink","","",8,[[["str",15]],["result",6]]],[11,"move_","","",8,[[["arc",3],["str",15]],["result",6]]],[11,"find","","",8,[[["str",15]],[["result",6],["arc",3]]]],[11,"get_entry","","",8,[[["usize",15]],[["result",6],["string",3]]]],[11,"get_entry_with_metadata","","",8,[[["usize",15]],["result",6]]],[11,"io_control","","",8,[[["u32",15],["usize",15]],[["usize",15],["result",6]]]],[11,"mmap","","",8,[[["mmaparea",3]],["result",6]]],[11,"fs","","",8,[[],[["arc",3],["filesystem",8]]]],[11,"as_any_ref","","",8,[[],["any",8]]],[11,"sync","","Write back super block if dirty",9,[[],["result",6]]],[11,"root_inode","","",9,[[],[["inode",8],["arc",3]]]],[11,"info","","",9,[[],["fsinfo",3]]],[11,"check","","",0,[[],["bool",15]]],[11,"new_file","","",1,[[]]],[11,"new_symlink","","",1,[[]]],[11,"new_dir","","",1,[[]]],[11,"new_chardevice","","",1,[[["usize",15]]]],[11,"as_buf","","",6,[[]]],[11,"as_buf_mut","","",6,[[]]]],"p":[[3,"SuperBlock"],[3,"DiskINode"],[3,"IndirectBlock"],[3,"DiskEntry"],[3,"Str256"],[3,"Str32"],[8,"AsBuf"],[4,"FileType"],[3,"INodeImpl"],[3,"SimpleFileSystem"]]},\
"regex":{"doc":"This crate provides a library for parsing, compiling, and …","i":[[0,"bytes","regex","Match regular expressions on arbitrary bytes.",null,null],[3,"RegexBuilder","regex::bytes","A configurable builder for a regular expression.",null,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Regex","","A compiled regular expression for matching arbitrary …",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a …",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture …",null,null],[3,"Split","","Yields all substrings delimited by a regular expression …",null,null],[3,"SplitN","","Yields at most <code>N</code> substrings delimited by a regular …",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw …",null,null],[3,"Captures","","Captures represents a group of captured byte strings for …",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the …",null,null],[8,"Replacer","","Replacer describes types that can be used to replace …",null,null],[10,"replace_append","","Appends text to <code>dst</code> to replace the current match.",0,[[["vec",3],["captures",3]]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",0,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.",0,[[],["replacerref",3]]],[3,"ReplacerRef","","By-reference adaptor for a <code>Replacer</code>",null,null],[3,"NoExpand","","<code>NoExpand</code> indicates literal byte string replacement.",null,null],[12,"0","","",1,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions …",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex …",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex …",null,null],[11,"new","","Create a new regular expression builder with the given …",2,[[["str",15]],["regexbuilder",3]]],[11,"build","","Consume the builder and compile the regular expression.",2,[[],[["result",4],["regex",3],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (<code>i</code>) flag.",2,[[["bool",15]],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (<code>m</code>) flag.",2,[[["bool",15]],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …",2,[[["bool",15]],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (<code>U</code>) flag.",2,[[["bool",15]],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (<code>x</code>) flag.",2,[[["bool",15]],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (<code>u</code>) flag.",2,[[["bool",15]],["regexbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",2,[[["bool",15]],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular …",2,[[["usize",15]],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",2,[[["usize",15]],["regexbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",2,[[["u32",15]],["regexbuilder",3]]],[11,"new","","Create a new regular expression builder with the given …",3,[[],["regexsetbuilder",3]]],[11,"build","","Consume the builder and compile the regular expressions …",3,[[],[["result",4],["regexset",3],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (<code>i</code>) flag.",3,[[["bool",15]],["regexsetbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (<code>m</code>) flag.",3,[[["bool",15]],["regexsetbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …",3,[[["bool",15]],["regexsetbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (<code>U</code>) flag.",3,[[["bool",15]],["regexsetbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (<code>x</code>) flag.",3,[[["bool",15]],["regexsetbuilder",3]]],[11,"unicode","","Set the value for the Unicode (<code>u</code>) flag.",3,[[["bool",15]],["regexsetbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",3,[[["bool",15]],["regexsetbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular …",3,[[["usize",15]],["regexsetbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",3,[[["usize",15]],["regexsetbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",3,[[["u32",15]],["regexsetbuilder",3]]],[11,"start","","Returns the starting byte offset of the match in the …",4,[[],["usize",15]]],[11,"end","","Returns the ending byte offset of the match in the …",4,[[],["usize",15]]],[11,"range","","Returns the range over the starting and ending byte …",4,[[],[["usize",15],["range",3]]]],[11,"as_bytes","","Returns the matched text.",4,[[]]],[11,"new","","Compiles a regular expression. Once compiled, it can be …",5,[[["str",15]],[["result",4],["regex",3],["error",4]]]],[11,"is_match","","Returns true if and only if there is a match for the …",5,[[],["bool",15]]],[11,"find","","Returns the start and end byte range of the …",5,[[],[["match",3],["option",4]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping …",5,[[],["matches",3]]],[11,"captures","","Returns the capture groups corresponding to the …",5,[[],[["option",4],["captures",3]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture …",5,[[],["capturematches",3]]],[11,"split","","Returns an iterator of substrings of <code>text</code> delimited by a …",5,[[],["split",3]]],[11,"splitn","","Returns an iterator of at most <code>limit</code> substrings of <code>text</code> …",5,[[["usize",15]],["splitn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement …",5,[[["replacer",8]],["cow",4]]],[11,"replace_all","","Replaces all non-overlapping matches in <code>text</code> with the …",5,[[["replacer",8]],["cow",4]]],[11,"replacen","","Replaces at most <code>limit</code> non-overlapping matches in <code>text</code> …",5,[[["usize",15],["replacer",8]],["cow",4]]],[11,"shortest_match","","Returns the end location of a match in the text given.",5,[[],[["usize",15],["option",4]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search …",5,[[["usize",15]],[["usize",15],["option",4]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at …",5,[[["usize",15]],["bool",15]]],[11,"find_at","","Returns the same as find, but starts the search at the …",5,[[["usize",15]],[["match",3],["option",4]]]],[11,"captures_read","","This is like <code>captures</code>, but uses <code>CaptureLocations</code> instead …",5,[[["capturelocations",3]],[["match",3],["option",4]]]],[11,"captures_read_at","","Returns the same as <code>captures_read</code>, but starts the search …",5,[[["usize",15],["capturelocations",3]],[["match",3],["option",4]]]],[11,"as_str","","Returns the original string of this regex.",5,[[],["str",15]]],[11,"capture_names","","Returns an iterator over the capture names.",5,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",5,[[],["usize",15]]],[11,"capture_locations","","Returns an empty set of capture locations that can be …",5,[[],["capturelocations",3]]],[11,"get","","Returns the start and end positions of the Nth capture …",6,[[["usize",15]],["option",4]]],[11,"len","","Returns the total number of capturing groups.",6,[[],["usize",15]]],[11,"get","","Returns the match associated with the capture group at …",7,[[["usize",15]],[["match",3],["option",4]]]],[11,"name","","Returns the match for the capture group named <code>name</code>. If …",7,[[["str",15]],[["match",3],["option",4]]]],[11,"iter","","An iterator that yields all capturing matches in the …",7,[[],["subcapturematches",3]]],[11,"expand","","Expands all instances of <code>$name</code> in <code>replacement</code> to the …",7,[[["vec",3]]]],[11,"len","","Returns the number of captured groups.",7,[[],["usize",15]]],[11,"no_expansion","","Return a fixed unchanging replacement byte string.",0,[[],[["option",4],["cow",4]]]],[11,"by_ref","","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.",0,[[],["replacerref",3]]],[11,"new","","Create a new regex set with the given regular expressions.",8,[[],[["result",4],["regexset",3],["error",4]]]],[11,"empty","","Create a new empty regex set.",8,[[],["regexset",3]]],[11,"is_match","","Returns true if and only if one of the regexes in this …",8,[[],["bool",15]]],[11,"matches","","Returns the set of regular expressions that match in the …",8,[[],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this …",8,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if this set contains no regular expressions.",8,[[],["bool",15]]],[11,"patterns","","Returns the patterns that this set will match on.",8,[[]]],[11,"matched_any","","Whether this set contains any matches.",9,[[],["bool",15]]],[11,"matched","","Whether the regex at the given index matched.",9,[[["usize",15]],["bool",15]]],[11,"len","","The total number of regexes in the set that created these …",9,[[],["usize",15]]],[11,"iter","","Returns an iterator over indexes in the regex that …",9,[[],["setmatchesiter",3]]],[4,"Error","regex","An error that occurred during parsing or compiling a …",null,null],[13,"Syntax","","A syntax error.",10,null],[13,"CompiledTooBig","","The compiled program exceeded the set size limit. The …",10,null],[3,"RegexSetBuilder","","A configurable builder for a set of regular expressions.",null,null],[3,"RegexBuilder","","A configurable builder for a regular expression.",null,null],[3,"RegexSet","","Match multiple (possibly overlapping) regular expressions …",null,null],[3,"SetMatches","","A set of matches returned by a regex set.",null,null],[3,"SetMatchesIntoIter","","An owned iterator over the set of matches from a regex …",null,null],[3,"SetMatchesIter","","A borrowed iterator over the set of matches from a regex …",null,null],[5,"escape","","Escapes all regular expression meta characters in <code>text</code>.",null,[[["str",15]],["string",3]]],[3,"CaptureLocations","","CaptureLocations is a low level representation of the raw …",null,null],[3,"CaptureMatches","","An iterator that yields all non-overlapping capture …",null,null],[3,"CaptureNames","","An iterator over the names of all possible captures.",null,null],[3,"Captures","","Captures represents a group of captured strings for a …",null,null],[3,"Match","","Match represents a single match of a regex in a haystack.",null,null],[3,"Matches","","An iterator over all non-overlapping matches for a …",null,null],[3,"NoExpand","","<code>NoExpand</code> indicates literal string replacement.",null,null],[12,"0","","",11,null],[3,"Regex","","A compiled regular expression for matching Unicode …",null,null],[8,"Replacer","","Replacer describes types that can be used to replace …",null,null],[10,"replace_append","","Appends text to <code>dst</code> to replace the current match.",12,[[["captures",3],["string",3]]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",12,[[],[["cow",4],["option",4]]]],[11,"by_ref","","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.",12,[[],["replacerref",3]]],[3,"ReplacerRef","","By-reference adaptor for a <code>Replacer</code>",null,null],[3,"Split","","Yields all substrings delimited by a regular expression …",null,null],[3,"SplitN","","Yields at most <code>N</code> substrings delimited by a regular …",null,null],[3,"SubCaptureMatches","","An iterator that yields all capturing matches in the …",null,null],[11,"from","regex::bytes","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","regex","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into_iter","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"replace_append","regex::bytes","",19,[[["vec",3],["captures",3]]]],[11,"no_expansion","","",19,[[],[["option",4],["cow",4]]]],[11,"replace_append","","",1,[[["vec",3],["captures",3]]]],[11,"no_expansion","","",1,[[],[["cow",4],["option",4]]]],[11,"replace_append","regex","",38,[[["captures",3],["string",3]]]],[11,"no_expansion","","",38,[[],[["cow",4],["option",4]]]],[11,"replace_append","","",11,[[["captures",3],["string",3]]]],[11,"no_expansion","","",11,[[],[["cow",4],["option",4]]]],[11,"next_back","","",26,[[],[["usize",15],["option",4]]]],[11,"next_back","","",27,[[],[["usize",15],["option",4]]]],[11,"next_back","regex::bytes","",20,[[],[["usize",15],["option",4]]]],[11,"next_back","","",21,[[],[["usize",15],["option",4]]]],[11,"into_iter","regex","",25,[[]]],[11,"into_iter","regex::bytes","",9,[[]]],[11,"next","","",13,[[],[["match",3],["option",4]]]],[11,"next","","",14,[[],[["option",4],["captures",3]]]],[11,"next","","",15,[[],["option",4]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"next","","",17,[[],[["option",4],["option",4]]]],[11,"size_hint","","",17,[[]]],[11,"count","","",17,[[],["usize",15]]],[11,"next","","",18,[[],[["option",4],["option",4]]]],[11,"next","regex","",26,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",26,[[]]],[11,"next","","",27,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",27,[[]]],[11,"next","regex::bytes","",20,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",21,[[]]],[11,"next","regex","",30,[[],[["option",4],["option",4]]]],[11,"size_hint","","",30,[[]]],[11,"count","","",30,[[],["usize",15]]],[11,"next","","",31,[[],[["option",4],["str",15]]]],[11,"next","","",32,[[],[["option",4],["str",15]]]],[11,"size_hint","","",32,[[]]],[11,"next","","",35,[[],[["option",4],["option",4]]]],[11,"next","","",36,[[],[["captures",3],["option",4]]]],[11,"next","","",37,[[],[["option",4],["match",3]]]],[11,"clone","","",10,[[],["error",4]]],[11,"clone","regex::bytes","",4,[[],["match",3]]],[11,"clone","","",5,[[],["regex",3]]],[11,"clone","","",17,[[],["capturenames",3]]],[11,"clone","","",6,[[],["capturelocations",3]]],[11,"clone","","",18,[[],["subcapturematches",3]]],[11,"clone","","",1,[[],["noexpand",3]]],[11,"clone","regex","",24,[[],["regexset",3]]],[11,"clone","","",25,[[],["setmatches",3]]],[11,"clone","","",27,[[],["setmatchesiter",3]]],[11,"clone","regex::bytes","",8,[[],["regexset",3]]],[11,"clone","","",9,[[],["setmatches",3]]],[11,"clone","","",21,[[],["setmatchesiter",3]]],[11,"clone","regex","",28,[[],["match",3]]],[11,"clone","","",29,[[],["regex",3]]],[11,"clone","","",30,[[],["capturenames",3]]],[11,"clone","","",33,[[],["capturelocations",3]]],[11,"clone","","",35,[[],["subcapturematches",3]]],[11,"clone","","",11,[[],["noexpand",3]]],[11,"eq","","",10,[[["error",4]],["bool",15]]],[11,"ne","","",10,[[["error",4]],["bool",15]]],[11,"eq","regex::bytes","",4,[[["match",3]],["bool",15]]],[11,"ne","","",4,[[["match",3]],["bool",15]]],[11,"eq","regex","",28,[[["match",3]],["bool",15]]],[11,"ne","","",28,[[["match",3]],["bool",15]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",2,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",22,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",3,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",23,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","Shows the original regular expression.",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","regex","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","Shows the original regular expression.",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","regex::bytes","Shows the original regular expression.",5,[[["formatter",3]],["result",6]]],[11,"fmt","regex","Shows the original regular expression.",29,[[["formatter",3]],["result",6]]],[11,"index","regex::bytes","",7,[[["usize",15]]]],[11,"index","","",7,[[["str",15]]]],[11,"index","regex","",34,[[["usize",15]],["str",15]]],[11,"index","","",34,[[["str",15]],["str",15]]],[11,"from_str","regex::bytes","Attempts to parse a string into a regular expression",5,[[["str",15]],[["result",4],["regex",3],["error",4]]]],[11,"from_str","regex","Attempts to parse a string into a regular expression",29,[[["str",15]],[["result",4],["regex",3],["error",4]]]],[11,"description","","",10,[[],["str",15]]],[11,"new","","Create a new regular expression builder with the given …",22,[[["str",15]],["regexbuilder",3]]],[11,"build","","Consume the builder and compile the regular expression.",22,[[],[["result",4],["regex",3],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (<code>i</code>) flag.",22,[[["bool",15]],["regexbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (<code>m</code>) flag.",22,[[["bool",15]],["regexbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …",22,[[["bool",15]],["regexbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (<code>U</code>) flag.",22,[[["bool",15]],["regexbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (<code>x</code>) flag.",22,[[["bool",15]],["regexbuilder",3]]],[11,"unicode","","Set the value for the Unicode (<code>u</code>) flag.",22,[[["bool",15]],["regexbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",22,[[["bool",15]],["regexbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular …",22,[[["usize",15]],["regexbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",22,[[["usize",15]],["regexbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",22,[[["u32",15]],["regexbuilder",3]]],[11,"new","","Create a new regular expression builder with the given …",23,[[],["regexsetbuilder",3]]],[11,"build","","Consume the builder and compile the regular expressions …",23,[[],[["result",4],["regexset",3],["error",4]]]],[11,"case_insensitive","","Set the value for the case insensitive (<code>i</code>) flag.",23,[[["bool",15]],["regexsetbuilder",3]]],[11,"multi_line","","Set the value for the multi-line matching (<code>m</code>) flag.",23,[[["bool",15]],["regexsetbuilder",3]]],[11,"dot_matches_new_line","","Set the value for the any character (<code>s</code>) flag, where in <code>.</code> …",23,[[["bool",15]],["regexsetbuilder",3]]],[11,"swap_greed","","Set the value for the greedy swap (<code>U</code>) flag.",23,[[["bool",15]],["regexsetbuilder",3]]],[11,"ignore_whitespace","","Set the value for the ignore whitespace (<code>x</code>) flag.",23,[[["bool",15]],["regexsetbuilder",3]]],[11,"unicode","","Set the value for the Unicode (<code>u</code>) flag.",23,[[["bool",15]],["regexsetbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",23,[[["bool",15]],["regexsetbuilder",3]]],[11,"size_limit","","Set the approximate size limit of the compiled regular …",23,[[["usize",15]],["regexsetbuilder",3]]],[11,"dfa_size_limit","","Set the approximate size of the cache used by the DFA.",23,[[["usize",15]],["regexsetbuilder",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",23,[[["u32",15]],["regexsetbuilder",3]]],[11,"new","","Create a new regex set with the given regular expressions.",24,[[],[["result",4],["regexset",3],["error",4]]]],[11,"empty","","Create a new empty regex set.",24,[[],["regexset",3]]],[11,"is_match","","Returns true if and only if one of the regexes in this …",24,[[["str",15]],["bool",15]]],[11,"matches","","Returns the set of regular expressions that match in the …",24,[[["str",15]],["setmatches",3]]],[11,"len","","Returns the total number of regular expressions in this …",24,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if this set contains no regular expressions.",24,[[],["bool",15]]],[11,"patterns","","Returns the patterns that this set will match on.",24,[[]]],[11,"matched_any","","Whether this set contains any matches.",25,[[],["bool",15]]],[11,"matched","","Whether the regex at the given index matched.",25,[[["usize",15]],["bool",15]]],[11,"len","","The total number of regexes in the set that created these …",25,[[],["usize",15]]],[11,"iter","","Returns an iterator over indexes in the regex that …",25,[[],["setmatchesiter",3]]],[11,"start","","Returns the starting byte offset of the match in the …",28,[[],["usize",15]]],[11,"end","","Returns the ending byte offset of the match in the …",28,[[],["usize",15]]],[11,"range","","Returns the range over the starting and ending byte …",28,[[],[["usize",15],["range",3]]]],[11,"as_str","","Returns the matched text.",28,[[],["str",15]]],[11,"new","","Compiles a regular expression. Once compiled, it can be …",29,[[["str",15]],[["result",4],["regex",3],["error",4]]]],[11,"is_match","","Returns true if and only if there is a match for the …",29,[[["str",15]],["bool",15]]],[11,"find","","Returns the start and end byte range of the …",29,[[["str",15]],[["option",4],["match",3]]]],[11,"find_iter","","Returns an iterator for each successive non-overlapping …",29,[[["str",15]],["matches",3]]],[11,"captures","","Returns the capture groups corresponding to the …",29,[[["str",15]],[["captures",3],["option",4]]]],[11,"captures_iter","","Returns an iterator over all the non-overlapping capture …",29,[[["str",15]],["capturematches",3]]],[11,"split","","Returns an iterator of substrings of <code>text</code> delimited by a …",29,[[["str",15]],["split",3]]],[11,"splitn","","Returns an iterator of at most <code>limit</code> substrings of <code>text</code> …",29,[[["usize",15],["str",15]],["splitn",3]]],[11,"replace","","Replaces the leftmost-first match with the replacement …",29,[[["replacer",8],["str",15]],[["cow",4],["str",15]]]],[11,"replace_all","","Replaces all non-overlapping matches in <code>text</code> with the …",29,[[["replacer",8],["str",15]],[["cow",4],["str",15]]]],[11,"replacen","","Replaces at most <code>limit</code> non-overlapping matches in <code>text</code> …",29,[[["usize",15],["replacer",8],["str",15]],[["cow",4],["str",15]]]],[11,"shortest_match","","Returns the end location of a match in the text given.",29,[[["str",15]],[["usize",15],["option",4]]]],[11,"shortest_match_at","","Returns the same as shortest_match, but starts the search …",29,[[["usize",15],["str",15]],[["usize",15],["option",4]]]],[11,"is_match_at","","Returns the same as is_match, but starts the search at …",29,[[["usize",15],["str",15]],["bool",15]]],[11,"find_at","","Returns the same as find, but starts the search at the …",29,[[["usize",15],["str",15]],[["option",4],["match",3]]]],[11,"captures_read","","This is like <code>captures</code>, but uses <code>CaptureLocations</code> instead …",29,[[["capturelocations",3],["str",15]],[["option",4],["match",3]]]],[11,"captures_read_at","","Returns the same as captures, but starts the search at …",29,[[["usize",15],["capturelocations",3],["str",15]],[["option",4],["match",3]]]],[11,"as_str","","Returns the original string of this regex.",29,[[],["str",15]]],[11,"capture_names","","Returns an iterator over the capture names.",29,[[],["capturenames",3]]],[11,"captures_len","","Returns the number of captures.",29,[[],["usize",15]]],[11,"capture_locations","","Returns an empty set of capture locations that can be …",29,[[],["capturelocations",3]]],[11,"get","","Returns the start and end positions of the Nth capture …",33,[[["usize",15]],["option",4]]],[11,"len","","Returns the total number of capturing groups.",33,[[],["usize",15]]],[11,"get","","Returns the match associated with the capture group at …",34,[[["usize",15]],[["option",4],["match",3]]]],[11,"name","","Returns the match for the capture group named <code>name</code>. If …",34,[[["str",15]],[["option",4],["match",3]]]],[11,"iter","","An iterator that yields all capturing matches in the …",34,[[],["subcapturematches",3]]],[11,"expand","","Expands all instances of <code>$name</code> in <code>replacement</code> to the …",34,[[["string",3],["str",15]]]],[11,"len","","Returns the number of captured groups.",34,[[],["usize",15]]],[11,"no_expansion","","Return a fixed unchanging replacement string.",12,[[],[["cow",4],["option",4]]]],[11,"by_ref","","Return a <code>Replacer</code> that borrows and wraps this <code>Replacer</code>.",12,[[],["replacerref",3]]]],"p":[[8,"Replacer"],[3,"NoExpand"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"Match"],[3,"Regex"],[3,"CaptureLocations"],[3,"Captures"],[3,"RegexSet"],[3,"SetMatches"],[4,"Error"],[3,"NoExpand"],[8,"Replacer"],[3,"Matches"],[3,"CaptureMatches"],[3,"Split"],[3,"SplitN"],[3,"CaptureNames"],[3,"SubCaptureMatches"],[3,"ReplacerRef"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"RegexBuilder"],[3,"RegexSetBuilder"],[3,"RegexSet"],[3,"SetMatches"],[3,"SetMatchesIntoIter"],[3,"SetMatchesIter"],[3,"Match"],[3,"Regex"],[3,"CaptureNames"],[3,"Split"],[3,"SplitN"],[3,"CaptureLocations"],[3,"Captures"],[3,"SubCaptureMatches"],[3,"CaptureMatches"],[3,"Matches"],[3,"ReplacerRef"]]},\
"regex_syntax":{"doc":"This crate provides a robust regular expression parser.","i":[[0,"ast","regex_syntax","Defines an abstract syntax for regular expressions.",null,null],[0,"parse","regex_syntax::ast","This module provides a regular expression parser.",null,null],[3,"ParserBuilder","regex_syntax::ast::parse","A builder for a regular expression parser.",null,null],[11,"new","","Create a new parser builder with a default configuration.",0,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given …",0,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",0,[[["u32",15]],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",0,[[["bool",15]],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",0,[[["bool",15]],["parserbuilder",3]]],[3,"Parser","","A regular expression parser.",null,null],[11,"new","","Create a new parser with a default configuration.",1,[[],["parser",3]]],[11,"parse","","Parse the regular expression into an abstract syntax tree.",1,[[["str",15]],[["ast",4],["error",3],["result",4]]]],[11,"parse_with_comments","","Parse the regular expression and return an abstract …",1,[[["str",15]],[["withcomments",3],["result",4],["error",3]]]],[0,"print","regex_syntax::ast","This module provides a regular expression printer for <code>Ast</code>.",null,null],[3,"Printer","regex_syntax::ast::print","A printer for a regular expression abstract syntax tree.",null,null],[11,"new","","Create a new printer.",2,[[],["printer",3]]],[11,"print","","Print the given <code>Ast</code> to the given writer. The writer must …",2,[[["write",8],["ast",4]],["result",6]]],[5,"visit","regex_syntax::ast","Executes an implementation of <code>Visitor</code> in constant stack …",null,[[["visitor",8],["ast",4]],["result",4]]],[8,"Visitor","","A trait for visiting an abstract syntax tree (AST) in …",null,null],[16,"Output","","The result of visiting an AST.",3,null],[16,"Err","","An error that visiting an AST might return.",3,null],[10,"finish","","All implementors of <code>Visitor</code> must provide a <code>finish</code> method, …",3,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the …",3,[[]]],[11,"visit_pre","","This method is called on an <code>Ast</code> before descending into …",3,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an <code>Ast</code> after descending all of …",3,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an …",3,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every <code>ClassSetItem</code> before …",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every <code>ClassSetItem</code> after …",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every <code>ClassSetBinaryOp</code> before …",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every <code>ClassSetBinaryOp</code> after …",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right …",3,[[["classsetbinaryop",3]],["result",4]]],[3,"Error","","An error that occurred while parsing a regular expression …",null,null],[11,"kind","","Return the type of this error.",4,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",4,[[],["str",15]]],[11,"span","","Return the span at which this error occurred.",4,[[],["span",3]]],[11,"auxiliary_span","","Return an auxiliary span. This span exists only for some …",4,[[],[["option",4],["span",3]]]],[4,"ErrorKind","","The type of an error that occurred while building an AST.",null,null],[13,"CaptureLimitExceeded","","The capturing group limit was exceeded.",5,null],[13,"ClassEscapeInvalid","","An invalid escape sequence was found in a character class …",5,null],[13,"ClassRangeInvalid","","An invalid character class range was found. An invalid …",5,null],[13,"ClassRangeLiteral","","An invalid range boundary was found in a character class. …",5,null],[13,"ClassUnclosed","","An opening <code>[</code> was found with no corresponding closing <code>]</code>.",5,null],[13,"DecimalEmpty","","Note that this error variant is no longer used. Namely, a …",5,null],[13,"DecimalInvalid","","An invalid decimal number was given where one was …",5,null],[13,"EscapeHexEmpty","","A bracketed hex literal was empty.",5,null],[13,"EscapeHexInvalid","","A bracketed hex literal did not correspond to a Unicode …",5,null],[13,"EscapeHexInvalidDigit","","An invalid hexadecimal digit was found.",5,null],[13,"EscapeUnexpectedEof","","EOF was found before an escape sequence was completed.",5,null],[13,"EscapeUnrecognized","","An unrecognized escape sequence.",5,null],[13,"FlagDanglingNegation","","A dangling negation was used when setting flags, e.g., <code>i-</code>.",5,null],[13,"FlagDuplicate","","A flag was used twice, e.g., <code>i-i</code>.",5,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original flag. The error position …",6,null],[13,"FlagRepeatedNegation","regex_syntax::ast","The negation operator was used twice, e.g., <code>-i-s</code>.",5,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the original negation operator. The error …",7,null],[13,"FlagUnexpectedEof","regex_syntax::ast","Expected a flag but got EOF, e.g., <code>(?</code>.",5,null],[13,"FlagUnrecognized","","Unrecognized flag, e.g., <code>a</code>.",5,null],[13,"GroupNameDuplicate","","A duplicate capture name was found.",5,null],[12,"original","regex_syntax::ast::ErrorKind","The position of the initial occurrence of the capture …",8,null],[13,"GroupNameEmpty","regex_syntax::ast","A capture group name is empty, e.g., <code>(?P<>abc)</code>.",5,null],[13,"GroupNameInvalid","","An invalid character was seen for a capture group name. …",5,null],[13,"GroupNameUnexpectedEof","","A closing <code>></code> could not be found for a capture group name.",5,null],[13,"GroupUnclosed","","An unclosed group, e.g., <code>(ab</code>.",5,null],[13,"GroupUnopened","","An unopened group, e.g., <code>ab)</code>.",5,null],[13,"NestLimitExceeded","","The nest limit was exceeded. The limit stored here is the …",5,null],[13,"RepetitionCountInvalid","","The range provided in a counted repetition operator is …",5,null],[13,"RepetitionCountDecimalEmpty","","An opening <code>{</code> was not followed by a valid decimal value. …",5,null],[13,"RepetitionCountUnclosed","","An opening <code>{</code> was found with no corresponding closing <code>}</code>.",5,null],[13,"RepetitionMissing","","A repetition operator was applied to a missing …",5,null],[13,"UnicodeClassInvalid","","The Unicode class is not valid. This typically occurs …",5,null],[13,"UnsupportedBackreference","","When octal support is disabled, this error is produced …",5,null],[13,"UnsupportedLookAround","","When syntax similar to PCRE’s look-around is used, this …",5,null],[3,"Span","","Span represents the position information of a single AST …",null,null],[12,"start","","The start byte offset.",9,null],[12,"end","","The end byte offset.",9,null],[3,"Position","","A single position in a regular expression.",null,null],[12,"offset","","The absolute offset of this position, starting at <code>0</code> from …",10,null],[12,"line","","The line number, starting at <code>1</code>.",10,null],[12,"column","","The approximate column number, starting at <code>1</code>.",10,null],[11,"new","","Create a new span with the given positions.",9,[[["position",3]],["span",3]]],[11,"splat","","Create a new span using the given position as the start …",9,[[["position",3]],["span",3]]],[11,"with_start","","Create a new span by replacing the starting the position …",9,[[["position",3]],["span",3]]],[11,"with_end","","Create a new span by replacing the ending the position …",9,[[["position",3]],["span",3]]],[11,"is_one_line","","Returns true if and only if this span occurs on a single …",9,[[],["bool",15]]],[11,"is_empty","","Returns true if and only if this span is empty. That is, …",9,[[],["bool",15]]],[11,"new","","Create a new position with the given information.",10,[[["usize",15]],["position",3]]],[3,"WithComments","","An abstract syntax tree for a singular expression along …",null,null],[12,"ast","","The actual ast.",11,null],[12,"comments","","All comments found in the original regular expression.",11,null],[3,"Comment","","A comment from a regular expression with an associated …",null,null],[12,"span","","The span of this comment, including the beginning <code>#</code> and …",12,null],[12,"comment","","The comment text, starting with the first character …",12,null],[4,"Ast","","An abstract syntax tree for a single regular expression.",null,null],[13,"Empty","","An empty regex that matches everything.",13,null],[13,"Flags","","A set of flags, e.g., <code>(?is)</code>.",13,null],[13,"Literal","","A single character literal, which includes escape …",13,null],[13,"Dot","","The “any character” class.",13,null],[13,"Assertion","","A single zero-width assertion.",13,null],[13,"Class","","A single character class. This includes all forms of …",13,null],[13,"Repetition","","A repetition operator applied to an arbitrary regular …",13,null],[13,"Group","","A grouped regular expression.",13,null],[13,"Alternation","","An alternation of regular expressions.",13,null],[13,"Concat","","A concatenation of regular expressions.",13,null],[11,"span","","Return the span of this abstract syntax tree.",13,[[],["span",3]]],[11,"is_empty","","Return true if and only if this Ast is empty.",13,[[],["bool",15]]],[3,"Alternation","","An alternation of regular expressions.",null,null],[12,"span","","The span of this alternation.",14,null],[12,"asts","","The alternate regular expressions.",14,null],[11,"into_ast","","Return this alternation as an AST.",14,[[],["ast",4]]],[3,"Concat","","A concatenation of regular expressions.",null,null],[12,"span","","The span of this concatenation.",15,null],[12,"asts","","The concatenation regular expressions.",15,null],[11,"into_ast","","Return this concatenation as an AST.",15,[[],["ast",4]]],[3,"Literal","","A single literal expression.",null,null],[12,"span","","The span of this literal.",16,null],[12,"kind","","The kind of this literal.",16,null],[12,"c","","The Unicode scalar value corresponding to this literal.",16,null],[11,"byte","","If this literal was written as a <code>\\\\x</code> hex escape, then this …",16,[[],[["option",4],["u8",15]]]],[4,"LiteralKind","","The kind of a single literal expression.",null,null],[13,"Verbatim","","The literal is written verbatim, e.g., <code>a</code> or <code>☃</code>.",17,null],[13,"Punctuation","","The literal is written as an escape because it is …",17,null],[13,"Octal","","The literal is written as an octal escape, e.g., <code>\\\\141</code>.",17,null],[13,"HexFixed","","The literal is written as a hex code with a fixed number …",17,null],[13,"HexBrace","","The literal is written as a hex code with a bracketed …",17,null],[13,"Special","","The literal is written as a specially recognized escape, …",17,null],[4,"SpecialLiteralKind","","The type of a special literal.",null,null],[13,"Bell","","Bell, spelled <code>\\\\a</code> (<code>\\\\x07</code>).",18,null],[13,"FormFeed","","Form feed, spelled <code>\\\\f</code> (<code>\\\\x0C</code>).",18,null],[13,"Tab","","Tab, spelled <code>\\\\t</code> (<code>\\\\x09</code>).",18,null],[13,"LineFeed","","Line feed, spelled <code>\\\\n</code> (<code>\\\\x0A</code>).",18,null],[13,"CarriageReturn","","Carriage return, spelled <code>\\\\r</code> (<code>\\\\x0D</code>).",18,null],[13,"VerticalTab","","Vertical tab, spelled <code>\\\\v</code> (<code>\\\\x0B</code>).",18,null],[13,"Space","","Space, spelled <code>\\\\ </code> (<code>\\\\x20</code>). Note that this can only appear …",18,null],[4,"HexLiteralKind","","The type of a Unicode hex literal.",null,null],[13,"X","","A <code>\\\\x</code> prefix. When used without brackets, this form is …",19,null],[13,"UnicodeShort","","A <code>\\\\u</code> prefix. When used without brackets, this form is …",19,null],[13,"UnicodeLong","","A <code>\\\\U</code> prefix. When used without brackets, this form is …",19,null],[11,"digits","","The number of digits that must be used with this literal …",19,[[],["u32",15]]],[4,"Class","","A single character class expression.",null,null],[13,"Unicode","","A Unicode character class, e.g., <code>\\\\pL</code> or <code>\\\\p{Greek}</code>.",20,null],[13,"Perl","","A perl character class, e.g., <code>\\\\d</code> or <code>\\\\W</code>.",20,null],[13,"Bracketed","","A bracketed character class set, which may contain zero …",20,null],[11,"span","","Return the span of this character class.",20,[[],["span",3]]],[3,"ClassPerl","","A Perl character class.",null,null],[12,"span","","The span of this class.",21,null],[12,"kind","","The kind of Perl class.",21,null],[12,"negated","","Whether the class is negated or not. e.g., <code>\\\\d</code> is not …",21,null],[4,"ClassPerlKind","","The available Perl character classes.",null,null],[13,"Digit","","Decimal numbers.",22,null],[13,"Space","","Whitespace.",22,null],[13,"Word","","Word characters.",22,null],[3,"ClassAscii","","An ASCII character class.",null,null],[12,"span","","The span of this class.",23,null],[12,"kind","","The kind of ASCII class.",23,null],[12,"negated","","Whether the class is negated or not. e.g., <code>[[:alpha:]]</code> is …",23,null],[4,"ClassAsciiKind","","The available ASCII character classes.",null,null],[13,"Alnum","","<code>[0-9A-Za-z]</code>",24,null],[13,"Alpha","","<code>[A-Za-z]</code>",24,null],[13,"Ascii","","<code>[\\\\x00-\\\\x7F]</code>",24,null],[13,"Blank","","<code>[ \\\\t]</code>",24,null],[13,"Cntrl","","<code>[\\\\x00-\\\\x1F\\\\x7F]</code>",24,null],[13,"Digit","","<code>[0-9]</code>",24,null],[13,"Graph","","<code>[!-~]</code>",24,null],[13,"Lower","","<code>[a-z]</code>",24,null],[13,"Print","","<code>[ -~]</code>",24,null],[13,"Punct","","<code>[!-/:-@\\\\[-</code>{-~]`",24,null],[13,"Space","","<code>[\\\\t\\\\n\\\\v\\\\f\\\\r ]</code>",24,null],[13,"Upper","","<code>[A-Z]</code>",24,null],[13,"Word","","<code>[0-9A-Za-z_]</code>",24,null],[13,"Xdigit","","<code>[0-9A-Fa-f]</code>",24,null],[11,"from_name","","Return the corresponding ClassAsciiKind variant for the …",24,[[["str",15]],[["option",4],["classasciikind",4]]]],[3,"ClassUnicode","","A Unicode character class.",null,null],[12,"span","","The span of this class.",25,null],[12,"negated","","Whether this class is negated or not.",25,null],[12,"kind","","The kind of Unicode class.",25,null],[11,"is_negated","","Returns true if this class has been negated.",25,[[],["bool",15]]],[4,"ClassUnicodeKind","","The available forms of Unicode character classes.",null,null],[13,"OneLetter","","A one letter abbreviated class, e.g., <code>\\\\pN</code>.",26,null],[13,"Named","","A binary property, general category or script. The string …",26,null],[13,"NamedValue","","A property name and an associated value.",26,null],[12,"op","regex_syntax::ast::ClassUnicodeKind","The type of Unicode op used to associate <code>name</code> with <code>value</code>.",27,null],[12,"name","","The property name (which may be empty).",27,null],[12,"value","","The property value (which may be empty).",27,null],[4,"ClassUnicodeOpKind","regex_syntax::ast","The type of op used in a Unicode character class.",null,null],[13,"Equal","","A property set to a specific value, e.g., <code>\\\\p{scx=Katakana}</code>…",28,null],[13,"Colon","","A property set to a specific value using a colon, e.g., …",28,null],[13,"NotEqual","","A property that isn’t a particular value, e.g., …",28,null],[11,"is_equal","","Whether the op is an equality op or not.",28,[[],["bool",15]]],[3,"ClassBracketed","","A bracketed character class, e.g., <code>[a-z0-9]</code>.",null,null],[12,"span","","The span of this class.",29,null],[12,"negated","","Whether this class is negated or not. e.g., <code>[a]</code> is not …",29,null],[12,"kind","","The type of this set. A set is either a normal union of …",29,null],[4,"ClassSet","","A character class set.",null,null],[13,"Item","","An item, which can be a single literal, range, nested …",30,null],[13,"BinaryOp","","A single binary operation (i.e., &&, – or ~~).",30,null],[11,"union","","Build a set from a union.",30,[[["classsetunion",3]],["classset",4]]],[11,"span","","Return the span of this character class set.",30,[[],["span",3]]],[4,"ClassSetItem","","A single component of a character class set.",null,null],[13,"Empty","","An empty item.",31,null],[13,"Literal","","A single literal.",31,null],[13,"Range","","A range between two literals.",31,null],[13,"Ascii","","An ASCII character class, e.g., <code>[:alnum:]</code> or <code>[:punct:]</code>.",31,null],[13,"Unicode","","A Unicode character class, e.g., <code>\\\\pL</code> or <code>\\\\p{Greek}</code>.",31,null],[13,"Perl","","A perl character class, e.g., <code>\\\\d</code> or <code>\\\\W</code>.",31,null],[13,"Bracketed","","A bracketed character class set, which may contain zero …",31,null],[13,"Union","","A union of items.",31,null],[11,"span","","Return the span of this character class set item.",31,[[],["span",3]]],[3,"ClassSetRange","","A single character class range in a set.",null,null],[12,"span","","The span of this range.",32,null],[12,"start","","The start of this range.",32,null],[12,"end","","The end of this range.",32,null],[11,"is_valid","","Returns true if and only if this character class range is …",32,[[],["bool",15]]],[3,"ClassSetUnion","","A union of items inside a character class set.",null,null],[12,"span","","The span of the items in this operation. e.g., the <code>a-z0-9</code> …",33,null],[12,"items","","The sequence of items that make up this union.",33,null],[11,"push","","Push a new item in this union.",33,[[["classsetitem",4]]]],[11,"into_item","","Return this union as a character class set item.",33,[[],["classsetitem",4]]],[3,"ClassSetBinaryOp","","A Unicode character class set operation.",null,null],[12,"span","","The span of this operation. e.g., the <code>a-z--[h-p]</code> in …",34,null],[12,"kind","","The type of this set operation.",34,null],[12,"lhs","","The left hand side of the operation.",34,null],[12,"rhs","","The right hand side of the operation.",34,null],[4,"ClassSetBinaryOpKind","","The type of a Unicode character class set operation.",null,null],[13,"Intersection","","The intersection of two sets, e.g., <code>\\\\pN&&[a-z]</code>.",35,null],[13,"Difference","","The difference of two sets, e.g., <code>\\\\pN--[0-9]</code>.",35,null],[13,"SymmetricDifference","","The symmetric difference of two sets. The symmetric …",35,null],[3,"Assertion","","A single zero-width assertion.",null,null],[12,"span","","The span of this assertion.",36,null],[12,"kind","","The assertion kind, e.g., <code>\\\\b</code> or <code>^</code>.",36,null],[4,"AssertionKind","","An assertion kind.",null,null],[13,"StartLine","","<code>^</code>",37,null],[13,"EndLine","","<code>$</code>",37,null],[13,"StartText","","<code>\\\\A</code>",37,null],[13,"EndText","","<code>\\\\z</code>",37,null],[13,"WordBoundary","","<code>\\\\b</code>",37,null],[13,"NotWordBoundary","","<code>\\\\B</code>",37,null],[3,"Repetition","","A repetition operation applied to a regular expression.",null,null],[12,"span","","The span of this operation.",38,null],[12,"op","","The actual operation.",38,null],[12,"greedy","","Whether this operation was applied greedily or not.",38,null],[12,"ast","","The regular expression under repetition.",38,null],[3,"RepetitionOp","","The repetition operator itself.",null,null],[12,"span","","The span of this operator. This includes things like <code>+</code>, <code>*?</code>…",39,null],[12,"kind","","The type of operation.",39,null],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","<code>?</code>",40,null],[13,"ZeroOrMore","","<code>*</code>",40,null],[13,"OneOrMore","","<code>+</code>",40,null],[13,"Range","","<code>{m,n}</code>",40,null],[4,"RepetitionRange","","A range repetition operator.",null,null],[13,"Exactly","","<code>{m}</code>",41,null],[13,"AtLeast","","<code>{m,}</code>",41,null],[13,"Bounded","","<code>{m,n}</code>",41,null],[11,"is_valid","","Returns true if and only if this repetition range is …",41,[[],["bool",15]]],[3,"Group","","A grouped regular expression.",null,null],[12,"span","","The span of this group.",42,null],[12,"kind","","The kind of this group.",42,null],[12,"ast","","The regular expression in this group.",42,null],[11,"flags","","If this group is non-capturing, then this returns the …",42,[[],[["flags",3],["option",4]]]],[11,"is_capturing","","Returns true if and only if this group is capturing.",42,[[],["bool",15]]],[11,"capture_index","","Returns the capture index of this group, if this is a …",42,[[],[["u32",15],["option",4]]]],[4,"GroupKind","","The kind of a group.",null,null],[13,"CaptureIndex","","<code>(a)</code>",43,null],[13,"CaptureName","","<code>(?P<name>a)</code>",43,null],[13,"NonCapturing","","<code>(?:a)</code> and <code>(?i:a)</code>",43,null],[3,"CaptureName","","A capture name.",null,null],[12,"span","","The span of this capture name.",44,null],[12,"name","","The capture name.",44,null],[12,"index","","The capture index.",44,null],[3,"SetFlags","","A group of flags that is not applied to a particular …",null,null],[12,"span","","The span of these flags, including the grouping …",45,null],[12,"flags","","The actual sequence of flags.",45,null],[3,"Flags","","A group of flags.",null,null],[12,"span","","The span of this group of flags.",46,null],[12,"items","","A sequence of flag items. Each item is either a flag or a …",46,null],[11,"add_item","","Add the given item to this sequence of flags.",46,[[["flagsitem",3]],[["usize",15],["option",4]]]],[11,"flag_state","","Returns the state of the given flag in this set.",46,[[["flag",4]],[["option",4],["bool",15]]]],[3,"FlagsItem","","A single item in a group of flags.",null,null],[12,"span","","The span of this item.",47,null],[12,"kind","","The kind of this item.",47,null],[4,"FlagsItemKind","","The kind of an item in a group of flags.",null,null],[13,"Negation","","A negation operator applied to all subsequent flags in …",48,null],[13,"Flag","","A single flag in a group.",48,null],[11,"is_negation","","Returns true if and only if this item is a negation …",48,[[],["bool",15]]],[4,"Flag","","A single flag.",null,null],[13,"CaseInsensitive","","<code>i</code>",49,null],[13,"MultiLine","","<code>m</code>",49,null],[13,"DotMatchesNewLine","","<code>s</code>",49,null],[13,"SwapGreed","","<code>U</code>",49,null],[13,"Unicode","","<code>u</code>",49,null],[13,"IgnoreWhitespace","","<code>x</code>",49,null],[0,"hir","regex_syntax","Defines a high-level intermediate representation for …",null,null],[0,"literal","regex_syntax::hir","Provides routines for extracting literal prefixes and …",null,null],[3,"Literals","regex_syntax::hir::literal","A set of literal byte strings extracted from a regular …",null,null],[3,"Literal","","A single member of a set of literals extracted from a …",null,null],[11,"empty","","Returns a new empty set of literals using default limits.",50,[[],["literals",3]]],[11,"prefixes","","Returns a set of literal prefixes extracted from the …",50,[[["hir",3]],["literals",3]]],[11,"suffixes","","Returns a set of literal suffixes extracted from the …",50,[[["hir",3]],["literals",3]]],[11,"limit_size","","Get the approximate size limit (in bytes) of this set.",50,[[],["usize",15]]],[11,"set_limit_size","","Set the approximate size limit (in bytes) of this set.",50,[[["usize",15]],["literals",3]]],[11,"limit_class","","Get the character class size limit for this set.",50,[[],["usize",15]]],[11,"set_limit_class","","Limits the size of character(or byte) classes considered.",50,[[["usize",15]],["literals",3]]],[11,"literals","","Returns the set of literals as a slice. Its order is …",50,[[]]],[11,"min_len","","Returns the length of the smallest literal.",50,[[],[["usize",15],["option",4]]]],[11,"all_complete","","Returns true if all members in this set are complete.",50,[[],["bool",15]]],[11,"any_complete","","Returns true if any member in this set is complete.",50,[[],["bool",15]]],[11,"contains_empty","","Returns true if this set contains an empty literal.",50,[[],["bool",15]]],[11,"is_empty","","Returns true if this set is empty or if all of its …",50,[[],["bool",15]]],[11,"to_empty","","Returns a new empty set of literals using this set’s …",50,[[],["literals",3]]],[11,"longest_common_prefix","","Returns the longest common prefix of all members in this …",50,[[]]],[11,"longest_common_suffix","","Returns the longest common suffix of all members in this …",50,[[]]],[11,"trim_suffix","","Returns a new set of literals with the given number of …",50,[[["usize",15]],[["literals",3],["option",4]]]],[11,"unambiguous_prefixes","","Returns a new set of prefixes of this set of literals …",50,[[],["literals",3]]],[11,"unambiguous_suffixes","","Returns a new set of suffixes of this set of literals …",50,[[],["literals",3]]],[11,"union_prefixes","","Unions the prefixes from the given expression to this set.",50,[[["hir",3]],["bool",15]]],[11,"union_suffixes","","Unions the suffixes from the given expression to this set.",50,[[["hir",3]],["bool",15]]],[11,"union","","Unions this set with another set.",50,[[["literals",3]],["bool",15]]],[11,"cross_product","","Extends this set with another set.",50,[[["literals",3]],["bool",15]]],[11,"cross_add","","Extends each literal in this set with the bytes given.",50,[[],["bool",15]]],[11,"add","","Adds the given literal to this set.",50,[[["literal",3]],["bool",15]]],[11,"add_char_class","","Extends each literal in this set with the character class …",50,[[["classunicode",3]],["bool",15]]],[11,"add_byte_class","","Extends each literal in this set with the byte class …",50,[[["classbytes",3]],["bool",15]]],[11,"cut","","Cuts every member of this set. When a member is cut, it …",50,[[]]],[11,"reverse","","Reverses all members in place.",50,[[]]],[11,"clear","","Clears this set of all members.",50,[[]]],[11,"new","","Returns a new complete literal with the bytes given.",51,[[["vec",3],["u8",15]],["literal",3]]],[11,"empty","","Returns a new complete empty literal.",51,[[],["literal",3]]],[11,"is_cut","","Returns true if this literal was “cut.”",51,[[],["bool",15]]],[11,"cut","","Cuts this literal.",51,[[]]],[0,"print","regex_syntax::hir","This module provides a regular expression printer for <code>Hir</code>.",null,null],[3,"Printer","regex_syntax::hir::print","A printer for a regular expression’s high-level …",null,null],[11,"new","","Create a new printer.",52,[[],["printer",3]]],[11,"print","","Print the given <code>Ast</code> to the given writer. The writer must …",52,[[["write",8],["hir",3]],["result",6]]],[0,"translate","regex_syntax::hir","Defines a translator that converts an <code>Ast</code> to an <code>Hir</code>.",null,null],[3,"TranslatorBuilder","regex_syntax::hir::translate","A builder for constructing an AST->HIR translator.",null,null],[11,"new","","Create a new translator builder with a default c …",53,[[],["translatorbuilder",3]]],[11,"build","","Build a translator using the current configuration.",53,[[],["translator",3]]],[11,"allow_invalid_utf8","","When enabled, translation will permit the construction of …",53,[[["bool",15]],["translatorbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag (<code>i</code>) by …",53,[[["bool",15]],["translatorbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag (<code>m</code>) by …",53,[[["bool",15]],["translatorbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the “dot matches any character” …",53,[[["bool",15]],["translatorbuilder",3]]],[11,"swap_greed","","Enable or disable the “swap greed” flag (<code>U</code>) by …",53,[[["bool",15]],["translatorbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (<code>u</code>) by default.",53,[[["bool",15]],["translatorbuilder",3]]],[3,"Translator","","A translator maps abstract syntax to a high level …",null,null],[11,"new","","Create a new translator using the default configuration.",54,[[],["translator",3]]],[11,"translate","","Translate the given abstract syntax tree (AST) into a …",54,[[["ast",4],["str",15]],[["result",4],["hir",3],["error",3]]]],[5,"visit","regex_syntax::hir","Executes an implementation of <code>Visitor</code> in constant stack …",null,[[["visitor",8],["hir",3]],["result",4]]],[8,"Visitor","","A trait for visiting the high-level IR (HIR) in depth …",null,null],[16,"Output","","The result of visiting an HIR.",55,null],[16,"Err","","An error that visiting an HIR might return.",55,null],[10,"finish","","All implementors of <code>Visitor</code> must provide a <code>finish</code> method, …",55,[[],["result",4]]],[11,"start","","This method is called before beginning traversal of the …",55,[[]]],[11,"visit_pre","","This method is called on an <code>Hir</code> before descending into …",55,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an <code>Hir</code> after descending all of …",55,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an …",55,[[],["result",4]]],[3,"CaseFoldError","","An error that occurs when Unicode-aware simple case …",null,null],[3,"Error","","An error that can occur while translating an <code>Ast</code> to a <code>Hir</code>.",null,null],[11,"kind","","Return the type of this error.",56,[[],["errorkind",4]]],[11,"pattern","","The original pattern string in which this error occurred.",56,[[],["str",15]]],[11,"span","","Return the span at which this error occurred.",56,[[],["span",3]]],[4,"ErrorKind","","The type of an error that occurred while building an <code>Hir</code>.",null,null],[13,"UnicodeNotAllowed","","This error occurs when a Unicode feature is used when …",57,null],[13,"InvalidUtf8","","This error occurs when translating a pattern that could …",57,null],[13,"UnicodePropertyNotFound","","This occurs when an unrecognized Unicode property name …",57,null],[13,"UnicodePropertyValueNotFound","","This occurs when an unrecognized Unicode property value …",57,null],[13,"UnicodePerlClassNotFound","","This occurs when a Unicode-aware Perl character class (<code>\\\\w</code>…",57,null],[13,"UnicodeCaseUnavailable","","This occurs when the Unicode simple case mapping tables …",57,null],[13,"EmptyClassNotAllowed","","This occurs when the translator attempts to construct a …",57,null],[3,"Hir","","A high-level intermediate representation (HIR) for a …",null,null],[4,"HirKind","","The kind of an arbitrary <code>Hir</code> expression.",null,null],[13,"Empty","","The empty regular expression, which matches everything, …",58,null],[13,"Literal","","A single literal character that matches exactly this …",58,null],[13,"Class","","A single character class that matches any of the …",58,null],[13,"Anchor","","An anchor assertion. An anchor assertion match always has …",58,null],[13,"WordBoundary","","A word boundary assertion, which may or may not be …",58,null],[13,"Repetition","","A repetition operation applied to a child expression.",58,null],[13,"Group","","A possibly capturing group, which contains a child …",58,null],[13,"Concat","","A concatenation of expressions. A concatenation always …",58,null],[13,"Alternation","","An alternation of expressions. An alternation always has …",58,null],[11,"kind","","Returns a reference to the underlying HIR kind.",59,[[],["hirkind",4]]],[11,"into_kind","","Consumes ownership of this HIR expression and returns its …",59,[[],["hirkind",4]]],[11,"empty","","Returns an empty HIR expression.",59,[[],["hir",3]]],[11,"literal","","Creates a literal HIR expression.",59,[[["literal",4]],["hir",3]]],[11,"class","","Creates a class HIR expression.",59,[[["class",4]],["hir",3]]],[11,"anchor","","Creates an anchor assertion HIR expression.",59,[[["anchor",4]],["hir",3]]],[11,"word_boundary","","Creates a word boundary assertion HIR expression.",59,[[["wordboundary",4]],["hir",3]]],[11,"repetition","","Creates a repetition HIR expression.",59,[[["repetition",3]],["hir",3]]],[11,"group","","Creates a group HIR expression.",59,[[["group",3]],["hir",3]]],[11,"concat","","Returns the concatenation of the given expressions.",59,[[["hir",3],["vec",3]],["hir",3]]],[11,"alternation","","Returns the alternation of the given expressions.",59,[[["hir",3],["vec",3]],["hir",3]]],[11,"dot","","Build an HIR expression for <code>.</code>.",59,[[["bool",15]],["hir",3]]],[11,"any","","Build an HIR expression for <code>(?s).</code>.",59,[[["bool",15]],["hir",3]]],[11,"is_always_utf8","","Return true if and only if this HIR will always match …",59,[[],["bool",15]]],[11,"is_all_assertions","","Returns true if and only if this entire HIR expression is …",59,[[],["bool",15]]],[11,"is_anchored_start","","Return true if and only if this HIR is required to match …",59,[[],["bool",15]]],[11,"is_anchored_end","","Return true if and only if this HIR is required to match …",59,[[],["bool",15]]],[11,"is_line_anchored_start","","Return true if and only if this HIR is required to match …",59,[[],["bool",15]]],[11,"is_line_anchored_end","","Return true if and only if this HIR is required to match …",59,[[],["bool",15]]],[11,"is_any_anchored_start","","Return true if and only if this HIR contains any …",59,[[],["bool",15]]],[11,"is_any_anchored_end","","Return true if and only if this HIR contains any …",59,[[],["bool",15]]],[11,"is_match_empty","","Return true if and only if the empty string is part of …",59,[[],["bool",15]]],[11,"is_literal","","Return true if and only if this HIR is a simple literal. …",59,[[],["bool",15]]],[11,"is_alternation_literal","","Return true if and only if this HIR is either a simple …",59,[[],["bool",15]]],[11,"is_empty","","Return true if and only if this HIR is the empty regular …",58,[[],["bool",15]]],[11,"has_subexprs","","Returns true if and only if this kind has any (including …",58,[[],["bool",15]]],[4,"Literal","","The high-level intermediate representation of a literal.",null,null],[13,"Unicode","","A single character represented by a Unicode scalar value.",60,null],[13,"Byte","","A single character represented by an arbitrary byte.",60,null],[11,"is_unicode","","Returns true if and only if this literal corresponds to a …",60,[[],["bool",15]]],[4,"Class","","The high-level intermediate representation of a character …",null,null],[13,"Unicode","","A set of characters represented by Unicode scalar values.",61,null],[13,"Bytes","","A set of characters represented by arbitrary bytes (one …",61,null],[11,"case_fold_simple","","Apply Unicode simple case folding to this character …",61,[[]]],[11,"negate","","Negate this character class in place.",61,[[]]],[11,"is_always_utf8","","Returns true if and only if this character class will …",61,[[],["bool",15]]],[3,"ClassUnicode","","A set of characters represented by Unicode scalar values.",null,null],[11,"new","","Create a new class from a sequence of ranges.",62,[[],["classunicode",3]]],[11,"empty","","Create a new class with no ranges.",62,[[],["classunicode",3]]],[11,"push","","Add a new range to this set.",62,[[["classunicoderange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",62,[[],["classunicodeiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",62,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all …",62,[[]]],[11,"try_case_fold_simple","","Expand this character class such that it contains all …",62,[[],[["casefolderror",3],["result",4]]]],[11,"negate","","Negate this character class.",62,[[]]],[11,"union","","Union this character class with the given character …",62,[[["classunicode",3]]]],[11,"intersect","","Intersect this character class with the given character …",62,[[["classunicode",3]]]],[11,"difference","","Subtract the given character class from this character …",62,[[["classunicode",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given character …",62,[[["classunicode",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will …",62,[[],["bool",15]]],[3,"ClassUnicodeIter","","An iterator over all ranges in a Unicode character class.",null,null],[3,"ClassUnicodeRange","","A single range of characters represented by Unicode …",null,null],[11,"new","","Create a new Unicode scalar value range for a character …",63,[[["char",15]],["classunicoderange",3]]],[11,"start","","Return the start of this range.",63,[[],["char",15]]],[11,"end","","Return the end of this range.",63,[[],["char",15]]],[3,"ClassBytes","","A set of characters represented by arbitrary bytes (where …",null,null],[11,"new","","Create a new class from a sequence of ranges.",64,[[],["classbytes",3]]],[11,"empty","","Create a new class with no ranges.",64,[[],["classbytes",3]]],[11,"push","","Add a new range to this set.",64,[[["classbytesrange",3]]]],[11,"iter","","Return an iterator over all ranges in this class.",64,[[],["classbytesiter",3]]],[11,"ranges","","Return the underlying ranges as a slice.",64,[[]]],[11,"case_fold_simple","","Expand this character class such that it contains all …",64,[[]]],[11,"negate","","Negate this byte class.",64,[[]]],[11,"union","","Union this byte class with the given byte class, in place.",64,[[["classbytes",3]]]],[11,"intersect","","Intersect this byte class with the given byte class, in …",64,[[["classbytes",3]]]],[11,"difference","","Subtract the given byte class from this byte class, in …",64,[[["classbytes",3]]]],[11,"symmetric_difference","","Compute the symmetric difference of the given byte …",64,[[["classbytes",3]]]],[11,"is_all_ascii","","Returns true if and only if this character class will …",64,[[],["bool",15]]],[3,"ClassBytesIter","","An iterator over all ranges in a byte character class.",null,null],[3,"ClassBytesRange","","A single range of characters represented by arbitrary …",null,null],[11,"new","","Create a new byte range for a character class.",65,[[["u8",15]],["classbytesrange",3]]],[11,"start","","Return the start of this range.",65,[[],["u8",15]]],[11,"end","","Return the end of this range.",65,[[],["u8",15]]],[4,"Anchor","","The high-level intermediate representation for an anchor …",null,null],[13,"StartLine","","Match the beginning of a line or the beginning of text. …",66,null],[13,"EndLine","","Match the end of a line or the end of text. Specifically, …",66,null],[13,"StartText","","Match the beginning of text. Specifically, this matches …",66,null],[13,"EndText","","Match the end of text. Specifically, this matches at the …",66,null],[4,"WordBoundary","","The high-level intermediate representation for a …",null,null],[13,"Unicode","","Match a Unicode-aware word boundary. That is, this …",67,null],[13,"UnicodeNegate","","Match a Unicode-aware negation of a word boundary.",67,null],[13,"Ascii","","Match an ASCII-only word boundary. That is, this matches …",67,null],[13,"AsciiNegate","","Match an ASCII-only negation of a word boundary.",67,null],[11,"is_negated","","Returns true if and only if this word boundary assertion …",67,[[],["bool",15]]],[3,"Group","","The high-level intermediate representation for a group.",null,null],[12,"kind","","The kind of this group. If it is a capturing group, then …",68,null],[12,"hir","","The expression inside the capturing group, which may be …",68,null],[4,"GroupKind","","The kind of group.",null,null],[13,"CaptureIndex","","A normal unnamed capturing group.",69,null],[13,"CaptureName","","A named capturing group.",69,null],[12,"name","regex_syntax::hir::GroupKind","The name of the group.",70,null],[12,"index","","The capture index of the group.",70,null],[13,"NonCapturing","regex_syntax::hir","A non-capturing group.",69,null],[3,"Repetition","","The high-level intermediate representation of a …",null,null],[12,"kind","","The kind of this repetition operator.",71,null],[12,"greedy","","Whether this repetition operator is greedy or not. A …",71,null],[12,"hir","","The expression being repeated.",71,null],[11,"is_match_empty","","Returns true if and only if this repetition operator …",71,[[],["bool",15]]],[4,"RepetitionKind","","The kind of a repetition operator.",null,null],[13,"ZeroOrOne","","Matches a sub-expression zero or one times.",72,null],[13,"ZeroOrMore","","Matches a sub-expression zero or more times.",72,null],[13,"OneOrMore","","Matches a sub-expression one or more times.",72,null],[13,"Range","","Matches a sub-expression within a bounded range of times.",72,null],[4,"RepetitionRange","","The kind of a counted repetition operator.",null,null],[13,"Exactly","","Matches a sub-expression exactly this many times.",73,null],[13,"AtLeast","","Matches a sub-expression at least this many times.",73,null],[13,"Bounded","","Matches a sub-expression at least <code>m</code> times and at most <code>n</code> …",73,null],[0,"utf8","regex_syntax","Converts ranges of Unicode scalar values to equivalent …",null,null],[4,"Utf8Sequence","regex_syntax::utf8","Utf8Sequence represents a sequence of byte ranges.",null,null],[13,"One","","One byte range.",74,null],[13,"Two","","Two successive byte ranges.",74,null],[13,"Three","","Three successive byte ranges.",74,null],[13,"Four","","Four successive byte ranges.",74,null],[11,"as_slice","","Returns the underlying sequence of byte ranges as a slice.",74,[[]]],[11,"len","","Returns the number of byte ranges in this sequence.",74,[[],["usize",15]]],[11,"reverse","","Reverses the ranges in this sequence.",74,[[]]],[11,"matches","","Returns true if and only if a prefix of <code>bytes</code> matches …",74,[[],["bool",15]]],[3,"Utf8Range","","A single inclusive range of UTF-8 bytes.",null,null],[12,"start","","Start of byte range (inclusive).",75,null],[12,"end","","End of byte range (inclusive).",75,null],[11,"matches","","Returns true if and only if the given byte is in this …",75,[[["u8",15]],["bool",15]]],[3,"Utf8Sequences","","An iterator over ranges of matching UTF-8 byte sequences.",null,null],[11,"new","","Create a new iterator over UTF-8 byte ranges for the …",76,[[["char",15]]]],[4,"Error","regex_syntax","This error type encompasses any error that can be …",null,null],[13,"Parse","","An error that occurred while translating concrete syntax …",77,null],[13,"Translate","","An error that occurred while translating abstract syntax …",77,null],[6,"Result","","A type alias for dealing with errors returned by this …",null,null],[3,"Parser","","A convenience parser for regular expressions.",null,null],[3,"ParserBuilder","","A builder for a regular expression parser.",null,null],[3,"UnicodeWordError","","An error that occurs when the Unicode-aware <code>\\\\w</code> class is …",null,null],[5,"escape","","Escapes all regular expression meta characters in <code>text</code>.",null,[[["str",15]],["string",3]]],[5,"escape_into","","Escapes all meta characters in <code>text</code> and writes the result …",null,[[["string",3],["str",15]]]],[5,"is_meta_character","","Returns true if the give character has significance in a …",null,[[["char",15]],["bool",15]]],[5,"is_word_character","","Returns true if and only if the given character is a …",null,[[["char",15]],["bool",15]]],[5,"try_is_word_character","","Returns true if and only if the given character is a …",null,[[["char",15]],[["bool",15],["result",4],["unicodeworderror",3]]]],[5,"is_word_byte","","Returns true if and only if the given character is an …",null,[[["u8",15]],["bool",15]]],[11,"from","regex_syntax::ast::parse","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","regex_syntax::ast::print","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","regex_syntax::ast","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","regex_syntax","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","regex_syntax::hir::literal","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","regex_syntax::hir::print","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","regex_syntax::hir::translate","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","regex_syntax::hir","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"to_string","","",59,[[],["string",3]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"into_iter","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","regex_syntax","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","regex_syntax::utf8","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"into_iter","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"drop","regex_syntax::ast","",13,[[]]],[11,"drop","","",30,[[]]],[11,"drop","regex_syntax::hir","",59,[[]]],[11,"as_ref","regex_syntax::hir::literal","",51,[[]]],[11,"from","regex_syntax","",77,[[["error",3]],["error",4]]],[11,"from","","",77,[[["error",3]],["error",4]]],[11,"next","regex_syntax::hir","",79,[[],[["classunicoderange",3],["option",4]]]],[11,"next","","",80,[[],[["classbytesrange",3],["option",4]]]],[11,"next","regex_syntax::utf8","",76,[[],["option",4]]],[11,"clone","regex_syntax::ast::parse","",0,[[],["parserbuilder",3]]],[11,"clone","","",1,[[],["parser",3]]],[11,"clone","regex_syntax::ast","",4,[[],["error",3]]],[11,"clone","","",5,[[],["errorkind",4]]],[11,"clone","","",9,[[],["span",3]]],[11,"clone","","",10,[[],["position",3]]],[11,"clone","","",11,[[],["withcomments",3]]],[11,"clone","","",12,[[],["comment",3]]],[11,"clone","","",13,[[],["ast",4]]],[11,"clone","","",14,[[],["alternation",3]]],[11,"clone","","",15,[[],["concat",3]]],[11,"clone","","",16,[[],["literal",3]]],[11,"clone","","",17,[[],["literalkind",4]]],[11,"clone","","",18,[[],["specialliteralkind",4]]],[11,"clone","","",19,[[],["hexliteralkind",4]]],[11,"clone","","",20,[[],["class",4]]],[11,"clone","","",21,[[],["classperl",3]]],[11,"clone","","",22,[[],["classperlkind",4]]],[11,"clone","","",23,[[],["classascii",3]]],[11,"clone","","",24,[[],["classasciikind",4]]],[11,"clone","","",25,[[],["classunicode",3]]],[11,"clone","","",26,[[],["classunicodekind",4]]],[11,"clone","","",28,[[],["classunicodeopkind",4]]],[11,"clone","","",29,[[],["classbracketed",3]]],[11,"clone","","",30,[[],["classset",4]]],[11,"clone","","",31,[[],["classsetitem",4]]],[11,"clone","","",32,[[],["classsetrange",3]]],[11,"clone","","",33,[[],["classsetunion",3]]],[11,"clone","","",34,[[],["classsetbinaryop",3]]],[11,"clone","","",35,[[],["classsetbinaryopkind",4]]],[11,"clone","","",36,[[],["assertion",3]]],[11,"clone","","",37,[[],["assertionkind",4]]],[11,"clone","","",38,[[],["repetition",3]]],[11,"clone","","",39,[[],["repetitionop",3]]],[11,"clone","","",40,[[],["repetitionkind",4]]],[11,"clone","","",41,[[],["repetitionrange",4]]],[11,"clone","","",42,[[],["group",3]]],[11,"clone","","",43,[[],["groupkind",4]]],[11,"clone","","",44,[[],["capturename",3]]],[11,"clone","","",45,[[],["setflags",3]]],[11,"clone","","",46,[[],["flags",3]]],[11,"clone","","",47,[[],["flagsitem",3]]],[11,"clone","","",48,[[],["flagsitemkind",4]]],[11,"clone","","",49,[[],["flag",4]]],[11,"clone","regex_syntax","",77,[[],["error",4]]],[11,"clone","regex_syntax::hir::literal","",50,[[],["literals",3]]],[11,"clone","","",51,[[],["literal",3]]],[11,"clone","regex_syntax::hir::translate","",53,[[],["translatorbuilder",3]]],[11,"clone","","",54,[[],["translator",3]]],[11,"clone","regex_syntax::hir","",56,[[],["error",3]]],[11,"clone","","",57,[[],["errorkind",4]]],[11,"clone","","",59,[[],["hir",3]]],[11,"clone","","",58,[[],["hirkind",4]]],[11,"clone","","",60,[[],["literal",4]]],[11,"clone","","",61,[[],["class",4]]],[11,"clone","","",62,[[],["classunicode",3]]],[11,"clone","","",63,[[],["classunicoderange",3]]],[11,"clone","","",64,[[],["classbytes",3]]],[11,"clone","","",65,[[],["classbytesrange",3]]],[11,"clone","","",66,[[],["anchor",4]]],[11,"clone","","",67,[[],["wordboundary",4]]],[11,"clone","","",68,[[],["group",3]]],[11,"clone","","",69,[[],["groupkind",4]]],[11,"clone","","",71,[[],["repetition",3]]],[11,"clone","","",72,[[],["repetitionkind",4]]],[11,"clone","","",73,[[],["repetitionrange",4]]],[11,"clone","regex_syntax","",81,[[],["parserbuilder",3]]],[11,"clone","","",82,[[],["parser",3]]],[11,"clone","regex_syntax::utf8","",74,[[],["utf8sequence",4]]],[11,"clone","","",75,[[],["utf8range",3]]],[11,"default","regex_syntax::ast::parse","",0,[[],["parserbuilder",3]]],[11,"default","regex_syntax::hir::translate","",53,[[],["translatorbuilder",3]]],[11,"default","regex_syntax::hir","",63,[[],["classunicoderange",3]]],[11,"default","","",65,[[],["classbytesrange",3]]],[11,"default","regex_syntax","",81,[[],["parserbuilder",3]]],[11,"cmp","regex_syntax::ast","",9,[[["span",3]],["ordering",4]]],[11,"cmp","","",10,[[["position",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir::literal","",51,[[["literal",3]],["ordering",4]]],[11,"cmp","regex_syntax::hir","",63,[[["classunicoderange",3]],["ordering",4]]],[11,"cmp","","",65,[[["classbytesrange",3]],["ordering",4]]],[11,"cmp","regex_syntax::utf8","",74,[[["utf8sequence",4]],["ordering",4]]],[11,"cmp","","",75,[[["utf8range",3]],["ordering",4]]],[11,"eq","regex_syntax::ast","",4,[[["error",3]],["bool",15]]],[11,"ne","","",4,[[["error",3]],["bool",15]]],[11,"eq","","",5,[[["errorkind",4]],["bool",15]]],[11,"ne","","",5,[[["errorkind",4]],["bool",15]]],[11,"eq","","",9,[[["span",3]],["bool",15]]],[11,"ne","","",9,[[["span",3]],["bool",15]]],[11,"eq","","",10,[[["position",3]],["bool",15]]],[11,"ne","","",10,[[["position",3]],["bool",15]]],[11,"eq","","",11,[[["withcomments",3]],["bool",15]]],[11,"ne","","",11,[[["withcomments",3]],["bool",15]]],[11,"eq","","",12,[[["comment",3]],["bool",15]]],[11,"ne","","",12,[[["comment",3]],["bool",15]]],[11,"eq","","",13,[[["ast",4]],["bool",15]]],[11,"ne","","",13,[[["ast",4]],["bool",15]]],[11,"eq","","",14,[[["alternation",3]],["bool",15]]],[11,"ne","","",14,[[["alternation",3]],["bool",15]]],[11,"eq","","",15,[[["concat",3]],["bool",15]]],[11,"ne","","",15,[[["concat",3]],["bool",15]]],[11,"eq","","",16,[[["literal",3]],["bool",15]]],[11,"ne","","",16,[[["literal",3]],["bool",15]]],[11,"eq","","",17,[[["literalkind",4]],["bool",15]]],[11,"ne","","",17,[[["literalkind",4]],["bool",15]]],[11,"eq","","",18,[[["specialliteralkind",4]],["bool",15]]],[11,"eq","","",19,[[["hexliteralkind",4]],["bool",15]]],[11,"eq","","",20,[[["class",4]],["bool",15]]],[11,"ne","","",20,[[["class",4]],["bool",15]]],[11,"eq","","",21,[[["classperl",3]],["bool",15]]],[11,"ne","","",21,[[["classperl",3]],["bool",15]]],[11,"eq","","",22,[[["classperlkind",4]],["bool",15]]],[11,"eq","","",23,[[["classascii",3]],["bool",15]]],[11,"ne","","",23,[[["classascii",3]],["bool",15]]],[11,"eq","","",24,[[["classasciikind",4]],["bool",15]]],[11,"eq","","",25,[[["classunicode",3]],["bool",15]]],[11,"ne","","",25,[[["classunicode",3]],["bool",15]]],[11,"eq","","",26,[[["classunicodekind",4]],["bool",15]]],[11,"ne","","",26,[[["classunicodekind",4]],["bool",15]]],[11,"eq","","",28,[[["classunicodeopkind",4]],["bool",15]]],[11,"eq","","",29,[[["classbracketed",3]],["bool",15]]],[11,"ne","","",29,[[["classbracketed",3]],["bool",15]]],[11,"eq","","",30,[[["classset",4]],["bool",15]]],[11,"ne","","",30,[[["classset",4]],["bool",15]]],[11,"eq","","",31,[[["classsetitem",4]],["bool",15]]],[11,"ne","","",31,[[["classsetitem",4]],["bool",15]]],[11,"eq","","",32,[[["classsetrange",3]],["bool",15]]],[11,"ne","","",32,[[["classsetrange",3]],["bool",15]]],[11,"eq","","",33,[[["classsetunion",3]],["bool",15]]],[11,"ne","","",33,[[["classsetunion",3]],["bool",15]]],[11,"eq","","",34,[[["classsetbinaryop",3]],["bool",15]]],[11,"ne","","",34,[[["classsetbinaryop",3]],["bool",15]]],[11,"eq","","",35,[[["classsetbinaryopkind",4]],["bool",15]]],[11,"eq","","",36,[[["assertion",3]],["bool",15]]],[11,"ne","","",36,[[["assertion",3]],["bool",15]]],[11,"eq","","",37,[[["assertionkind",4]],["bool",15]]],[11,"eq","","",38,[[["repetition",3]],["bool",15]]],[11,"ne","","",38,[[["repetition",3]],["bool",15]]],[11,"eq","","",39,[[["repetitionop",3]],["bool",15]]],[11,"ne","","",39,[[["repetitionop",3]],["bool",15]]],[11,"eq","","",40,[[["repetitionkind",4]],["bool",15]]],[11,"ne","","",40,[[["repetitionkind",4]],["bool",15]]],[11,"eq","","",41,[[["repetitionrange",4]],["bool",15]]],[11,"ne","","",41,[[["repetitionrange",4]],["bool",15]]],[11,"eq","","",42,[[["group",3]],["bool",15]]],[11,"ne","","",42,[[["group",3]],["bool",15]]],[11,"eq","","",43,[[["groupkind",4]],["bool",15]]],[11,"ne","","",43,[[["groupkind",4]],["bool",15]]],[11,"eq","","",44,[[["capturename",3]],["bool",15]]],[11,"ne","","",44,[[["capturename",3]],["bool",15]]],[11,"eq","","",45,[[["setflags",3]],["bool",15]]],[11,"ne","","",45,[[["setflags",3]],["bool",15]]],[11,"eq","","",46,[[["flags",3]],["bool",15]]],[11,"ne","","",46,[[["flags",3]],["bool",15]]],[11,"eq","","",47,[[["flagsitem",3]],["bool",15]]],[11,"ne","","",47,[[["flagsitem",3]],["bool",15]]],[11,"eq","","",48,[[["flagsitemkind",4]],["bool",15]]],[11,"ne","","",48,[[["flagsitemkind",4]],["bool",15]]],[11,"eq","","",49,[[["flag",4]],["bool",15]]],[11,"eq","regex_syntax","",77,[[["error",4]],["bool",15]]],[11,"ne","","",77,[[["error",4]],["bool",15]]],[11,"eq","regex_syntax::hir::literal","",50,[[["literals",3]],["bool",15]]],[11,"ne","","",50,[[["literals",3]],["bool",15]]],[11,"eq","","",51,[[["literal",3]],["bool",15]]],[11,"eq","regex_syntax::hir","",56,[[["error",3]],["bool",15]]],[11,"ne","","",56,[[["error",3]],["bool",15]]],[11,"eq","","",57,[[["errorkind",4]],["bool",15]]],[11,"eq","","",59,[[["hir",3]],["bool",15]]],[11,"ne","","",59,[[["hir",3]],["bool",15]]],[11,"eq","","",58,[[["hirkind",4]],["bool",15]]],[11,"ne","","",58,[[["hirkind",4]],["bool",15]]],[11,"eq","","",60,[[["literal",4]],["bool",15]]],[11,"ne","","",60,[[["literal",4]],["bool",15]]],[11,"eq","","",61,[[["class",4]],["bool",15]]],[11,"ne","","",61,[[["class",4]],["bool",15]]],[11,"eq","","",62,[[["classunicode",3]],["bool",15]]],[11,"ne","","",62,[[["classunicode",3]],["bool",15]]],[11,"eq","","",63,[[["classunicoderange",3]],["bool",15]]],[11,"ne","","",63,[[["classunicoderange",3]],["bool",15]]],[11,"eq","","",64,[[["classbytes",3]],["bool",15]]],[11,"ne","","",64,[[["classbytes",3]],["bool",15]]],[11,"eq","","",65,[[["classbytesrange",3]],["bool",15]]],[11,"ne","","",65,[[["classbytesrange",3]],["bool",15]]],[11,"eq","","",66,[[["anchor",4]],["bool",15]]],[11,"eq","","",67,[[["wordboundary",4]],["bool",15]]],[11,"eq","","",68,[[["group",3]],["bool",15]]],[11,"ne","","",68,[[["group",3]],["bool",15]]],[11,"eq","","",69,[[["groupkind",4]],["bool",15]]],[11,"ne","","",69,[[["groupkind",4]],["bool",15]]],[11,"eq","","",71,[[["repetition",3]],["bool",15]]],[11,"ne","","",71,[[["repetition",3]],["bool",15]]],[11,"eq","","",72,[[["repetitionkind",4]],["bool",15]]],[11,"ne","","",72,[[["repetitionkind",4]],["bool",15]]],[11,"eq","","",73,[[["repetitionrange",4]],["bool",15]]],[11,"ne","","",73,[[["repetitionrange",4]],["bool",15]]],[11,"eq","regex_syntax::utf8","",74,[[["utf8sequence",4]],["bool",15]]],[11,"ne","","",74,[[["utf8sequence",4]],["bool",15]]],[11,"eq","","",75,[[["utf8range",3]],["bool",15]]],[11,"ne","","",75,[[["utf8range",3]],["bool",15]]],[11,"partial_cmp","regex_syntax::ast","",9,[[["span",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",10,[[["position",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","regex_syntax::hir::literal","",51,[[["literal",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","regex_syntax::hir","",63,[[["classunicoderange",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",65,[[["classbytesrange",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","regex_syntax::utf8","",74,[[["utf8sequence",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",75,[[["utf8range",3]],[["option",4],["ordering",4]]]],[11,"deref","regex_syntax::hir::literal","",51,[[],["vec",3]]],[11,"deref_mut","","",51,[[],["vec",3]]],[11,"fmt","regex_syntax::ast::parse","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast::print","",2,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",77,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::literal","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::print","",52,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir::translate","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",78,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",83,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::utf8","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::ast","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",77,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax::hir","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","regex_syntax","",83,[[["formatter",3]],["result",6]]],[11,"description","regex_syntax::ast","",4,[[],["str",15]]],[11,"description","regex_syntax","",77,[[],["str",15]]],[11,"description","regex_syntax::hir","",56,[[],["str",15]]],[11,"start","regex_syntax::ast","This method is called before beginning traversal of the …",3,[[]]],[11,"visit_pre","","This method is called on an <code>Ast</code> before descending into …",3,[[["ast",4]],["result",4]]],[11,"visit_post","","This method is called on an <code>Ast</code> after descending all of …",3,[[["ast",4]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an …",3,[[],["result",4]]],[11,"visit_class_set_item_pre","","This method is called on every <code>ClassSetItem</code> before …",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_item_post","","This method is called on every <code>ClassSetItem</code> after …",3,[[["classsetitem",4]],["result",4]]],[11,"visit_class_set_binary_op_pre","","This method is called on every <code>ClassSetBinaryOp</code> before …",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_post","","This method is called on every <code>ClassSetBinaryOp</code> after …",3,[[["classsetbinaryop",3]],["result",4]]],[11,"visit_class_set_binary_op_in","","This method is called between the left hand and right …",3,[[["classsetbinaryop",3]],["result",4]]],[11,"start","regex_syntax::hir","This method is called before beginning traversal of the …",55,[[]]],[11,"visit_pre","","This method is called on an <code>Hir</code> before descending into …",55,[[["hir",3]],["result",4]]],[11,"visit_post","","This method is called on an <code>Hir</code> after descending all of …",55,[[["hir",3]],["result",4]]],[11,"visit_alternation_in","","This method is called between child nodes of an …",55,[[],["result",4]]],[11,"new","regex_syntax","Create a new parser builder with a default configuration.",81,[[],["parserbuilder",3]]],[11,"build","","Build a parser from this configuration with the given …",81,[[],["parser",3]]],[11,"nest_limit","","Set the nesting limit for this parser.",81,[[["u32",15]],["parserbuilder",3]]],[11,"octal","","Whether to support octal syntax or not.",81,[[["bool",15]],["parserbuilder",3]]],[11,"allow_invalid_utf8","","When enabled, the parser will permit the construction of …",81,[[["bool",15]],["parserbuilder",3]]],[11,"ignore_whitespace","","Enable verbose mode in the regular expression.",81,[[["bool",15]],["parserbuilder",3]]],[11,"case_insensitive","","Enable or disable the case insensitive flag by default.",81,[[["bool",15]],["parserbuilder",3]]],[11,"multi_line","","Enable or disable the multi-line matching flag by default.",81,[[["bool",15]],["parserbuilder",3]]],[11,"dot_matches_new_line","","Enable or disable the “dot matches any character” …",81,[[["bool",15]],["parserbuilder",3]]],[11,"swap_greed","","Enable or disable the “swap greed” flag by default.",81,[[["bool",15]],["parserbuilder",3]]],[11,"unicode","","Enable or disable the Unicode flag (<code>u</code>) by default.",81,[[["bool",15]],["parserbuilder",3]]],[11,"new","","Create a new parser with a default configuration.",82,[[],["parser",3]]],[11,"parse","","Parse the regular expression into a high level …",82,[[["str",15]],[["result",6],["hir",3]]]]],"p":[[3,"ParserBuilder"],[3,"Parser"],[3,"Printer"],[8,"Visitor"],[3,"Error"],[4,"ErrorKind"],[13,"FlagDuplicate"],[13,"FlagRepeatedNegation"],[13,"GroupNameDuplicate"],[3,"Span"],[3,"Position"],[3,"WithComments"],[3,"Comment"],[4,"Ast"],[3,"Alternation"],[3,"Concat"],[3,"Literal"],[4,"LiteralKind"],[4,"SpecialLiteralKind"],[4,"HexLiteralKind"],[4,"Class"],[3,"ClassPerl"],[4,"ClassPerlKind"],[3,"ClassAscii"],[4,"ClassAsciiKind"],[3,"ClassUnicode"],[4,"ClassUnicodeKind"],[13,"NamedValue"],[4,"ClassUnicodeOpKind"],[3,"ClassBracketed"],[4,"ClassSet"],[4,"ClassSetItem"],[3,"ClassSetRange"],[3,"ClassSetUnion"],[3,"ClassSetBinaryOp"],[4,"ClassSetBinaryOpKind"],[3,"Assertion"],[4,"AssertionKind"],[3,"Repetition"],[3,"RepetitionOp"],[4,"RepetitionKind"],[4,"RepetitionRange"],[3,"Group"],[4,"GroupKind"],[3,"CaptureName"],[3,"SetFlags"],[3,"Flags"],[3,"FlagsItem"],[4,"FlagsItemKind"],[4,"Flag"],[3,"Literals"],[3,"Literal"],[3,"Printer"],[3,"TranslatorBuilder"],[3,"Translator"],[8,"Visitor"],[3,"Error"],[4,"ErrorKind"],[4,"HirKind"],[3,"Hir"],[4,"Literal"],[4,"Class"],[3,"ClassUnicode"],[3,"ClassUnicodeRange"],[3,"ClassBytes"],[3,"ClassBytesRange"],[4,"Anchor"],[4,"WordBoundary"],[3,"Group"],[4,"GroupKind"],[13,"CaptureName"],[3,"Repetition"],[4,"RepetitionKind"],[4,"RepetitionRange"],[4,"Utf8Sequence"],[3,"Utf8Range"],[3,"Utf8Sequences"],[4,"Error"],[3,"CaseFoldError"],[3,"ClassUnicodeIter"],[3,"ClassBytesIter"],[3,"ParserBuilder"],[3,"Parser"],[3,"UnicodeWordError"]]},\
"region_alloc":{"doc":"","i":[[3,"RegionAllocator","region_alloc","An endpoint-based region allocator.",null,null],[11,"new","","Create an empty [<code>RegionAllocator</code>].",0,[[]]],[11,"add","","Add a region <code>[base, base + size)</code> to the set. The left …",0,[[["usize",15]]]],[11,"subtract","","Subtract the whole region set with a given region. After …",0,[[["usize",15]]]],[11,"add_or_subtract","","",0,[[["usize",15],["bool",15]]]],[11,"allocate_by_addr","","",0,[[["usize",15]],["bool",15]]],[11,"allocate_by_size","","Allocate a region at an arbitrary position aligned to a …",0,[[["usize",15]],["option",4]]],[11,"check_region","","Find if any region perfectly match a given range.",0,[[["usize",15]],["bool",15]]],[11,"len","","Return number of regions in the set.",0,[[],["usize",15]]],[11,"is_empty","","",0,[[],["bool",15]]],[11,"check_point","","Check whether the point is covered.",0,[[["usize",15]],["bool",15]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",0,[[],["regionallocator",3]]]],"p":[[3,"RegionAllocator"]]},\
"remove_dir_all":{"doc":"Reliably remove a directory and all of its children.","i":[[5,"remove_dir_all","remove_dir_all","Removes a directory at this path, after removing all its …",null,[[],[["result",4],["error",3]]]]],"p":[],"a":{"delete":[0]}},\
"slab":{"doc":"Pre-allocated storage for a uniform data type.","i":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",null,null],[3,"VacantEntry","","A handle to a vacant entry in a <code>Slab</code>.",null,null],[3,"Iter","","An iterator over the values stored in the <code>Slab</code>",null,null],[3,"IterMut","","A mutable iterator over the values stored in the <code>Slab</code>",null,null],[3,"Drain","","A draining iterator for <code>Slab</code>",null,null],[11,"new","","Construct a new, empty <code>Slab</code>.",0,[[],["slab",3]]],[11,"with_capacity","","Construct a new, empty <code>Slab</code> with the specified capacity.",0,[[["usize",15]],["slab",3]]],[11,"capacity","","Return the number of values the slab can store without …",0,[[],["usize",15]]],[11,"reserve","","Reserve capacity for at least <code>additional</code> more values to …",0,[[["usize",15]]]],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly …",0,[[["usize",15]]]],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible.",0,[[]]],[11,"clear","","Clear the slab of all values.",0,[[]]],[11,"len","","Return the number of stored values.",0,[[],["usize",15]]],[11,"is_empty","","Return <code>true</code> if there are no values stored in the slab.",0,[[],["bool",15]]],[11,"iter","","Return an iterator over the slab.",0,[[],["iter",3]]],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,[[],["itermut",3]]],[11,"get","","Return a reference to the value associated with the given …",0,[[["usize",15]],["option",4]]],[11,"get_mut","","Return a mutable reference to the value associated with …",0,[[["usize",15]],["option",4]]],[11,"get_unchecked","","Return a reference to the value associated with the given …",0,[[["usize",15]]]],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with …",0,[[["usize",15]]]],[11,"insert","","Insert a value in the slab, returning key assigned to the …",0,[[],["usize",15]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further …",0,[[],["vacantentry",3]]],[11,"remove","","Remove and return the value associated with the given key.",0,[[["usize",15]]]],[11,"contains","","Return <code>true</code> if a value is associated with the given key.",0,[[["usize",15]],["bool",15]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[]]],[11,"drain","","Return a draining iterator that removes all elements from …",0,[[],["drain",3]]],[11,"insert","","Insert a value in the entry, returning a mutable …",1,[[]]],[11,"key","","Return the key associated with this entry.",1,[[],["usize",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"next","","",2,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"next","","",4,[[],["option",4]]],[11,"clone","","",0,[[],["slab",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"index","","",0,[[["usize",15]]]],[11,"index_mut","","",0,[[["usize",15]]]]],"p":[[3,"Slab"],[3,"VacantEntry"],[3,"Iter"],[3,"IterMut"],[3,"Drain"]]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","i":[[0,"barrier","spin","Synchronization primitive allowing multiple threads to …",null,null],[3,"Barrier","spin::barrier","A primitive that synchronizes the execution of multiple …",null,null],[3,"BarrierWaitResult","","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …",null,null],[11,"new","","Creates a new barrier that can block a given number of …",0,[[["usize",15]],["barrier",3]]],[11,"wait","","Blocks the current thread until all threads have …",0,[[],["barrierwaitresult",3]]],[11,"is_leader","","Returns whether this thread from <code>wait</code> is the “leader …",1,[[],["bool",15]]],[0,"lazy","spin","Synchronization primitives for lazy evaluation.",null,null],[3,"Lazy","spin::lazy","A value which is initialized on the first access.",null,null],[11,"new","","Creates a new lazy value with the given initializing …",2,[[],["lazy",3]]],[11,"force","","Forces the evaluation of this lazy value and returns a …",2,[[["lazy",3]]]],[0,"mutex","spin","Locks that have the same behaviour as a mutex.",null,null],[3,"SpinMutex","spin::mutex","A spin lock providing mutually exclusive access to data.",null,null],[3,"SpinMutexGuard","","A guard that provides mutable data access.",null,null],[3,"TicketMutex","","A spin-based ticket lock providing mutually exclusive …",null,null],[3,"TicketMutexGuard","","A guard that protects some data.",null,null],[3,"Mutex","","A spin-based lock providing mutually exclusive access to …",null,null],[3,"MutexGuard","","A generic guard that will protect some data access and …",null,null],[11,"new","","Creates a new [<code>Mutex</code>] wrapping the supplied data.",3,[[]]],[11,"into_inner","","Consumes this [<code>Mutex</code>] and unwraps the underlying data.",3,[[]]],[11,"is_locked","","Returns <code>true</code> if the lock is currently held.",3,[[],["bool",15]]],[11,"lock","","Locks the [<code>Mutex</code>] and returns a guard that permits access …",3,[[],["mutexguard",3]]],[11,"force_unlock","","Force unlock this [<code>Mutex</code>].",3,[[]]],[11,"try_lock","","Try to lock this [<code>Mutex</code>], returning a lock guard if …",3,[[],[["option",4],["mutexguard",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",3,[[]]],[11,"leak","","Leak the lock guard, yielding a mutable reference to the …",4,[[]]],[0,"once","spin","Synchronization primitives for one-time evaluation.",null,null],[3,"Once","spin::once","A primitive that provides lazy one-time initialization.",null,null],[18,"INIT","","Initialization constant of [<code>Once</code>].",5,null],[11,"new","","Creates a new [<code>Once</code>].",5,[[],["once",3]]],[11,"initialized","","Creates a new initialized [<code>Once</code>].",5,[[],["once",3]]],[11,"call_once","","Performs an initialization routine once and only once. …",5,[[["fnonce",8]]]],[11,"get","","Returns a reference to the inner value if the [<code>Once</code>] has …",5,[[],["option",4]]],[11,"get_mut","","Returns a mutable reference to the inner value if the […",5,[[],["option",4]]],[11,"try_into_inner","","Returns a the inner value if the [<code>Once</code>] has been …",5,[[],["option",4]]],[11,"is_completed","","Returns a reference to the inner value if the [<code>Once</code>] has …",5,[[],["bool",15]]],[11,"wait","","Spins until the [<code>Once</code>] contains a value.",5,[[]]],[11,"poll","","Like [<code>Once::get</code>], but will spin if the [<code>Once</code>] is in the …",5,[[],["option",4]]],[0,"rw_lock","spin","A lock that provides data access to either one writer or …",null,null],[3,"RwLock","spin::rw_lock","A lock that provides data access to either one writer or …",null,null],[3,"RwLockReadGuard","","A guard that provides immutable data access.",null,null],[3,"RwLockWriteGuard","","A guard that provides mutable data access.",null,null],[3,"RwLockUpgradableGuard","","A guard that provides immutable data access but can be …",null,null],[11,"new","","Creates a new spinlock wrapping the supplied data.",6,[[],["rwlock",3]]],[11,"into_inner","","Consumes this <code>RwLock</code>, returning the underlying data.",6,[[]]],[11,"read","","Locks this rwlock with shared read access, blocking the …",6,[[],["rwlockreadguard",3]]],[11,"try_read","","Attempt to acquire this lock with shared read access.",6,[[],[["option",4],["rwlockreadguard",3]]]],[11,"reader_count","","Return the number of readers that currently hold the lock …",6,[[],["usize",15]]],[11,"writer_count","","Return the number of writers that currently hold the lock.",6,[[],["usize",15]]],[11,"force_read_decrement","","Force decrement the reader count.",6,[[]]],[11,"force_write_unlock","","Force unlock exclusive write access.",6,[[]]],[11,"write","","Lock this rwlock with exclusive write access, blocking …",6,[[],["rwlockwriteguard",3]]],[11,"try_write","","Attempt to lock this rwlock with exclusive write access.",6,[[],[["rwlockwriteguard",3],["option",4]]]],[11,"upgradeable_read","","Obtain a readable lock guard that can later be upgraded …",6,[[],["rwlockupgradableguard",3]]],[11,"try_upgradeable_read","","Tries to obtain an upgradeable lock guard.",6,[[],[["rwlockupgradableguard",3],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[]]],[11,"leak","","Leak the lock guard, yielding a reference to the …",7,[[]]],[11,"upgrade","","Upgrades an upgradeable lock guard to a writable lock …",8,[[],["rwlockwriteguard",3]]],[11,"try_upgrade","","Tries to upgrade an upgradeable lock guard to a writable …",8,[[],[["rwlockwriteguard",3],["result",4]]]],[11,"downgrade","","Downgrades the upgradeable lock guard to a readable, …",8,[[],["rwlockreadguard",3]]],[11,"leak","","Leak the lock guard, yielding a reference to the …",8,[[]]],[11,"downgrade","","Downgrades the writable lock guard to a readable, shared …",9,[[],["rwlockreadguard",3]]],[11,"downgrade_to_upgradeable","","Downgrades the writable lock guard to an upgradable, …",9,[[],["rwlockupgradableguard",3]]],[11,"leak","","Leak the lock guard, yielding a mutable reference to the …",9,[[]]],[11,"borrow","spin::barrier","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","spin::lazy","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","spin::mutex","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","spin::once","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","spin::rw_lock","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"deref","spin::lazy","",2,[[]]],[11,"deref","spin::mutex","",11,[[]]],[11,"deref","","",13,[[]]],[11,"deref","","",4,[[]]],[11,"deref","spin::rw_lock","",7,[[]]],[11,"deref","","",8,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","spin::mutex","",11,[[]]],[11,"deref_mut","","",13,[[]]],[11,"deref_mut","","",4,[[]]],[11,"deref_mut","spin::rw_lock","",9,[[]]],[11,"fmt","spin::lazy","",2,[[["formatter",3]],["result",6]]],[11,"fmt","spin::mutex","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","spin::once","",5,[[["formatter",3]],["result",6]]],[11,"fmt","spin::rw_lock","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","spin::mutex","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","spin::rw_lock","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"drop","spin::mutex","The dropping of the MutexGuard will release the lock it …",11,[[]]],[11,"drop","","",13,[[]]],[11,"drop","spin::once","",5,[[]]],[11,"drop","spin::rw_lock","",7,[[]]],[11,"drop","","",8,[[]]],[11,"drop","","",9,[[]]],[11,"from","spin::mutex","",10,[[]]],[11,"from","","",12,[[]]],[11,"from","","",3,[[]]],[11,"from","spin::once","",5,[[]]],[11,"from","spin::rw_lock","",6,[[]]],[11,"default","spin::lazy","Creates a new lazy value using <code>Default</code> as the …",2,[[],["lazy",3]]],[11,"default","spin::mutex","",10,[[],["spinmutex",3]]],[11,"default","","",12,[[],["ticketmutex",3]]],[11,"default","","",3,[[],["mutex",3]]],[11,"default","spin::rw_lock","",6,[[],["rwlock",3]]],[11,"new","spin::mutex","Creates a new [<code>SpinMutex</code>] wrapping the supplied data.",10,[[],["spinmutex",3]]],[11,"into_inner","","Consumes this [<code>SpinMutex</code>] and unwraps the underlying data.",10,[[]]],[11,"is_locked","","Returns <code>true</code> if the lock is currently held.",10,[[],["bool",15]]],[11,"lock","","Locks the [<code>SpinMutex</code>] and returns a guard that permits …",10,[[],["spinmutexguard",3]]],[11,"force_unlock","","Force unlock this [<code>SpinMutex</code>].",10,[[]]],[11,"try_lock","","Try to lock this [<code>SpinMutex</code>], returning a lock guard if …",10,[[],[["spinmutexguard",3],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",10,[[]]],[11,"leak","","Leak the lock guard, yielding a mutable reference to the …",11,[[]]],[11,"new","","Creates a new [<code>TicketMutex</code>] wrapping the supplied data.",12,[[]]],[11,"into_inner","","Consumes this [<code>TicketMutex</code>] and unwraps the underlying …",12,[[]]],[11,"is_locked","","Returns <code>true</code> if the lock is currently held.",12,[[],["bool",15]]],[11,"lock","","Locks the [<code>TicketMutex</code>] and returns a guard that permits …",12,[[],["ticketmutexguard",3]]],[11,"force_unlock","","Force unlock this [<code>TicketMutex</code>], by serving the next …",12,[[]]],[11,"try_lock","","Try to lock this [<code>TicketMutex</code>], returning a lock guard if …",12,[[],[["option",4],["ticketmutexguard",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",12,[[]]],[11,"leak","","Leak the lock guard, yielding a mutable reference to the …",13,[[]]]],"p":[[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Lazy"],[3,"Mutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockUpgradableGuard"],[3,"RwLockWriteGuard"],[3,"SpinMutex"],[3,"SpinMutexGuard"],[3,"TicketMutex"],[3,"TicketMutexGuard"]]},\
"static_assertions":{"doc":"Banner","i":[[14,"assert_cfg","static_assertions","Asserts that a given configuration is set.",null,null],[14,"assert_eq_size","","Asserts that types are equal in size.",null,null],[14,"assert_eq_size_ptr","","Asserts that values pointed to are equal in size.",null,null],[14,"assert_eq_size_val","","Asserts that values are equal in size.",null,null],[14,"assert_eq_type","","Asserts that types are equal.",null,null],[14,"assert_fields","","Asserts that the type has the given fields.",null,null],[14,"assert_impl","","Asserts that the type implements <em>all</em> of the given traits.",null,null],[14,"assert_impl_all","","Asserts that the type implements <em>all</em> of the given traits.",null,null],[14,"assert_not_impl_all","","Asserts that the type does <strong>not</strong> implement <em>all</em> of the given …",null,null],[14,"assert_not_impl_any","","Asserts that the type does <strong>not</strong> implement <em>any</em> of the given …",null,null],[14,"assert_ne_type","","Asserts that types are <em>not</em> equal.",null,null],[14,"assert_obj_safe","","Asserts that the traits are object-safe.",null,null],[14,"const_assert","","Asserts that constant expressions evaluate to <code>true</code>.",null,null],[14,"const_assert_eq","","Asserts that constants are equal in value.",null,null],[14,"const_assert_ne","","Asserts that constants are <em>not</em> equal in value.",null,null]],"p":[]},\
"syn":{"doc":"github crates-io docs-rs","i":[[0,"token","syn","Tokens representing Rust punctuation, keywords, and …",null,null],[8,"Token","syn::token","Marker trait for types that represent single tokens.",null,null],[3,"Underscore","","<code>_</code>",null,null],[12,"spans","","",0,null],[3,"Abstract","","<code>abstract</code>",null,null],[12,"span","","",1,null],[3,"As","","<code>as</code>",null,null],[12,"span","","",2,null],[3,"Async","","<code>async</code>",null,null],[12,"span","","",3,null],[3,"Auto","","<code>auto</code>",null,null],[12,"span","","",4,null],[3,"Await","","<code>await</code>",null,null],[12,"span","","",5,null],[3,"Become","","<code>become</code>",null,null],[12,"span","","",6,null],[3,"Box","","<code>box</code>",null,null],[12,"span","","",7,null],[3,"Break","","<code>break</code>",null,null],[12,"span","","",8,null],[3,"Const","","<code>const</code>",null,null],[12,"span","","",9,null],[3,"Continue","","<code>continue</code>",null,null],[12,"span","","",10,null],[3,"Crate","","<code>crate</code>",null,null],[12,"span","","",11,null],[3,"Default","","<code>default</code>",null,null],[12,"span","","",12,null],[3,"Do","","<code>do</code>",null,null],[12,"span","","",13,null],[3,"Dyn","","<code>dyn</code>",null,null],[12,"span","","",14,null],[3,"Else","","<code>else</code>",null,null],[12,"span","","",15,null],[3,"Enum","","<code>enum</code>",null,null],[12,"span","","",16,null],[3,"Extern","","<code>extern</code>",null,null],[12,"span","","",17,null],[3,"Final","","<code>final</code>",null,null],[12,"span","","",18,null],[3,"Fn","","<code>fn</code>",null,null],[12,"span","","",19,null],[3,"For","","<code>for</code>",null,null],[12,"span","","",20,null],[3,"If","","<code>if</code>",null,null],[12,"span","","",21,null],[3,"Impl","","<code>impl</code>",null,null],[12,"span","","",22,null],[3,"In","","<code>in</code>",null,null],[12,"span","","",23,null],[3,"Let","","<code>let</code>",null,null],[12,"span","","",24,null],[3,"Loop","","<code>loop</code>",null,null],[12,"span","","",25,null],[3,"Macro","","<code>macro</code>",null,null],[12,"span","","",26,null],[3,"Match","","<code>match</code>",null,null],[12,"span","","",27,null],[3,"Mod","","<code>mod</code>",null,null],[12,"span","","",28,null],[3,"Move","","<code>move</code>",null,null],[12,"span","","",29,null],[3,"Mut","","<code>mut</code>",null,null],[12,"span","","",30,null],[3,"Override","","<code>override</code>",null,null],[12,"span","","",31,null],[3,"Priv","","<code>priv</code>",null,null],[12,"span","","",32,null],[3,"Pub","","<code>pub</code>",null,null],[12,"span","","",33,null],[3,"Ref","","<code>ref</code>",null,null],[12,"span","","",34,null],[3,"Return","","<code>return</code>",null,null],[12,"span","","",35,null],[3,"SelfType","","<code>Self</code>",null,null],[12,"span","","",36,null],[3,"SelfValue","","<code>self</code>",null,null],[12,"span","","",37,null],[3,"Static","","<code>static</code>",null,null],[12,"span","","",38,null],[3,"Struct","","<code>struct</code>",null,null],[12,"span","","",39,null],[3,"Super","","<code>super</code>",null,null],[12,"span","","",40,null],[3,"Trait","","<code>trait</code>",null,null],[12,"span","","",41,null],[3,"Try","","<code>try</code>",null,null],[12,"span","","",42,null],[3,"Type","","<code>type</code>",null,null],[12,"span","","",43,null],[3,"Typeof","","<code>typeof</code>",null,null],[12,"span","","",44,null],[3,"Union","","<code>union</code>",null,null],[12,"span","","",45,null],[3,"Unsafe","","<code>unsafe</code>",null,null],[12,"span","","",46,null],[3,"Unsized","","<code>unsized</code>",null,null],[12,"span","","",47,null],[3,"Use","","<code>use</code>",null,null],[12,"span","","",48,null],[3,"Virtual","","<code>virtual</code>",null,null],[12,"span","","",49,null],[3,"Where","","<code>where</code>",null,null],[12,"span","","",50,null],[3,"While","","<code>while</code>",null,null],[12,"span","","",51,null],[3,"Yield","","<code>yield</code>",null,null],[12,"span","","",52,null],[3,"Add","","<code>+</code>",null,null],[12,"spans","","",53,null],[3,"AddEq","","<code>+=</code>",null,null],[12,"spans","","",54,null],[3,"And","","<code>&</code>",null,null],[12,"spans","","",55,null],[3,"AndAnd","","<code>&&</code>",null,null],[12,"spans","","",56,null],[3,"AndEq","","<code>&=</code>",null,null],[12,"spans","","",57,null],[3,"At","","<code>@</code>",null,null],[12,"spans","","",58,null],[3,"Bang","","<code>!</code>",null,null],[12,"spans","","",59,null],[3,"Caret","","<code>^</code>",null,null],[12,"spans","","",60,null],[3,"CaretEq","","<code>^=</code>",null,null],[12,"spans","","",61,null],[3,"Colon","","<code>:</code>",null,null],[12,"spans","","",62,null],[3,"Colon2","","<code>::</code>",null,null],[12,"spans","","",63,null],[3,"Comma","","<code>,</code>",null,null],[12,"spans","","",64,null],[3,"Div","","<code>/</code>",null,null],[12,"spans","","",65,null],[3,"DivEq","","<code>/=</code>",null,null],[12,"spans","","",66,null],[3,"Dollar","","<code>$</code>",null,null],[12,"spans","","",67,null],[3,"Dot","","<code>.</code>",null,null],[12,"spans","","",68,null],[3,"Dot2","","<code>..</code>",null,null],[12,"spans","","",69,null],[3,"Dot3","","<code>...</code>",null,null],[12,"spans","","",70,null],[3,"DotDotEq","","<code>..=</code>",null,null],[12,"spans","","",71,null],[3,"Eq","","<code>=</code>",null,null],[12,"spans","","",72,null],[3,"EqEq","","<code>==</code>",null,null],[12,"spans","","",73,null],[3,"Ge","","<code>>=</code>",null,null],[12,"spans","","",74,null],[3,"Gt","","<code>></code>",null,null],[12,"spans","","",75,null],[3,"Le","","<code><=</code>",null,null],[12,"spans","","",76,null],[3,"Lt","","<code><</code>",null,null],[12,"spans","","",77,null],[3,"MulEq","","<code>*=</code>",null,null],[12,"spans","","",78,null],[3,"Ne","","<code>!=</code>",null,null],[12,"spans","","",79,null],[3,"Or","","<code>|</code>",null,null],[12,"spans","","",80,null],[3,"OrEq","","<code>|=</code>",null,null],[12,"spans","","",81,null],[3,"OrOr","","<code>||</code>",null,null],[12,"spans","","",82,null],[3,"Pound","","<code>#</code>",null,null],[12,"spans","","",83,null],[3,"Question","","<code>?</code>",null,null],[12,"spans","","",84,null],[3,"RArrow","","<code>-></code>",null,null],[12,"spans","","",85,null],[3,"LArrow","","<code><-</code>",null,null],[12,"spans","","",86,null],[3,"Rem","","<code>%</code>",null,null],[12,"spans","","",87,null],[3,"RemEq","","<code>%=</code>",null,null],[12,"spans","","",88,null],[3,"FatArrow","","<code>=></code>",null,null],[12,"spans","","",89,null],[3,"Semi","","<code>;</code>",null,null],[12,"spans","","",90,null],[3,"Shl","","<code><<</code>",null,null],[12,"spans","","",91,null],[3,"ShlEq","","<code><<=</code>",null,null],[12,"spans","","",92,null],[3,"Shr","","<code>>></code>",null,null],[12,"spans","","",93,null],[3,"ShrEq","","<code>>>=</code>",null,null],[12,"spans","","",94,null],[3,"Star","","<code>*</code>",null,null],[12,"spans","","",95,null],[3,"Sub","","<code>-</code>",null,null],[12,"spans","","",96,null],[3,"SubEq","","<code>-=</code>",null,null],[12,"spans","","",97,null],[3,"Tilde","","<code>~</code>",null,null],[12,"spans","","",98,null],[3,"Brace","","<code>{...}</code>",null,null],[12,"span","","",99,null],[11,"surround","","",99,[[["tokenstream",3]]]],[3,"Bracket","","<code>[...]</code>",null,null],[12,"span","","",100,null],[11,"surround","","",100,[[["tokenstream",3]]]],[3,"Paren","","<code>(...)</code>",null,null],[12,"span","","",101,null],[11,"surround","","",101,[[["tokenstream",3]]]],[3,"Group","","None-delimited group",null,null],[12,"span","","",102,null],[11,"surround","","",102,[[["tokenstream",3]]]],[0,"buffer","syn","A stably addressed token buffer supporting efficient …",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple …",null,null],[11,"new","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the …",103,[[],["cursor",3]]],[3,"Cursor","","A cheaply copyable cursor into a <code>TokenBuffer</code>.",null,null],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",104,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the …",104,[[],["bool",15]]],[11,"group","","If the cursor is pointing at a <code>Group</code> with the given …",104,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a <code>Ident</code>, returns it along …",104,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an <code>Punct</code>, returns it along …",104,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a <code>Literal</code>, return it along …",104,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a <code>Lifetime</code>, returns it along …",104,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into …",104,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a <code>TokenTree</code>, returns it …",104,[[],["option",4]]],[11,"span","","Returns the <code>Span</code> of the current token, or …",104,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign …",null,null],[8,"IdentExt","syn::ext","Additional methods for <code>Ident</code> not provided by proc-macro2 …",null,null],[10,"parse_any","","Parses any identifier including keywords.",105,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage: …",105,null],[10,"unraw","","Strips the raw marker <code>r#</code>, if any, from the beginning of …",105,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by …",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type <code>T</code> …",null,null],[11,"new","","Creates an empty punctuated sequence.",106,[[]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, …",106,[[],["bool",15]]],[11,"len","","Returns the number of syntax tree nodes in this …",106,[[],["usize",15]]],[11,"first","","Borrows the first element in this sequence.",106,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",106,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",106,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",106,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of …",106,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree …",106,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as …",106,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this …",106,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or …",106,[[],[["option",4],["pair",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a …",106,[[],["bool",15]]],[11,"empty_or_trailing","","Returns true if either this <code>Punctuated</code> is empty, or it …",106,[[],["bool",15]]],[11,"push","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"insert","","Inserts an element at position <code>index</code>.",106,[[["usize",15]]]],[11,"clear","","Clears the sequence of all values and punctuation, making …",106,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of <code>T</code> using the given …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of <code>T</code> using the given parse …",106,[[["parsestream",6]],["result",6]]],[3,"Pairs","","An iterator over borrowed pairs of type <code>Pair<&T, &P></code>.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type …",null,null],[3,"IntoPairs","","An iterator over owned pairs of type <code>Pair<T, P></code>.",null,null],[3,"IntoIter","","An iterator over owned values of type <code>T</code>.",null,null],[3,"Iter","","An iterator over borrowed values of type <code>&T</code>.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type <code>&mut T</code>.",null,null],[4,"Pair","","A single syntax tree node of type <code>T</code> followed by its …",null,null],[13,"Punctuated","","",107,null],[13,"End","","",107,null],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, …",107,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",107,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated …",107,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless …",107,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and …",107,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree …",107,[[]]],[0,"spanned","syn","A trait that can provide the <code>Span</code> of the complete …",null,null],[8,"Spanned","syn::spanned","A trait that can provide the <code>Span</code> of the complete …",null,null],[10,"span","","Returns a <code>Span</code> covering the complete contents of this …",108,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax …",null,null],[8,"Visit","syn::visit","Syntax tree traversal to walk a shared borrow of a syntax …",null,null],[11,"visit_abi","","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[5,"visit_abi","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm","","",null,[[["arm",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_block","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_array","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async","","",null,[[["exprasync",3]]]],[5,"visit_expr_await","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block","","",null,[[["exprblock",3]]]],[5,"visit_expr_box","","",null,[[["exprbox",3]]]],[5,"visit_expr_break","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if","","",null,[[["exprif",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_let","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_range","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield","","",null,[[["expryield",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_field_pat","","",null,[[["fieldpat",3]]]],[5,"visit_field_value","","",null,[[["fieldvalue",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file","","",null,[[["file",3]]]],[5,"visit_fn_arg","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_impl_item","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type","","",null,[[["implitemtype",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_item","","",null,[[["item",4]]]],[5,"visit_item_const","","",null,[[["itemconst",3]]]],[5,"visit_item_enum","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod","","",null,[[["itemmod",3]]]],[5,"visit_item_static","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type","","",null,[[["itemtype",3]]]],[5,"visit_item_union","","",null,[[["itemunion",3]]]],[5,"visit_item_use","","",null,[[["itemuse",3]]]],[5,"visit_label","","",null,[[["label",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_local","","",null,[[["local",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat","","",null,[[["pat",4]]]],[5,"visit_pat_box","","",null,[[["patbox",3]]]],[5,"visit_pat_ident","","",null,[[["patident",3]]]],[5,"visit_pat_lit","","",null,[[["patlit",3]]]],[5,"visit_pat_macro","","",null,[[["patmacro",3]]]],[5,"visit_pat_or","","",null,[[["pator",3]]]],[5,"visit_pat_path","","",null,[[["patpath",3]]]],[5,"visit_pat_range","","",null,[[["patrange",3]]]],[5,"visit_pat_reference","","",null,[[["patreference",3]]]],[5,"visit_pat_rest","","",null,[[["patrest",3]]]],[5,"visit_pat_slice","","",null,[[["patslice",3]]]],[5,"visit_pat_struct","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type","","",null,[[["pattype",3]]]],[5,"visit_pat_wild","","",null,[[["patwild",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_range_limits","","",null,[[["rangelimits",4]]]],[5,"visit_receiver","","",null,[[["receiver",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_signature","","",null,[[["signature",3]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_stmt","","",null,[[["stmt",4]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype",3]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_use_glob","","",null,[[["useglob",3]]]],[5,"visit_use_group","","",null,[[["usegroup",3]]]],[5,"visit_use_name","","",null,[[["usename",3]]]],[5,"visit_use_path","","",null,[[["usepath",3]]]],[5,"visit_use_rename","","",null,[[["userename",3]]]],[5,"visit_use_tree","","",null,[[["usetree",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[0,"visit_mut","syn","Syntax tree traversal to mutate an exclusive borrow of a …",null,null],[8,"VisitMut","syn::visit_mut","Syntax tree traversal to mutate an exclusive borrow of a …",null,null],[11,"visit_abi_mut","","",110,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",110,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",110,[[["arm",3]]]],[11,"visit_attr_style_mut","","",110,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",110,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",110,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",110,[[["binop",4]]]],[11,"visit_binding_mut","","",110,[[["binding",3]]]],[11,"visit_block_mut","","",110,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",110,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",110,[[["constparam",3]]]],[11,"visit_constraint_mut","","",110,[[["constraint",3]]]],[11,"visit_data_mut","","",110,[[["data",4]]]],[11,"visit_data_enum_mut","","",110,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",110,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",110,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",110,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",110,[[["expr",4]]]],[11,"visit_expr_array_mut","","",110,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",110,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",110,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",110,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",110,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",110,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",110,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",110,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",110,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",110,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",110,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",110,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",110,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",110,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",110,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",110,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",110,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",110,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",110,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",110,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",110,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",110,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",110,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",110,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",110,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",110,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",110,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",110,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",110,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",110,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",110,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",110,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",110,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",110,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",110,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",110,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",110,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",110,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",110,[[["expryield",3]]]],[11,"visit_field_mut","","",110,[[["field",3]]]],[11,"visit_field_pat_mut","","",110,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",110,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",110,[[["fields",4]]]],[11,"visit_fields_named_mut","","",110,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",110,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",110,[[["file",3]]]],[11,"visit_fn_arg_mut","","",110,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",110,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",110,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",110,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",110,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",110,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",110,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",110,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",110,[[["genericparam",4]]]],[11,"visit_generics_mut","","",110,[[["generics",3]]]],[11,"visit_ident_mut","","",110,[[["ident",3]]]],[11,"visit_impl_item_mut","","",110,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",110,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",110,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",110,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",110,[[["implitemtype",3]]]],[11,"visit_index_mut","","",110,[[["index",3]]]],[11,"visit_item_mut","","",110,[[["item",4]]]],[11,"visit_item_const_mut","","",110,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",110,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",110,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",110,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",110,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",110,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",110,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",110,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",110,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",110,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",110,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",110,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",110,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",110,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",110,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",110,[[["itemuse",3]]]],[11,"visit_label_mut","","",110,[[["label",3]]]],[11,"visit_lifetime_mut","","",110,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",110,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",110,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",110,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",110,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",110,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",110,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",110,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",110,[[["litint",3]]]],[11,"visit_lit_str_mut","","",110,[[["litstr",3]]]],[11,"visit_local_mut","","",110,[[["local",3]]]],[11,"visit_macro_mut","","",110,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",110,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",110,[[["member",4]]]],[11,"visit_meta_mut","","",110,[[["meta",4]]]],[11,"visit_meta_list_mut","","",110,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",110,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",110,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",110,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",110,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",110,[[["pat",4]]]],[11,"visit_pat_box_mut","","",110,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",110,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",110,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",110,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",110,[[["pator",3]]]],[11,"visit_pat_path_mut","","",110,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",110,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",110,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",110,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",110,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",110,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",110,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",110,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",110,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",110,[[["patwild",3]]]],[11,"visit_path_mut","","",110,[[["path",3]]]],[11,"visit_path_arguments_mut","","",110,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",110,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",110,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",110,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",110,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",110,[[["qself",3]]]],[11,"visit_range_limits_mut","","",110,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",110,[[["receiver",3]]]],[11,"visit_return_type_mut","","",110,[[["returntype",4]]]],[11,"visit_signature_mut","","",110,[[["signature",3]]]],[11,"visit_span_mut","","",110,[[["span",3]]]],[11,"visit_stmt_mut","","",110,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",110,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",110,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",110,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",110,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",110,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",110,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",110,[[["traititemtype",3]]]],[11,"visit_type_mut","","",110,[[["type",4]]]],[11,"visit_type_array_mut","","",110,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",110,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",110,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",110,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",110,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",110,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",110,[[["typenever",3]]]],[11,"visit_type_param_mut","","",110,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",110,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",110,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",110,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",110,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",110,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",110,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",110,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",110,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",110,[[["unop",4]]]],[11,"visit_use_glob_mut","","",110,[[["useglob",3]]]],[11,"visit_use_group_mut","","",110,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",110,[[["usename",3]]]],[11,"visit_use_path_mut","","",110,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",110,[[["userename",3]]]],[11,"visit_use_tree_mut","","",110,[[["usetree",4]]]],[11,"visit_variadic_mut","","",110,[[["variadic",3]]]],[11,"visit_variant_mut","","",110,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",110,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",110,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",110,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",110,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",110,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",110,[[["wherepredicate",4]]]],[5,"visit_abi_mut","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments_mut","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm_mut","","",null,[[["arm",3]]]],[5,"visit_attr_style_mut","","",null,[[["attrstyle",4]]]],[5,"visit_attribute_mut","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg_mut","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op_mut","","",null,[[["binop",4]]]],[5,"visit_binding_mut","","",null,[[["binding",3]]]],[5,"visit_block_mut","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes_mut","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param_mut","","",null,[[["constparam",3]]]],[5,"visit_constraint_mut","","",null,[[["constraint",3]]]],[5,"visit_data_mut","","",null,[[["data",4]]]],[5,"visit_data_enum_mut","","",null,[[["dataenum",3]]]],[5,"visit_data_struct_mut","","",null,[[["datastruct",3]]]],[5,"visit_data_union_mut","","",null,[[["dataunion",3]]]],[5,"visit_derive_input_mut","","",null,[[["deriveinput",3]]]],[5,"visit_expr_mut","","",null,[[["expr",4]]]],[5,"visit_expr_array_mut","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign_mut","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op_mut","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async_mut","","",null,[[["exprasync",3]]]],[5,"visit_expr_await_mut","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary_mut","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block_mut","","",null,[[["exprblock",3]]]],[5,"visit_expr_box_mut","","",null,[[["exprbox",3]]]],[5,"visit_expr_break_mut","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call_mut","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast_mut","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure_mut","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue_mut","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field_mut","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop_mut","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group_mut","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if_mut","","",null,[[["exprif",3]]]],[5,"visit_expr_index_mut","","",null,[[["exprindex",3]]]],[5,"visit_expr_let_mut","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit_mut","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop_mut","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro_mut","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match_mut","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call_mut","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren_mut","","",null,[[["exprparen",3]]]],[5,"visit_expr_path_mut","","",null,[[["exprpath",3]]]],[5,"visit_expr_range_mut","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference_mut","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat_mut","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return_mut","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct_mut","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try_mut","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block_mut","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple_mut","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type_mut","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary_mut","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe_mut","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while_mut","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield_mut","","",null,[[["expryield",3]]]],[5,"visit_field_mut","","",null,[[["field",3]]]],[5,"visit_field_pat_mut","","",null,[[["fieldpat",3]]]],[5,"visit_field_value_mut","","",null,[[["fieldvalue",3]]]],[5,"visit_fields_mut","","",null,[[["fields",4]]]],[5,"visit_fields_named_mut","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed_mut","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file_mut","","",null,[[["file",3]]]],[5,"visit_fn_arg_mut","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item_mut","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn_mut","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro_mut","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static_mut","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type_mut","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument_mut","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument_mut","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param_mut","","",null,[[["genericparam",4]]]],[5,"visit_generics_mut","","",null,[[["generics",3]]]],[5,"visit_ident_mut","","",null,[[["ident",3]]]],[5,"visit_impl_item_mut","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const_mut","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro_mut","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method_mut","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type_mut","","",null,[[["implitemtype",3]]]],[5,"visit_index_mut","","",null,[[["index",3]]]],[5,"visit_item_mut","","",null,[[["item",4]]]],[5,"visit_item_const_mut","","",null,[[["itemconst",3]]]],[5,"visit_item_enum_mut","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate_mut","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn_mut","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod_mut","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl_mut","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro_mut","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2_mut","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod_mut","","",null,[[["itemmod",3]]]],[5,"visit_item_static_mut","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct_mut","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait_mut","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias_mut","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type_mut","","",null,[[["itemtype",3]]]],[5,"visit_item_union_mut","","",null,[[["itemunion",3]]]],[5,"visit_item_use_mut","","",null,[[["itemuse",3]]]],[5,"visit_label_mut","","",null,[[["label",3]]]],[5,"visit_lifetime_mut","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def_mut","","",null,[[["lifetimedef",3]]]],[5,"visit_lit_mut","","",null,[[["lit",4]]]],[5,"visit_lit_bool_mut","","",null,[[["litbool",3]]]],[5,"visit_lit_byte_mut","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str_mut","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char_mut","","",null,[[["litchar",3]]]],[5,"visit_lit_float_mut","","",null,[[["litfloat",3]]]],[5,"visit_lit_int_mut","","",null,[[["litint",3]]]],[5,"visit_lit_str_mut","","",null,[[["litstr",3]]]],[5,"visit_local_mut","","",null,[[["local",3]]]],[5,"visit_macro_mut","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter_mut","","",null,[[["macrodelimiter",4]]]],[5,"visit_member_mut","","",null,[[["member",4]]]],[5,"visit_meta_mut","","",null,[[["meta",4]]]],[5,"visit_meta_list_mut","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value_mut","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish_mut","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta_mut","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments_mut","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat_mut","","",null,[[["pat",4]]]],[5,"visit_pat_box_mut","","",null,[[["patbox",3]]]],[5,"visit_pat_ident_mut","","",null,[[["patident",3]]]],[5,"visit_pat_lit_mut","","",null,[[["patlit",3]]]],[5,"visit_pat_macro_mut","","",null,[[["patmacro",3]]]],[5,"visit_pat_or_mut","","",null,[[["pator",3]]]],[5,"visit_pat_path_mut","","",null,[[["patpath",3]]]],[5,"visit_pat_range_mut","","",null,[[["patrange",3]]]],[5,"visit_pat_reference_mut","","",null,[[["patreference",3]]]],[5,"visit_pat_rest_mut","","",null,[[["patrest",3]]]],[5,"visit_pat_slice_mut","","",null,[[["patslice",3]]]],[5,"visit_pat_struct_mut","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple_mut","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct_mut","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type_mut","","",null,[[["pattype",3]]]],[5,"visit_pat_wild_mut","","",null,[[["patwild",3]]]],[5,"visit_path_mut","","",null,[[["path",3]]]],[5,"visit_path_arguments_mut","","",null,[[["patharguments",4]]]],[5,"visit_path_segment_mut","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq_mut","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime_mut","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type_mut","","",null,[[["predicatetype",3]]]],[5,"visit_qself_mut","","",null,[[["qself",3]]]],[5,"visit_range_limits_mut","","",null,[[["rangelimits",4]]]],[5,"visit_receiver_mut","","",null,[[["receiver",3]]]],[5,"visit_return_type_mut","","",null,[[["returntype",4]]]],[5,"visit_signature_mut","","",null,[[["signature",3]]]],[5,"visit_span_mut","","",null,[[["span",3]]]],[5,"visit_stmt_mut","","",null,[[["stmt",4]]]],[5,"visit_trait_bound_mut","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier_mut","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item_mut","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const_mut","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro_mut","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method_mut","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type_mut","","",null,[[["traititemtype",3]]]],[5,"visit_type_mut","","",null,[[["type",4]]]],[5,"visit_type_array_mut","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn_mut","","",null,[[["typebarefn",3]]]],[5,"visit_type_group_mut","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait_mut","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer_mut","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro_mut","","",null,[[["typemacro",3]]]],[5,"visit_type_never_mut","","",null,[[["typenever",3]]]],[5,"visit_type_param_mut","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound_mut","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren_mut","","",null,[[["typeparen",3]]]],[5,"visit_type_path_mut","","",null,[[["typepath",3]]]],[5,"visit_type_ptr_mut","","",null,[[["typeptr",3]]]],[5,"visit_type_reference_mut","","",null,[[["typereference",3]]]],[5,"visit_type_slice_mut","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object_mut","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple_mut","","",null,[[["typetuple",3]]]],[5,"visit_un_op_mut","","",null,[[["unop",4]]]],[5,"visit_use_glob_mut","","",null,[[["useglob",3]]]],[5,"visit_use_group_mut","","",null,[[["usegroup",3]]]],[5,"visit_use_name_mut","","",null,[[["usename",3]]]],[5,"visit_use_path_mut","","",null,[[["usepath",3]]]],[5,"visit_use_rename_mut","","",null,[[["userename",3]]]],[5,"visit_use_tree_mut","","",null,[[["usetree",4]]]],[5,"visit_variadic_mut","","",null,[[["variadic",3]]]],[5,"visit_variant_mut","","",null,[[["variant",3]]]],[5,"visit_vis_crate_mut","","",null,[[["viscrate",3]]]],[5,"visit_vis_public_mut","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted_mut","","",null,[[["visrestricted",3]]]],[5,"visit_visibility_mut","","",null,[[["visibility",4]]]],[5,"visit_where_clause_mut","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate_mut","","",null,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a …",null,null],[0,"discouraged","syn::parse","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the <code>ParseStream</code> API to support speculative …",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked …",111,[[]]],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide …",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be …",null,null],[10,"parse","","",112,[[["parsestream",6]],["result",6]]],[6,"ParseStream","","Input to a Syn parser function.",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[11,"error","","Triggers an error at the current position of the parse …",113,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type <code>T</code>, advancing the …",114,[[],[["result",6],["parse",8]]]],[11,"call","","Calls the given parser function to parse a syntax tree …",114,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine …",114,[[["peek",8]],["bool",15]]],[11,"peek2","","Looks at the second-next token in the parse stream.",114,[[["peek",8]],["bool",15]]],[11,"peek3","","Looks at the third-next token in the parse stream.",114,[[["peek",8]],["bool",15]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",114,[[],[["result",6],["punctuated",3]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",114,[[],["bool",15]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this …",114,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either …",114,[[]]],[11,"error","","Triggers an error at the current position of the parse …",114,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream, …",114,[[],["result",6]]],[11,"span","","Returns the <code>Span</code> of the next token in the parse stream, or…",114,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation …",114,[[],["cursor",3]]],[8,"Parser","","Parser that can parse Rust tokens into a particular …",null,null],[16,"Output","","",115,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",115,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree …",115,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",115,[[["str",15]],["result",6]]],[3,"Nothing","","An empty syntax tree node that consumes no tokens when …",null,null],[11,"new","","Usually the <code>ParseStream::error</code> method will be used …",116,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the …",116,[[["totokens",8],["display",8]]]],[11,"span","","The source location of the error.",116,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",116,[[],["tokenstream",3]]],[11,"into_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",116,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when …",116,[[["error",3]]]],[3,"Ident","syn","A word of Rust code, which may be a keyword or legal …",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item …",null,null],[13,"Outer","","",117,null],[13,"Inner","","",117,null],[3,"Attribute","","An attribute like <code>#[repr(transparent)]</code>.",null,null],[12,"pound_token","","",118,null],[12,"style","","",118,null],[12,"bracket_token","","",118,null],[12,"path","","",118,null],[12,"tokens","","",118,null],[6,"AttributeArgs","","Conventional argument type associated with an invocation …",null,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",119,null],[13,"List","","A structured list within an attribute, like …",119,null],[13,"NameValue","","A name-value pair within an attribute, like …",119,null],[3,"MetaList","","A structured list within an attribute, like …",null,null],[12,"path","","",120,null],[12,"paren_token","","",120,null],[12,"nested","","",120,null],[3,"MetaNameValue","","A name-value pair within an attribute, like …",null,null],[12,"path","","",121,null],[12,"eq_token","","",121,null],[12,"lit","","",121,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …",122,null],[13,"Lit","","A Rust literal, like the <code>\\\"new_name\\\"</code> in …",122,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",123,null],[12,"vis","","Visibility of the field.",123,null],[12,"ident","","Name of the field, if any.",123,null],[12,"colon_token","","",123,null],[12,"ty","","Type of the field.",123,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as …",124,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as …",124,null],[13,"Unit","","Unit struct or unit variant such as <code>None</code>.",124,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as …",null,null],[12,"brace_token","","",125,null],[12,"named","","",125,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as …",null,null],[12,"paren_token","","",126,null],[12,"unnamed","","",126,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",127,null],[12,"ident","","Name of the variant.",127,null],[12,"fields","","Content stored in the variant.",127,null],[12,"discriminant","","Explicit discriminant: <code>Variant = 1</code>",127,null],[3,"VisCrate","","A crate-level visibility: <code>crate</code>.",null,null],[12,"crate_token","","",128,null],[3,"VisPublic","","A public visibility level: <code>pub</code>.",null,null],[12,"pub_token","","",129,null],[3,"VisRestricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",null,null],[12,"pub_token","","",130,null],[12,"paren_token","","",130,null],[12,"in_token","","",130,null],[12,"path","","",130,null],[4,"Visibility","","The visibility level of an item: inherited or <code>pub</code> or …",null,null],[13,"Public","","A public visibility level: <code>pub</code>.",131,null],[13,"Crate","","A crate-level visibility: <code>crate</code>.",131,null],[13,"Restricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",131,null],[13,"Inherited","","An inherited visibility, which usually means private.",131,null],[3,"Arm","","One arm of a <code>match</code> expression: <code>0...10 => { return true; }</code>.",null,null],[12,"attrs","","",132,null],[12,"pat","","",132,null],[12,"guard","","",132,null],[12,"fat_arrow_token","","",132,null],[12,"body","","",132,null],[12,"comma","","",132,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",133,null],[12,"member","","Name or index of the field.",133,null],[12,"colon_token","","The colon in <code>Struct { x: x }</code>. If written in shorthand like…",133,null],[12,"expr","","Value of the field.",133,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like <code>T</code>.",null,null],[13,"Type","","A type argument.",134,null],[13,"Const","","A const expression. Must be inside of a block.",134,null],[3,"Label","","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.",null,null],[12,"name","","",135,null],[12,"colon_token","","",135,null],[3,"MethodTurbofish","","The <code>::<></code> explicit type parameters passed to a method call:…",null,null],[12,"colon2_token","","",136,null],[12,"lt_token","","",136,null],[12,"args","","",136,null],[12,"gt_token","","",136,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",137,null],[13,"Closed","","Inclusive at the beginning and end.",137,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: <code>[a, b, c, d]</code>.",138,null],[13,"Assign","","An assignment expression: <code>a = compute()</code>.",138,null],[13,"AssignOp","","A compound assignment expression: <code>counter += 1</code>.",138,null],[13,"Async","","An async block: <code>async { ... }</code>.",138,null],[13,"Await","","An await expression: <code>fut.await</code>.",138,null],[13,"Binary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",138,null],[13,"Block","","A blocked scope: <code>{ ... }</code>.",138,null],[13,"Box","","A box expression: <code>box f</code>.",138,null],[13,"Break","","A <code>break</code>, with an optional label to break and an optional …",138,null],[13,"Call","","A function call expression: <code>invoke(a, b)</code>.",138,null],[13,"Cast","","A cast expression: <code>foo as f64</code>.",138,null],[13,"Closure","","A closure expression: <code>|a, b| a + b</code>.",138,null],[13,"Continue","","A <code>continue</code>, with an optional label.",138,null],[13,"Field","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",138,null],[13,"ForLoop","","A for loop: <code>for pat in expr { ... }</code>.",138,null],[13,"Group","","An expression contained within invisible delimiters.",138,null],[13,"If","","An <code>if</code> expression with an optional <code>else</code> block: …",138,null],[13,"Index","","A square bracketed indexing expression: <code>vector[2]</code>.",138,null],[13,"Let","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",138,null],[13,"Lit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",138,null],[13,"Loop","","Conditionless loop: <code>loop { ... }</code>.",138,null],[13,"Macro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",138,null],[13,"Match","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",138,null],[13,"MethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",138,null],[13,"Paren","","A parenthesized expression: <code>(a + b)</code>.",138,null],[13,"Path","","A path like <code>std::mem::replace</code> possibly containing generic …",138,null],[13,"Range","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",138,null],[13,"Reference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",138,null],[13,"Repeat","","An array literal constructed from one repeated element: …",138,null],[13,"Return","","A <code>return</code>, with an optional value to be returned.",138,null],[13,"Struct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",138,null],[13,"Try","","A try-expression: <code>expr?</code>.",138,null],[13,"TryBlock","","A try block: <code>try { ... }</code>.",138,null],[13,"Tuple","","A tuple expression: <code>(a, b, c, d)</code>.",138,null],[13,"Type","","A type ascription expression: <code>foo: f64</code>.",138,null],[13,"Unary","","A unary operation: <code>!x</code>, <code>*x</code>.",138,null],[13,"Unsafe","","An unsafe block: <code>unsafe { ... }</code>.",138,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",138,null],[13,"While","","A while loop: <code>while expr { ... }</code>.",138,null],[13,"Yield","","A yield expression: <code>yield expr</code>.",138,null],[3,"ExprArray","","A slice literal expression: <code>[a, b, c, d]</code>.",null,null],[12,"attrs","","",139,null],[12,"bracket_token","","",139,null],[12,"elems","","",139,null],[3,"ExprAssign","","An assignment expression: <code>a = compute()</code>.",null,null],[12,"attrs","","",140,null],[12,"left","","",140,null],[12,"eq_token","","",140,null],[12,"right","","",140,null],[3,"ExprAssignOp","","A compound assignment expression: <code>counter += 1</code>.",null,null],[12,"attrs","","",141,null],[12,"left","","",141,null],[12,"op","","",141,null],[12,"right","","",141,null],[3,"ExprAsync","","An async block: <code>async { ... }</code>.",null,null],[12,"attrs","","",142,null],[12,"async_token","","",142,null],[12,"capture","","",142,null],[12,"block","","",142,null],[3,"ExprAwait","","An await expression: <code>fut.await</code>.",null,null],[12,"attrs","","",143,null],[12,"base","","",143,null],[12,"dot_token","","",143,null],[12,"await_token","","",143,null],[3,"ExprBinary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",null,null],[12,"attrs","","",144,null],[12,"left","","",144,null],[12,"op","","",144,null],[12,"right","","",144,null],[3,"ExprBlock","","A blocked scope: <code>{ ... }</code>.",null,null],[12,"attrs","","",145,null],[12,"label","","",145,null],[12,"block","","",145,null],[3,"ExprBox","","A box expression: <code>box f</code>.",null,null],[12,"attrs","","",146,null],[12,"box_token","","",146,null],[12,"expr","","",146,null],[3,"ExprBreak","","A <code>break</code>, with an optional label to break and an optional …",null,null],[12,"attrs","","",147,null],[12,"break_token","","",147,null],[12,"label","","",147,null],[12,"expr","","",147,null],[3,"ExprCall","","A function call expression: <code>invoke(a, b)</code>.",null,null],[12,"attrs","","",148,null],[12,"func","","",148,null],[12,"paren_token","","",148,null],[12,"args","","",148,null],[3,"ExprCast","","A cast expression: <code>foo as f64</code>.",null,null],[12,"attrs","","",149,null],[12,"expr","","",149,null],[12,"as_token","","",149,null],[12,"ty","","",149,null],[3,"ExprClosure","","A closure expression: <code>|a, b| a + b</code>.",null,null],[12,"attrs","","",150,null],[12,"asyncness","","",150,null],[12,"movability","","",150,null],[12,"capture","","",150,null],[12,"or1_token","","",150,null],[12,"inputs","","",150,null],[12,"or2_token","","",150,null],[12,"output","","",150,null],[12,"body","","",150,null],[3,"ExprContinue","","A <code>continue</code>, with an optional label.",null,null],[12,"attrs","","",151,null],[12,"continue_token","","",151,null],[12,"label","","",151,null],[3,"ExprField","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",null,null],[12,"attrs","","",152,null],[12,"base","","",152,null],[12,"dot_token","","",152,null],[12,"member","","",152,null],[3,"ExprForLoop","","A for loop: <code>for pat in expr { ... }</code>.",null,null],[12,"attrs","","",153,null],[12,"label","","",153,null],[12,"for_token","","",153,null],[12,"pat","","",153,null],[12,"in_token","","",153,null],[12,"expr","","",153,null],[12,"body","","",153,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",154,null],[12,"group_token","","",154,null],[12,"expr","","",154,null],[3,"ExprIf","","An <code>if</code> expression with an optional <code>else</code> block: …",null,null],[12,"attrs","","",155,null],[12,"if_token","","",155,null],[12,"cond","","",155,null],[12,"then_branch","","",155,null],[12,"else_branch","","",155,null],[3,"ExprIndex","","A square bracketed indexing expression: <code>vector[2]</code>.",null,null],[12,"attrs","","",156,null],[12,"expr","","",156,null],[12,"bracket_token","","",156,null],[12,"index","","",156,null],[3,"ExprLet","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",null,null],[12,"attrs","","",157,null],[12,"let_token","","",157,null],[12,"pat","","",157,null],[12,"eq_token","","",157,null],[12,"expr","","",157,null],[3,"ExprLit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",null,null],[12,"attrs","","",158,null],[12,"lit","","",158,null],[3,"ExprLoop","","Conditionless loop: <code>loop { ... }</code>.",null,null],[12,"attrs","","",159,null],[12,"label","","",159,null],[12,"loop_token","","",159,null],[12,"body","","",159,null],[3,"ExprMacro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",null,null],[12,"attrs","","",160,null],[12,"mac","","",160,null],[3,"ExprMatch","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",null,null],[12,"attrs","","",161,null],[12,"match_token","","",161,null],[12,"expr","","",161,null],[12,"brace_token","","",161,null],[12,"arms","","",161,null],[3,"ExprMethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",null,null],[12,"attrs","","",162,null],[12,"receiver","","",162,null],[12,"dot_token","","",162,null],[12,"method","","",162,null],[12,"turbofish","","",162,null],[12,"paren_token","","",162,null],[12,"args","","",162,null],[3,"ExprParen","","A parenthesized expression: <code>(a + b)</code>.",null,null],[12,"attrs","","",163,null],[12,"paren_token","","",163,null],[12,"expr","","",163,null],[3,"ExprPath","","A path like <code>std::mem::replace</code> possibly containing generic …",null,null],[12,"attrs","","",164,null],[12,"qself","","",164,null],[12,"path","","",164,null],[3,"ExprRange","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",null,null],[12,"attrs","","",165,null],[12,"from","","",165,null],[12,"limits","","",165,null],[12,"to","","",165,null],[3,"ExprReference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",null,null],[12,"attrs","","",166,null],[12,"and_token","","",166,null],[12,"raw","","",166,null],[12,"mutability","","",166,null],[12,"expr","","",166,null],[3,"ExprRepeat","","An array literal constructed from one repeated element: …",null,null],[12,"attrs","","",167,null],[12,"bracket_token","","",167,null],[12,"expr","","",167,null],[12,"semi_token","","",167,null],[12,"len","","",167,null],[3,"ExprReturn","","A <code>return</code>, with an optional value to be returned.",null,null],[12,"attrs","","",168,null],[12,"return_token","","",168,null],[12,"expr","","",168,null],[3,"ExprStruct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",null,null],[12,"attrs","","",169,null],[12,"path","","",169,null],[12,"brace_token","","",169,null],[12,"fields","","",169,null],[12,"dot2_token","","",169,null],[12,"rest","","",169,null],[3,"ExprTry","","A try-expression: <code>expr?</code>.",null,null],[12,"attrs","","",170,null],[12,"expr","","",170,null],[12,"question_token","","",170,null],[3,"ExprTryBlock","","A try block: <code>try { ... }</code>.",null,null],[12,"attrs","","",171,null],[12,"try_token","","",171,null],[12,"block","","",171,null],[3,"ExprTuple","","A tuple expression: <code>(a, b, c, d)</code>.",null,null],[12,"attrs","","",172,null],[12,"paren_token","","",172,null],[12,"elems","","",172,null],[3,"ExprType","","A type ascription expression: <code>foo: f64</code>.",null,null],[12,"attrs","","",173,null],[12,"expr","","",173,null],[12,"colon_token","","",173,null],[12,"ty","","",173,null],[3,"ExprUnary","","A unary operation: <code>!x</code>, <code>*x</code>.",null,null],[12,"attrs","","",174,null],[12,"op","","",174,null],[12,"expr","","",174,null],[3,"ExprUnsafe","","An unsafe block: <code>unsafe { ... }</code>.",null,null],[12,"attrs","","",175,null],[12,"unsafe_token","","",175,null],[12,"block","","",175,null],[3,"ExprWhile","","A while loop: <code>while expr { ... }</code>.",null,null],[12,"attrs","","",176,null],[12,"label","","",176,null],[12,"while_token","","",176,null],[12,"cond","","",176,null],[12,"body","","",176,null],[3,"ExprYield","","A yield expression: <code>yield expr</code>.",null,null],[12,"attrs","","",177,null],[12,"yield_token","","",177,null],[12,"expr","","",177,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",178,null],[12,"span","","",178,null],[4,"Member","","A struct or tuple struct field accessed in a struct …",null,null],[13,"Named","","A named field like <code>self.x</code>.",179,null],[13,"Unnamed","","An unnamed field like <code>self.0</code>.",179,null],[3,"BoundLifetimes","","A set of bound lifetimes: <code>for<\'a, \'b, \'c></code>.",null,null],[12,"for_token","","",180,null],[12,"lt_token","","",180,null],[12,"lifetimes","","",180,null],[12,"gt_token","","",180,null],[3,"ConstParam","","A const generic parameter: <code>const LENGTH: usize</code>.",null,null],[12,"attrs","","",181,null],[12,"const_token","","",181,null],[12,"ident","","",181,null],[12,"colon_token","","",181,null],[12,"ty","","",181,null],[12,"eq_token","","",181,null],[12,"default","","",181,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: …",null,null],[13,"Type","","A generic type parameter: <code>T: Into<String></code>.",182,null],[13,"Lifetime","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",182,null],[13,"Const","","A const generic parameter: <code>const LENGTH: usize</code>.",182,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration …",null,null],[12,"lt_token","","",183,null],[12,"params","","",183,null],[12,"gt_token","","",183,null],[12,"where_clause","","",183,null],[3,"LifetimeDef","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",null,null],[12,"attrs","","",184,null],[12,"lifetime","","",184,null],[12,"colon_token","","",184,null],[12,"bounds","","",184,null],[3,"PredicateEq","","An equality predicate in a <code>where</code> clause (unsupported).",null,null],[12,"lhs_ty","","",185,null],[12,"eq_token","","",185,null],[12,"rhs_ty","","",185,null],[3,"PredicateLifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",null,null],[12,"lifetime","","",186,null],[12,"colon_token","","",186,null],[12,"bounds","","",186,null],[3,"PredicateType","","A type predicate in a <code>where</code> clause: …",null,null],[12,"lifetimes","","Any lifetimes from a <code>for</code> binding",187,null],[12,"bounded_ty","","The type being bounded",187,null],[12,"colon_token","","",187,null],[12,"bounds","","Trait and lifetime bounds (<code>Clone+Send+\'static</code>)",187,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",188,null],[12,"modifier","","",188,null],[12,"lifetimes","","The <code>for<\'a></code> in <code>for<\'a> Foo<&\'a T></code>",188,null],[12,"path","","The <code>Foo<&\'a T></code> in <code>for<\'a> Foo<&\'a T></code>",188,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the <code>?</code>…",null,null],[13,"None","","",189,null],[13,"Maybe","","",189,null],[3,"TypeParam","","A generic type parameter: <code>T: Into<String></code>.",null,null],[12,"attrs","","",190,null],[12,"ident","","",190,null],[12,"colon_token","","",190,null],[12,"bounds","","",190,null],[12,"eq_token","","",190,null],[12,"default","","",190,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",191,null],[13,"Lifetime","","",191,null],[3,"WhereClause","","A <code>where</code> clause in a definition: …",null,null],[12,"where_token","","",192,null],[12,"predicates","","",192,null],[4,"WherePredicate","","A single predicate in a <code>where</code> clause: <code>T: Deserialize<\'de></code>.",null,null],[13,"Type","","A type predicate in a <code>where</code> clause: …",193,null],[13,"Lifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",193,null],[13,"Eq","","An equality predicate in a <code>where</code> clause (unsupported).",193,null],[3,"ImplGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[3,"Turbofish","","Returned by <code>TypeGenerics::as_turbofish</code>.",null,null],[3,"TypeGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[4,"FnArg","","An argument in a function signature: the <code>n: usize</code> in …",null,null],[13,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",194,null],[13,"Typed","","A function argument accepted by pattern and type.",194,null],[4,"ForeignItem","","An item within an <code>extern</code> block.",null,null],[13,"Fn","","A foreign function in an <code>extern</code> block.",195,null],[13,"Static","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",195,null],[13,"Type","","A foreign type in an <code>extern</code> block: <code>type void</code>.",195,null],[13,"Macro","","A macro invocation within an extern block.",195,null],[13,"Verbatim","","Tokens in an <code>extern</code> block not interpreted by Syn.",195,null],[3,"ForeignItemFn","","A foreign function in an <code>extern</code> block.",null,null],[12,"attrs","","",196,null],[12,"vis","","",196,null],[12,"sig","","",196,null],[12,"semi_token","","",196,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",197,null],[12,"mac","","",197,null],[12,"semi_token","","",197,null],[3,"ForeignItemStatic","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",null,null],[12,"attrs","","",198,null],[12,"vis","","",198,null],[12,"static_token","","",198,null],[12,"mutability","","",198,null],[12,"ident","","",198,null],[12,"colon_token","","",198,null],[12,"ty","","",198,null],[12,"semi_token","","",198,null],[3,"ForeignItemType","","A foreign type in an <code>extern</code> block: <code>type void</code>.",null,null],[12,"attrs","","",199,null],[12,"vis","","",199,null],[12,"type_token","","",199,null],[12,"ident","","",199,null],[12,"semi_token","","",199,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",200,null],[13,"Method","","A method within an impl block.",200,null],[13,"Type","","An associated type within an impl block.",200,null],[13,"Macro","","A macro invocation within an impl block.",200,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",200,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",201,null],[12,"vis","","",201,null],[12,"defaultness","","",201,null],[12,"const_token","","",201,null],[12,"ident","","",201,null],[12,"colon_token","","",201,null],[12,"ty","","",201,null],[12,"eq_token","","",201,null],[12,"expr","","",201,null],[12,"semi_token","","",201,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",202,null],[12,"mac","","",202,null],[12,"semi_token","","",202,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",203,null],[12,"vis","","",203,null],[12,"defaultness","","",203,null],[12,"sig","","",203,null],[12,"block","","",203,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",204,null],[12,"vis","","",204,null],[12,"defaultness","","",204,null],[12,"type_token","","",204,null],[12,"ident","","",204,null],[12,"generics","","",204,null],[12,"eq_token","","",204,null],[12,"ty","","",204,null],[12,"semi_token","","",204,null],[4,"Item","","Things that can appear directly inside of a module or …",null,null],[13,"Const","","A constant item: <code>const MAX: u16 = 65535</code>.",205,null],[13,"Enum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",205,null],[13,"ExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",205,null],[13,"Fn","","A free-standing function: …",205,null],[13,"ForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",205,null],[13,"Impl","","An impl block providing trait or associated items: …",205,null],[13,"Macro","","A macro invocation, which includes <code>macro_rules!</code> …",205,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",205,null],[13,"Mod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",205,null],[13,"Static","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",205,null],[13,"Struct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",205,null],[13,"Trait","","A trait definition: <code>pub trait Iterator { ... }</code>.",205,null],[13,"TraitAlias","","A trait alias: …",205,null],[13,"Type","","A type alias: …",205,null],[13,"Union","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",205,null],[13,"Use","","A use declaration: <code>use std::collections::HashMap</code>.",205,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",205,null],[3,"ItemConst","","A constant item: <code>const MAX: u16 = 65535</code>.",null,null],[12,"attrs","","",206,null],[12,"vis","","",206,null],[12,"const_token","","",206,null],[12,"ident","","",206,null],[12,"colon_token","","",206,null],[12,"ty","","",206,null],[12,"eq_token","","",206,null],[12,"expr","","",206,null],[12,"semi_token","","",206,null],[3,"ItemEnum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",null,null],[12,"attrs","","",207,null],[12,"vis","","",207,null],[12,"enum_token","","",207,null],[12,"ident","","",207,null],[12,"generics","","",207,null],[12,"brace_token","","",207,null],[12,"variants","","",207,null],[3,"ItemExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",null,null],[12,"attrs","","",208,null],[12,"vis","","",208,null],[12,"extern_token","","",208,null],[12,"crate_token","","",208,null],[12,"ident","","",208,null],[12,"rename","","",208,null],[12,"semi_token","","",208,null],[3,"ItemFn","","A free-standing function: …",null,null],[12,"attrs","","",209,null],[12,"vis","","",209,null],[12,"sig","","",209,null],[12,"block","","",209,null],[3,"ItemForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",null,null],[12,"attrs","","",210,null],[12,"abi","","",210,null],[12,"brace_token","","",210,null],[12,"items","","",210,null],[3,"ItemImpl","","An impl block providing trait or associated items: …",null,null],[12,"attrs","","",211,null],[12,"defaultness","","",211,null],[12,"unsafety","","",211,null],[12,"impl_token","","",211,null],[12,"generics","","",211,null],[12,"trait_","","Trait this impl implements.",211,null],[12,"self_ty","","The Self type of the impl.",211,null],[12,"brace_token","","",211,null],[12,"items","","",211,null],[3,"ItemMacro","","A macro invocation, which includes <code>macro_rules!</code> …",null,null],[12,"attrs","","",212,null],[12,"ident","","The <code>example</code> in <code>macro_rules! example { ... }</code>.",212,null],[12,"mac","","",212,null],[12,"semi_token","","",212,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",null,null],[12,"attrs","","",213,null],[12,"vis","","",213,null],[12,"macro_token","","",213,null],[12,"ident","","",213,null],[12,"rules","","",213,null],[3,"ItemMod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",null,null],[12,"attrs","","",214,null],[12,"vis","","",214,null],[12,"mod_token","","",214,null],[12,"ident","","",214,null],[12,"content","","",214,null],[12,"semi","","",214,null],[3,"ItemStatic","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",null,null],[12,"attrs","","",215,null],[12,"vis","","",215,null],[12,"static_token","","",215,null],[12,"mutability","","",215,null],[12,"ident","","",215,null],[12,"colon_token","","",215,null],[12,"ty","","",215,null],[12,"eq_token","","",215,null],[12,"expr","","",215,null],[12,"semi_token","","",215,null],[3,"ItemStruct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",null,null],[12,"attrs","","",216,null],[12,"vis","","",216,null],[12,"struct_token","","",216,null],[12,"ident","","",216,null],[12,"generics","","",216,null],[12,"fields","","",216,null],[12,"semi_token","","",216,null],[3,"ItemTrait","","A trait definition: <code>pub trait Iterator { ... }</code>.",null,null],[12,"attrs","","",217,null],[12,"vis","","",217,null],[12,"unsafety","","",217,null],[12,"auto_token","","",217,null],[12,"trait_token","","",217,null],[12,"ident","","",217,null],[12,"generics","","",217,null],[12,"colon_token","","",217,null],[12,"supertraits","","",217,null],[12,"brace_token","","",217,null],[12,"items","","",217,null],[3,"ItemTraitAlias","","A trait alias: …",null,null],[12,"attrs","","",218,null],[12,"vis","","",218,null],[12,"trait_token","","",218,null],[12,"ident","","",218,null],[12,"generics","","",218,null],[12,"eq_token","","",218,null],[12,"bounds","","",218,null],[12,"semi_token","","",218,null],[3,"ItemType","","A type alias: …",null,null],[12,"attrs","","",219,null],[12,"vis","","",219,null],[12,"type_token","","",219,null],[12,"ident","","",219,null],[12,"generics","","",219,null],[12,"eq_token","","",219,null],[12,"ty","","",219,null],[12,"semi_token","","",219,null],[3,"ItemUnion","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",null,null],[12,"attrs","","",220,null],[12,"vis","","",220,null],[12,"union_token","","",220,null],[12,"ident","","",220,null],[12,"generics","","",220,null],[12,"fields","","",220,null],[3,"ItemUse","","A use declaration: <code>use std::collections::HashMap</code>.",null,null],[12,"attrs","","",221,null],[12,"vis","","",221,null],[12,"use_token","","",221,null],[12,"leading_colon","","",221,null],[12,"tree","","",221,null],[12,"semi_token","","",221,null],[3,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",null,null],[12,"attrs","","",222,null],[12,"reference","","",222,null],[12,"mutability","","",222,null],[12,"self_token","","",222,null],[3,"Signature","","A function signature in a trait or implementation: …",null,null],[12,"constness","","",223,null],[12,"asyncness","","",223,null],[12,"unsafety","","",223,null],[12,"abi","","",223,null],[12,"fn_token","","",223,null],[12,"ident","","",223,null],[12,"generics","","",223,null],[12,"paren_token","","",223,null],[12,"inputs","","",223,null],[12,"variadic","","",223,null],[12,"output","","",223,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",224,null],[13,"Method","","A trait method within the definition of a trait.",224,null],[13,"Type","","An associated type within the definition of a trait.",224,null],[13,"Macro","","A macro invocation within the definition of a trait.",224,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted …",224,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",225,null],[12,"const_token","","",225,null],[12,"ident","","",225,null],[12,"colon_token","","",225,null],[12,"ty","","",225,null],[12,"default","","",225,null],[12,"semi_token","","",225,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",226,null],[12,"mac","","",226,null],[12,"semi_token","","",226,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",227,null],[12,"sig","","",227,null],[12,"default","","",227,null],[12,"semi_token","","",227,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",228,null],[12,"type_token","","",228,null],[12,"ident","","",228,null],[12,"generics","","",228,null],[12,"colon_token","","",228,null],[12,"bounds","","",228,null],[12,"default","","",228,null],[12,"semi_token","","",228,null],[3,"UseGlob","","A glob import in a <code>use</code> item: <code>*</code>.",null,null],[12,"star_token","","",229,null],[3,"UseGroup","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",null,null],[12,"brace_token","","",230,null],[12,"items","","",230,null],[3,"UseName","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",null,null],[12,"ident","","",231,null],[3,"UsePath","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",null,null],[12,"ident","","",232,null],[12,"colon2_token","","",232,null],[12,"tree","","",232,null],[3,"UseRename","","An renamed identifier imported by a <code>use</code> item: …",null,null],[12,"ident","","",233,null],[12,"as_token","","",233,null],[12,"rename","","",233,null],[4,"UseTree","","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …",null,null],[13,"Path","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",234,null],[13,"Name","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",234,null],[13,"Rename","","An renamed identifier imported by a <code>use</code> item: …",234,null],[13,"Glob","","A glob import in a <code>use</code> item: <code>*</code>.",234,null],[13,"Group","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",234,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",235,null],[12,"attrs","","",235,null],[12,"items","","",235,null],[3,"Lifetime","","A Rust lifetime: <code>\'a</code>.",null,null],[12,"apostrophe","","",236,null],[12,"ident","","",236,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",237,null],[13,"ByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",237,null],[13,"Byte","","A byte literal: <code>b\'f\'</code>.",237,null],[13,"Char","","A character literal: <code>\'a\'</code>.",237,null],[13,"Int","","An integer literal: <code>1</code> or <code>1u16</code>.",237,null],[13,"Float","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",237,null],[13,"Bool","","A boolean literal: <code>true</code> or <code>false</code>.",237,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",237,null],[3,"LitBool","","A boolean literal: <code>true</code> or <code>false</code>.",null,null],[12,"value","","",238,null],[12,"span","","",238,null],[3,"LitByte","","A byte literal: <code>b\'f\'</code>.",null,null],[3,"LitByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",null,null],[3,"LitChar","","A character literal: <code>\'a\'</code>.",null,null],[3,"LitFloat","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",null,null],[3,"LitInt","","An integer literal: <code>1</code> or <code>1u16</code>.",null,null],[3,"LitStr","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",null,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a …",null,null],[13,"Cooked","","An ordinary string like <code>\\\"data\\\"</code>.",239,null],[13,"Raw","","A raw string like <code>r##\\\"data\\\"##</code>.",239,null],[3,"Macro","","A macro invocation: <code>println!(\\\"{}\\\", mac)</code>.",null,null],[12,"path","","",240,null],[12,"bang_token","","",240,null],[12,"delimiter","","",240,null],[12,"tokens","","",240,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: <code>m!(...)</code> or …",null,null],[13,"Paren","","",241,null],[13,"Brace","","",241,null],[13,"Bracket","","",241,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a <code>proc_macro_derive</code> macro.",242,null],[13,"Enum","","An enum input to a <code>proc_macro_derive</code> macro.",242,null],[13,"Union","","An untagged union input to a <code>proc_macro_derive</code> macro.",242,null],[3,"DataEnum","","An enum input to a <code>proc_macro_derive</code> macro.",null,null],[12,"enum_token","","",243,null],[12,"brace_token","","",243,null],[12,"variants","","",243,null],[3,"DataStruct","","A struct input to a <code>proc_macro_derive</code> macro.",null,null],[12,"struct_token","","",244,null],[12,"fields","","",244,null],[12,"semi_token","","",244,null],[3,"DataUnion","","An untagged union input to a <code>proc_macro_derive</code> macro.",null,null],[12,"union_token","","",245,null],[12,"fields","","",245,null],[3,"DeriveInput","","Data structure sent to a <code>proc_macro_derive</code> macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",246,null],[12,"vis","","Visibility of the struct or enum.",246,null],[12,"ident","","Name of the struct or enum.",246,null],[12,"generics","","Generics required to complete the definition.",246,null],[12,"data","","Data within the struct or enum.",246,null],[4,"BinOp","","A binary operator: <code>+</code>, <code>+=</code>, <code>&</code>.",null,null],[13,"Add","","The <code>+</code> operator (addition)",247,null],[13,"Sub","","The <code>-</code> operator (subtraction)",247,null],[13,"Mul","","The <code>*</code> operator (multiplication)",247,null],[13,"Div","","The <code>/</code> operator (division)",247,null],[13,"Rem","","The <code>%</code> operator (modulus)",247,null],[13,"And","","The <code>&&</code> operator (logical and)",247,null],[13,"Or","","The <code>||</code> operator (logical or)",247,null],[13,"BitXor","","The <code>^</code> operator (bitwise xor)",247,null],[13,"BitAnd","","The <code>&</code> operator (bitwise and)",247,null],[13,"BitOr","","The <code>|</code> operator (bitwise or)",247,null],[13,"Shl","","The <code><<</code> operator (shift left)",247,null],[13,"Shr","","The <code>>></code> operator (shift right)",247,null],[13,"Eq","","The <code>==</code> operator (equality)",247,null],[13,"Lt","","The <code><</code> operator (less than)",247,null],[13,"Le","","The <code><=</code> operator (less than or equal to)",247,null],[13,"Ne","","The <code>!=</code> operator (not equal to)",247,null],[13,"Ge","","The <code>>=</code> operator (greater than or equal to)",247,null],[13,"Gt","","The <code>></code> operator (greater than)",247,null],[13,"AddEq","","The <code>+=</code> operator",247,null],[13,"SubEq","","The <code>-=</code> operator",247,null],[13,"MulEq","","The <code>*=</code> operator",247,null],[13,"DivEq","","The <code>/=</code> operator",247,null],[13,"RemEq","","The <code>%=</code> operator",247,null],[13,"BitXorEq","","The <code>^=</code> operator",247,null],[13,"BitAndEq","","The <code>&=</code> operator",247,null],[13,"BitOrEq","","The <code>|=</code> operator",247,null],[13,"ShlEq","","The <code><<=</code> operator",247,null],[13,"ShrEq","","The <code>>>=</code> operator",247,null],[4,"UnOp","","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.",null,null],[13,"Deref","","The <code>*</code> operator for dereferencing",248,null],[13,"Not","","The <code>!</code> operator for logical inversion",248,null],[13,"Neg","","The <code>-</code> operator for negation",248,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",249,null],[12,"stmts","","Statements in a block",249,null],[3,"Local","","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.",null,null],[12,"attrs","","",250,null],[12,"let_token","","",250,null],[12,"pat","","",250,null],[12,"init","","",250,null],[12,"semi_token","","",250,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",251,null],[13,"Item","","An item definition.",251,null],[13,"Expr","","Expr without trailing semicolon.",251,null],[13,"Semi","","Expression with trailing semicolon.",251,null],[3,"Abi","","The binary interface of a function: <code>extern \\\"C\\\"</code>.",null,null],[12,"extern_token","","",252,null],[12,"name","","",252,null],[3,"BareFnArg","","An argument in a function type: the <code>usize</code> in …",null,null],[12,"attrs","","",253,null],[12,"name","","",253,null],[12,"ty","","",253,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",254,null],[13,"Type","","A particular type is returned.",254,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: <code>[T; n]</code>.",255,null],[13,"BareFn","","A bare function type: <code>fn(usize) -> bool</code>.",255,null],[13,"Group","","A type contained within invisible delimiters.",255,null],[13,"ImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",255,null],[13,"Infer","","Indication that a type should be inferred by the …",255,null],[13,"Macro","","A macro in the type position.",255,null],[13,"Never","","The never type: <code>!</code>.",255,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",255,null],[13,"Path","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",255,null],[13,"Ptr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",255,null],[13,"Reference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",255,null],[13,"Slice","","A dynamically sized slice type: <code>[T]</code>.",255,null],[13,"TraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",255,null],[13,"Tuple","","A tuple type: <code>(A, B, C, String)</code>.",255,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",255,null],[3,"TypeArray","","A fixed size array type: <code>[T; n]</code>.",null,null],[12,"bracket_token","","",256,null],[12,"elem","","",256,null],[12,"semi_token","","",256,null],[12,"len","","",256,null],[3,"TypeBareFn","","A bare function type: <code>fn(usize) -> bool</code>.",null,null],[12,"lifetimes","","",257,null],[12,"unsafety","","",257,null],[12,"abi","","",257,null],[12,"fn_token","","",257,null],[12,"paren_token","","",257,null],[12,"inputs","","",257,null],[12,"variadic","","",257,null],[12,"output","","",257,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",258,null],[12,"elem","","",258,null],[3,"TypeImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",null,null],[12,"impl_token","","",259,null],[12,"bounds","","",259,null],[3,"TypeInfer","","Indication that a type should be inferred by the …",null,null],[12,"underscore_token","","",260,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",261,null],[3,"TypeNever","","The never type: <code>!</code>.",null,null],[12,"bang_token","","",262,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",263,null],[12,"elem","","",263,null],[3,"TypePath","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",null,null],[12,"qself","","",264,null],[12,"path","","",264,null],[3,"TypePtr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",null,null],[12,"star_token","","",265,null],[12,"const_token","","",265,null],[12,"mutability","","",265,null],[12,"elem","","",265,null],[3,"TypeReference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",null,null],[12,"and_token","","",266,null],[12,"lifetime","","",266,null],[12,"mutability","","",266,null],[12,"elem","","",266,null],[3,"TypeSlice","","A dynamically sized slice type: <code>[T]</code>.",null,null],[12,"bracket_token","","",267,null],[12,"elem","","",267,null],[3,"TypeTraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",null,null],[12,"dyn_token","","",268,null],[12,"bounds","","",268,null],[3,"TypeTuple","","A tuple type: <code>(A, B, C, String)</code>.",null,null],[12,"paren_token","","",269,null],[12,"elems","","",269,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",270,null],[12,"dots","","",270,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",271,null],[12,"member","","",271,null],[12,"colon_token","","",271,null],[12,"pat","","",271,null],[4,"Pat","","A pattern in a local binding, function signature, match …",null,null],[13,"Box","","A box pattern: <code>box v</code>.",272,null],[13,"Ident","","A pattern that binds a new variable: …",272,null],[13,"Lit","","A literal pattern: <code>0</code>.",272,null],[13,"Macro","","A macro in pattern position.",272,null],[13,"Or","","A pattern that matches any one of a set of cases.",272,null],[13,"Path","","A path pattern like <code>Color::Red</code>, optionally qualified with …",272,null],[13,"Range","","A range pattern: <code>1..=2</code>.",272,null],[13,"Reference","","A reference pattern: <code>&mut var</code>.",272,null],[13,"Rest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",272,null],[13,"Slice","","A dynamically sized slice pattern: …",272,null],[13,"Struct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",272,null],[13,"Tuple","","A tuple pattern: <code>(a, b)</code>.",272,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: …",272,null],[13,"Type","","A type ascription pattern: <code>foo: f64</code>.",272,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",272,null],[13,"Wild","","A pattern that matches any value: <code>_</code>.",272,null],[3,"PatBox","","A box pattern: <code>box v</code>.",null,null],[12,"attrs","","",273,null],[12,"box_token","","",273,null],[12,"pat","","",273,null],[3,"PatIdent","","A pattern that binds a new variable: …",null,null],[12,"attrs","","",274,null],[12,"by_ref","","",274,null],[12,"mutability","","",274,null],[12,"ident","","",274,null],[12,"subpat","","",274,null],[3,"PatLit","","A literal pattern: <code>0</code>.",null,null],[12,"attrs","","",275,null],[12,"expr","","",275,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",276,null],[12,"mac","","",276,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",277,null],[12,"leading_vert","","",277,null],[12,"cases","","",277,null],[3,"PatPath","","A path pattern like <code>Color::Red</code>, optionally qualified with …",null,null],[12,"attrs","","",278,null],[12,"qself","","",278,null],[12,"path","","",278,null],[3,"PatRange","","A range pattern: <code>1..=2</code>.",null,null],[12,"attrs","","",279,null],[12,"lo","","",279,null],[12,"limits","","",279,null],[12,"hi","","",279,null],[3,"PatReference","","A reference pattern: <code>&mut var</code>.",null,null],[12,"attrs","","",280,null],[12,"and_token","","",280,null],[12,"mutability","","",280,null],[12,"pat","","",280,null],[3,"PatRest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",null,null],[12,"attrs","","",281,null],[12,"dot2_token","","",281,null],[3,"PatSlice","","A dynamically sized slice pattern: …",null,null],[12,"attrs","","",282,null],[12,"bracket_token","","",282,null],[12,"elems","","",282,null],[3,"PatStruct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",null,null],[12,"attrs","","",283,null],[12,"path","","",283,null],[12,"brace_token","","",283,null],[12,"fields","","",283,null],[12,"dot2_token","","",283,null],[3,"PatTuple","","A tuple pattern: <code>(a, b)</code>.",null,null],[12,"attrs","","",284,null],[12,"paren_token","","",284,null],[12,"elems","","",284,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: …",null,null],[12,"attrs","","",285,null],[12,"path","","",285,null],[12,"pat","","",285,null],[3,"PatType","","A type ascription pattern: <code>foo: f64</code>.",null,null],[12,"attrs","","",286,null],[12,"pat","","",286,null],[12,"colon_token","","",286,null],[12,"ty","","",286,null],[3,"PatWild","","A pattern that matches any value: <code>_</code>.",null,null],[12,"attrs","","",287,null],[12,"underscore_token","","",287,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the <code><K, V></code> …",null,null],[12,"colon2_token","","",288,null],[12,"lt_token","","",288,null],[12,"args","","",288,null],[12,"gt_token","","",288,null],[3,"Binding","","A binding (equality constraint) on an associated type: …",null,null],[12,"ident","","",289,null],[12,"eq_token","","",289,null],[12,"ty","","",289,null],[3,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",null,null],[12,"ident","","",290,null],[12,"colon_token","","",290,null],[12,"bounds","","",290,null],[4,"GenericArgument","","An individual generic argument, like <code>\'a</code>, <code>T</code>, or <code>Item = T</code>.",null,null],[13,"Lifetime","","A lifetime argument.",291,null],[13,"Type","","A type argument.",291,null],[13,"Binding","","A binding (equality constraint) on an associated type: …",291,null],[13,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",291,null],[13,"Const","","A const expression. Must be inside of a block.",291,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the <code>(A, B) -> C</code> in …",null,null],[12,"paren_token","","",292,null],[12,"inputs","","<code>(A, B)</code>",292,null],[12,"output","","<code>C</code>",292,null],[3,"Path","","A path at which a named item is exported (e.g. …",null,null],[12,"leading_colon","","",293,null],[12,"segments","","",293,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path …",null,null],[13,"None","","",294,null],[13,"AngleBracketed","","The <code><\'a, T></code> in <code>std::slice::iter<\'a, T></code>.",294,null],[13,"Parenthesized","","The <code>(A, B) -> C</code> in <code>Fn(A, B) -> C</code>.",294,null],[3,"PathSegment","","A segment of a path together with any path arguments on …",null,null],[12,"ident","","",295,null],[12,"arguments","","",295,null],[3,"QSelf","","The explicit Self type in a qualified path: the <code>T</code> in …",null,null],[12,"lt_token","","",296,null],[12,"ty","","",296,null],[12,"position","","",296,null],[12,"as_token","","",296,null],[12,"gt_token","","",296,null],[3,"Error","","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree …",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",null,[[["tokenstream",3]],[["result",6],["parse",8]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",null,[[["str",15]],[["result",6],["parse",8]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[["str",15]],[["result",6],["file",3]]]],[14,"parenthesized","","Parse a set of parentheses and expose their content to …",null,null],[14,"braced","","Parse a set of curly braces and expose their content to …",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content …",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type …",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the <code>quote!</code> …",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a …",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given …",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a …",null,null],[11,"span","syn::token","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"span","syn","",297,[[],["span",3]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"to_string","","",297,[[],["string",3]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"span","","",148,[[],["span",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"span","","",149,[[],["span",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"span","","",155,[[],["span",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"span","","",169,[[],["span",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"span","","",170,[[],["span",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"span","","",171,[[],["span",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",136,[[],["span",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"span","","",298,[[],["span",3]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"span","","",299,[[],["span",3]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"span","","",300,[[],["span",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"to_string","","",236,[[],["string",3]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"span","","",301,[[],["span",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_owned","","",301,[[]]],[11,"clone_into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"span","","",302,[[],["span",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"to_string","","",305,[[],["string",3]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",306,[[],["span",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"to_string","","",306,[[],["string",3]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"span","","",238,[[],["span",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"span","","",240,[[],["span",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"span","","",279,[[],["span",3]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"span","","",280,[[],["span",3]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"span","","",281,[[],["span",3]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"span","","",282,[[],["span",3]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"span","","",295,[[],["span",3]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"span","","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"span","","",291,[[],["span",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"span","","",290,[[],["span",3]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_owned","","",290,[[]]],[11,"clone_into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"span","","",292,[[],["span",3]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"to_owned","","",292,[[]]],[11,"clone_into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"to_owned","","",296,[[]]],[11,"clone_into","","",296,[[]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"from","syn::buffer","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"span","syn::punctuated","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"to_owned","","",307,[[]]],[11,"clone_into","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"to_owned","","",311,[[]]],[11,"clone_into","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"from","","",312,[[]]],[11,"into","","",312,[[]]],[11,"into_iter","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","syn::parse","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"to_string","","",116,[[],["string",3]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",314,[[]]],[11,"into","","",314,[[]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"fmt","syn","",297,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","","",297,[[]]],[11,"partial_cmp","","",297,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"clone","","",297,[[],["ident",3]]],[11,"fmt","","",297,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",297,[[["ident",3]],["ordering",4]]],[11,"eq","","",297,[[["ident",3]],["bool",15]]],[11,"eq","","",297,[[],["bool",15]]],[11,"span","","",297,[[],[["option",4],["span",3]]]],[11,"fmt","","",297,[[["formatter",3]],[["result",4],["error",3]]]],[11,"to_tokens","","",297,[[["tokenstream",3]]]],[11,"peek","","",236,[[["cursor",3]],["bool",15]]],[11,"display","","",236,[[],["str",15]]],[11,"peek","","",237,[[["cursor",3]],["bool",15]]],[11,"display","","",237,[[],["str",15]]],[11,"peek","","",301,[[["cursor",3]],["bool",15]]],[11,"display","","",301,[[],["str",15]]],[11,"peek","","",302,[[["cursor",3]],["bool",15]]],[11,"display","","",302,[[],["str",15]]],[11,"peek","","",303,[[["cursor",3]],["bool",15]]],[11,"display","","",303,[[],["str",15]]],[11,"peek","","",304,[[["cursor",3]],["bool",15]]],[11,"display","","",304,[[],["str",15]]],[11,"peek","","",305,[[["cursor",3]],["bool",15]]],[11,"display","","",305,[[],["str",15]]],[11,"peek","","",306,[[["cursor",3]],["bool",15]]],[11,"display","","",306,[[],["str",15]]],[11,"peek","","",238,[[["cursor",3]],["bool",15]]],[11,"display","","",238,[[],["str",15]]],[11,"peek","syn::token","",0,[[["cursor",3]],["bool",15]]],[11,"display","","",0,[[],["str",15]]],[11,"peek","","",101,[[["cursor",3]],["bool",15]]],[11,"display","","",101,[[],["str",15]]],[11,"peek","","",99,[[["cursor",3]],["bool",15]]],[11,"display","","",99,[[],["str",15]]],[11,"peek","","",100,[[["cursor",3]],["bool",15]]],[11,"display","","",100,[[],["str",15]]],[11,"peek","","",102,[[["cursor",3]],["bool",15]]],[11,"display","","",102,[[],["str",15]]],[11,"peek","","",1,[[["cursor",3]],["bool",15]]],[11,"display","","",1,[[],["str",15]]],[11,"peek","","",2,[[["cursor",3]],["bool",15]]],[11,"display","","",2,[[],["str",15]]],[11,"peek","","",3,[[["cursor",3]],["bool",15]]],[11,"display","","",3,[[],["str",15]]],[11,"peek","","",4,[[["cursor",3]],["bool",15]]],[11,"display","","",4,[[],["str",15]]],[11,"peek","","",5,[[["cursor",3]],["bool",15]]],[11,"display","","",5,[[],["str",15]]],[11,"peek","","",6,[[["cursor",3]],["bool",15]]],[11,"display","","",6,[[],["str",15]]],[11,"peek","","",7,[[["cursor",3]],["bool",15]]],[11,"display","","",7,[[],["str",15]]],[11,"peek","","",8,[[["cursor",3]],["bool",15]]],[11,"display","","",8,[[],["str",15]]],[11,"peek","","",9,[[["cursor",3]],["bool",15]]],[11,"display","","",9,[[],["str",15]]],[11,"peek","","",10,[[["cursor",3]],["bool",15]]],[11,"display","","",10,[[],["str",15]]],[11,"peek","","",11,[[["cursor",3]],["bool",15]]],[11,"display","","",11,[[],["str",15]]],[11,"peek","","",12,[[["cursor",3]],["bool",15]]],[11,"display","","",12,[[],["str",15]]],[11,"peek","","",13,[[["cursor",3]],["bool",15]]],[11,"display","","",13,[[],["str",15]]],[11,"peek","","",14,[[["cursor",3]],["bool",15]]],[11,"display","","",14,[[],["str",15]]],[11,"peek","","",15,[[["cursor",3]],["bool",15]]],[11,"display","","",15,[[],["str",15]]],[11,"peek","","",16,[[["cursor",3]],["bool",15]]],[11,"display","","",16,[[],["str",15]]],[11,"peek","","",17,[[["cursor",3]],["bool",15]]],[11,"display","","",17,[[],["str",15]]],[11,"peek","","",18,[[["cursor",3]],["bool",15]]],[11,"display","","",18,[[],["str",15]]],[11,"peek","","",19,[[["cursor",3]],["bool",15]]],[11,"display","","",19,[[],["str",15]]],[11,"peek","","",20,[[["cursor",3]],["bool",15]]],[11,"display","","",20,[[],["str",15]]],[11,"peek","","",21,[[["cursor",3]],["bool",15]]],[11,"display","","",21,[[],["str",15]]],[11,"peek","","",22,[[["cursor",3]],["bool",15]]],[11,"display","","",22,[[],["str",15]]],[11,"peek","","",23,[[["cursor",3]],["bool",15]]],[11,"display","","",23,[[],["str",15]]],[11,"peek","","",24,[[["cursor",3]],["bool",15]]],[11,"display","","",24,[[],["str",15]]],[11,"peek","","",25,[[["cursor",3]],["bool",15]]],[11,"display","","",25,[[],["str",15]]],[11,"peek","","",26,[[["cursor",3]],["bool",15]]],[11,"display","","",26,[[],["str",15]]],[11,"peek","","",27,[[["cursor",3]],["bool",15]]],[11,"display","","",27,[[],["str",15]]],[11,"peek","","",28,[[["cursor",3]],["bool",15]]],[11,"display","","",28,[[],["str",15]]],[11,"peek","","",29,[[["cursor",3]],["bool",15]]],[11,"display","","",29,[[],["str",15]]],[11,"peek","","",30,[[["cursor",3]],["bool",15]]],[11,"display","","",30,[[],["str",15]]],[11,"peek","","",31,[[["cursor",3]],["bool",15]]],[11,"display","","",31,[[],["str",15]]],[11,"peek","","",32,[[["cursor",3]],["bool",15]]],[11,"display","","",32,[[],["str",15]]],[11,"peek","","",33,[[["cursor",3]],["bool",15]]],[11,"display","","",33,[[],["str",15]]],[11,"peek","","",34,[[["cursor",3]],["bool",15]]],[11,"display","","",34,[[],["str",15]]],[11,"peek","","",35,[[["cursor",3]],["bool",15]]],[11,"display","","",35,[[],["str",15]]],[11,"peek","","",36,[[["cursor",3]],["bool",15]]],[11,"display","","",36,[[],["str",15]]],[11,"peek","","",37,[[["cursor",3]],["bool",15]]],[11,"display","","",37,[[],["str",15]]],[11,"peek","","",38,[[["cursor",3]],["bool",15]]],[11,"display","","",38,[[],["str",15]]],[11,"peek","","",39,[[["cursor",3]],["bool",15]]],[11,"display","","",39,[[],["str",15]]],[11,"peek","","",40,[[["cursor",3]],["bool",15]]],[11,"display","","",40,[[],["str",15]]],[11,"peek","","",41,[[["cursor",3]],["bool",15]]],[11,"display","","",41,[[],["str",15]]],[11,"peek","","",42,[[["cursor",3]],["bool",15]]],[11,"display","","",42,[[],["str",15]]],[11,"peek","","",43,[[["cursor",3]],["bool",15]]],[11,"display","","",43,[[],["str",15]]],[11,"peek","","",44,[[["cursor",3]],["bool",15]]],[11,"display","","",44,[[],["str",15]]],[11,"peek","","",45,[[["cursor",3]],["bool",15]]],[11,"display","","",45,[[],["str",15]]],[11,"peek","","",46,[[["cursor",3]],["bool",15]]],[11,"display","","",46,[[],["str",15]]],[11,"peek","","",47,[[["cursor",3]],["bool",15]]],[11,"display","","",47,[[],["str",15]]],[11,"peek","","",48,[[["cursor",3]],["bool",15]]],[11,"display","","",48,[[],["str",15]]],[11,"peek","","",49,[[["cursor",3]],["bool",15]]],[11,"display","","",49,[[],["str",15]]],[11,"peek","","",50,[[["cursor",3]],["bool",15]]],[11,"display","","",50,[[],["str",15]]],[11,"peek","","",51,[[["cursor",3]],["bool",15]]],[11,"display","","",51,[[],["str",15]]],[11,"peek","","",52,[[["cursor",3]],["bool",15]]],[11,"display","","",52,[[],["str",15]]],[11,"peek","","",53,[[["cursor",3]],["bool",15]]],[11,"display","","",53,[[],["str",15]]],[11,"peek","","",54,[[["cursor",3]],["bool",15]]],[11,"display","","",54,[[],["str",15]]],[11,"peek","","",55,[[["cursor",3]],["bool",15]]],[11,"display","","",55,[[],["str",15]]],[11,"peek","","",56,[[["cursor",3]],["bool",15]]],[11,"display","","",56,[[],["str",15]]],[11,"peek","","",57,[[["cursor",3]],["bool",15]]],[11,"display","","",57,[[],["str",15]]],[11,"peek","","",58,[[["cursor",3]],["bool",15]]],[11,"display","","",58,[[],["str",15]]],[11,"peek","","",59,[[["cursor",3]],["bool",15]]],[11,"display","","",59,[[],["str",15]]],[11,"peek","","",60,[[["cursor",3]],["bool",15]]],[11,"display","","",60,[[],["str",15]]],[11,"peek","","",61,[[["cursor",3]],["bool",15]]],[11,"display","","",61,[[],["str",15]]],[11,"peek","","",62,[[["cursor",3]],["bool",15]]],[11,"display","","",62,[[],["str",15]]],[11,"peek","","",63,[[["cursor",3]],["bool",15]]],[11,"display","","",63,[[],["str",15]]],[11,"peek","","",64,[[["cursor",3]],["bool",15]]],[11,"display","","",64,[[],["str",15]]],[11,"peek","","",65,[[["cursor",3]],["bool",15]]],[11,"display","","",65,[[],["str",15]]],[11,"peek","","",66,[[["cursor",3]],["bool",15]]],[11,"display","","",66,[[],["str",15]]],[11,"peek","","",67,[[["cursor",3]],["bool",15]]],[11,"display","","",67,[[],["str",15]]],[11,"peek","","",68,[[["cursor",3]],["bool",15]]],[11,"display","","",68,[[],["str",15]]],[11,"peek","","",69,[[["cursor",3]],["bool",15]]],[11,"display","","",69,[[],["str",15]]],[11,"peek","","",70,[[["cursor",3]],["bool",15]]],[11,"display","","",70,[[],["str",15]]],[11,"peek","","",71,[[["cursor",3]],["bool",15]]],[11,"display","","",71,[[],["str",15]]],[11,"peek","","",72,[[["cursor",3]],["bool",15]]],[11,"display","","",72,[[],["str",15]]],[11,"peek","","",73,[[["cursor",3]],["bool",15]]],[11,"display","","",73,[[],["str",15]]],[11,"peek","","",74,[[["cursor",3]],["bool",15]]],[11,"display","","",74,[[],["str",15]]],[11,"peek","","",75,[[["cursor",3]],["bool",15]]],[11,"display","","",75,[[],["str",15]]],[11,"peek","","",76,[[["cursor",3]],["bool",15]]],[11,"display","","",76,[[],["str",15]]],[11,"peek","","",77,[[["cursor",3]],["bool",15]]],[11,"display","","",77,[[],["str",15]]],[11,"peek","","",78,[[["cursor",3]],["bool",15]]],[11,"display","","",78,[[],["str",15]]],[11,"peek","","",79,[[["cursor",3]],["bool",15]]],[11,"display","","",79,[[],["str",15]]],[11,"peek","","",80,[[["cursor",3]],["bool",15]]],[11,"display","","",80,[[],["str",15]]],[11,"peek","","",81,[[["cursor",3]],["bool",15]]],[11,"display","","",81,[[],["str",15]]],[11,"peek","","",82,[[["cursor",3]],["bool",15]]],[11,"display","","",82,[[],["str",15]]],[11,"peek","","",83,[[["cursor",3]],["bool",15]]],[11,"display","","",83,[[],["str",15]]],[11,"peek","","",84,[[["cursor",3]],["bool",15]]],[11,"display","","",84,[[],["str",15]]],[11,"peek","","",85,[[["cursor",3]],["bool",15]]],[11,"display","","",85,[[],["str",15]]],[11,"peek","","",86,[[["cursor",3]],["bool",15]]],[11,"display","","",86,[[],["str",15]]],[11,"peek","","",87,[[["cursor",3]],["bool",15]]],[11,"display","","",87,[[],["str",15]]],[11,"peek","","",88,[[["cursor",3]],["bool",15]]],[11,"display","","",88,[[],["str",15]]],[11,"peek","","",89,[[["cursor",3]],["bool",15]]],[11,"display","","",89,[[],["str",15]]],[11,"peek","","",90,[[["cursor",3]],["bool",15]]],[11,"display","","",90,[[],["str",15]]],[11,"peek","","",91,[[["cursor",3]],["bool",15]]],[11,"display","","",91,[[],["str",15]]],[11,"peek","","",92,[[["cursor",3]],["bool",15]]],[11,"display","","",92,[[],["str",15]]],[11,"peek","","",93,[[["cursor",3]],["bool",15]]],[11,"display","","",93,[[],["str",15]]],[11,"peek","","",94,[[["cursor",3]],["bool",15]]],[11,"display","","",94,[[],["str",15]]],[11,"peek","","",95,[[["cursor",3]],["bool",15]]],[11,"display","","",95,[[],["str",15]]],[11,"peek","","",96,[[["cursor",3]],["bool",15]]],[11,"display","","",96,[[],["str",15]]],[11,"peek","","",97,[[["cursor",3]],["bool",15]]],[11,"display","","",97,[[],["str",15]]],[11,"peek","","",98,[[["cursor",3]],["bool",15]]],[11,"display","","",98,[[],["str",15]]],[11,"peek","syn","",297,[[["cursor",3]],["bool",15]]],[11,"display","","",297,[[],["str",15]]],[11,"parse_any","","",297,[[["parsestream",6]],["result",6]]],[11,"unraw","","",297,[[],["ident",3]]],[11,"advance_to","syn::parse","",114,[[]]],[11,"parse","syn::token","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",7,[[["parsestream",6]],["result",6]]],[11,"parse","","",8,[[["parsestream",6]],["result",6]]],[11,"parse","","",9,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",13,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",18,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",29,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",58,[[["parsestream",6]],["result",6]]],[11,"parse","","",59,[[["parsestream",6]],["result",6]]],[11,"parse","","",60,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",94,[[["parsestream",6]],["result",6]]],[11,"parse","","",95,[[["parsestream",6]],["result",6]]],[11,"parse","","",96,[[["parsestream",6]],["result",6]]],[11,"parse","","",97,[[["parsestream",6]],["result",6]]],[11,"parse","","",98,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",297,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",122,[[["parsestream",6]],["result",6]]],[11,"parse","","",127,[[["parsestream",6]],["result",6]]],[11,"parse","","",125,[[["parsestream",6]],["result",6]]],[11,"parse","","",126,[[["parsestream",6]],["result",6]]],[11,"parse","","",131,[[["parsestream",6]],["result",6]]],[11,"parse","","",138,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",153,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",139,[[["parsestream",6]],["result",6]]],[11,"parse","","",148,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",149,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",140,[[["parsestream",6]],["result",6]]],[11,"parse","","",141,[[["parsestream",6]],["result",6]]],[11,"parse","","",152,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",169,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",170,[[["parsestream",6]],["result",6]]],[11,"parse","","",142,[[["parsestream",6]],["result",6]]],[11,"parse","","",171,[[["parsestream",6]],["result",6]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",135,[[["parsestream",6]],["result",6]]],[11,"parse","","",133,[[["parsestream",6]],["result",6]]],[11,"parse","","",137,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",179,[[["parsestream",6]],["result",6]]],[11,"parse","","",132,[[["parsestream",6]],[["result",6],["arm",3]]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",184,[[["parsestream",6]],["result",6]]],[11,"parse","","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],[["result",6],["usetree",4]]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",228,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",301,[[["parsestream",6]],["result",6]]],[11,"parse","","",302,[[["parsestream",6]],["result",6]]],[11,"parse","","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",304,[[["parsestream",6]],["result",6]]],[11,"parse","","",305,[[["parsestream",6]],["result",6]]],[11,"parse","","",306,[[["parsestream",6]],["result",6]]],[11,"parse","","",238,[[["parsestream",6]],["result",6]]],[11,"parse","","",240,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",249,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",269,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",272,[[["parsestream",6]],["result",6]]],[11,"parse","","",293,[[["parsestream",6]],["result",6]]],[11,"parse","","",291,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",292,[[["parsestream",6]],["result",6]]],[11,"parse","","",295,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","","",290,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",314,[[["parsestream",6]],["result",6]]],[11,"drop","","",114,[[]]],[11,"from","syn","",297,[[["selfvalue",3]],["ident",3]]],[11,"from","","",297,[[["selftype",3]],["ident",3]]],[11,"from","","",297,[[["super",3]],["ident",3]]],[11,"from","","",297,[[["crate",3]],["ident",3]]],[11,"from","","",297,[[["extern",3]],["ident",3]]],[11,"from","","",297,[[["underscore",3]],["ident",3]]],[11,"from","","",119,[[["path",3]],["meta",4]]],[11,"from","","",119,[[["metalist",3]],["meta",4]]],[11,"from","","",119,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",122,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",122,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",124,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",124,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",131,[[["vispublic",3]],["visibility",4]]],[11,"from","","",131,[[["viscrate",3]],["visibility",4]]],[11,"from","","",131,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",138,[[["exprarray",3]],["expr",4]]],[11,"from","","",138,[[["exprassign",3]],["expr",4]]],[11,"from","","",138,[[["exprassignop",3]],["expr",4]]],[11,"from","","",138,[[["exprasync",3]],["expr",4]]],[11,"from","","",138,[[["exprawait",3]],["expr",4]]],[11,"from","","",138,[[["exprbinary",3]],["expr",4]]],[11,"from","","",138,[[["exprblock",3]],["expr",4]]],[11,"from","","",138,[[["exprbox",3]],["expr",4]]],[11,"from","","",138,[[["exprbreak",3]],["expr",4]]],[11,"from","","",138,[[["exprcall",3]],["expr",4]]],[11,"from","","",138,[[["exprcast",3]],["expr",4]]],[11,"from","","",138,[[["exprclosure",3]],["expr",4]]],[11,"from","","",138,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",138,[[["exprfield",3]],["expr",4]]],[11,"from","","",138,[[["exprforloop",3]],["expr",4]]],[11,"from","","",138,[[["exprgroup",3]],["expr",4]]],[11,"from","","",138,[[["exprif",3]],["expr",4]]],[11,"from","","",138,[[["exprindex",3]],["expr",4]]],[11,"from","","",138,[[["exprlet",3]],["expr",4]]],[11,"from","","",138,[[["exprlit",3]],["expr",4]]],[11,"from","","",138,[[["exprloop",3]],["expr",4]]],[11,"from","","",138,[[["exprmacro",3]],["expr",4]]],[11,"from","","",138,[[["exprmatch",3]],["expr",4]]],[11,"from","","",138,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",138,[[["exprparen",3]],["expr",4]]],[11,"from","","",138,[[["exprpath",3]],["expr",4]]],[11,"from","","",138,[[["exprrange",3]],["expr",4]]],[11,"from","","",138,[[["exprreference",3]],["expr",4]]],[11,"from","","",138,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",138,[[["exprreturn",3]],["expr",4]]],[11,"from","","",138,[[["exprstruct",3]],["expr",4]]],[11,"from","","",138,[[["exprtry",3]],["expr",4]]],[11,"from","","",138,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",138,[[["exprtuple",3]],["expr",4]]],[11,"from","","",138,[[["exprtype",3]],["expr",4]]],[11,"from","","",138,[[["exprunary",3]],["expr",4]]],[11,"from","","",138,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",138,[[["exprwhile",3]],["expr",4]]],[11,"from","","",138,[[["expryield",3]],["expr",4]]],[11,"from","","",178,[[["usize",15]],["index",3]]],[11,"from","","",182,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",182,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",182,[[["constparam",3]],["genericparam",4]]],[11,"from","","",190,[[["ident",3]]]],[11,"from","","",191,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",191,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",193,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",193,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",193,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",205,[[["itemconst",3]],["item",4]]],[11,"from","","",205,[[["itemenum",3]],["item",4]]],[11,"from","","",205,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",205,[[["itemfn",3]],["item",4]]],[11,"from","","",205,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",205,[[["itemimpl",3]],["item",4]]],[11,"from","","",205,[[["itemmacro",3]],["item",4]]],[11,"from","","",205,[[["itemmacro2",3]],["item",4]]],[11,"from","","",205,[[["itemmod",3]],["item",4]]],[11,"from","","",205,[[["itemstatic",3]],["item",4]]],[11,"from","","",205,[[["itemstruct",3]],["item",4]]],[11,"from","","",205,[[["itemtrait",3]],["item",4]]],[11,"from","","",205,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",205,[[["itemtype",3]],["item",4]]],[11,"from","","",205,[[["itemunion",3]],["item",4]]],[11,"from","","",205,[[["itemuse",3]],["item",4]]],[11,"from","","",205,[[["deriveinput",3]],["item",4]]],[11,"from","","",246,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",246,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",246,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",234,[[["usepath",3]],["usetree",4]]],[11,"from","","",234,[[["usename",3]],["usetree",4]]],[11,"from","","",234,[[["userename",3]],["usetree",4]]],[11,"from","","",234,[[["useglob",3]],["usetree",4]]],[11,"from","","",234,[[["usegroup",3]],["usetree",4]]],[11,"from","","",195,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",224,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",224,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",224,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",224,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",200,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",200,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",200,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",200,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",194,[[["receiver",3]],["fnarg",4]]],[11,"from","","",194,[[["pattype",3]],["fnarg",4]]],[11,"from","","",237,[[["litstr",3]],["lit",4]]],[11,"from","","",237,[[["litbytestr",3]],["lit",4]]],[11,"from","","",237,[[["litbyte",3]],["lit",4]]],[11,"from","","",237,[[["litchar",3]],["lit",4]]],[11,"from","","",237,[[["litint",3]],["lit",4]]],[11,"from","","",237,[[["litfloat",3]],["lit",4]]],[11,"from","","",237,[[["litbool",3]],["lit",4]]],[11,"from","","",305,[[["literal",3]]]],[11,"from","","",306,[[["literal",3]]]],[11,"from","","",242,[[["datastruct",3]],["data",4]]],[11,"from","","",242,[[["dataenum",3]],["data",4]]],[11,"from","","",242,[[["dataunion",3]],["data",4]]],[11,"from","","",255,[[["typearray",3]],["type",4]]],[11,"from","","",255,[[["typebarefn",3]],["type",4]]],[11,"from","","",255,[[["typegroup",3]],["type",4]]],[11,"from","","",255,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",255,[[["typeinfer",3]],["type",4]]],[11,"from","","",255,[[["typemacro",3]],["type",4]]],[11,"from","","",255,[[["typenever",3]],["type",4]]],[11,"from","","",255,[[["typeparen",3]],["type",4]]],[11,"from","","",255,[[["typepath",3]],["type",4]]],[11,"from","","",255,[[["typeptr",3]],["type",4]]],[11,"from","","",255,[[["typereference",3]],["type",4]]],[11,"from","","",255,[[["typeslice",3]],["type",4]]],[11,"from","","",255,[[["typetraitobject",3]],["type",4]]],[11,"from","","",255,[[["typetuple",3]],["type",4]]],[11,"from","","",272,[[["patbox",3]],["pat",4]]],[11,"from","","",272,[[["patident",3]],["pat",4]]],[11,"from","","",272,[[["patlit",3]],["pat",4]]],[11,"from","","",272,[[["patmacro",3]],["pat",4]]],[11,"from","","",272,[[["pator",3]],["pat",4]]],[11,"from","","",272,[[["patpath",3]],["pat",4]]],[11,"from","","",272,[[["patrange",3]],["pat",4]]],[11,"from","","",272,[[["patreference",3]],["pat",4]]],[11,"from","","",272,[[["patrest",3]],["pat",4]]],[11,"from","","",272,[[["patslice",3]],["pat",4]]],[11,"from","","",272,[[["patstruct",3]],["pat",4]]],[11,"from","","",272,[[["pattuple",3]],["pat",4]]],[11,"from","","",272,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",272,[[["pattype",3]],["pat",4]]],[11,"from","","",272,[[["patwild",3]],["pat",4]]],[11,"from","","",293,[[]]],[11,"from","","",295,[[]]],[11,"from","syn::parse","",116,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"next_back","","",312,[[],["option",4]]],[11,"len","","",307,[[],["usize",15]]],[11,"len","","",308,[[],["usize",15]]],[11,"len","","",309,[[],["usize",15]]],[11,"len","","",310,[[],["usize",15]]],[11,"len","","",311,[[],["usize",15]]],[11,"len","","",312,[[],["usize",15]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","syn::parse","",116,[[["intoiterator",8]]]],[11,"into_iter","syn","",124,[[]]],[11,"into_iter","syn::punctuated","",106,[[]]],[11,"into_iter","syn::parse","",116,[[]]],[11,"next","syn::punctuated","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"next","","",312,[[],["option",4]]],[11,"size_hint","","",312,[[]]],[11,"clone","syn::token","",0,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","syn","",298,[[]]],[11,"clone","","",299,[[]]],[11,"clone","","",300,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",301,[[]]],[11,"clone","","",302,[[]]],[11,"clone","","",303,[[]]],[11,"clone","","",304,[[]]],[11,"clone","","",305,[[]]],[11,"clone","","",306,[[]]],[11,"clone","syn::buffer","",104,[[]]],[11,"clone","syn::punctuated","",106,[[]]],[11,"clone","","",307,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",311,[[]]],[11,"clone","","",107,[[]]],[11,"clone","syn","",252,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",289,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",180,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",290,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",161,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",169,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",291,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",238,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",292,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",293,[[]]],[11,"clone","","",294,[[]]],[11,"clone","","",295,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",296,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",251,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",192,[[]]],[11,"clone","","",193,[[]]],[11,"clone","syn::parse","",113,[[]]],[11,"clone","","",116,[[]]],[11,"default","syn::token","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","","",38,[[]]],[11,"default","","",39,[[]]],[11,"default","","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[]]],[11,"default","","",61,[[]]],[11,"default","","",62,[[]]],[11,"default","","",63,[[]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[]]],[11,"default","","",68,[[]]],[11,"default","","",69,[[]]],[11,"default","","",70,[[]]],[11,"default","","",71,[[]]],[11,"default","","",72,[[]]],[11,"default","","",73,[[]]],[11,"default","","",74,[[]]],[11,"default","","",75,[[]]],[11,"default","","",76,[[]]],[11,"default","","",77,[[]]],[11,"default","","",78,[[]]],[11,"default","","",79,[[]]],[11,"default","","",80,[[]]],[11,"default","","",81,[[]]],[11,"default","","",82,[[]]],[11,"default","","",83,[[]]],[11,"default","","",84,[[]]],[11,"default","","",85,[[]]],[11,"default","","",86,[[]]],[11,"default","","",87,[[]]],[11,"default","","",88,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[]]],[11,"default","","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","","",93,[[]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[]]],[11,"default","","",96,[[]]],[11,"default","","",97,[[]]],[11,"default","","",98,[[]]],[11,"default","","",99,[[]]],[11,"default","","",100,[[]]],[11,"default","","",101,[[]]],[11,"default","","",102,[[]]],[11,"default","syn","",183,[[]]],[11,"default","","",180,[[]]],[11,"default","","",294,[[]]],[11,"default","syn::punctuated","",106,[[]]],[11,"cmp","syn","",236,[[["lifetime",3]],["ordering",4]]],[11,"eq","","",179,[[],["bool",15]]],[11,"eq","","",178,[[],["bool",15]]],[11,"eq","","",236,[[["lifetime",3]],["bool",15]]],[11,"eq","syn::buffer","",104,[[],["bool",15]]],[11,"partial_cmp","syn","",236,[[["lifetime",3]],[["option",4],["ordering",4]]]],[11,"deref","syn::token","",0,[[]]],[11,"deref","","",53,[[]]],[11,"deref","","",55,[[]]],[11,"deref","","",58,[[]]],[11,"deref","","",59,[[]]],[11,"deref","","",60,[[]]],[11,"deref","","",62,[[]]],[11,"deref","","",64,[[]]],[11,"deref","","",65,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",75,[[]]],[11,"deref","","",77,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",83,[[]]],[11,"deref","","",84,[[]]],[11,"deref","","",87,[[]]],[11,"deref","","",90,[[]]],[11,"deref","","",95,[[]]],[11,"deref","","",96,[[]]],[11,"deref","","",98,[[]]],[11,"deref","syn::parse","",113,[[]]],[11,"deref_mut","syn::token","",0,[[]]],[11,"deref_mut","","",53,[[]]],[11,"deref_mut","","",55,[[]]],[11,"deref_mut","","",58,[[]]],[11,"deref_mut","","",59,[[]]],[11,"deref_mut","","",60,[[]]],[11,"deref_mut","","",62,[[]]],[11,"deref_mut","","",64,[[]]],[11,"deref_mut","","",65,[[]]],[11,"deref_mut","","",67,[[]]],[11,"deref_mut","","",68,[[]]],[11,"deref_mut","","",72,[[]]],[11,"deref_mut","","",75,[[]]],[11,"deref_mut","","",77,[[]]],[11,"deref_mut","","",80,[[]]],[11,"deref_mut","","",83,[[]]],[11,"deref_mut","","",84,[[]]],[11,"deref_mut","","",87,[[]]],[11,"deref_mut","","",90,[[]]],[11,"deref_mut","","",95,[[]]],[11,"deref_mut","","",96,[[]]],[11,"deref_mut","","",98,[[]]],[11,"fmt","syn::parse","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","","",306,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",106,[[["usize",15]]]],[11,"index_mut","","",106,[[["usize",15]]]],[11,"hash","syn","",179,[[]]],[11,"hash","","",178,[[]]],[11,"hash","","",236,[[]]],[11,"from_iter","syn::punctuated","",106,[[["intoiterator",8]]]],[11,"from_iter","","",106,[[["intoiterator",8]]]],[11,"to_tokens","syn::token","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","syn","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",148,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",136,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",149,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",155,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",171,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",169,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",170,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",298,[[["tokenstream",3]]]],[11,"to_tokens","","",299,[[["tokenstream",3]]]],[11,"to_tokens","","",300,[[["tokenstream",3]]]],[11,"to_tokens","","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",301,[[["tokenstream",3]]]],[11,"to_tokens","","",302,[[["tokenstream",3]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",306,[[["tokenstream",3]]]],[11,"to_tokens","","",238,[[["tokenstream",3]]]],[11,"to_tokens","","",240,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",280,[[["tokenstream",3]]]],[11,"to_tokens","","",281,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",279,[[["tokenstream",3]]]],[11,"to_tokens","","",282,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"to_tokens","","",295,[[["tokenstream",3]]]],[11,"to_tokens","","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",291,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",290,[[["tokenstream",3]]]],[11,"to_tokens","","",292,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"fmt","syn","",179,[[["formatter",3]],["result",6]]],[11,"span","","",179,[[],[["span",3],["option",4]]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"span","","",178,[[],[["span",3],["option",4]]]],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",297,[[["span",3],["str",15]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",297,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",297,[[["span",3]]]],[11,"parse_meta","","Parses the content of the attribute, consisting of the …",118,[[],[["result",6],["meta",4]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",118,[[],[["result",6],["parse",8]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given …",118,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",118,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",118,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"path","","Returns the identifier that begins this structured meta …",119,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",123,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",123,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [<code>Field</code>] items in this …",124,[[],[["field",3],["iter",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [<code>Field</code>] items …",124,[[],[["field",3],["itermut",3]]]],[11,"len","","Returns the number of fields.",124,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if there are zero fields.",124,[[],["bool",15]]],[11,"parse_without_eager_brace","","An alternative to the primary <code>Expr::parse</code> parser (from the…",138,[[["parsestream",6]],[["expr",4],["result",6]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type …",183,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type …",183,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the …",183,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the …",183,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant …",183,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the …",183,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty <code>where</code>-clause if there is not one …",183,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type’s generics into the pieces required for …",183,[[]]],[11,"as_turbofish","","Turn a type’s generics like <code><X, Y></code> into a turbofish …",299,[[],["turbofish",3]]],[11,"new","","",184,[[["lifetime",3]]]],[11,"receiver","","A method’s <code>self</code> receiver, such as <code>&self</code> or …",223,[[],[["option",4],["fnarg",4]]]],[11,"lifetime","","",222,[[],[["option",4],["lifetime",3]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the …",236,[[["span",3],["str",15]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",237,[[["literal",3]]]],[11,"suffix","","",237,[[],["str",15]]],[11,"span","","",237,[[],["span",3]]],[11,"set_span","","",237,[[["span",3]]]],[11,"new","","",301,[[["span",3],["str",15]]]],[11,"value","","",301,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string …",301,[[],[["result",6],["parse",8]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",301,[[["parser",8]],["result",6]]],[11,"span","","",301,[[],["span",3]]],[11,"set_span","","",301,[[["span",3]]]],[11,"suffix","","",301,[[],["str",15]]],[11,"new","","",302,[[["span",3]]]],[11,"value","","",302,[[],[["u8",15],["vec",3]]]],[11,"span","","",302,[[],["span",3]]],[11,"set_span","","",302,[[["span",3]]]],[11,"suffix","","",302,[[],["str",15]]],[11,"new","","",303,[[["span",3],["u8",15]]]],[11,"value","","",303,[[],["u8",15]]],[11,"span","","",303,[[],["span",3]]],[11,"set_span","","",303,[[["span",3]]]],[11,"suffix","","",303,[[],["str",15]]],[11,"new","","",304,[[["char",15],["span",3]]]],[11,"value","","",304,[[],["char",15]]],[11,"span","","",304,[[],["span",3]]],[11,"set_span","","",304,[[["span",3]]]],[11,"suffix","","",304,[[],["str",15]]],[11,"new","","",305,[[["span",3],["str",15]]]],[11,"base10_digits","","",305,[[],["str",15]]],[11,"base10_parse","","Parses the literal into a selected number type.",305,[[],["result",6]]],[11,"suffix","","",305,[[],["str",15]]],[11,"span","","",305,[[],["span",3]]],[11,"set_span","","",305,[[["span",3]]]],[11,"new","","",306,[[["span",3],["str",15]]]],[11,"base10_digits","","",306,[[],["str",15]]],[11,"base10_parse","","",306,[[],["result",6]]],[11,"suffix","","",306,[[],["str",15]]],[11,"span","","",306,[[],["span",3]]],[11,"set_span","","",306,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation’s …",240,[[],[["result",6],["parse",8]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation’s …",240,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements, …",249,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"without_plus","","In some positions, types may not contain the <code>+</code> character, …",255,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",254,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",268,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a <code>Path</code> containing no path arguments on any of its …",293,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to …",293,[[],["bool",15]]],[11,"get_ident","","If this path consists of a single ident, returns the …",293,[[],[["ident",3],["option",4]]]],[11,"is_empty","","",294,[[],["bool",15]]],[11,"visit_abi","syn::visit","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[11,"visit_abi_mut","syn::visit_mut","",110,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",110,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",110,[[["arm",3]]]],[11,"visit_attr_style_mut","","",110,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",110,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",110,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",110,[[["binop",4]]]],[11,"visit_binding_mut","","",110,[[["binding",3]]]],[11,"visit_block_mut","","",110,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",110,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",110,[[["constparam",3]]]],[11,"visit_constraint_mut","","",110,[[["constraint",3]]]],[11,"visit_data_mut","","",110,[[["data",4]]]],[11,"visit_data_enum_mut","","",110,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",110,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",110,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",110,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",110,[[["expr",4]]]],[11,"visit_expr_array_mut","","",110,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",110,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",110,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",110,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",110,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",110,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",110,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",110,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",110,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",110,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",110,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",110,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",110,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",110,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",110,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",110,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",110,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",110,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",110,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",110,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",110,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",110,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",110,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",110,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",110,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",110,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",110,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",110,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",110,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",110,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",110,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",110,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",110,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",110,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",110,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",110,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",110,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",110,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",110,[[["expryield",3]]]],[11,"visit_field_mut","","",110,[[["field",3]]]],[11,"visit_field_pat_mut","","",110,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",110,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",110,[[["fields",4]]]],[11,"visit_fields_named_mut","","",110,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",110,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",110,[[["file",3]]]],[11,"visit_fn_arg_mut","","",110,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",110,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",110,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",110,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",110,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",110,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",110,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",110,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",110,[[["genericparam",4]]]],[11,"visit_generics_mut","","",110,[[["generics",3]]]],[11,"visit_ident_mut","","",110,[[["ident",3]]]],[11,"visit_impl_item_mut","","",110,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",110,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",110,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",110,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",110,[[["implitemtype",3]]]],[11,"visit_index_mut","","",110,[[["index",3]]]],[11,"visit_item_mut","","",110,[[["item",4]]]],[11,"visit_item_const_mut","","",110,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",110,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",110,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",110,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",110,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",110,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",110,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",110,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",110,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",110,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",110,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",110,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",110,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",110,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",110,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",110,[[["itemuse",3]]]],[11,"visit_label_mut","","",110,[[["label",3]]]],[11,"visit_lifetime_mut","","",110,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",110,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",110,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",110,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",110,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",110,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",110,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",110,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",110,[[["litint",3]]]],[11,"visit_lit_str_mut","","",110,[[["litstr",3]]]],[11,"visit_local_mut","","",110,[[["local",3]]]],[11,"visit_macro_mut","","",110,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",110,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",110,[[["member",4]]]],[11,"visit_meta_mut","","",110,[[["meta",4]]]],[11,"visit_meta_list_mut","","",110,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",110,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",110,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",110,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",110,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",110,[[["pat",4]]]],[11,"visit_pat_box_mut","","",110,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",110,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",110,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",110,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",110,[[["pator",3]]]],[11,"visit_pat_path_mut","","",110,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",110,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",110,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",110,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",110,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",110,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",110,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",110,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",110,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",110,[[["patwild",3]]]],[11,"visit_path_mut","","",110,[[["path",3]]]],[11,"visit_path_arguments_mut","","",110,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",110,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",110,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",110,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",110,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",110,[[["qself",3]]]],[11,"visit_range_limits_mut","","",110,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",110,[[["receiver",3]]]],[11,"visit_return_type_mut","","",110,[[["returntype",4]]]],[11,"visit_signature_mut","","",110,[[["signature",3]]]],[11,"visit_span_mut","","",110,[[["span",3]]]],[11,"visit_stmt_mut","","",110,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",110,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",110,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",110,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",110,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",110,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",110,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",110,[[["traititemtype",3]]]],[11,"visit_type_mut","","",110,[[["type",4]]]],[11,"visit_type_array_mut","","",110,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",110,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",110,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",110,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",110,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",110,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",110,[[["typenever",3]]]],[11,"visit_type_param_mut","","",110,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",110,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",110,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",110,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",110,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",110,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",110,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",110,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",110,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",110,[[["unop",4]]]],[11,"visit_use_glob_mut","","",110,[[["useglob",3]]]],[11,"visit_use_group_mut","","",110,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",110,[[["usename",3]]]],[11,"visit_use_path_mut","","",110,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",110,[[["userename",3]]]],[11,"visit_use_tree_mut","","",110,[[["usetree",4]]]],[11,"visit_variadic_mut","","",110,[[["variadic",3]]]],[11,"visit_variant_mut","","",110,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",110,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",110,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",110,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",110,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",110,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",110,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine …",313,[[["peek",8]],["bool",15]]],[11,"error","","Triggers an error at the current position of the parse …",313,[[],["error",3]]]],"p":[[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[3,"Punctuated"],[4,"Pair"],[8,"Spanned"],[8,"Visit"],[8,"VisitMut"],[8,"Speculative"],[8,"Parse"],[3,"StepCursor"],[3,"ParseBuffer"],[8,"Parser"],[3,"Error"],[4,"AttrStyle"],[3,"Attribute"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Field"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[4,"Visibility"],[3,"Arm"],[3,"FieldValue"],[4,"GenericMethodArgument"],[3,"Label"],[3,"MethodTurbofish"],[4,"RangeLimits"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[4,"Member"],[3,"BoundLifetimes"],[3,"ConstParam"],[4,"GenericParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"TypeParam"],[4,"TypeParamBound"],[3,"WhereClause"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[4,"UseTree"],[3,"File"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[4,"StrStyle"],[3,"Macro"],[4,"MacroDelimiter"],[4,"Data"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[3,"Local"],[4,"Stmt"],[3,"Abi"],[3,"BareFnArg"],[4,"ReturnType"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[4,"GenericArgument"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[4,"PathArguments"],[3,"PathSegment"],[3,"QSelf"],[3,"Ident"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"tap":{"doc":"<code>tap</code> – Syntactical Plumb-LinesRust permits functions …","i":[[0,"conv","tap","Method-Directed Type ConversionThe <code>std::convert</code> module …",null,null],[8,"Conv","tap::conv","Wraps <code>Into::<T>::into</code> as a method that can be placed in …",null,null],[11,"conv","","Converts <code>self</code> into <code>T</code> using <code>Into<T></code>.",0,[[]]],[8,"TryConv","","Wraps <code>TryInto::<T>::try_into</code> as a method that can be …",null,null],[11,"try_conv","","Attempts to convert <code>self</code> into <code>T</code> using <code>TryInto<T></code>.",1,[[],["result",4]]],[0,"pipe","tap","Universal Suffix CallsThis module provides a single …",null,null],[8,"Pipe","tap::pipe","Provides universal suffix-position call syntax for any …",null,null],[11,"pipe","","Pipes by value. This is generally the method you want to …",2,[[]]],[11,"pipe_ref","","Borrows <code>self</code> and passes that borrow into the pipe …",2,[[]]],[11,"pipe_ref_mut","","Mutably borrows <code>self</code> and passes that borrow into the pipe …",2,[[]]],[11,"pipe_borrow","","Borrows <code>self</code>, then passes <code>self.borrow()</code> into the pipe …",2,[[]]],[11,"pipe_borrow_mut","","Mutably borrows <code>self</code>, then passes <code>self.borrow_mut()</code> into …",2,[[]]],[11,"pipe_as_ref","","Borrows <code>self</code>, then passes <code>self.as_ref()</code> into the pipe …",2,[[]]],[11,"pipe_as_mut","","Mutably borrows <code>self</code>, then passes <code>self.as_mut()</code> into the …",2,[[]]],[11,"pipe_deref","","Borrows <code>self</code>, then passes <code>self.deref()</code> into the pipe …",2,[[]]],[11,"pipe_deref_mut","","Mutably borrows <code>self</code>, then passes <code>self.deref_mut()</code> into …",2,[[]]],[0,"tap","tap","Point-Free InspectionThe standard library does not …",null,null],[8,"Tap","tap::tap","Point-free value inspection and modification.",null,null],[11,"tap","","Immutable access to a value.",3,[[]]],[11,"tap_mut","","Mutable access to a value.",3,[[]]],[11,"tap_borrow","","Immutable access to the <code>Borrow<B></code> of a value.",3,[[]]],[11,"tap_borrow_mut","","Mutable access to the <code>BorrowMut<B></code> of a value.",3,[[]]],[11,"tap_ref","","Immutable access to the <code>AsRef<R></code> view of a value.",3,[[]]],[11,"tap_ref_mut","","Mutable access to the <code>AsMut<R></code> view of a value.",3,[[]]],[11,"tap_deref","","Immutable access to the <code>Deref::Target</code> of a value.",3,[[]]],[11,"tap_deref_mut","","Mutable access to the <code>Deref::Target</code> of a value.",3,[[]]],[11,"tap_dbg","","Calls <code>.tap()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_mut_dbg","","Calls <code>.tap_mut()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_borrow_dbg","","Calls <code>.tap_borrow()</code> only in debug builds, and is erased …",3,[[]]],[11,"tap_borrow_mut_dbg","","Calls <code>.tap_borrow_mut()</code> only in debug builds, and is …",3,[[]]],[11,"tap_ref_dbg","","Calls <code>.tap_ref()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_ref_mut_dbg","","Calls <code>.tap_ref_mut()</code> only in debug builds, and is erased …",3,[[]]],[11,"tap_deref_dbg","","Calls <code>.tap_deref()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_deref_mut_dbg","","Calls <code>.tap_deref_mut()</code> only in debug builds, and is …",3,[[]]],[8,"TapOptional","","Optional tapping, conditional on the optional presence of …",null,null],[16,"Val","","The interior type that the container may or may not carry.",4,null],[10,"tap_some","","Immutabily accesses an interior value only when it is …",4,[[]]],[10,"tap_some_mut","","Mutably accesses an interor value only when it is present.",4,[[]]],[10,"tap_none","","Runs an effect function when the container is empty.",4,[[]]],[11,"tap_some_dbg","","Calls <code>.tap_some()</code> only in debug builds, and is erased in …",4,[[]]],[11,"tap_some_mut_dbg","","Calls <code>.tap_some_mut()</code> only in debug builds, and is erased …",4,[[]]],[11,"tap_none_dbg","","Calls <code>.tap_none()</code> only in debug builds, and is erased in …",4,[[]]],[8,"TapFallible","","Fallible tapping, conditional on the optional success of …",null,null],[16,"Ok","","The interior type used to indicate a successful …",5,null],[16,"Err","","The interior type used to indicate a failed construction.",5,null],[10,"tap_ok","","Immutably accesses an interior success value.",5,[[]]],[10,"tap_ok_mut","","Mutably accesses an interior success value.",5,[[]]],[10,"tap_err","","Immutably accesses an interior failure value.",5,[[]]],[10,"tap_err_mut","","Mutably accesses an interior failure value.",5,[[]]],[11,"tap_ok_dbg","","Calls <code>.tap_ok()</code> only in debug builds, and is erased in …",5,[[]]],[11,"tap_ok_mut_dbg","","Calls <code>.tap_ok_mut()</code> only in debug builds, and is erased …",5,[[]]],[11,"tap_err_dbg","","Calls <code>.tap_err()</code> only in debug builds, and is erased in …",5,[[]]],[11,"tap_err_mut_dbg","","Calls <code>.tap_err_mut()</code> only in debug builds, and is erased …",5,[[]]],[0,"prelude","tap","Reëxports all traits in one place, for easy import.",null,null],[8,"Conv","tap::prelude","Wraps <code>Into::<T>::into</code> as a method that can be placed in …",null,null],[11,"conv","","Converts <code>self</code> into <code>T</code> using <code>Into<T></code>.",0,[[]]],[8,"TryConv","","Wraps <code>TryInto::<T>::try_into</code> as a method that can be …",null,null],[11,"try_conv","","Attempts to convert <code>self</code> into <code>T</code> using <code>TryInto<T></code>.",1,[[],["result",4]]],[8,"Pipe","","Provides universal suffix-position call syntax for any …",null,null],[11,"pipe","","Pipes by value. This is generally the method you want to …",2,[[]]],[11,"pipe_ref","","Borrows <code>self</code> and passes that borrow into the pipe …",2,[[]]],[11,"pipe_ref_mut","","Mutably borrows <code>self</code> and passes that borrow into the pipe …",2,[[]]],[11,"pipe_borrow","","Borrows <code>self</code>, then passes <code>self.borrow()</code> into the pipe …",2,[[]]],[11,"pipe_borrow_mut","","Mutably borrows <code>self</code>, then passes <code>self.borrow_mut()</code> into …",2,[[]]],[11,"pipe_as_ref","","Borrows <code>self</code>, then passes <code>self.as_ref()</code> into the pipe …",2,[[]]],[11,"pipe_as_mut","","Mutably borrows <code>self</code>, then passes <code>self.as_mut()</code> into the …",2,[[]]],[11,"pipe_deref","","Borrows <code>self</code>, then passes <code>self.deref()</code> into the pipe …",2,[[]]],[11,"pipe_deref_mut","","Mutably borrows <code>self</code>, then passes <code>self.deref_mut()</code> into …",2,[[]]],[8,"Tap","","Point-free value inspection and modification.",null,null],[11,"tap","","Immutable access to a value.",3,[[]]],[11,"tap_mut","","Mutable access to a value.",3,[[]]],[11,"tap_borrow","","Immutable access to the <code>Borrow<B></code> of a value.",3,[[]]],[11,"tap_borrow_mut","","Mutable access to the <code>BorrowMut<B></code> of a value.",3,[[]]],[11,"tap_ref","","Immutable access to the <code>AsRef<R></code> view of a value.",3,[[]]],[11,"tap_ref_mut","","Mutable access to the <code>AsMut<R></code> view of a value.",3,[[]]],[11,"tap_deref","","Immutable access to the <code>Deref::Target</code> of a value.",3,[[]]],[11,"tap_deref_mut","","Mutable access to the <code>Deref::Target</code> of a value.",3,[[]]],[11,"tap_dbg","","Calls <code>.tap()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_mut_dbg","","Calls <code>.tap_mut()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_borrow_dbg","","Calls <code>.tap_borrow()</code> only in debug builds, and is erased …",3,[[]]],[11,"tap_borrow_mut_dbg","","Calls <code>.tap_borrow_mut()</code> only in debug builds, and is …",3,[[]]],[11,"tap_ref_dbg","","Calls <code>.tap_ref()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_ref_mut_dbg","","Calls <code>.tap_ref_mut()</code> only in debug builds, and is erased …",3,[[]]],[11,"tap_deref_dbg","","Calls <code>.tap_deref()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_deref_mut_dbg","","Calls <code>.tap_deref_mut()</code> only in debug builds, and is …",3,[[]]],[8,"TapOptional","","Optional tapping, conditional on the optional presence of …",null,null],[16,"Val","","The interior type that the container may or may not carry.",4,null],[10,"tap_some","","Immutabily accesses an interior value only when it is …",4,[[]]],[10,"tap_some_mut","","Mutably accesses an interor value only when it is present.",4,[[]]],[10,"tap_none","","Runs an effect function when the container is empty.",4,[[]]],[11,"tap_some_dbg","","Calls <code>.tap_some()</code> only in debug builds, and is erased in …",4,[[]]],[11,"tap_some_mut_dbg","","Calls <code>.tap_some_mut()</code> only in debug builds, and is erased …",4,[[]]],[11,"tap_none_dbg","","Calls <code>.tap_none()</code> only in debug builds, and is erased in …",4,[[]]],[8,"TapFallible","","Fallible tapping, conditional on the optional success of …",null,null],[16,"Ok","","The interior type used to indicate a successful …",5,null],[16,"Err","","The interior type used to indicate a failed construction.",5,null],[10,"tap_ok","","Immutably accesses an interior success value.",5,[[]]],[10,"tap_ok_mut","","Mutably accesses an interior success value.",5,[[]]],[10,"tap_err","","Immutably accesses an interior failure value.",5,[[]]],[10,"tap_err_mut","","Mutably accesses an interior failure value.",5,[[]]],[11,"tap_ok_dbg","","Calls <code>.tap_ok()</code> only in debug builds, and is erased in …",5,[[]]],[11,"tap_ok_mut_dbg","","Calls <code>.tap_ok_mut()</code> only in debug builds, and is erased …",5,[[]]],[11,"tap_err_dbg","","Calls <code>.tap_err()</code> only in debug builds, and is erased in …",5,[[]]],[11,"tap_err_mut_dbg","","Calls <code>.tap_err_mut()</code> only in debug builds, and is erased …",5,[[]]],[8,"Conv","tap","Wraps <code>Into::<T>::into</code> as a method that can be placed in …",null,null],[11,"conv","","Converts <code>self</code> into <code>T</code> using <code>Into<T></code>.",0,[[]]],[8,"TryConv","","Wraps <code>TryInto::<T>::try_into</code> as a method that can be …",null,null],[11,"try_conv","","Attempts to convert <code>self</code> into <code>T</code> using <code>TryInto<T></code>.",1,[[],["result",4]]],[8,"Pipe","","Provides universal suffix-position call syntax for any …",null,null],[11,"pipe","","Pipes by value. This is generally the method you want to …",2,[[]]],[11,"pipe_ref","","Borrows <code>self</code> and passes that borrow into the pipe …",2,[[]]],[11,"pipe_ref_mut","","Mutably borrows <code>self</code> and passes that borrow into the pipe …",2,[[]]],[11,"pipe_borrow","","Borrows <code>self</code>, then passes <code>self.borrow()</code> into the pipe …",2,[[]]],[11,"pipe_borrow_mut","","Mutably borrows <code>self</code>, then passes <code>self.borrow_mut()</code> into …",2,[[]]],[11,"pipe_as_ref","","Borrows <code>self</code>, then passes <code>self.as_ref()</code> into the pipe …",2,[[]]],[11,"pipe_as_mut","","Mutably borrows <code>self</code>, then passes <code>self.as_mut()</code> into the …",2,[[]]],[11,"pipe_deref","","Borrows <code>self</code>, then passes <code>self.deref()</code> into the pipe …",2,[[]]],[11,"pipe_deref_mut","","Mutably borrows <code>self</code>, then passes <code>self.deref_mut()</code> into …",2,[[]]],[8,"Tap","","Point-free value inspection and modification.",null,null],[11,"tap","","Immutable access to a value.",3,[[]]],[11,"tap_mut","","Mutable access to a value.",3,[[]]],[11,"tap_borrow","","Immutable access to the <code>Borrow<B></code> of a value.",3,[[]]],[11,"tap_borrow_mut","","Mutable access to the <code>BorrowMut<B></code> of a value.",3,[[]]],[11,"tap_ref","","Immutable access to the <code>AsRef<R></code> view of a value.",3,[[]]],[11,"tap_ref_mut","","Mutable access to the <code>AsMut<R></code> view of a value.",3,[[]]],[11,"tap_deref","","Immutable access to the <code>Deref::Target</code> of a value.",3,[[]]],[11,"tap_deref_mut","","Mutable access to the <code>Deref::Target</code> of a value.",3,[[]]],[11,"tap_dbg","","Calls <code>.tap()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_mut_dbg","","Calls <code>.tap_mut()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_borrow_dbg","","Calls <code>.tap_borrow()</code> only in debug builds, and is erased …",3,[[]]],[11,"tap_borrow_mut_dbg","","Calls <code>.tap_borrow_mut()</code> only in debug builds, and is …",3,[[]]],[11,"tap_ref_dbg","","Calls <code>.tap_ref()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_ref_mut_dbg","","Calls <code>.tap_ref_mut()</code> only in debug builds, and is erased …",3,[[]]],[11,"tap_deref_dbg","","Calls <code>.tap_deref()</code> only in debug builds, and is erased in …",3,[[]]],[11,"tap_deref_mut_dbg","","Calls <code>.tap_deref_mut()</code> only in debug builds, and is …",3,[[]]],[8,"TapOptional","","Optional tapping, conditional on the optional presence of …",null,null],[16,"Val","","The interior type that the container may or may not carry.",4,null],[10,"tap_some","","Immutabily accesses an interior value only when it is …",4,[[]]],[10,"tap_some_mut","","Mutably accesses an interor value only when it is present.",4,[[]]],[10,"tap_none","","Runs an effect function when the container is empty.",4,[[]]],[11,"tap_some_dbg","","Calls <code>.tap_some()</code> only in debug builds, and is erased in …",4,[[]]],[11,"tap_some_mut_dbg","","Calls <code>.tap_some_mut()</code> only in debug builds, and is erased …",4,[[]]],[11,"tap_none_dbg","","Calls <code>.tap_none()</code> only in debug builds, and is erased in …",4,[[]]],[8,"TapFallible","","Fallible tapping, conditional on the optional success of …",null,null],[16,"Ok","","The interior type used to indicate a successful …",5,null],[16,"Err","","The interior type used to indicate a failed construction.",5,null],[10,"tap_ok","","Immutably accesses an interior success value.",5,[[]]],[10,"tap_ok_mut","","Mutably accesses an interior success value.",5,[[]]],[10,"tap_err","","Immutably accesses an interior failure value.",5,[[]]],[10,"tap_err_mut","","Mutably accesses an interior failure value.",5,[[]]],[11,"tap_ok_dbg","","Calls <code>.tap_ok()</code> only in debug builds, and is erased in …",5,[[]]],[11,"tap_ok_mut_dbg","","Calls <code>.tap_ok_mut()</code> only in debug builds, and is erased …",5,[[]]],[11,"tap_err_dbg","","Calls <code>.tap_err()</code> only in debug builds, and is erased in …",5,[[]]],[11,"tap_err_mut_dbg","","Calls <code>.tap_err_mut()</code> only in debug builds, and is erased …",5,[[]]]],"p":[[8,"Conv"],[8,"TryConv"],[8,"Pipe"],[8,"Tap"],[8,"TapOptional"],[8,"TapFallible"]]},\
"tempfile":{"doc":"Temporary files and directories.","i":[[5,"tempdir","tempfile","Create a new temporary directory.",null,[[],[["result",6],["tempdir",3]]]],[5,"tempdir_in","","Create a new temporary directory.",null,[[["asref",8],["path",3]],[["result",6],["tempdir",3]]]],[3,"TempDir","","A directory in the filesystem that is automatically …",null,null],[5,"tempfile","","Create a new temporary file.",null,[[],[["result",6],["file",3]]]],[5,"tempfile_in","","Create a new temporary file in the specified directory.",null,[[["asref",8],["path",3]],[["result",6],["file",3]]]],[3,"NamedTempFile","","A named temporary file.",null,null],[3,"PathPersistError","","Error returned when persisting a temporary file path …",null,null],[12,"error","","The underlying IO error.",0,null],[12,"path","","The temporary file path that couldn’t be persisted.",0,null],[3,"PersistError","","Error returned when persisting a temporary file fails.",null,null],[12,"error","","The underlying IO error.",1,null],[12,"file","","The temporary file that couldn’t be persisted.",1,null],[3,"TempPath","","A path to a named temporary file without an open file …",null,null],[5,"spooled_tempfile","","Create a new spooled temporary file.",null,[[["usize",15]],["spooledtempfile",3]]],[3,"SpooledTempFile","","An object that behaves like a regular temporary file, but …",null,null],[3,"Builder","","Create a new temporary file or directory with custom …",null,null],[11,"new","","Create a new <code>Builder</code>.",2,[[]]],[11,"prefix","","Set a custom filename prefix.",2,[[]]],[11,"suffix","","Set a custom filename suffix.",2,[[]]],[11,"rand_bytes","","Set the number of random bytes.",2,[[["usize",15]]]],[11,"append","","Set the file to be opened in append mode.",2,[[["bool",15]]]],[11,"tempfile","","Create the named temporary file.",2,[[],[["result",6],["namedtempfile",3]]]],[11,"tempfile_in","","Create the named temporary file in the specified …",2,[[["asref",8],["path",3]],[["result",6],["namedtempfile",3]]]],[11,"tempdir","","Attempts to make a temporary directory inside of …",2,[[],[["result",6],["tempdir",3]]]],[11,"tempdir_in","","Attempts to make a temporary directory inside of <code>dir</code>. The …",2,[[["asref",8],["path",3]],[["result",6],["tempdir",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"drop","","",3,[[]]],[11,"drop","","",4,[[]]],[11,"as_ref","","",3,[[],["path",3]]],[11,"as_ref","","",4,[[],["path",3]]],[11,"as_ref","","",4,[[],["osstr",3]]],[11,"as_ref","","",5,[[],["path",3]]],[11,"from","","",4,[[["pathpersisterror",3]],["temppath",3]]],[11,"from","","",5,[[["persisterror",3]],["namedtempfile",3]]],[11,"clone","","",2,[[],["builder",3]]],[11,"default","","",2,[[]]],[11,"eq","","",2,[[["builder",3]],["bool",15]]],[11,"ne","","",2,[[["builder",3]],["bool",15]]],[11,"deref","","",4,[[],["path",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["error",8],["option",4]]]],[11,"source","","",1,[[],[["error",8],["option",4]]]],[11,"read","","",5,[[],[["usize",15],["result",6]]]],[11,"read","","",6,[[],[["usize",15],["result",6]]]],[11,"seek","","",5,[[["seekfrom",4]],[["result",6],["u64",15]]]],[11,"seek","","",6,[[["seekfrom",4]],[["result",6],["u64",15]]]],[11,"write","","",5,[[],[["usize",15],["result",6]]]],[11,"flush","","",5,[[],["result",6]]],[11,"write","","",6,[[],[["usize",15],["result",6]]]],[11,"flush","","",6,[[],["result",6]]],[11,"as_raw_fd","","",5,[[],["rawfd",6]]],[11,"new","","Attempts to make a temporary directory inside of …",3,[[],[["result",6],["tempdir",3]]]],[11,"new_in","","Attempts to make a temporary directory inside of <code>dir</code>. The …",3,[[["asref",8],["path",3]],[["result",6],["tempdir",3]]]],[11,"path","","Accesses the <code>Path</code> to the temporary directory.",3,[[],["path",3]]],[11,"into_path","","Persist the temporary directory to disk, returning the …",3,[[],["pathbuf",3]]],[11,"close","","Closes and removes the temporary directory, returing a …",3,[[],["result",6]]],[11,"close","","Close and remove the temporary file.",4,[[],["result",6]]],[11,"persist","","Persist the temporary file at the target path.",4,[[["asref",8],["path",3]],[["pathpersisterror",3],["result",4]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file …",4,[[["asref",8],["path",3]],[["pathpersisterror",3],["result",4]]]],[11,"keep","","Keep the temporary file from being deleted. This function …",4,[[],[["result",4],["pathpersisterror",3],["pathbuf",3]]]],[11,"new","","Create a new named temporary file.",5,[[],[["result",6],["namedtempfile",3]]]],[11,"new_in","","Create a new named temporary file in the specified …",5,[[["asref",8],["path",3]],[["result",6],["namedtempfile",3]]]],[11,"path","","Get the temporary file’s path.",5,[[],["path",3]]],[11,"close","","Close and remove the temporary file.",5,[[],["result",6]]],[11,"persist","","Persist the temporary file at the target path.",5,[[["asref",8],["path",3]],[["result",4],["persisterror",3],["file",3]]]],[11,"persist_noclobber","","Persist the temporary file at the target path iff no file …",5,[[["asref",8],["path",3]],[["result",4],["persisterror",3],["file",3]]]],[11,"keep","","Keep the temporary file from being deleted. This function …",5,[[],[["persisterror",3],["result",4]]]],[11,"reopen","","Securely reopen the temporary file.",5,[[],[["result",6],["file",3]]]],[11,"as_file","","Get a reference to the underlying file.",5,[[],["file",3]]],[11,"as_file_mut","","Get a mutable reference to the underlying file.",5,[[],["file",3]]],[11,"into_file","","Convert the temporary file into a <code>std::fs::File</code>.",5,[[],["file",3]]],[11,"into_temp_path","","Closes the file, leaving only the temporary file path.",5,[[],["temppath",3]]],[11,"into_parts","","Converts the named temporary file into its constituent …",5,[[]]],[11,"new","","",6,[[["usize",15]],["spooledtempfile",3]]],[11,"is_rolled","","Returns true if the file has been rolled over to disk.",6,[[],["bool",15]]],[11,"roll","","Rolls over to a file on disk, regardless of current size. …",6,[[],["result",6]]],[11,"set_len","","",6,[[["u64",15]],[["error",3],["result",4]]]]],"p":[[3,"PathPersistError"],[3,"PersistError"],[3,"Builder"],[3,"TempDir"],[3,"TempPath"],[3,"NamedTempFile"],[3,"SpooledTempFile"]]},\
"termcolor":{"doc":"This crate provides a cross platform abstraction for …","i":[[8,"WriteColor","termcolor","This trait describes the behavior of writers that support …",null,null],[10,"supports_color","","Returns true if and only if the underlying writer …",0,[[],["bool",15]]],[10,"set_color","","Set the color settings of the writer.",0,[[["colorspec",3]],["result",6]]],[10,"reset","","Reset the current color settings to their original …",0,[[],["result",6]]],[11,"is_synchronous","","Returns true if and only if the underlying writer must …",0,[[],["bool",15]]],[4,"ColorChoice","","ColorChoice represents the color preferences of an end …",null,null],[13,"Always","","Try very hard to emit colors. This includes emitting ANSI …",1,null],[13,"AlwaysAnsi","","AlwaysAnsi is like Always, except it never tries to use …",1,null],[13,"Auto","","Try to use colors, but don’t force the issue. If the …",1,null],[13,"Never","","Never emit colors.",1,null],[3,"StandardStream","","Satisfies <code>io::Write</code> and <code>WriteColor</code>, and supports optional …",null,null],[3,"StandardStreamLock","","<code>StandardStreamLock</code> is a locked reference to a …",null,null],[3,"BufferedStandardStream","","Like <code>StandardStream</code>, but does buffered writing.",null,null],[11,"stdout","","Create a new <code>StandardStream</code> with the given color …",2,[[["colorchoice",4]],["standardstream",3]]],[11,"stderr","","Create a new <code>StandardStream</code> with the given color …",2,[[["colorchoice",4]],["standardstream",3]]],[11,"lock","","Lock the underlying writer.",2,[[],["standardstreamlock",3]]],[11,"stdout","","Create a new <code>BufferedStandardStream</code> with the given color …",3,[[["colorchoice",4]],["bufferedstandardstream",3]]],[11,"stderr","","Create a new <code>BufferedStandardStream</code> with the given color …",3,[[["colorchoice",4]],["bufferedstandardstream",3]]],[3,"BufferWriter","","Writes colored buffers to stdout or stderr.",null,null],[11,"stdout","","Create a new <code>BufferWriter</code> that writes to stdout with the …",4,[[["colorchoice",4]],["bufferwriter",3]]],[11,"stderr","","Create a new <code>BufferWriter</code> that writes to stderr with the …",4,[[["colorchoice",4]],["bufferwriter",3]]],[11,"separator","","If set, the separator given is printed between buffers. …",4,[[["option",4],["vec",3]]]],[11,"buffer","","Creates a new <code>Buffer</code> with the current color preferences.",4,[[],["buffer",3]]],[11,"print","","Prints the contents of the given buffer.",4,[[["buffer",3]],["result",6]]],[3,"Buffer","","Write colored text to memory.",null,null],[11,"no_color","","Create a buffer that drops all color information.",5,[[],["buffer",3]]],[11,"ansi","","Create a buffer that uses ANSI escape sequences.",5,[[],["buffer",3]]],[11,"is_empty","","Returns true if and only if this buffer is empty.",5,[[],["bool",15]]],[11,"len","","Returns the length of this buffer in bytes.",5,[[],["usize",15]]],[11,"clear","","Clears this buffer.",5,[[]]],[11,"into_inner","","Consume this buffer and return the underlying raw data.",5,[[],[["u8",15],["vec",3]]]],[11,"as_slice","","Return the underlying data of the buffer.",5,[[]]],[11,"as_mut_slice","","Return the underlying data of the buffer as a mutable …",5,[[]]],[3,"NoColor","","Satisfies <code>WriteColor</code> but ignores all color options.",null,null],[11,"new","","Create a new writer that satisfies <code>WriteColor</code> but drops …",6,[[],["nocolor",3]]],[11,"into_inner","","Consume this <code>NoColor</code> value and return the inner writer.",6,[[]]],[11,"get_ref","","Return a reference to the inner writer.",6,[[]]],[11,"get_mut","","Return a mutable reference to the inner writer.",6,[[]]],[3,"Ansi","","Satisfies <code>WriteColor</code> using standard ANSI escape sequences.",null,null],[11,"new","","Create a new writer that satisfies <code>WriteColor</code> using …",7,[[],["ansi",3]]],[11,"into_inner","","Consume this <code>Ansi</code> value and return the inner writer.",7,[[]]],[11,"get_ref","","Return a reference to the inner writer.",7,[[]]],[11,"get_mut","","Return a mutable reference to the inner writer.",7,[[]]],[3,"ColorSpec","","A color specification.",null,null],[11,"new","","Create a new color specification that has no colors or …",8,[[],["colorspec",3]]],[11,"fg","","Get the foreground color.",8,[[],[["color",4],["option",4]]]],[11,"set_fg","","Set the foreground color.",8,[[["color",4],["option",4]],["colorspec",3]]],[11,"bg","","Get the background color.",8,[[],[["color",4],["option",4]]]],[11,"set_bg","","Set the background color.",8,[[["color",4],["option",4]],["colorspec",3]]],[11,"bold","","Get whether this is bold or not.",8,[[],["bool",15]]],[11,"set_bold","","Set whether the text is bolded or not.",8,[[["bool",15]],["colorspec",3]]],[11,"dimmed","","Get whether this is dimmed or not.",8,[[],["bool",15]]],[11,"set_dimmed","","Set whether the text is dimmed or not.",8,[[["bool",15]],["colorspec",3]]],[11,"italic","","Get whether this is italic or not.",8,[[],["bool",15]]],[11,"set_italic","","Set whether the text is italicized or not.",8,[[["bool",15]],["colorspec",3]]],[11,"underline","","Get whether this is underline or not.",8,[[],["bool",15]]],[11,"set_underline","","Set whether the text is underlined or not.",8,[[["bool",15]],["colorspec",3]]],[11,"reset","","Get whether reset is enabled or not.",8,[[],["bool",15]]],[11,"set_reset","","Set whether to reset the terminal whenever color settings …",8,[[["bool",15]],["colorspec",3]]],[11,"intense","","Get whether this is intense or not.",8,[[],["bool",15]]],[11,"set_intense","","Set whether the text is intense or not.",8,[[["bool",15]],["colorspec",3]]],[11,"is_none","","Returns true if this color specification has no colors or …",8,[[],["bool",15]]],[11,"clear","","Clears this color specification so that it has no …",8,[[]]],[4,"Color","","The set of available colors for the terminal …",null,null],[13,"Black","","",9,null],[13,"Blue","","",9,null],[13,"Green","","",9,null],[13,"Red","","",9,null],[13,"Cyan","","",9,null],[13,"Magenta","","",9,null],[13,"Yellow","","",9,null],[13,"White","","",9,null],[13,"Ansi256","","",9,null],[13,"Rgb","","",9,null],[3,"ParseColorError","","An error from parsing an invalid color specification.",null,null],[11,"invalid","","Return the string that couldn’t be parsed as a valid …",10,[[],["str",15]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"supports_color","","",2,[[],["bool",15]]],[11,"set_color","","",2,[[["colorspec",3]],["result",6]]],[11,"reset","","",2,[[],["result",6]]],[11,"is_synchronous","","",2,[[],["bool",15]]],[11,"supports_color","","",11,[[],["bool",15]]],[11,"set_color","","",11,[[["colorspec",3]],["result",6]]],[11,"reset","","",11,[[],["result",6]]],[11,"is_synchronous","","",11,[[],["bool",15]]],[11,"supports_color","","",3,[[],["bool",15]]],[11,"set_color","","",3,[[["colorspec",3]],["result",6]]],[11,"reset","","",3,[[],["result",6]]],[11,"is_synchronous","","",3,[[],["bool",15]]],[11,"supports_color","","",5,[[],["bool",15]]],[11,"set_color","","",5,[[["colorspec",3]],["result",6]]],[11,"reset","","",5,[[],["result",6]]],[11,"is_synchronous","","",5,[[],["bool",15]]],[11,"supports_color","","",6,[[],["bool",15]]],[11,"set_color","","",6,[[["colorspec",3]],["result",6]]],[11,"reset","","",6,[[],["result",6]]],[11,"is_synchronous","","",6,[[],["bool",15]]],[11,"supports_color","","",7,[[],["bool",15]]],[11,"set_color","","",7,[[["colorspec",3]],["result",6]]],[11,"reset","","",7,[[],["result",6]]],[11,"is_synchronous","","",7,[[],["bool",15]]],[11,"clone","","",1,[[],["colorchoice",4]]],[11,"clone","","",8,[[],["colorspec",3]]],[11,"clone","","",9,[[],["color",4]]],[11,"clone","","",10,[[],["parsecolorerror",3]]],[11,"default","","",8,[[],["colorspec",3]]],[11,"eq","","",1,[[["colorchoice",4]],["bool",15]]],[11,"eq","","",8,[[["colorspec",3]],["bool",15]]],[11,"ne","","",8,[[["colorspec",3]],["bool",15]]],[11,"eq","","",9,[[["color",4]],["bool",15]]],[11,"ne","","",9,[[["color",4]],["bool",15]]],[11,"eq","","",10,[[["parsecolorerror",3]],["bool",15]]],[11,"ne","","",10,[[["parsecolorerror",3]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"from_str","","",9,[[["str",15]],[["result",4],["color",4],["parsecolorerror",3]]]],[11,"description","","",10,[[],["str",15]]],[11,"write","","",2,[[],[["usize",15],["result",6]]]],[11,"flush","","",2,[[],["result",6]]],[11,"write","","",11,[[],[["usize",15],["result",6]]]],[11,"flush","","",11,[[],["result",6]]],[11,"write","","",3,[[],[["usize",15],["result",6]]]],[11,"flush","","",3,[[],["result",6]]],[11,"write","","",5,[[],[["usize",15],["result",6]]]],[11,"flush","","",5,[[],["result",6]]],[11,"write","","",6,[[],[["usize",15],["result",6]]]],[11,"flush","","",6,[[],["result",6]]],[11,"write","","",7,[[],[["usize",15],["result",6]]]],[11,"flush","","",7,[[],["result",6]]]],"p":[[8,"WriteColor"],[4,"ColorChoice"],[3,"StandardStream"],[3,"BufferedStandardStream"],[3,"BufferWriter"],[3,"Buffer"],[3,"NoColor"],[3,"Ansi"],[3,"ColorSpec"],[4,"Color"],[3,"ParseColorError"],[3,"StandardStreamLock"]]},\
"thread_local":{"doc":"Per-object thread-local storage","i":[[3,"CachedIntoIter","thread_local","An iterator that moves out of a <code>CachedThreadLocal</code>.",null,null],[3,"CachedIterMut","","Mutable iterator over the contents of a <code>CachedThreadLocal</code>.",null,null],[3,"CachedThreadLocal","","Wrapper around [<code>ThreadLocal</code>].",null,null],[3,"ThreadLocal","","Thread-local variable wrapper",null,null],[11,"new","","Creates a new empty <code>ThreadLocal</code>.",0,[[],["threadlocal",3]]],[11,"with_capacity","","Creates a new <code>ThreadLocal</code> with an initial capacity. If …",0,[[["usize",15]],["threadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",0,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it …",0,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it …",0,[[],["result",4]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all …",0,[[],["itermut",3]]],[11,"clear","","Removes all thread-specific values from the <code>ThreadLocal</code>, …",0,[[]]],[11,"get_or_default","","Returns the element for the current thread, or creates a …",0,[[]]],[3,"IterMut","","Mutable iterator over the contents of a <code>ThreadLocal</code>.",null,null],[3,"IntoIter","","An iterator that moves out of a <code>ThreadLocal</code>.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","",0,[[]]],[11,"into_iter","","",1,[[],["cachedintoiter",3]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"default","","",1,[[],["cachedthreadlocal",3]]],[11,"default","","",0,[[],["threadlocal",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"new","","Creates a new empty <code>CachedThreadLocal</code>.",1,[[],["cachedthreadlocal",3]]],[11,"get","","Returns the element for the current thread, if it exists.",1,[[],["option",4]]],[11,"get_or","","Returns the element for the current thread, or creates it …",1,[[]]],[11,"get_or_try","","Returns the element for the current thread, or creates it …",1,[[],["result",4]]],[11,"iter_mut","","Returns a mutable iterator over the local values of all …",1,[[],["cacheditermut",3]]],[11,"clear","","Removes all thread-specific values from the <code>ThreadLocal</code>, …",1,[[]]],[11,"get_or_default","","Returns the element for the current thread, or creates a …",1,[[]]]],"p":[[3,"ThreadLocal"],[3,"CachedThreadLocal"],[3,"CachedIterMut"],[3,"CachedIntoIter"],[3,"IterMut"],[3,"IntoIter"]]},\
"trapframe":{"doc":"","i":[[5,"syscall_fn_entry","trapframe","The syscall entry of function call.",null,null],[3,"UserContext","","User space context",null,null],[12,"general","","",0,null],[12,"trap_num","","",0,null],[12,"error_code","","",0,null],[3,"GeneralRegs","","General registers",null,null],[12,"rax","","",1,null],[12,"rbx","","",1,null],[12,"rcx","","",1,null],[12,"rdx","","",1,null],[12,"rsi","","",1,null],[12,"rdi","","",1,null],[12,"rbp","","",1,null],[12,"rsp","","",1,null],[12,"r8","","",1,null],[12,"r9","","",1,null],[12,"r10","","",1,null],[12,"r11","","",1,null],[12,"r12","","",1,null],[12,"r13","","",1,null],[12,"r14","","",1,null],[12,"r15","","",1,null],[12,"rip","","",1,null],[12,"rflags","","",1,null],[12,"fsbase","","",1,null],[12,"gsbase","","",1,null],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["usercontext",3]],["bool",15]]],[11,"ne","","",0,[[["usercontext",3]],["bool",15]]],[11,"eq","","",1,[[["generalregs",3]],["bool",15]]],[11,"ne","","",1,[[["generalregs",3]],["bool",15]]],[11,"clone","","",0,[[],["usercontext",3]]],[11,"clone","","",1,[[],["generalregs",3]]],[11,"default","","",0,[[],["usercontext",3]]],[11,"default","","",1,[[],["generalregs",3]]],[11,"run_fncall","","Go to user context by function return, within the same …",0,[[]]],[11,"get_syscall_num","","Get number of syscall",0,[[],["usize",15]]],[11,"get_syscall_ret","","Get return value of syscall",0,[[],["usize",15]]],[11,"set_syscall_ret","","Set return value of syscall",0,[[["usize",15]]]],[11,"get_syscall_args","","Get syscall args",0,[[]]],[11,"set_ip","","Set instruction pointer",0,[[["usize",15]]]],[11,"set_sp","","Set stack pointer",0,[[["usize",15]]]],[11,"get_sp","","Get stack pointer",0,[[],["usize",15]]],[11,"set_tls","","Set tls pointer",0,[[["usize",15]]]]],"p":[[3,"UserContext"],[3,"GeneralRegs"]]},\
"unicode_xid":{"doc":"Determine if a <code>char</code> is a valid identifier for a parser …","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid …",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid …",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the ‘…",0,[[],["bool",15]]],[10,"is_xid_continue","","Returns whether the specified <code>char</code> satisfies the ‘…",0,[[],["bool",15]]]],"p":[[8,"UnicodeXID"]]},\
"vec_arena":{"doc":"A simple object arena.","i":[[3,"Arena","vec_arena","An object arena.",null,null],[11,"new","","Constructs a new, empty arena.",0,[[]]],[11,"with_capacity","","Constructs a new, empty arena with the specified capacity …",0,[[["usize",15]]]],[11,"capacity","","Returns the number of slots in the arena.",0,[[],["usize",15]]],[11,"len","","Returns the number of occupied slots in the arena.",0,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if all slots are vacant.",0,[[],["bool",15]]],[11,"next_vacant","","Returns the index of the slot that next [<code>insert</code>][…",0,[[],["usize",15]]],[11,"insert","","Inserts an object into the arena and returns the slot …",0,[[],["usize",15]]],[11,"remove","","Removes the object stored at <code>index</code> from the arena and …",0,[[["usize",15]],["option",4]]],[11,"retain","","Retains objects for which the closure returns <code>true</code>.",0,[[]]],[11,"clear","","Clears the arena, removing and dropping all objects it …",0,[[]]],[11,"get","","Returns a reference to the object stored at <code>index</code>.",0,[[["usize",15]],["option",4]]],[11,"get_mut","","Returns a mutable reference to the object stored at <code>index</code>.",0,[[["usize",15]],["option",4]]],[11,"swap","","Swaps two objects in the arena.",0,[[["usize",15]]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more objects to …",0,[[["usize",15]]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",0,[[["usize",15]]]],[11,"iter","","Returns an iterator over occupied slots.",0,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator that returns mutable references to …",0,[[],["itermut",3]]],[11,"shrink_to_fit","","Shrinks the capacity of the arena as much as possible.",0,[[]]],[3,"IntoIter","","An iterator over the occupied slots in an [<code>Arena</code>].",null,null],[3,"Iter","","An iterator over references to the occupied slots in an […",null,null],[3,"IterMut","","An iterator over mutable references to the occupied slots …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_iter","","",0,[[]]],[11,"next","","",1,[[],["option",4]]],[11,"next","","",2,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"index","","",0,[[["usize",15]]]],[11,"index_mut","","",0,[[["usize",15]]]],[11,"from_iter","","",0,[[["intoiterator",8]],["arena",3]]]],"p":[[3,"Arena"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"]]},\
"waker_fn":{"doc":"Convert closures into wakers.","i":[[5,"waker_fn","waker_fn","Converts a closure into a [<code>Waker</code>].",null,[[["sync",8],["fn",8],["send",8]],["waker",3]]]],"p":[]},\
"wyz":{"doc":"<code>wyz</code> – myrrlyn’s wyzyrdly library","i":[[0,"conv","wyz","Directed Type Conversion",null,null],[8,"Conv","wyz::conv","Directed Type Conversion",null,null],[11,"conv","","Converts <code>self</code> into a target type.",0,[[],["sized",8]]],[8,"TryConv","","Directed Fallible Type Conversion",null,null],[11,"try_conv","","Attempts to convert <code>self</code> into a target type.",1,[[],[["sized",8],["result",4]]]],[0,"fmt","wyz","Format forwarding",null,null],[8,"FmtForward","wyz::fmt","Wraps any value with a format-forward to <code>Debug</code>.",null,null],[11,"fmt_binary","","Causes <code>self</code> to use its <code>Binary</code> implementation when <code>Debug</code>…",2,[[],["fmtbinary",3]]],[11,"fmt_display","","Causes <code>self</code> to use its <code>Display</code> implementation when <code>Debug</code>…",2,[[],["fmtdisplay",3]]],[11,"fmt_lower_exp","","Causes <code>self</code> to use its <code>LowerExp</code> implementation when <code>Debug</code>…",2,[[],["fmtlowerexp",3]]],[11,"fmt_lower_hex","","Causes <code>self</code> to use its <code>LowerHex</code> implementation when <code>Debug</code>…",2,[[],["fmtlowerhex",3]]],[11,"fmt_octal","","Causes <code>self</code> to use its <code>Octal</code> implementation when <code>Debug</code>…",2,[[],["fmtoctal",3]]],[11,"fmt_pointer","","Causes <code>self</code> to use its <code>Pointer</code> implementation when <code>Debug</code>…",2,[[],["fmtpointer",3]]],[11,"fmt_upper_exp","","Causes <code>self</code> to use its <code>UpperExp</code> implementation when <code>Debug</code>…",2,[[],["fmtupperexp",3]]],[11,"fmt_upper_hex","","Causes <code>self</code> to use its <code>UpperHex</code> implementation when <code>Debug</code>…",2,[[],["fmtupperhex",3]]],[3,"FmtBinary","","Forwards a type’s <code>Binary</code> formatting implementation to …",null,null],[12,"0","","",3,null],[3,"FmtDisplay","","Forwards a type’s <code>Display</code> formatting implementation to …",null,null],[12,"0","","",4,null],[3,"FmtLowerExp","","Forwards a type’s <code>LowerExp</code> formatting implementation to …",null,null],[12,"0","","",5,null],[3,"FmtLowerHex","","Forwards a type’s <code>LowerHex</code> formatting implementation to …",null,null],[12,"0","","",6,null],[3,"FmtOctal","","Forwards a type’s <code>Octal</code> formatting implementation to …",null,null],[12,"0","","",7,null],[3,"FmtPointer","","Forwards a type’s <code>Pointer</code> formatting implementation to …",null,null],[12,"0","","",8,null],[3,"FmtUpperExp","","Forwards a type’s <code>UpperExp</code> formatting implementation to …",null,null],[12,"0","","",9,null],[3,"FmtUpperHex","","Forwards a type’s <code>UpperHex</code> formatting implementation to …",null,null],[12,"0","","",10,null],[0,"pipe","wyz","Pipe objects into functions, even those not available for …",null,null],[8,"Pipe","wyz::pipe","Permit suffixed call of any function on a value.",null,null],[11,"pipe","","Pipes a value into a function that cannot ordinarily be …",11,[[]]],[8,"PipeRef","","Referential piping.",null,null],[11,"pipe_ref","","Pipes a reference into a function that cannot ordinarily …",12,[[]]],[11,"pipe_mut","","Pipes a mutable reference into a function that cannot …",12,[[]]],[8,"PipeBorrow","","Calls the <code>Borrow</code> or <code>BorrowMut</code> traits before piping.",null,null],[11,"pipe_borrow","","Pipes a trait borrow into a function that cannot normally …",13,[[]]],[11,"pipe_borrow_mut","","Pipes a trait mutable borrow into a function that cannot …",13,[[]]],[8,"PipeAsRef","","Calls the <code>AsRef</code> or <code>AsMut</code> traits before piping.",null,null],[11,"pipe_as_ref","","Pipes a trait borrow into a function that cannot normally …",14,[[]]],[11,"pipe_as_mut","","Pipes a trait mutable borrow into a function that cannot …",14,[[]]],[8,"PipeDeref","","Calls the <code>Deref</code> or <code>DerefMut</code> traits before piping.",null,null],[11,"pipe_deref","","Pipes a dereference into a function that cannot normally …",15,[[]]],[11,"pipe_deref_mut","","Pipes a mutable dereference into a function that cannot …",15,[[]]],[0,"tap","wyz","Object Tapping",null,null],[8,"Tap","wyz::tap","Value Tap",null,null],[11,"tap","","Provides immutable access for inspection.",16,[[]]],[11,"tap_dbg","","Calls <code>tap</code> in debug builds, and does nothing in release …",16,[[]]],[11,"tap_mut","","Provides mutable access for modification.",16,[[]]],[11,"tap_mut_dbg","","Calls <code>tap_mut</code> in debug builds, and does nothing in …",16,[[]]],[8,"TapBorrow","","Borrowing Tap",null,null],[11,"tap_borrow","","Provides immutable access to the borrow for inspection.",17,[[]]],[11,"tap_borrow_dbg","","Calls <code>tap_borrow</code> in debug builds, and does nothing in …",17,[[]]],[11,"tap_borrow_mut","","Provides mutable access to the borrow for modification.",17,[[]]],[11,"tap_borrow_mut_dbg","","Calls <code>tap_borrow_mut</code> in debug builds, and does nothing in …",17,[[]]],[8,"TapAsRef","","Referential Tap",null,null],[11,"tap_ref","","Provides immutable access to the reference for inspection.",18,[[]]],[11,"tap_ref_dbg","","Calls <code>tap_ref</code> in debug builds, and does nothing in …",18,[[]]],[11,"tap_ref_mut","","Provides mutable access to the reference for modification.",18,[[]]],[11,"tap_ref_mut_dbg","","Calls <code>tap_ref_mut</code> in debug builds, and does nothing in …",18,[[]]],[8,"TapDeref","","Dereferencing Tap",null,null],[11,"tap_deref","","Immutably dereferences <code>self</code> for inspection.",19,[[]]],[11,"tap_deref_dbg","","Calls <code>tap_deref</code> in debug builds, and does nothing in …",19,[[]]],[11,"tap_deref_mut","","Mutably dereferences <code>self</code> for modification.",19,[[]]],[11,"tap_deref_mut_dbg","","Calls <code>tap_deref_mut</code> in debug builds, and does nothing in …",19,[[]]],[8,"TapOption","","Optional Tap",null,null],[10,"tap_some","","Provides the interior value for inspection if present.",20,[[["fnonce",8]]]],[11,"tap_some_dbg","","Calls <code>tap_some</code> in debug builds, and does nothing in …",20,[[["fnonce",8]]]],[10,"tap_some_mut","","Provides the interior value for modification if present.",20,[[["fnonce",8]]]],[11,"tap_some_mut_dbg","","Calls <code>tap_some_mut</code> in debug builds, and does nothing in …",20,[[["fnonce",8]]]],[10,"tap_none","","Runs the provided function if the <code>Option</code> is empty.",20,[[["fnonce",8]]]],[11,"tap_none_dbg","","Calls <code>tap_none</code> in debug builds, and does nothing in …",20,[[["fnonce",8]]]],[8,"TapResult","","Result Tap",null,null],[10,"tap_ok","","Provides the inner value for inspection if the <code>Result</code> is …",21,[[["fnonce",8]]]],[11,"tap_ok_dbg","","Calls <code>tap_ok</code> in debug builds, and does nothing in release …",21,[[["fnonce",8]]]],[10,"tap_ok_mut","","Provides the inner value for modification if the <code>Result</code> …",21,[[["fnonce",8]]]],[11,"tap_ok_mut_dbg","","Calls <code>tap_ok_mut</code> in debug builds, and does nothing in …",21,[[["fnonce",8]]]],[10,"tap_err","","Provides the inner error value for inspection if the …",21,[[["fnonce",8]]]],[11,"tap_err_dbg","","Calls <code>tap_err</code> in debug builds, and does nothing in …",21,[[["fnonce",8]]]],[10,"tap_err_mut","","Provides the inner error value for modification if the …",21,[[["fnonce",8]]]],[11,"tap_err_mut_dbg","","Calls <code>tap_err_mut</code> in debug builds, and does nothing in …",21,[[["fnonce",8]]]],[11,"borrow","wyz::fmt","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_string","","",10,[[],["string",3]]],[11,"deref","","",3,[[]]],[11,"deref","","",4,[[]]],[11,"deref","","",5,[[]]],[11,"deref","","",6,[[]]],[11,"deref","","",7,[[]]],[11,"deref","","",8,[[]]],[11,"deref","","",9,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",3,[[]]],[11,"deref_mut","","",4,[[]]],[11,"deref_mut","","",5,[[]]],[11,"deref_mut","","",6,[[]]],[11,"deref_mut","","",7,[[]]],[11,"deref_mut","","",8,[[]]],[11,"deref_mut","","",9,[[]]],[11,"deref_mut","","",10,[[]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"as_ref","","",3,[[]]],[11,"as_ref","","",4,[[]]],[11,"as_ref","","",5,[[]]],[11,"as_ref","","",6,[[]]],[11,"as_ref","","",7,[[]]],[11,"as_ref","","",8,[[]]],[11,"as_ref","","",9,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_mut","","",3,[[]]],[11,"as_mut","","",4,[[]]],[11,"as_mut","","",5,[[]]],[11,"as_mut","","",6,[[]]],[11,"as_mut","","",7,[[]]],[11,"as_mut","","",8,[[]]],[11,"as_mut","","",9,[[]]],[11,"as_mut","","",10,[[]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]]],"p":[[8,"Conv"],[8,"TryConv"],[8,"FmtForward"],[3,"FmtBinary"],[3,"FmtDisplay"],[3,"FmtLowerExp"],[3,"FmtLowerHex"],[3,"FmtOctal"],[3,"FmtPointer"],[3,"FmtUpperExp"],[3,"FmtUpperHex"],[8,"Pipe"],[8,"PipeRef"],[8,"PipeBorrow"],[8,"PipeAsRef"],[8,"PipeDeref"],[8,"Tap"],[8,"TapBorrow"],[8,"TapAsRef"],[8,"TapDeref"],[8,"TapOption"],[8,"TapResult"]]},\
"x86_64":{"doc":"This crate provides x86_64 specific functions and data …","i":[[0,"addr","x86_64","Physical and virtual addresses manipulation",null,null],[3,"VirtAddr","x86_64::addr","A canonical 64-bit virtual memory address.",null,null],[3,"PhysAddr","","A 64-bit physical memory address.",null,null],[3,"VirtAddrNotValid","","A passed <code>u64</code> was not a valid virtual address.",null,null],[11,"new","","Creates a new canonical virtual address.",0,[[["u64",15]],["virtaddr",3]]],[11,"try_new","","Tries to create a new canonical virtual address.",0,[[["u64",15]],[["virtaddrnotvalid",3],["virtaddr",3],["result",4]]]],[11,"new_truncate","","Creates a new canonical virtual address, throwing out …",0,[[["u64",15]],["virtaddr",3]]],[11,"new_unsafe","","Creates a new virtual address, without any checks.",0,[[["u64",15]],["virtaddr",3]]],[11,"zero","","Creates a virtual address that points to <code>0</code>.",0,[[],["virtaddr",3]]],[11,"as_u64","","Converts the address to an <code>u64</code>.",0,[[],["u64",15]]],[11,"from_ptr","","Creates a virtual address from the given pointer",0,[[]]],[11,"as_ptr","","Converts the address to a raw pointer.",0,[[]]],[11,"as_mut_ptr","","Converts the address to a mutable raw pointer.",0,[[]]],[11,"is_null","","Convenience method for checking if a virtual address is …",0,[[],["bool",15]]],[11,"align_up","","Aligns the virtual address upwards to the given alignment.",0,[[]]],[11,"align_down","","Aligns the virtual address downwards to the given …",0,[[]]],[11,"is_aligned","","Checks whether the virtual address has the demanded …",0,[[],["bool",15]]],[11,"page_offset","","Returns the 12-bit page offset of this virtual address.",0,[[],["pageoffset",3]]],[11,"p1_index","","Returns the 9-bit level 1 page table index.",0,[[],["pagetableindex",3]]],[11,"p2_index","","Returns the 9-bit level 2 page table index.",0,[[],["pagetableindex",3]]],[11,"p3_index","","Returns the 9-bit level 3 page table index.",0,[[],["pagetableindex",3]]],[11,"p4_index","","Returns the 9-bit level 4 page table index.",0,[[],["pagetableindex",3]]],[3,"PhysAddrNotValid","","A passed <code>u64</code> was not a valid physical address.",null,null],[11,"new","","Creates a new physical address.",1,[[["u64",15]],["physaddr",3]]],[11,"new_truncate","","Creates a new physical address, throwing bits 52..64 away.",1,[[["u64",15]],["physaddr",3]]],[11,"new_unsafe","","Creates a new physical address, without any checks.",1,[[["u64",15]],["physaddr",3]]],[11,"try_new","","Tries to create a new physical address.",1,[[["u64",15]],[["physaddr",3],["physaddrnotvalid",3],["result",4]]]],[11,"zero","","Creates a physical address that points to <code>0</code>.",1,[[],["physaddr",3]]],[11,"as_u64","","Converts the address to an <code>u64</code>.",1,[[],["u64",15]]],[11,"is_null","","Convenience method for checking if a physical address is …",1,[[],["bool",15]]],[11,"align_up","","Aligns the physical address upwards to the given …",1,[[]]],[11,"align_down","","Aligns the physical address downwards to the given …",1,[[]]],[11,"is_aligned","","Checks whether the physical address has the demanded …",1,[[],["bool",15]]],[5,"align_down","","Align address downwards.",null,[[["u64",15]],["u64",15]]],[5,"align_up","","Align address upwards.",null,[[["u64",15]],["u64",15]]],[0,"instructions","x86_64","Special x86_64 instructions.",null,null],[0,"interrupts","x86_64::instructions","Enabling and disabling interrupts",null,null],[5,"are_enabled","x86_64::instructions::interrupts","Returns whether interrupts are enabled.",null,[[],["bool",15]]],[5,"enable","","Enable interrupts.",null,[[]]],[5,"disable","","Disable interrupts.",null,[[]]],[5,"without_interrupts","","Run a closure with disabled interrupts.",null,[[]]],[5,"enable_and_hlt","","Atomically enable interrupts and put the CPU to sleep",null,[[]]],[5,"int3","","Cause a breakpoint exception by invoking the <code>int3</code> …",null,[[]]],[0,"port","x86_64::instructions","Access to I/O ports",null,null],[3,"PortReadOnly","x86_64::instructions::port","A read only I/O port.",null,null],[3,"PortWriteOnly","","A write only I/O port.",null,null],[3,"Port","","An I/O port.",null,null],[11,"new","","Creates a read only I/O port with the given port number.",2,[[["u16",15]],["portreadonly",3]]],[11,"read","","Reads from the port.",2,[[]]],[11,"new","","Creates a write only I/O port with the given port number.",3,[[["u16",15]],["portwriteonly",3]]],[11,"write","","Writes to the port.",3,[[]]],[11,"new","","Creates an I/O port with the given port number.",4,[[["u16",15]],["port",3]]],[11,"read","","Reads from the port.",4,[[]]],[11,"write","","Writes to the port.",4,[[]]],[0,"random","x86_64::instructions","Support for build-in RNGs",null,null],[3,"RdRand","x86_64::instructions::random","Used to obtain random numbers using x86_64’s RDRAND …",null,null],[11,"new","","Creates Some(RdRand) if RDRAND is supported, None …",5,[[],["option",4]]],[11,"get_u64","","Uniformly sampled u64. May fail in rare circumstances or …",5,[[],[["option",4],["u64",15]]]],[11,"get_u32","","Uniformly sampled u32. May fail in rare circumstances or …",5,[[],[["u32",15],["option",4]]]],[11,"get_u16","","Uniformly sampled u16. May fail in rare circumstances or …",5,[[],[["option",4],["u16",15]]]],[0,"segmentation","x86_64::instructions","Provides functions to read and write segment registers.",null,null],[5,"set_cs","x86_64::instructions::segmentation","Reload code segment register.",null,[[["segmentselector",3]]]],[5,"load_ss","","Reload stack segment register.",null,[[["segmentselector",3]]]],[5,"load_ds","","Reload data segment register.",null,[[["segmentselector",3]]]],[5,"load_es","","Reload es segment register.",null,[[["segmentselector",3]]]],[5,"load_fs","","Reload fs segment register.",null,[[["segmentselector",3]]]],[5,"load_gs","","Reload gs segment register.",null,[[["segmentselector",3]]]],[5,"swap_gs","","Swap <code>KernelGsBase</code> MSR and <code>GsBase</code> MSR.",null,[[]]],[5,"cs","","Returns the current value of the code segment register.",null,[[],["segmentselector",3]]],[5,"wrfsbase","","Writes the FS segment base address",null,[[["u64",15]]]],[5,"rdfsbase","","Reads the FS segment base address",null,[[],["u64",15]]],[5,"wrgsbase","","Writes the GS segment base address",null,[[["u64",15]]]],[5,"rdgsbase","","Reads the GS segment base address",null,[[],["u64",15]]],[0,"tables","x86_64::instructions","Functions to load GDT, IDT, and TSS structures.",null,null],[5,"lgdt","x86_64::instructions::tables","Load a GDT.",null,[[["descriptortablepointer",3]]]],[5,"lidt","","Load an IDT.",null,[[["descriptortablepointer",3]]]],[5,"load_tss","","Load the task state register using the <code>ltr</code> instruction.",null,[[["segmentselector",3]]]],[0,"tlb","x86_64::instructions","Functions to flush the translation lookaside buffer (TLB).",null,null],[5,"flush","x86_64::instructions::tlb","Invalidate the given address in the TLB using the <code>invlpg</code> …",null,[[["virtaddr",3]]]],[5,"flush_all","","Invalidate the TLB completely by reloading the CR3 …",null,[[]]],[4,"InvPicdCommand","","The Invalidate PCID Command to execute.",null,null],[13,"Address","","The logical processor invalidates mappings—except …",6,null],[13,"Single","","The logical processor invalidates all mappings—except …",6,null],[13,"All","","The logical processor invalidates all …",6,null],[13,"AllExceptGlobal","","The logical processor invalidates all mappings—except …",6,null],[3,"Pcid","","Structure of a PCID. A PCID has to be <= 4096 for x86_64.",null,null],[11,"new","","Create a new PCID. Will result in a failure if the value …",7,[[["u16",15]],[["str",15],["pcid",3],["result",4]]]],[11,"value","","Get the value of the current PCID.",7,[[],["u16",15]]],[5,"flush_pcid","","Invalidate the given address in the TLB using the <code>invpcid</code> …",null,[[["invpicdcommand",4]]]],[5,"hlt","x86_64::instructions","Halts the CPU until the next interrupt arrives.",null,[[]]],[5,"nop","","Executes the <code>nop</code> instructions, which performs no …",null,[[]]],[5,"bochs_breakpoint","","Emits a ‘magic breakpoint’ instruction for the Bochs …",null,[[]]],[5,"read_rip","","Gets the current instruction pointer. Note that this is …",null,[[],["virtaddr",3]]],[0,"registers","x86_64","Access to various system and model specific registers.",null,null],[0,"control","x86_64::registers","Functions to read and write control registers.",null,null],[3,"Cr0","x86_64::registers::control","Various control flags modifying the basic operation of …",null,null],[3,"Cr0Flags","","Configuration flags of the Cr0 register.",null,null],[18,"PROTECTED_MODE_ENABLE","","Enables protected mode.",8,null],[18,"MONITOR_COPROCESSOR","","Enables monitoring of the coprocessor, typical for x87 …",8,null],[18,"EMULATE_COPROCESSOR","","Force all x87 and MMX instructions to cause an exception.",8,null],[18,"TASK_SWITCHED","","Automatically set to 1 on <em>hardware</em> task switch.",8,null],[18,"NUMERIC_ERROR","","Enables the native error reporting mechanism for x87 FPU …",8,null],[18,"WRITE_PROTECT","","Controls whether supervisor-level writes to read-only …",8,null],[18,"ALIGNMENT_MASK","","Enables automatic alignment checking.",8,null],[18,"NOT_WRITE_THROUGH","","Ignored. Used to control write-back/write-through cache …",8,null],[18,"CACHE_DISABLE","","Disables internal caches (only for some cases).",8,null],[18,"PAGING","","Enables page translation.",8,null],[11,"empty","","Returns an empty set of flags",8,[[],["cr0flags",3]]],[11,"all","","Returns the set containing all flags.",8,[[],["cr0flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",8,[[["u64",15]],[["option",4],["cr0flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",8,[[["u64",15]],["cr0flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",8,[[["u64",15]],["cr0flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",8,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",8,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",8,[[["cr0flags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",8,[[["cr0flags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["cr0flags",3]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["cr0flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["cr0flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",8,[[["bool",15],["cr0flags",3]]]],[3,"Cr2","","Contains the Page Fault Linear Address (PFLA).",null,null],[3,"Cr3","","Contains the physical address of the level 4 page table.",null,null],[3,"Cr3Flags","","Controls cache settings for the level 4 page table.",null,null],[18,"PAGE_LEVEL_WRITETHROUGH","","Use a writethrough cache policy for the P4 table (else a …",9,null],[18,"PAGE_LEVEL_CACHE_DISABLE","","Disable caching for the P4 table.",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["cr3flags",3]]],[11,"all","","Returns the set containing all flags.",9,[[],["cr3flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",9,[[["u64",15]],[["cr3flags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",9,[[["u64",15]],["cr3flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[["u64",15]],["cr3flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",9,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",9,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",9,[[["cr3flags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",9,[[["cr3flags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["cr3flags",3]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["cr3flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["cr3flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",9,[[["bool",15],["cr3flags",3]]]],[3,"Cr4","","Various control flags modifying the basic operation of …",null,null],[3,"Cr4Flags","","Controls cache settings for the level 4 page table.",null,null],[18,"VIRTUAL_8086_MODE_EXTENSIONS","","Enables hardware-supported performance enhancements for …",10,null],[18,"PROTECTED_MODE_VIRTUAL_INTERRUPTS","","Enables support for protected-mode virtual interrupts.",10,null],[18,"TIMESTAMP_DISABLE","","When set, only privilege-level 0 can execute the RDTSC or …",10,null],[18,"DEBUGGING_EXTENSIONS","","Enables I/O breakpoint capability and enforces treatment …",10,null],[18,"PAGE_SIZE_EXTENSION","","Enables the use of 4MB physical frames; ignored in long …",10,null],[18,"PHYSICAL_ADDRESS_EXTENSION","","Enables physical address extension and 2MB physical …",10,null],[18,"MACHINE_CHECK_EXCEPTION","","Enables the machine-check exception mechanism.",10,null],[18,"PAGE_GLOBAL","","Enables the global-page mechanism, which allows to make …",10,null],[18,"PERFORMANCE_MONITOR_COUNTER","","Allows software running at any privilege level to use the …",10,null],[18,"OSFXSR","","Enable the use of legacy SSE instructions; allows using …",10,null],[18,"OSXMMEXCPT_ENABLE","","Enables the SIMD floating-point exception (#XF) for …",10,null],[18,"USER_MODE_INSTRUCTION_PREVENTION","","Prevents the execution of the SGDT, SIDT, SLDT, SMSW, and …",10,null],[18,"L5_PAGING","","Enables 5-level paging on supported CPUs.",10,null],[18,"VIRTUAL_MACHINE_EXTENSIONS","","Enables VMX insturctions.",10,null],[18,"SAFER_MODE_EXTENSIONS","","Enables SMX instructions.",10,null],[18,"FSGSBASE","","Enables software running in 64-bit mode at any privilege …",10,null],[18,"PCID","","Enables process-context identifiers (PCIDs).",10,null],[18,"OSXSAVE","","Enables extendet processor state management instructions, …",10,null],[18,"SUPERVISOR_MODE_EXECUTION_PROTECTION","","Prevents the execution of instructions that reside in …",10,null],[18,"SUPERVISOR_MODE_ACCESS_PREVENTION","","Enables restrictions for supervisor-mode software when …",10,null],[18,"PROTECTION_KEY","","Enables 4-level paging to associate each linear address …",10,null],[11,"empty","","Returns an empty set of flags",10,[[],["cr4flags",3]]],[11,"all","","Returns the set containing all flags.",10,[[],["cr4flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",10,[[["u64",15]],[["option",4],["cr4flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",10,[[["u64",15]],["cr4flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",10,[[["u64",15]],["cr4flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",10,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",10,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",10,[[["cr4flags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",10,[[["cr4flags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["cr4flags",3]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["cr4flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["cr4flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",10,[[["bool",15],["cr4flags",3]]]],[0,"model_specific","x86_64::registers","Functions to read and write model specific registers.",null,null],[3,"Msr","x86_64::registers::model_specific","A model specific register.",null,null],[11,"new","","Create an instance from a register.",11,[[["u32",15]],["msr",3]]],[3,"Efer","","The Extended Feature Enable Register.",null,null],[3,"FsBase","","FS.Base Model Specific Register.",null,null],[3,"GsBase","","GS.Base Model Specific Register.",null,null],[3,"KernelGsBase","","KernelGsBase Model Specific Register.",null,null],[3,"Star","","Syscall Register: STAR",null,null],[3,"LStar","","Syscall Register: LSTAR",null,null],[3,"SFMask","","Syscall Register: SFMASK",null,null],[18,"MSR","","The underlying model specific register.",12,null],[18,"MSR","","The underlying model specific register.",13,null],[18,"MSR","","The underlying model specific register.",14,null],[18,"MSR","","The underlying model specific register.",15,null],[18,"MSR","","The underlying model specific register.",16,null],[18,"MSR","","The underlying model specific register.",17,null],[18,"MSR","","The underlying model specific register.",18,null],[3,"EferFlags","","Flags of the Extended Feature Enable Register.",null,null],[18,"SYSTEM_CALL_EXTENSIONS","","Enables the <code>syscall</code> and <code>sysret</code> instructions.",19,null],[18,"LONG_MODE_ENABLE","","Activates long mode, requires activating paging.",19,null],[18,"LONG_MODE_ACTIVE","","Indicates that long mode is active.",19,null],[18,"NO_EXECUTE_ENABLE","","Enables the no-execute page-protection feature.",19,null],[18,"SECURE_VIRTUAL_MACHINE_ENABLE","","Enables SVM extensions.",19,null],[18,"LONG_MODE_SEGMENT_LIMIT_ENABLE","","Enable certain limit checks in 64-bit mode.",19,null],[18,"FAST_FXSAVE_FXRSTOR","","Enable the <code>fxsave</code> and <code>fxrstor</code> instructions to execute …",19,null],[18,"TRANSLATION_CACHE_EXTENSION","","Changes how the <code>invlpg</code> instruction operates on TLB …",19,null],[11,"empty","","Returns an empty set of flags",19,[[],["eferflags",3]]],[11,"all","","Returns the set containing all flags.",19,[[],["eferflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",19,[[["u64",15]],[["option",4],["eferflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",19,[[["u64",15]],["eferflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",19,[[["u64",15]],["eferflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",19,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",19,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",19,[[["eferflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",19,[[["eferflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["eferflags",3]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["eferflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["eferflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",19,[[["bool",15],["eferflags",3]]]],[0,"rflags","x86_64::registers","Processor state stored in the RFLAGS register.",null,null],[5,"read","x86_64::registers::rflags","Returns the current value of the RFLAGS register.",null,[[],["rflags",3]]],[5,"read_raw","","Returns the raw current value of the RFLAGS register.",null,[[],["u64",15]]],[5,"write","","Writes the RFLAGS register, preserves reserved bits.",null,[[["rflags",3]]]],[5,"write_raw","","Writes the RFLAGS register.",null,[[["u64",15]]]],[3,"RFlags","","The RFLAGS register.",null,null],[18,"ID","","Processor feature identification flag.",20,null],[18,"VIRTUAL_INTERRUPT_PENDING","","Indicates that an external, maskable interrupt is pending.",20,null],[18,"VIRTUAL_INTERRUPT","","Virtual image of the INTERRUPT_FLAG bit.",20,null],[18,"ALIGNMENT_CHECK","","Enable automatic alignment checking if CR0.AM is set. …",20,null],[18,"VIRTUAL_8086_MODE","","Enable the virtual-8086 mode.",20,null],[18,"RESUME_FLAG","","Allows to restart an instruction following an instrucion …",20,null],[18,"NESTED_TASK","","Used by <code>iret</code> in hardware task switch mode to determine if …",20,null],[18,"IOPL_HIGH","","The high bit of the I/O Privilege Level field.",20,null],[18,"IOPL_LOW","","The low bit of the I/O Privilege Level field.",20,null],[18,"OVERFLOW_FLAG","","Set by hardware to indicate that the sign bit of the …",20,null],[18,"DIRECTION_FLAG","","Determines the order in which strings are processed.",20,null],[18,"INTERRUPT_FLAG","","Enable interrupts.",20,null],[18,"TRAP_FLAG","","Enable single-step mode for debugging.",20,null],[18,"SIGN_FLAG","","Set by hardware if last arithmetic operation resulted in …",20,null],[18,"ZERO_FLAG","","Set by hardware if last arithmetic operation resulted in …",20,null],[18,"AUXILIARY_CARRY_FLAG","","Set by hardware if last arithmetic operation generated a …",20,null],[18,"PARITY_FLAG","","Set by hardware if last result has an even number of 1 …",20,null],[18,"CARRY_FLAG","","Set by hardware if last arithmetic operation generated a …",20,null],[11,"empty","","Returns an empty set of flags",20,[[],["rflags",3]]],[11,"all","","Returns the set containing all flags.",20,[[],["rflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",20,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",20,[[["u64",15]],[["option",4],["rflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",20,[[["u64",15]],["rflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",20,[[["u64",15]],["rflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",20,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",20,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",20,[[["rflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",20,[[["rflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",20,[[["rflags",3]]]],[11,"remove","","Removes the specified flags in-place.",20,[[["rflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",20,[[["rflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",20,[[["bool",15],["rflags",3]]]],[0,"xcontrol","x86_64::registers","Access to various extended system registers",null,null],[3,"XCr0","x86_64::registers::xcontrol","Extended feature enable mask register",null,null],[3,"XCr0Flags","","Configuration flags of the XCr0 register.",null,null],[18,"X87","","Enables x87 FPU",21,null],[18,"SSE","","Enables 128-bit (legacy) SSE Must be set to enable AVX …",21,null],[18,"YMM","","Enables 256-bit SSE Must be set to enable AVX",21,null],[18,"MPK","","When set, PKRU state management is supported by …",21,null],[18,"LWP","","When set the Lightweight Profiling extensions are enabled",21,null],[11,"empty","","Returns an empty set of flags",21,[[],["xcr0flags",3]]],[11,"all","","Returns the set containing all flags.",21,[[],["xcr0flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",21,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",21,[[["u64",15]],[["option",4],["xcr0flags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",21,[[["u64",15]],["xcr0flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",21,[[["u64",15]],["xcr0flags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",21,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",21,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",21,[[["xcr0flags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",21,[[["xcr0flags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",21,[[["xcr0flags",3]]]],[11,"remove","","Removes the specified flags in-place.",21,[[["xcr0flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",21,[[["xcr0flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",21,[[["bool",15],["xcr0flags",3]]]],[0,"structures","x86_64","Representations of various x86 specific structures and …",null,null],[0,"gdt","x86_64::structures","Types for the Global Descriptor Table and segment …",null,null],[3,"SegmentSelector","x86_64::structures::gdt","Specifies which element to load into a segment from …",null,null],[12,"0","","",22,null],[11,"new","","Creates a new SegmentSelector",22,[[["privilegelevel",4],["u16",15]],["segmentselector",3]]],[11,"index","","Returns the GDT index.",22,[[],["u16",15]]],[11,"rpl","","Returns the requested privilege level.",22,[[],["privilegelevel",4]]],[11,"set_rpl","","Set the privilege level for this Segment selector.",22,[[["privilegelevel",4]]]],[3,"GlobalDescriptorTable","","A 64-bit mode global descriptor table (GDT).",null,null],[11,"new","","Creates an empty GDT.",23,[[],["globaldescriptortable",3]]],[11,"from_raw_slice","","Forms a GDT from a slice of <code>u64</code>.",23,[[],["globaldescriptortable",3]]],[11,"as_raw_slice","","Get a reference to the internal table.",23,[[]]],[11,"add_entry","","Adds the given segment descriptor to the GDT, returning …",23,[[["descriptor",4]],["segmentselector",3]]],[11,"load","","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …",23,[[]]],[11,"load_unsafe","","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …",23,[[]]],[4,"Descriptor","","A 64-bit mode segment descriptor.",null,null],[13,"UserSegment","","Descriptor for a code or data segment.",24,null],[13,"SystemSegment","","A system segment descriptor such as a LDT or TSS …",24,null],[3,"DescriptorFlags","","Flags for a GDT descriptor. Not all flags are valid for …",null,null],[18,"ACCESSED","","Set by the processor if this segment has been accessed. …",25,null],[18,"WRITABLE","","For 32-bit data segments, sets the segment as writable. …",25,null],[18,"CONFORMING","","For code segments, sets the segment as “conforming”, …",25,null],[18,"EXECUTABLE","","This flag must be set for code segments and unset for …",25,null],[18,"USER_SEGMENT","","This flag must be set for user segments (in contrast to …",25,null],[18,"DPL_RING_3","","The DPL for this descriptor is Ring 3. In 64-bit mode, …",25,null],[18,"PRESENT","","Must be set for any segment, causes a segment not present …",25,null],[18,"AVAILABLE","","Available for use by the Operating System",25,null],[18,"LONG_MODE","","Must be set for 64-bit code segments, unset otherwise.",25,null],[18,"DEFAULT_SIZE","","Use 32-bit (as opposed to 16-bit) operands. If [<code>LONG_MODE</code>]…",25,null],[18,"GRANULARITY","","Limit field is scaled by 4096 bytes. In 64-bit mode, …",25,null],[18,"LIMIT_0_15","","Bits <code>0..=15</code> of the limit field (ignored in 64-bit mode)",25,null],[18,"LIMIT_16_19","","Bits <code>16..=19</code> of the limit field (ignored in 64-bit mode)",25,null],[18,"BASE_0_23","","Bits <code>0..=23</code> of the base field (ignored in 64-bit mode, …",25,null],[18,"BASE_24_31","","Bits <code>24..=31</code> of the base field (ignored in 64-bit mode, …",25,null],[11,"empty","","Returns an empty set of flags",25,[[],["descriptorflags",3]]],[11,"all","","Returns the set containing all flags.",25,[[],["descriptorflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",25,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",25,[[["u64",15]],[["option",4],["descriptorflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",25,[[["u64",15]],["descriptorflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",25,[[["u64",15]],["descriptorflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",25,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",25,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",25,[[["descriptorflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",25,[[["descriptorflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",25,[[["descriptorflags",3]]]],[11,"remove","","Removes the specified flags in-place.",25,[[["descriptorflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",25,[[["descriptorflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",25,[[["bool",15],["descriptorflags",3]]]],[18,"KERNEL_DATA","","A kernel data segment (64-bit or flat 32-bit)",25,null],[18,"KERNEL_CODE32","","A flat 32-bit kernel code segment",25,null],[18,"KERNEL_CODE64","","A 64-bit kernel code segment",25,null],[18,"USER_DATA","","A user data segment (64-bit or flat 32-bit)",25,null],[18,"USER_CODE32","","A flat 32-bit user code segment",25,null],[18,"USER_CODE64","","A 64-bit user code segment",25,null],[11,"kernel_code_segment","","Creates a segment descriptor for a 64-bit kernel code …",24,[[],["descriptor",4]]],[11,"kernel_data_segment","","Creates a segment descriptor for a kernel data segment …",24,[[],["descriptor",4]]],[11,"user_data_segment","","Creates a segment descriptor for a ring 3 data segment …",24,[[],["descriptor",4]]],[11,"user_code_segment","","Creates a segment descriptor for a 64-bit ring 3 code …",24,[[],["descriptor",4]]],[11,"tss_segment","","Creates a TSS system descriptor for the given TSS.",24,[[["taskstatesegment",3]],["descriptor",4]]],[0,"idt","x86_64::structures","Provides types for the Interrupt Descriptor Table and its …",null,null],[3,"InterruptDescriptorTable","x86_64::structures::idt","An Interrupt Descriptor Table with 256 entries.",null,null],[12,"divide_error","","A divide error (<code>#DE</code>) occurs when the denominator of a DIV …",26,null],[12,"debug","","When the debug-exception mechanism is enabled, a <code>#DB</code> …",26,null],[12,"non_maskable_interrupt","","An non maskable interrupt exception (NMI) occurs as a …",26,null],[12,"breakpoint","","A breakpoint (<code>#BP</code>) exception occurs when an <code>INT3</code> …",26,null],[12,"overflow","","An overflow exception (<code>#OF</code>) occurs as a result of …",26,null],[12,"bound_range_exceeded","","A bound-range exception (<code>#BR</code>) exception can occur as a …",26,null],[12,"invalid_opcode","","An invalid opcode exception (<code>#UD</code>) occurs when an attempt …",26,null],[12,"device_not_available","","A device not available exception (<code>#NM</code>) occurs under any …",26,null],[12,"double_fault","","A double fault (<code>#DF</code>) exception can occur when a second …",26,null],[12,"invalid_tss","","An invalid TSS exception (<code>#TS</code>) occurs only as a result of …",26,null],[12,"segment_not_present","","An segment-not-present exception (<code>#NP</code>) occurs when an …",26,null],[12,"stack_segment_fault","","An stack segment exception (<code>#SS</code>) can occur in the …",26,null],[12,"general_protection_fault","","A general protection fault (<code>#GP</code>) can occur in various …",26,null],[12,"page_fault","","A page fault (<code>#PF</code>) can occur during a memory access in …",26,null],[12,"x87_floating_point","","The x87 Floating-Point Exception-Pending exception (<code>#MF</code>) …",26,null],[12,"alignment_check","","An alignment check exception (<code>#AC</code>) occurs when an …",26,null],[12,"machine_check","","The machine check exception (<code>#MC</code>) is model specific. …",26,null],[12,"simd_floating_point","","The SIMD Floating-Point Exception (<code>#XF</code>) is used to handle …",26,null],[12,"virtualization","","vector nr. 20",26,null],[12,"security_exception","","The Security Exception (<code>#SX</code>) signals security-sensitive …",26,null],[11,"new","","Creates a new IDT filled with non-present entries.",26,[[],["interruptdescriptortable",3]]],[11,"reset","","Resets all entries of this IDT in place.",26,[[]]],[11,"load","","Loads the IDT in the CPU using the <code>lidt</code> command.",26,[[]]],[11,"load_unsafe","","Loads the IDT in the CPU using the <code>lidt</code> command.",26,[[]]],[11,"slice","","Returns slice of IDT entries with the specified range.",26,[[]]],[11,"slice_mut","","Returns a mutable slice of IDT entries with the specified …",26,[[]]],[3,"Entry","","An Interrupt Descriptor Table entry.",null,null],[6,"HandlerFunc","","A handler function for an interrupt or an exception …",null,null],[6,"HandlerFuncWithErrCode","","A handler function for an exception that pushes an error …",null,null],[6,"PageFaultHandlerFunc","","A page fault handler function that pushes a page fault …",null,null],[6,"DivergingHandlerFunc","","A handler function that must not return, e.g. for a …",null,null],[6,"DivergingHandlerFuncWithErrCode","","A handler function with an error code that must not …",null,null],[11,"missing","","Creates a non-present IDT entry (but sets the must-be-one …",27,[[]]],[11,"set_handler_fn","","Set the handler function for the IDT entry and sets the …",27,[[["handlerfunc",6]],["entryoptions",3]]],[11,"set_handler_fn","","Set the handler function for the IDT entry and sets the …",27,[[["handlerfuncwitherrcode",6]],["entryoptions",3]]],[11,"set_handler_fn","","Set the handler function for the IDT entry and sets the …",27,[[["pagefaulthandlerfunc",6]],["entryoptions",3]]],[11,"set_handler_fn","","Set the handler function for the IDT entry and sets the …",27,[[["diverginghandlerfunc",6]],["entryoptions",3]]],[11,"set_handler_fn","","Set the handler function for the IDT entry and sets the …",27,[[["diverginghandlerfuncwitherrcode",6]],["entryoptions",3]]],[3,"EntryOptions","","Represents the options field of an IDT entry.",null,null],[11,"set_present","","Set or reset the preset bit.",28,[[["bool",15]]]],[11,"disable_interrupts","","Let the CPU disable hardware interrupts when the handler …",28,[[["bool",15]]]],[11,"set_privilege_level","","Set the required privilege level (DPL) for invoking the …",28,[[["privilegelevel",4]]]],[11,"set_stack_index","","Assigns a Interrupt Stack Table (IST) stack to this …",28,[[["u16",15]]]],[3,"InterruptStackFrame","","Wrapper type for the interrupt stack frame pushed by the …",null,null],[11,"as_mut","","Gives mutable access to the contents of the interrupt …",29,[[],["interruptstackframevalue",3]]],[3,"InterruptStackFrameValue","","Represents the interrupt stack frame pushed by the CPU on …",null,null],[12,"instruction_pointer","","This value points to the instruction that should be …",30,null],[12,"code_segment","","The code segment selector, padded with zeros.",30,null],[12,"cpu_flags","","The flags register before the interrupt handler was …",30,null],[12,"stack_pointer","","The stack pointer at the time of the interrupt.",30,null],[12,"stack_segment","","The stack segment descriptor at the time of the interrupt …",30,null],[3,"PageFaultErrorCode","","Describes an page fault error code.",null,null],[18,"PROTECTION_VIOLATION","","If this flag is set, the page fault was caused by a …",31,null],[18,"CAUSED_BY_WRITE","","If this flag is set, the memory access that caused the …",31,null],[18,"USER_MODE","","If this flag is set, an access in user mode (CPL=3) …",31,null],[18,"MALFORMED_TABLE","","If this flag is set, the page fault is a result of the …",31,null],[18,"INSTRUCTION_FETCH","","If this flag is set, it indicates that the access that …",31,null],[11,"empty","","Returns an empty set of flags",31,[[],["pagefaulterrorcode",3]]],[11,"all","","Returns the set containing all flags.",31,[[],["pagefaulterrorcode",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",31,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",31,[[["u64",15]],[["option",4],["pagefaulterrorcode",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",31,[[["u64",15]],["pagefaulterrorcode",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",31,[[["u64",15]],["pagefaulterrorcode",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",31,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",31,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",31,[[["pagefaulterrorcode",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",31,[[["pagefaulterrorcode",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",31,[[["pagefaulterrorcode",3]]]],[11,"remove","","Removes the specified flags in-place.",31,[[["pagefaulterrorcode",3]]]],[11,"toggle","","Toggles the specified flags in-place.",31,[[["pagefaulterrorcode",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",31,[[["bool",15],["pagefaulterrorcode",3]]]],[0,"paging","x86_64::structures","Abstractions for page tables and other paging related …",null,null],[0,"frame","x86_64::structures::paging","Abstractions for default-sized and huge physical memory …",null,null],[3,"PhysFrame","x86_64::structures::paging::frame","A physical memory frame.",null,null],[11,"from_start_address","","Returns the frame that starts at the given virtual …",32,[[["physaddr",3]],[["addressnotaligned",3],["result",4]]]],[11,"from_start_address_unchecked","","Returns the frame that starts at the given virtual …",32,[[["physaddr",3]]]],[11,"containing_address","","Returns the frame that contains the given physical …",32,[[["physaddr",3]]]],[11,"start_address","","Returns the start address of the frame.",32,[[],["physaddr",3]]],[11,"size","","Returns the size the frame (4KB, 2MB or 1GB).",32,[[],["u64",15]]],[11,"range","","Returns a range of frames, exclusive <code>end</code>.",32,[[["physframe",3]],["physframerange",3]]],[11,"range_inclusive","","Returns a range of frames, inclusive <code>end</code>.",32,[[["physframe",3]],["physframerangeinclusive",3]]],[3,"PhysFrameRange","","An range of physical memory frames, exclusive the upper …",null,null],[12,"start","","The start of the range, inclusive.",33,null],[12,"end","","The end of the range, exclusive.",33,null],[11,"is_empty","","Returns whether the range contains no frames.",33,[[],["bool",15]]],[3,"PhysFrameRangeInclusive","","An range of physical memory frames, inclusive the upper …",null,null],[12,"start","","The start of the range, inclusive.",34,null],[12,"end","","The start of the range, inclusive.",34,null],[11,"is_empty","","Returns whether the range contains no frames.",34,[[],["bool",15]]],[0,"mapper","x86_64::structures::paging","Abstractions for reading and modifying the mapping of …",null,null],[3,"MappedPageTable","x86_64::structures::paging::mapper","A Mapper implementation that relies on a PhysAddr to …",null,null],[8,"PageTableFrameMapping","","Provides a virtual address mapping for physical page …",null,null],[10,"frame_to_pointer","","Translate the given physical frame to a virtual page …",35,[[["physframe",3]]]],[3,"OffsetPageTable","","A Mapper implementation that requires that the complete …",null,null],[4,"InvalidPageTable","","The given page table was not suitable to create a …",null,null],[13,"NotRecursive","","The given page table was not at an recursive address.",36,null],[13,"NotActive","","The given page table was not active on the CPU.",36,null],[3,"RecursivePageTable","","A recursive page table is a last level page table with an …",null,null],[8,"MapperAllSizes","","An empty convencience trait that requires the <code>Mapper</code> …",null,null],[8,"Translate","","Provides methods for translating virtual addresses.",null,null],[10,"translate","","Return the frame that the given virtual address is mapped …",37,[[["virtaddr",3]],["translateresult",4]]],[11,"translate_addr","","Translates the given virtual address to the physical …",37,[[["virtaddr",3]],[["option",4],["physaddr",3]]]],[4,"TranslateResult","","The return value of the [<code>Translate::translate</code>] function.",null,null],[13,"Mapped","","The virtual address is mapped to a physical frame.",38,null],[12,"frame","x86_64::structures::paging::mapper::TranslateResult","The mapped frame.",39,null],[12,"offset","","The offset whithin the mapped frame.",39,null],[12,"flags","","The entry flags in the lowest-level page table.",39,null],[13,"NotMapped","x86_64::structures::paging::mapper","The given virtual address is not mapped to a physical …",38,null],[13,"InvalidFrameAddress","","The page table entry for the given virtual address points …",38,null],[4,"MappedFrame","","Represents a physical frame mapped in a page table.",null,null],[13,"Size4KiB","","The virtual address is mapped to a 4KiB frame.",40,null],[13,"Size2MiB","","The virtual address is mapped to a “large” 2MiB frame.",40,null],[13,"Size1GiB","","The virtual address is mapped to a “huge” 1GiB frame.",40,null],[11,"start_address","","Returns the start address of the frame.",40,[[],["physaddr",3]]],[11,"size","","Returns the size the frame (4KB, 2MB or 1GB).",40,[[],["u64",15]]],[8,"Mapper","","A trait for common page table operations on pages of size …",null,null],[11,"map_to","","Creates a new mapping in the page table.",41,[[["physframe",3],["pagetableflags",3],["page",3]],[["mapperflush",3],["maptoerror",4],["result",4]]]],[10,"map_to_with_table_flags","","Creates a new mapping in the page table.",41,[[["page",3],["pagetableflags",3],["physframe",3]],[["mapperflush",3],["maptoerror",4],["result",4]]]],[10,"unmap","","Removes a mapping from the page table and returns the …",41,[[["page",3]],[["result",4],["unmaperror",4]]]],[10,"update_flags","","Updates the flags of an existing mapping.",41,[[["pagetableflags",3],["page",3]],[["result",4],["flagupdateerror",4],["mapperflush",3]]]],[10,"set_flags_p4_entry","","Set the flags of an existing page level 4 table entry",41,[[["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[10,"set_flags_p3_entry","","Set the flags of an existing page table level 3 entry",41,[[["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[10,"set_flags_p2_entry","","Set the flags of an existing page table level 2 entry",41,[[["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[10,"translate_page","","Return the frame that the specified page is mapped to.",41,[[["page",3]],[["translateerror",4],["result",4],["physframe",3]]]],[11,"identity_map","","Maps the given frame to the virtual page with the same …",41,[[["pagetableflags",3],["physframe",3]],[["mapperflush",3],["maptoerror",4],["result",4]]]],[3,"MapperFlush","","This type represents a page whose mapping has changed in …",null,null],[11,"flush","","Flush the page from the TLB to ensure that the newest …",42,[[]]],[11,"ignore","","Don’t flush the TLB and silence the “must be used” …",42,[[]]],[3,"MapperFlushAll","","This type represents a change of a page table requiring a …",null,null],[11,"flush_all","","Flush all pages from the TLB to ensure that the newest …",43,[[]]],[11,"ignore","","Don’t flush the TLB and silence the “must be used” …",43,[[]]],[4,"MapToError","","This error is returned from <code>map_to</code> and similar methods.",null,null],[13,"FrameAllocationFailed","","An additional frame was needed for the mapping process, …",44,null],[13,"ParentEntryHugePage","","An upper level page table entry has the <code>HUGE_PAGE</code> flag …",44,null],[13,"PageAlreadyMapped","","The given page is already mapped to a physical frame.",44,null],[4,"UnmapError","","An error indicating that an <code>unmap</code> call failed.",null,null],[13,"ParentEntryHugePage","","An upper level page table entry has the <code>HUGE_PAGE</code> flag …",45,null],[13,"PageNotMapped","","The given page is not mapped to a physical frame.",45,null],[13,"InvalidFrameAddress","","The page table entry for the given page points to an …",45,null],[4,"FlagUpdateError","","An error indicating that an <code>update_flags</code> call failed.",null,null],[13,"PageNotMapped","","The given page is not mapped to a physical frame.",46,null],[13,"ParentEntryHugePage","","An upper level page table entry has the <code>HUGE_PAGE</code> flag …",46,null],[4,"TranslateError","","An error indicating that an <code>translate</code> call failed.",null,null],[13,"PageNotMapped","","The given page is not mapped to a physical frame.",47,null],[13,"ParentEntryHugePage","","An upper level page table entry has the <code>HUGE_PAGE</code> flag …",47,null],[13,"InvalidFrameAddress","","The page table entry for the given page points to an …",47,null],[0,"page","x86_64::structures::paging","Abstractions for default-sized and huge virtual memory …",null,null],[8,"PageSize","x86_64::structures::paging::page","Trait for abstracting over the three possible page sizes …",null,null],[18,"SIZE","","The page size in bytes.",48,null],[18,"SIZE_AS_DEBUG_STR","","A string representation of the page size for debug output.",48,null],[8,"NotGiantPageSize","","This trait is implemented for 4KiB and 2MiB pages, but …",null,null],[4,"Size4KiB","","A standard 4KiB page.",null,null],[4,"Size2MiB","","A “huge” 2MiB page.",null,null],[4,"Size1GiB","","A “giant” 1GiB page.",null,null],[3,"Page","","A virtual memory page.",null,null],[18,"SIZE","","The page size in bytes.",49,null],[11,"from_start_address","","Returns the page that starts at the given virtual address.",49,[[["virtaddr",3]],[["addressnotaligned",3],["result",4]]]],[11,"from_start_address_unchecked","","Returns the page that starts at the given virtual address.",49,[[["virtaddr",3]]]],[11,"containing_address","","Returns the page that contains the given virtual address.",49,[[["virtaddr",3]]]],[11,"start_address","","Returns the start address of the page.",49,[[],["virtaddr",3]]],[11,"size","","Returns the size the page (4KB, 2MB or 1GB).",49,[[],["u64",15]]],[11,"p4_index","","Returns the level 4 page table index of this page.",49,[[],["pagetableindex",3]]],[11,"p3_index","","Returns the level 3 page table index of this page.",49,[[],["pagetableindex",3]]],[11,"range","","Returns a range of pages, exclusive <code>end</code>.",49,[[],["pagerange",3]]],[11,"range_inclusive","","Returns a range of pages, inclusive <code>end</code>.",49,[[],["pagerangeinclusive",3]]],[11,"p2_index","","Returns the level 2 page table index of this page.",49,[[],["pagetableindex",3]]],[11,"from_page_table_indices_1gib","","Returns the 1GiB memory page with the specified page …",49,[[["pagetableindex",3]]]],[11,"from_page_table_indices_2mib","","Returns the 2MiB memory page with the specified page …",49,[[["pagetableindex",3]]]],[11,"from_page_table_indices","","Returns the 4KiB memory page with the specified page …",49,[[["pagetableindex",3]]]],[11,"p1_index","","Returns the level 1 page table index of this page.",49,[[],["pagetableindex",3]]],[3,"PageRange","","A range of pages with exclusive upper bound.",null,null],[12,"start","","The start of the range, inclusive.",50,null],[12,"end","","The end of the range, exclusive.",50,null],[11,"is_empty","","Returns wether this range contains no pages.",50,[[],["bool",15]]],[11,"as_4kib_page_range","","Converts the range of 2MiB pages to a range of 4KiB pages.",50,[[],[["size4kib",4],["pagerange",3]]]],[3,"PageRangeInclusive","","A range of pages with inclusive upper bound.",null,null],[12,"start","","The start of the range, inclusive.",51,null],[12,"end","","The end of the range, inclusive.",51,null],[11,"is_empty","","Returns wether this range contains no pages.",51,[[],["bool",15]]],[3,"AddressNotAligned","","The given address was not sufficiently aligned.",null,null],[0,"page_table","x86_64::structures::paging","Abstractions for page tables and page table entries.",null,null],[4,"FrameError","x86_64::structures::paging::page_table","The error returned by the <code>PageTableEntry::frame</code> method.",null,null],[13,"FrameNotPresent","","The entry does not have the <code>PRESENT</code> flag set, so it isn’…",52,null],[13,"HugeFrame","","The entry does have the <code>HUGE_PAGE</code> flag set. The <code>frame</code> …",52,null],[3,"PageTableEntry","","A 64-bit page table entry.",null,null],[11,"new","","Creates an unused page table entry.",53,[[]]],[11,"is_unused","","Returns whether this entry is zero.",53,[[],["bool",15]]],[11,"set_unused","","Sets this entry to zero.",53,[[]]],[11,"flags","","Returns the flags of this entry.",53,[[],["pagetableflags",3]]],[11,"addr","","Returns the physical address mapped by this entry, might …",53,[[],["physaddr",3]]],[11,"frame","","Returns the physical frame mapped by this entry.",53,[[],[["frameerror",4],["result",4],["physframe",3]]]],[11,"set_addr","","Map the entry to the specified physical address with the …",53,[[["pagetableflags",3],["physaddr",3]]]],[11,"set_frame","","Map the entry to the specified physical frame with the …",53,[[["pagetableflags",3],["physframe",3]]]],[11,"set_flags","","Sets the flags of this entry.",53,[[["pagetableflags",3]]]],[3,"PageTableFlags","","Possible flags for a page table entry.",null,null],[18,"PRESENT","","Specifies whether the mapped frame or page table is …",54,null],[18,"WRITABLE","","Controls whether writes to the mapped frames are allowed.",54,null],[18,"USER_ACCESSIBLE","","Controls whether accesses from userspace (i.e. ring 3) …",54,null],[18,"WRITE_THROUGH","","If this bit is set, a “write-through” policy is used …",54,null],[18,"NO_CACHE","","Disables caching for the pointed entry is cacheable.",54,null],[18,"ACCESSED","","Set by the CPU when the mapped frame or page table is …",54,null],[18,"DIRTY","","Set by the CPU on a write to the mapped frame.",54,null],[18,"HUGE_PAGE","","Specifies that the entry maps a huge frame instead of a …",54,null],[18,"GLOBAL","","Indicates that the mapping is present in all address …",54,null],[18,"BIT_9","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_10","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_11","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_52","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_53","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_54","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_55","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_56","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_57","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_58","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_59","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_60","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_61","","Available to the OS, can be used to store additional …",54,null],[18,"BIT_62","","Available to the OS, can be used to store additional …",54,null],[18,"NO_EXECUTE","","Forbid code execution from the mapped frames.",54,null],[11,"empty","","Returns an empty set of flags",54,[[],["pagetableflags",3]]],[11,"all","","Returns the set containing all flags.",54,[[],["pagetableflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",54,[[],["u64",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",54,[[["u64",15]],[["pagetableflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",54,[[["u64",15]],["pagetableflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",54,[[["u64",15]],["pagetableflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",54,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",54,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",54,[[["pagetableflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",54,[[["pagetableflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",54,[[["pagetableflags",3]]]],[11,"remove","","Removes the specified flags in-place.",54,[[["pagetableflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",54,[[["pagetableflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",54,[[["bool",15],["pagetableflags",3]]]],[3,"PageTable","","Represents a page table.",null,null],[11,"new","","Creates an empty page table.",55,[[]]],[11,"zero","","Clears all entries.",55,[[]]],[11,"iter","","Returns an iterator over the entries of the page table.",55,[[]]],[11,"iter_mut","","Returns an iterator that allows modifying the entries of …",55,[[]]],[3,"PageTableIndex","","A 9-bit index into a page table.",null,null],[11,"new","","Creates a new index from the given <code>u16</code>. Panics if the …",56,[[["u16",15]]]],[11,"new_truncate","","Creates a new index from the given <code>u16</code>. Throws away bits …",56,[[["u16",15]]]],[3,"PageOffset","","A 12-bit offset into a 4KiB Page.",null,null],[11,"new","","Creates a new offset from the given <code>u16</code>. Panics if the …",57,[[["u16",15]]]],[11,"new_truncate","","Creates a new offset from the given <code>u16</code>. Throws away bits …",57,[[["u16",15]]]],[8,"FrameAllocator","x86_64::structures::paging","A trait for types that can allocate a frame of memory.",null,null],[10,"allocate_frame","","Allocate a frame of the appropriate size and return it if …",58,[[],[["option",4],["physframe",3]]]],[8,"FrameDeallocator","","A trait for types that can deallocate a frame of memory.",null,null],[10,"deallocate_frame","","Deallocate the given unused frame.",59,[[["physframe",3]]]],[0,"port","x86_64::structures","Traits for accessing I/O ports.",null,null],[8,"PortRead","x86_64::structures::port","A helper trait that implements the read port operation.",null,null],[10,"read_from_port","","Reads a <code>Self</code> value from the given port.",60,[[["u16",15]]]],[8,"PortWrite","","A helper trait that implements the write port operation.",null,null],[10,"write_to_port","","Writes a <code>Self</code> value to the given port.",61,[[["u16",15]]]],[0,"tss","x86_64::structures","Provides a type for the task state segment structure.",null,null],[3,"TaskStateSegment","x86_64::structures::tss","In 64-bit mode the TSS holds information that is not …",null,null],[12,"privilege_stack_table","","The full 64-bit canonical forms of the stack pointers …",62,null],[12,"interrupt_stack_table","","The full 64-bit canonical forms of the interrupt stack …",62,null],[12,"iomap_base","","The 16-bit offset to the I/O permission bit map from the …",62,null],[11,"new","","Creates a new TSS with zeroed privilege and interrupt …",62,[[],["taskstatesegment",3]]],[3,"DescriptorTablePointer","x86_64::structures","A struct describing a pointer to a descriptor table (GDT …",null,null],[12,"limit","","Size of the DT.",63,null],[12,"base","","Pointer to the memory region containing the DT.",63,null],[4,"PrivilegeLevel","x86_64","Represents a protection ring level.",null,null],[13,"Ring0","","Privilege-level 0 (most privilege): This level is used by …",64,null],[13,"Ring1","","Privilege-level 1 (moderate privilege): This level is …",64,null],[13,"Ring2","","Privilege-level 2 (moderate privilege): Like level 1, …",64,null],[13,"Ring3","","Privilege-level 3 (least privilege): This level is used …",64,null],[11,"from_u16","","Creates a <code>PrivilegeLevel</code> from a numeric value. The value …",64,[[["u16",15]],["privilegelevel",4]]],[14,"software_interrupt","","Generate a software interrupt by invoking the <code>int</code> …",null,null],[11,"borrow","x86_64::addr","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"borrow","x86_64::instructions::port","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","x86_64::instructions::random","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","x86_64::instructions::tlb","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","x86_64::registers::control","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","x86_64::registers::model_specific","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"borrow","x86_64::registers::rflags","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"borrow","x86_64::registers::xcontrol","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"borrow","x86_64::structures::gdt","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"borrow","x86_64::structures::idt","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"borrow","x86_64::structures::paging::frame","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"into_iter","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"into_iter","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"borrow","x86_64::structures::paging::mapper","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"borrow","x86_64::structures::paging::page","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"into_iter","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"into_iter","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"borrow","x86_64::structures::paging::page_table","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"borrow","x86_64::structures::tss","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"borrow","x86_64::structures","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"borrow","x86_64","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"translate","x86_64::structures::paging::mapper","",72,[[["virtaddr",3]],["translateresult",4]]],[11,"translate","","",73,[[["virtaddr",3]],["translateresult",4]]],[11,"translate","","",74,[[["virtaddr",3]],["translateresult",4]]],[11,"map_to_with_table_flags","","",72,[[["pagetableflags",3],["size1gib",4],["physframe",3],["page",3]],[["result",4],["maptoerror",4],["mapperflush",3]]]],[11,"unmap","","",72,[[["size1gib",4],["page",3]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",72,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["result",4],["mapperflush",3]]]],[11,"set_flags_p4_entry","","",72,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p3_entry","","",72,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p2_entry","","",72,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"translate_page","","",72,[[["size1gib",4],["page",3]],[["physframe",3],["translateerror",4],["result",4]]]],[11,"map_to_with_table_flags","","",72,[[["pagetableflags",3],["physframe",3],["page",3],["size2mib",4]],[["result",4],["mapperflush",3],["maptoerror",4]]]],[11,"unmap","","",72,[[["page",3],["size2mib",4]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",72,[[["page",3],["size2mib",4],["pagetableflags",3]],[["result",4],["mapperflush",3],["flagupdateerror",4]]]],[11,"set_flags_p4_entry","","",72,[[["page",3],["size2mib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p3_entry","","",72,[[["page",3],["size2mib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p2_entry","","",72,[[["page",3],["size2mib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"translate_page","","",72,[[["page",3],["size2mib",4]],[["translateerror",4],["result",4],["physframe",3]]]],[11,"map_to_with_table_flags","","",72,[[["size4kib",4],["pagetableflags",3],["page",3],["physframe",3]],[["mapperflush",3],["maptoerror",4],["result",4]]]],[11,"unmap","","",72,[[["page",3],["size4kib",4]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",72,[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflush",3],["flagupdateerror",4],["result",4]]]],[11,"set_flags_p4_entry","","",72,[[["page",3],["size4kib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p3_entry","","",72,[[["page",3],["size4kib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p2_entry","","",72,[[["page",3],["size4kib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"translate_page","","",72,[[["page",3],["size4kib",4]],[["physframe",3],["translateerror",4],["result",4]]]],[11,"map_to_with_table_flags","","",73,[[["pagetableflags",3],["size1gib",4],["physframe",3],["page",3]],[["result",4],["maptoerror",4],["mapperflush",3]]]],[11,"unmap","","",73,[[["size1gib",4],["page",3]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",73,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["result",4],["mapperflush",3]]]],[11,"set_flags_p4_entry","","",73,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p3_entry","","",73,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p2_entry","","",73,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"translate_page","","",73,[[["size1gib",4],["page",3]],[["physframe",3],["translateerror",4],["result",4]]]],[11,"map_to_with_table_flags","","",73,[[["pagetableflags",3],["physframe",3],["page",3],["size2mib",4]],[["result",4],["mapperflush",3],["maptoerror",4]]]],[11,"unmap","","",73,[[["page",3],["size2mib",4]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",73,[[["page",3],["size2mib",4],["pagetableflags",3]],[["result",4],["mapperflush",3],["flagupdateerror",4]]]],[11,"set_flags_p4_entry","","",73,[[["page",3],["size2mib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p3_entry","","",73,[[["page",3],["size2mib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p2_entry","","",73,[[["page",3],["size2mib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"translate_page","","",73,[[["page",3],["size2mib",4]],[["translateerror",4],["result",4],["physframe",3]]]],[11,"map_to_with_table_flags","","",73,[[["size4kib",4],["pagetableflags",3],["page",3],["physframe",3]],[["mapperflush",3],["maptoerror",4],["result",4]]]],[11,"unmap","","",73,[[["page",3],["size4kib",4]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",73,[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflush",3],["flagupdateerror",4],["result",4]]]],[11,"set_flags_p4_entry","","",73,[[["page",3],["size4kib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p3_entry","","",73,[[["page",3],["size4kib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p2_entry","","",73,[[["page",3],["size4kib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"translate_page","","",73,[[["page",3],["size4kib",4]],[["physframe",3],["translateerror",4],["result",4]]]],[11,"map_to_with_table_flags","","",74,[[["pagetableflags",3],["size1gib",4],["physframe",3],["page",3]],[["result",4],["maptoerror",4],["mapperflush",3]]]],[11,"unmap","","",74,[[["size1gib",4],["page",3]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",74,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["result",4],["mapperflush",3]]]],[11,"set_flags_p4_entry","","",74,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p3_entry","","",74,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p2_entry","","",74,[[["size1gib",4],["pagetableflags",3],["page",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"translate_page","","",74,[[["size1gib",4],["page",3]],[["physframe",3],["translateerror",4],["result",4]]]],[11,"map_to_with_table_flags","","",74,[[["pagetableflags",3],["physframe",3],["page",3],["size2mib",4]],[["result",4],["mapperflush",3],["maptoerror",4]]]],[11,"unmap","","",74,[[["page",3],["size2mib",4]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",74,[[["page",3],["size2mib",4],["pagetableflags",3]],[["result",4],["mapperflush",3],["flagupdateerror",4]]]],[11,"set_flags_p4_entry","","",74,[[["page",3],["size2mib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p3_entry","","",74,[[["page",3],["size2mib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p2_entry","","",74,[[["page",3],["size2mib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"translate_page","","",74,[[["page",3],["size2mib",4]],[["translateerror",4],["result",4],["physframe",3]]]],[11,"map_to_with_table_flags","","",74,[[["size4kib",4],["pagetableflags",3],["page",3],["physframe",3]],[["mapperflush",3],["maptoerror",4],["result",4]]]],[11,"unmap","","",74,[[["page",3],["size4kib",4]],[["result",4],["unmaperror",4]]]],[11,"update_flags","","",74,[[["page",3],["size4kib",4],["pagetableflags",3]],[["mapperflush",3],["flagupdateerror",4],["result",4]]]],[11,"set_flags_p4_entry","","",74,[[["page",3],["size4kib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p3_entry","","",74,[[["page",3],["size4kib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"set_flags_p2_entry","","",74,[[["page",3],["size4kib",4],["pagetableflags",3]],[["flagupdateerror",4],["mapperflushall",3],["result",4]]]],[11,"translate_page","","",74,[[["page",3],["size4kib",4]],[["physframe",3],["translateerror",4],["result",4]]]],[11,"deref","x86_64::structures::idt","",29,[[]]],[11,"fmt","x86_64::addr","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::instructions::port","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::instructions::random","",5,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::instructions::tlb","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::control","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::model_specific","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::rflags","",20,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::xcontrol","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::gdt","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::idt","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::frame","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::mapper","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page_table","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::tss","",62,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures","",63,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64","",64,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::mapper","",36,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page","",78,[[["formatter",3]],["result",6]]],[11,"sub","x86_64::addr","",0,[[["u64",15]]]],[11,"sub","","",0,[[["usize",15]]]],[11,"sub","","",0,[[["virtaddr",3]]]],[11,"sub","","",1,[[["u64",15]]]],[11,"sub","","",1,[[["usize",15]]]],[11,"sub","","",1,[[["physaddr",3]]]],[11,"sub","x86_64::registers::control","Returns the set difference of the two sets of flags.",8,[[["cr0flags",3]],["cr0flags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["cr3flags",3]],["cr3flags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["cr4flags",3]],["cr4flags",3]]],[11,"sub","x86_64::registers::model_specific","Returns the set difference of the two sets of flags.",19,[[["eferflags",3]],["eferflags",3]]],[11,"sub","x86_64::registers::rflags","Returns the set difference of the two sets of flags.",20,[[["rflags",3]],["rflags",3]]],[11,"sub","x86_64::registers::xcontrol","Returns the set difference of the two sets of flags.",21,[[["xcr0flags",3]],["xcr0flags",3]]],[11,"sub","x86_64::structures::gdt","Returns the set difference of the two sets of flags.",25,[[["descriptorflags",3]],["descriptorflags",3]]],[11,"sub","x86_64::structures::idt","Returns the set difference of the two sets of flags.",31,[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]]],[11,"sub","x86_64::structures::paging::frame","",32,[[["u64",15]]]],[11,"sub","","",32,[[["physframe",3]]]],[11,"sub","x86_64::structures::paging::page","",49,[[["u64",15]]]],[11,"sub","","",49,[[]]],[11,"sub","x86_64::structures::paging::page_table","Returns the set difference of the two sets of flags.",54,[[["pagetableflags",3]],["pagetableflags",3]]],[11,"eq","x86_64::addr","",0,[[["virtaddr",3]],["bool",15]]],[11,"ne","","",0,[[["virtaddr",3]],["bool",15]]],[11,"eq","","",1,[[["physaddr",3]],["bool",15]]],[11,"ne","","",1,[[["physaddr",3]],["bool",15]]],[11,"eq","x86_64::instructions::port","",2,[[["portreadonly",3]],["bool",15]]],[11,"ne","","",2,[[["portreadonly",3]],["bool",15]]],[11,"eq","","",3,[[["portwriteonly",3]],["bool",15]]],[11,"ne","","",3,[[["portwriteonly",3]],["bool",15]]],[11,"eq","","",4,[[["port",3]],["bool",15]]],[11,"ne","","",4,[[["port",3]],["bool",15]]],[11,"eq","x86_64::registers::control","",8,[[["cr0flags",3]],["bool",15]]],[11,"ne","","",8,[[["cr0flags",3]],["bool",15]]],[11,"eq","","",9,[[["cr3flags",3]],["bool",15]]],[11,"ne","","",9,[[["cr3flags",3]],["bool",15]]],[11,"eq","","",10,[[["cr4flags",3]],["bool",15]]],[11,"ne","","",10,[[["cr4flags",3]],["bool",15]]],[11,"eq","x86_64::registers::model_specific","",19,[[["eferflags",3]],["bool",15]]],[11,"ne","","",19,[[["eferflags",3]],["bool",15]]],[11,"eq","x86_64::registers::rflags","",20,[[["rflags",3]],["bool",15]]],[11,"ne","","",20,[[["rflags",3]],["bool",15]]],[11,"eq","x86_64::registers::xcontrol","",21,[[["xcr0flags",3]],["bool",15]]],[11,"ne","","",21,[[["xcr0flags",3]],["bool",15]]],[11,"eq","x86_64::structures::gdt","",22,[[["segmentselector",3]],["bool",15]]],[11,"ne","","",22,[[["segmentselector",3]],["bool",15]]],[11,"eq","","",25,[[["descriptorflags",3]],["bool",15]]],[11,"ne","","",25,[[["descriptorflags",3]],["bool",15]]],[11,"eq","x86_64::structures::idt","",27,[[["entry",3]],["bool",15]]],[11,"ne","","",27,[[["entry",3]],["bool",15]]],[11,"eq","","",28,[[["entryoptions",3]],["bool",15]]],[11,"ne","","",28,[[["entryoptions",3]],["bool",15]]],[11,"eq","","",31,[[["pagefaulterrorcode",3]],["bool",15]]],[11,"ne","","",31,[[["pagefaulterrorcode",3]],["bool",15]]],[11,"eq","x86_64::structures::paging::frame","",32,[[["physframe",3]],["bool",15]]],[11,"ne","","",32,[[["physframe",3]],["bool",15]]],[11,"eq","","",33,[[["physframerange",3]],["bool",15]]],[11,"ne","","",33,[[["physframerange",3]],["bool",15]]],[11,"eq","","",34,[[["physframerangeinclusive",3]],["bool",15]]],[11,"ne","","",34,[[["physframerangeinclusive",3]],["bool",15]]],[11,"eq","x86_64::structures::paging::page","",75,[[["size4kib",4]],["bool",15]]],[11,"eq","","",76,[[["size2mib",4]],["bool",15]]],[11,"eq","","",77,[[["size1gib",4]],["bool",15]]],[11,"eq","","",49,[[["page",3]],["bool",15]]],[11,"ne","","",49,[[["page",3]],["bool",15]]],[11,"eq","","",50,[[["pagerange",3]],["bool",15]]],[11,"ne","","",50,[[["pagerange",3]],["bool",15]]],[11,"eq","","",51,[[["pagerangeinclusive",3]],["bool",15]]],[11,"ne","","",51,[[["pagerangeinclusive",3]],["bool",15]]],[11,"eq","x86_64::structures::paging::page_table","",52,[[["frameerror",4]],["bool",15]]],[11,"eq","","",54,[[["pagetableflags",3]],["bool",15]]],[11,"ne","","",54,[[["pagetableflags",3]],["bool",15]]],[11,"eq","","",56,[[["pagetableindex",3]],["bool",15]]],[11,"ne","","",56,[[["pagetableindex",3]],["bool",15]]],[11,"eq","","",57,[[["pageoffset",3]],["bool",15]]],[11,"ne","","",57,[[["pageoffset",3]],["bool",15]]],[11,"eq","x86_64","",64,[[["privilegelevel",4]],["bool",15]]],[11,"cmp","x86_64::addr","",0,[[["virtaddr",3]],["ordering",4]]],[11,"cmp","","",1,[[["physaddr",3]],["ordering",4]]],[11,"cmp","x86_64::registers::control","",8,[[["cr0flags",3]],["ordering",4]]],[11,"cmp","","",9,[[["cr3flags",3]],["ordering",4]]],[11,"cmp","","",10,[[["cr4flags",3]],["ordering",4]]],[11,"cmp","x86_64::registers::model_specific","",19,[[["eferflags",3]],["ordering",4]]],[11,"cmp","x86_64::registers::rflags","",20,[[["rflags",3]],["ordering",4]]],[11,"cmp","x86_64::registers::xcontrol","",21,[[["xcr0flags",3]],["ordering",4]]],[11,"cmp","x86_64::structures::gdt","",25,[[["descriptorflags",3]],["ordering",4]]],[11,"cmp","x86_64::structures::idt","",31,[[["pagefaulterrorcode",3]],["ordering",4]]],[11,"cmp","x86_64::structures::paging::frame","",32,[[["physframe",3]],["ordering",4]]],[11,"cmp","x86_64::structures::paging::page","",75,[[["size4kib",4]],["ordering",4]]],[11,"cmp","","",76,[[["size2mib",4]],["ordering",4]]],[11,"cmp","","",77,[[["size1gib",4]],["ordering",4]]],[11,"cmp","","",49,[[["page",3]],["ordering",4]]],[11,"cmp","x86_64::structures::paging::page_table","",54,[[["pagetableflags",3]],["ordering",4]]],[11,"cmp","","",56,[[["pagetableindex",3]],["ordering",4]]],[11,"cmp","","",57,[[["pageoffset",3]],["ordering",4]]],[11,"partial_cmp","x86_64::addr","",0,[[["virtaddr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",1,[[["physaddr",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","x86_64::registers::control","",8,[[["cr0flags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",9,[[["cr3flags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",10,[[["cr4flags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","x86_64::registers::model_specific","",19,[[["eferflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","x86_64::registers::rflags","",20,[[["rflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","x86_64::registers::xcontrol","",21,[[["xcr0flags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","x86_64::structures::gdt","",25,[[["descriptorflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","x86_64::structures::idt","",31,[[["pagefaulterrorcode",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","x86_64::structures::paging::frame","",32,[[["physframe",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","x86_64::structures::paging::page","",75,[[["size4kib",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",76,[[["size2mib",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",77,[[["size1gib",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",49,[[["page",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","x86_64::structures::paging::page_table","",54,[[["pagetableflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",56,[[["pagetableindex",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",57,[[["pageoffset",3]],[["ordering",4],["option",4]]]],[11,"add","x86_64::addr","",0,[[["u64",15]]]],[11,"add","","",0,[[["usize",15]]]],[11,"add","","",1,[[["u64",15]]]],[11,"add","","",1,[[["usize",15]]]],[11,"add","x86_64::structures::paging::frame","",32,[[["u64",15]]]],[11,"add","x86_64::structures::paging::page","",49,[[["u64",15]]]],[11,"add_assign","x86_64::addr","",0,[[["u64",15]]]],[11,"add_assign","","",0,[[["usize",15]]]],[11,"add_assign","","",1,[[["u64",15]]]],[11,"add_assign","","",1,[[["usize",15]]]],[11,"add_assign","x86_64::structures::paging::frame","",32,[[["u64",15]]]],[11,"add_assign","x86_64::structures::paging::page","",49,[[["u64",15]]]],[11,"sub_assign","x86_64::addr","",0,[[["u64",15]]]],[11,"sub_assign","","",0,[[["usize",15]]]],[11,"sub_assign","","",1,[[["u64",15]]]],[11,"sub_assign","","",1,[[["usize",15]]]],[11,"sub_assign","x86_64::registers::control","Disables all flags enabled in the set.",8,[[["cr0flags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["cr3flags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["cr4flags",3]]]],[11,"sub_assign","x86_64::registers::model_specific","Disables all flags enabled in the set.",19,[[["eferflags",3]]]],[11,"sub_assign","x86_64::registers::rflags","Disables all flags enabled in the set.",20,[[["rflags",3]]]],[11,"sub_assign","x86_64::registers::xcontrol","Disables all flags enabled in the set.",21,[[["xcr0flags",3]]]],[11,"sub_assign","x86_64::structures::gdt","Disables all flags enabled in the set.",25,[[["descriptorflags",3]]]],[11,"sub_assign","x86_64::structures::idt","Disables all flags enabled in the set.",31,[[["pagefaulterrorcode",3]]]],[11,"sub_assign","x86_64::structures::paging::frame","",32,[[["u64",15]]]],[11,"sub_assign","x86_64::structures::paging::page","",49,[[["u64",15]]]],[11,"sub_assign","x86_64::structures::paging::page_table","Disables all flags enabled in the set.",54,[[["pagetableflags",3]]]],[11,"not","x86_64::registers::control","Returns the complement of this set of flags.",8,[[],["cr0flags",3]]],[11,"not","","Returns the complement of this set of flags.",9,[[],["cr3flags",3]]],[11,"not","","Returns the complement of this set of flags.",10,[[],["cr4flags",3]]],[11,"not","x86_64::registers::model_specific","Returns the complement of this set of flags.",19,[[],["eferflags",3]]],[11,"not","x86_64::registers::rflags","Returns the complement of this set of flags.",20,[[],["rflags",3]]],[11,"not","x86_64::registers::xcontrol","Returns the complement of this set of flags.",21,[[],["xcr0flags",3]]],[11,"not","x86_64::structures::gdt","Returns the complement of this set of flags.",25,[[],["descriptorflags",3]]],[11,"not","x86_64::structures::idt","Returns the complement of this set of flags.",31,[[],["pagefaulterrorcode",3]]],[11,"not","x86_64::structures::paging::page_table","Returns the complement of this set of flags.",54,[[],["pagetableflags",3]]],[11,"bitand","x86_64::registers::control","Returns the intersection between the two sets of flags.",8,[[["cr0flags",3]],["cr0flags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["cr3flags",3]],["cr3flags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["cr4flags",3]],["cr4flags",3]]],[11,"bitand","x86_64::registers::model_specific","Returns the intersection between the two sets of flags.",19,[[["eferflags",3]],["eferflags",3]]],[11,"bitand","x86_64::registers::rflags","Returns the intersection between the two sets of flags.",20,[[["rflags",3]],["rflags",3]]],[11,"bitand","x86_64::registers::xcontrol","Returns the intersection between the two sets of flags.",21,[[["xcr0flags",3]],["xcr0flags",3]]],[11,"bitand","x86_64::structures::gdt","Returns the intersection between the two sets of flags.",25,[[["descriptorflags",3]],["descriptorflags",3]]],[11,"bitand","x86_64::structures::idt","Returns the intersection between the two sets of flags.",31,[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]]],[11,"bitand","x86_64::structures::paging::page_table","Returns the intersection between the two sets of flags.",54,[[["pagetableflags",3]],["pagetableflags",3]]],[11,"bitor","x86_64::registers::control","Returns the union of the two sets of flags.",8,[[["cr0flags",3]],["cr0flags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["cr3flags",3]],["cr3flags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["cr4flags",3]],["cr4flags",3]]],[11,"bitor","x86_64::registers::model_specific","Returns the union of the two sets of flags.",19,[[["eferflags",3]],["eferflags",3]]],[11,"bitor","x86_64::registers::rflags","Returns the union of the two sets of flags.",20,[[["rflags",3]],["rflags",3]]],[11,"bitor","x86_64::registers::xcontrol","Returns the union of the two sets of flags.",21,[[["xcr0flags",3]],["xcr0flags",3]]],[11,"bitor","x86_64::structures::gdt","Returns the union of the two sets of flags.",25,[[["descriptorflags",3]],["descriptorflags",3]]],[11,"bitor","x86_64::structures::idt","Returns the union of the two sets of flags.",31,[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]]],[11,"bitor","x86_64::structures::paging::page_table","Returns the union of the two sets of flags.",54,[[["pagetableflags",3]],["pagetableflags",3]]],[11,"bitxor","x86_64::registers::control","Returns the left flags, but with all the right flags …",8,[[["cr0flags",3]],["cr0flags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",9,[[["cr3flags",3]],["cr3flags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",10,[[["cr4flags",3]],["cr4flags",3]]],[11,"bitxor","x86_64::registers::model_specific","Returns the left flags, but with all the right flags …",19,[[["eferflags",3]],["eferflags",3]]],[11,"bitxor","x86_64::registers::rflags","Returns the left flags, but with all the right flags …",20,[[["rflags",3]],["rflags",3]]],[11,"bitxor","x86_64::registers::xcontrol","Returns the left flags, but with all the right flags …",21,[[["xcr0flags",3]],["xcr0flags",3]]],[11,"bitxor","x86_64::structures::gdt","Returns the left flags, but with all the right flags …",25,[[["descriptorflags",3]],["descriptorflags",3]]],[11,"bitxor","x86_64::structures::idt","Returns the left flags, but with all the right flags …",31,[[["pagefaulterrorcode",3]],["pagefaulterrorcode",3]]],[11,"bitxor","x86_64::structures::paging::page_table","Returns the left flags, but with all the right flags …",54,[[["pagetableflags",3]],["pagetableflags",3]]],[11,"bitand_assign","x86_64::registers::control","Disables all flags disabled in the set.",8,[[["cr0flags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["cr3flags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["cr4flags",3]]]],[11,"bitand_assign","x86_64::registers::model_specific","Disables all flags disabled in the set.",19,[[["eferflags",3]]]],[11,"bitand_assign","x86_64::registers::rflags","Disables all flags disabled in the set.",20,[[["rflags",3]]]],[11,"bitand_assign","x86_64::registers::xcontrol","Disables all flags disabled in the set.",21,[[["xcr0flags",3]]]],[11,"bitand_assign","x86_64::structures::gdt","Disables all flags disabled in the set.",25,[[["descriptorflags",3]]]],[11,"bitand_assign","x86_64::structures::idt","Disables all flags disabled in the set.",31,[[["pagefaulterrorcode",3]]]],[11,"bitand_assign","x86_64::structures::paging::page_table","Disables all flags disabled in the set.",54,[[["pagetableflags",3]]]],[11,"bitor_assign","x86_64::registers::control","Adds the set of flags.",8,[[["cr0flags",3]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["cr3flags",3]]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["cr4flags",3]]]],[11,"bitor_assign","x86_64::registers::model_specific","Adds the set of flags.",19,[[["eferflags",3]]]],[11,"bitor_assign","x86_64::registers::rflags","Adds the set of flags.",20,[[["rflags",3]]]],[11,"bitor_assign","x86_64::registers::xcontrol","Adds the set of flags.",21,[[["xcr0flags",3]]]],[11,"bitor_assign","x86_64::structures::gdt","Adds the set of flags.",25,[[["descriptorflags",3]]]],[11,"bitor_assign","x86_64::structures::idt","Adds the set of flags.",31,[[["pagefaulterrorcode",3]]]],[11,"bitor_assign","x86_64::structures::paging::page_table","Adds the set of flags.",54,[[["pagetableflags",3]]]],[11,"bitxor_assign","x86_64::registers::control","Toggles the set of flags.",8,[[["cr0flags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["cr3flags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["cr4flags",3]]]],[11,"bitxor_assign","x86_64::registers::model_specific","Toggles the set of flags.",19,[[["eferflags",3]]]],[11,"bitxor_assign","x86_64::registers::rflags","Toggles the set of flags.",20,[[["rflags",3]]]],[11,"bitxor_assign","x86_64::registers::xcontrol","Toggles the set of flags.",21,[[["xcr0flags",3]]]],[11,"bitxor_assign","x86_64::structures::gdt","Toggles the set of flags.",25,[[["descriptorflags",3]]]],[11,"bitxor_assign","x86_64::structures::idt","Toggles the set of flags.",31,[[["pagefaulterrorcode",3]]]],[11,"bitxor_assign","x86_64::structures::paging::page_table","Toggles the set of flags.",54,[[["pagetableflags",3]]]],[11,"index","x86_64::structures::idt","Returns the IDT entry with the specified index.",26,[[["usize",15]]]],[11,"index","x86_64::structures::paging::page_table","",55,[[["usize",15]]]],[11,"index","","",55,[[["pagetableindex",3]]]],[11,"index_mut","x86_64::structures::idt","Returns a mutable reference to the IDT entry with the …",26,[[["usize",15]]]],[11,"index_mut","x86_64::structures::paging::page_table","",55,[[["usize",15]]]],[11,"index_mut","","",55,[[["pagetableindex",3]]]],[11,"hash","x86_64::registers::control","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","x86_64::registers::model_specific","",19,[[]]],[11,"hash","x86_64::registers::rflags","",20,[[]]],[11,"hash","x86_64::registers::xcontrol","",21,[[]]],[11,"hash","x86_64::structures::gdt","",25,[[]]],[11,"hash","x86_64::structures::idt","",31,[[]]],[11,"hash","x86_64::structures::paging::page_table","",54,[[]]],[11,"from_iter","x86_64::registers::control","",8,[[["intoiterator",8]],["cr0flags",3]]],[11,"from_iter","","",9,[[["intoiterator",8]],["cr3flags",3]]],[11,"from_iter","","",10,[[["intoiterator",8]],["cr4flags",3]]],[11,"from_iter","x86_64::registers::model_specific","",19,[[["intoiterator",8]],["eferflags",3]]],[11,"from_iter","x86_64::registers::rflags","",20,[[["intoiterator",8]],["rflags",3]]],[11,"from_iter","x86_64::registers::xcontrol","",21,[[["intoiterator",8]],["xcr0flags",3]]],[11,"from_iter","x86_64::structures::gdt","",25,[[["intoiterator",8]],["descriptorflags",3]]],[11,"from_iter","x86_64::structures::idt","",31,[[["intoiterator",8]],["pagefaulterrorcode",3]]],[11,"from_iter","x86_64::structures::paging::page_table","",54,[[["intoiterator",8]],["pagetableflags",3]]],[11,"fmt","x86_64::addr","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::control","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::model_specific","",19,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::rflags","",20,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::xcontrol","",21,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::gdt","",25,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::idt","",31,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page_table","",54,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::addr","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::control","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::model_specific","",19,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::rflags","",20,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::xcontrol","",21,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::gdt","",25,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::idt","",31,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page_table","",54,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::addr","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::control","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::model_specific","",19,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::rflags","",20,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::xcontrol","",21,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::gdt","",25,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::idt","",31,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page_table","",54,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::addr","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::control","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::model_specific","",19,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::rflags","",20,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::registers::xcontrol","",21,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::gdt","",25,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::idt","",31,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::structures::paging::page_table","",54,[[["formatter",3]],["result",6]]],[11,"fmt","x86_64::addr","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"next","x86_64::structures::paging::frame","",33,[[],["option",4]]],[11,"next","","",34,[[],["option",4]]],[11,"next","x86_64::structures::paging::page","",50,[[],["option",4]]],[11,"next","","",51,[[],["option",4]]],[11,"extend","x86_64::registers::control","",8,[[["intoiterator",8]]]],[11,"extend","","",9,[[["intoiterator",8]]]],[11,"extend","","",10,[[["intoiterator",8]]]],[11,"extend","x86_64::registers::model_specific","",19,[[["intoiterator",8]]]],[11,"extend","x86_64::registers::rflags","",20,[[["intoiterator",8]]]],[11,"extend","x86_64::registers::xcontrol","",21,[[["intoiterator",8]]]],[11,"extend","x86_64::structures::gdt","",25,[[["intoiterator",8]]]],[11,"extend","x86_64::structures::idt","",31,[[["intoiterator",8]]]],[11,"extend","x86_64::structures::paging::page_table","",54,[[["intoiterator",8]]]],[11,"clone","x86_64::addr","",0,[[],["virtaddr",3]]],[11,"clone","","",1,[[],["physaddr",3]]],[11,"clone","x86_64::instructions::port","",2,[[],["portreadonly",3]]],[11,"clone","","",3,[[],["portwriteonly",3]]],[11,"clone","","",4,[[],["port",3]]],[11,"clone","x86_64::instructions::random","",5,[[],["rdrand",3]]],[11,"clone","x86_64::registers::control","",8,[[],["cr0flags",3]]],[11,"clone","","",9,[[],["cr3flags",3]]],[11,"clone","","",10,[[],["cr4flags",3]]],[11,"clone","x86_64::registers::model_specific","",19,[[],["eferflags",3]]],[11,"clone","x86_64::registers::rflags","",20,[[],["rflags",3]]],[11,"clone","x86_64::registers::xcontrol","",21,[[],["xcr0flags",3]]],[11,"clone","x86_64::structures::gdt","",22,[[],["segmentselector",3]]],[11,"clone","","",23,[[],["globaldescriptortable",3]]],[11,"clone","","",24,[[],["descriptor",4]]],[11,"clone","","",25,[[],["descriptorflags",3]]],[11,"clone","x86_64::structures::idt","",26,[[],["interruptdescriptortable",3]]],[11,"clone","","",27,[[],["entry",3]]],[11,"clone","","",28,[[],["entryoptions",3]]],[11,"clone","","",30,[[],["interruptstackframevalue",3]]],[11,"clone","","",31,[[],["pagefaulterrorcode",3]]],[11,"clone","x86_64::structures::paging::frame","",32,[[],["physframe",3]]],[11,"clone","","",33,[[],["physframerange",3]]],[11,"clone","","",34,[[],["physframerangeinclusive",3]]],[11,"clone","x86_64::structures::paging::page","",75,[[],["size4kib",4]]],[11,"clone","","",76,[[],["size2mib",4]]],[11,"clone","","",77,[[],["size1gib",4]]],[11,"clone","","",49,[[],["page",3]]],[11,"clone","","",50,[[],["pagerange",3]]],[11,"clone","","",51,[[],["pagerangeinclusive",3]]],[11,"clone","x86_64::structures::paging::page_table","",52,[[],["frameerror",4]]],[11,"clone","","",53,[[],["pagetableentry",3]]],[11,"clone","","",54,[[],["pagetableflags",3]]],[11,"clone","","",55,[[],["pagetable",3]]],[11,"clone","","",56,[[],["pagetableindex",3]]],[11,"clone","","",57,[[],["pageoffset",3]]],[11,"clone","x86_64::structures::tss","",62,[[],["taskstatesegment",3]]],[11,"clone","x86_64::structures","",63,[[],["descriptortablepointer",3]]],[11,"clone","x86_64","",64,[[],["privilegelevel",4]]],[11,"default","x86_64::structures::paging::page_table","",55,[[]]],[11,"read","x86_64::registers::control","Read the current set of CR0 flags.",67,[[],["cr0flags",3]]],[11,"read_raw","","Read the current raw CR0 value.",67,[[],["u64",15]]],[11,"write","","Write CR0 flags.",67,[[["cr0flags",3]]]],[11,"write_raw","","Write raw CR0 flags.",67,[[["u64",15]]]],[11,"update","","Updates CR0 flags.",67,[[]]],[11,"read","","Read the current page fault linear address from the CR2 …",68,[[],["virtaddr",3]]],[11,"read","","Read the current P4 table address from the CR3 register.",69,[[]]],[11,"read_raw","","Read the current P4 table address from the CR3 register",69,[[]]],[11,"read_pcid","","Read the current P4 table address from the CR3 register …",69,[[]]],[11,"write","","Write a new P4 table address into the CR3 register.",69,[[["cr3flags",3],["physframe",3]]]],[11,"write_pcid","","Write a new P4 table address into the CR3 register.",69,[[["physframe",3],["pcid",3]]]],[11,"read","","Read the current set of CR4 flags.",70,[[],["cr4flags",3]]],[11,"read_raw","","Read the current raw CR4 value.",70,[[],["u64",15]]],[11,"write","","Write CR4 flags.",70,[[["cr4flags",3]]]],[11,"write_raw","","Write raw CR4 flags.",70,[[["u64",15]]]],[11,"update","","Updates CR4 flags.",70,[[]]],[11,"read","x86_64::registers::model_specific","Read 64 bits msr register.",11,[[],["u64",15]]],[11,"write","","Write 64 bits to msr register.",11,[[["u64",15]]]],[11,"read","","Read the current EFER flags.",12,[[],["eferflags",3]]],[11,"read_raw","","Read the current raw EFER flags.",12,[[],["u64",15]]],[11,"write","","Write the EFER flags, preserving reserved values.",12,[[["eferflags",3]]]],[11,"write_raw","","Write the EFER flags.",12,[[["u64",15]]]],[11,"update","","Update EFER flags.",12,[[]]],[11,"read","","Read the current FsBase register.",13,[[],["virtaddr",3]]],[11,"write","","Write a given virtual address to the FS.Base register.",13,[[["virtaddr",3]]]],[11,"read","","Read the current GsBase register.",14,[[],["virtaddr",3]]],[11,"write","","Write a given virtual address to the GS.Base register.",14,[[["virtaddr",3]]]],[11,"read","","Read the current KernelGsBase register.",15,[[],["virtaddr",3]]],[11,"write","","Write a given virtual address to the KernelGsBase …",15,[[["virtaddr",3]]]],[11,"read_raw","","Read the Ring 0 and Ring 3 segment bases. The remaining …",16,[[]]],[11,"read","","Read the Ring 0 and Ring 3 segment bases. Returns",16,[[]]],[11,"write_raw","","Write the Ring 0 and Ring 3 segment bases. The remaining …",16,[[["u16",15]]]],[11,"write","","Write the Ring 0 and Ring 3 segment bases. The remaining …",16,[[["segmentselector",3]],[["str",15],["result",4]]]],[11,"read","","Read the current LStar register. This holds the target …",17,[[],["virtaddr",3]]],[11,"write","","Write a given virtual address to the LStar register. This …",17,[[["virtaddr",3]]]],[11,"read","","Read to the SFMask register. The SFMASK register is used …",18,[[],["rflags",3]]],[11,"write","","Write to the SFMask register. The SFMASK register is used …",18,[[["rflags",3]]]],[11,"read","x86_64::registers::xcontrol","Read the current set of XCR0 flags.",71,[[],["xcr0flags",3]]],[11,"read_raw","","Read the current raw XCR0 value.",71,[[],["u64",15]]],[11,"write","","Write XCR0 flags.",71,[[["xcr0flags",3]]]],[11,"write_raw","","Write raw XCR0 flags.",71,[[["u64",15]]]],[11,"new","x86_64::structures::paging::mapper","Creates a new <code>MappedPageTable</code> that uses the passed …",72,[[["pagetable",3]]]],[11,"level_4_table","","Returns a mutable reference to the wrapped level 4 …",72,[[],["pagetable",3]]],[11,"new","","Creates a new <code>OffsetPageTable</code> that uses the given offset …",73,[[["pagetable",3],["virtaddr",3]]]],[11,"level_4_table","","Returns a mutable reference to the wrapped level 4 …",73,[[],["pagetable",3]]],[11,"new","","Creates a new RecursivePageTable from the passed level 4 …",74,[[["pagetable",3]],[["result",4],["invalidpagetable",4]]]],[11,"new_unchecked","","Creates a new RecursivePageTable without performing any …",74,[[["pagetable",3],["pagetableindex",3]]]],[11,"level_4_table","","Returns a mutable reference to the wrapped level 4 …",74,[[],["pagetable",3]]]],"p":[[3,"VirtAddr"],[3,"PhysAddr"],[3,"PortReadOnly"],[3,"PortWriteOnly"],[3,"Port"],[3,"RdRand"],[4,"InvPicdCommand"],[3,"Pcid"],[3,"Cr0Flags"],[3,"Cr3Flags"],[3,"Cr4Flags"],[3,"Msr"],[3,"Efer"],[3,"FsBase"],[3,"GsBase"],[3,"KernelGsBase"],[3,"Star"],[3,"LStar"],[3,"SFMask"],[3,"EferFlags"],[3,"RFlags"],[3,"XCr0Flags"],[3,"SegmentSelector"],[3,"GlobalDescriptorTable"],[4,"Descriptor"],[3,"DescriptorFlags"],[3,"InterruptDescriptorTable"],[3,"Entry"],[3,"EntryOptions"],[3,"InterruptStackFrame"],[3,"InterruptStackFrameValue"],[3,"PageFaultErrorCode"],[3,"PhysFrame"],[3,"PhysFrameRange"],[3,"PhysFrameRangeInclusive"],[8,"PageTableFrameMapping"],[4,"InvalidPageTable"],[8,"Translate"],[4,"TranslateResult"],[13,"Mapped"],[4,"MappedFrame"],[8,"Mapper"],[3,"MapperFlush"],[3,"MapperFlushAll"],[4,"MapToError"],[4,"UnmapError"],[4,"FlagUpdateError"],[4,"TranslateError"],[8,"PageSize"],[3,"Page"],[3,"PageRange"],[3,"PageRangeInclusive"],[4,"FrameError"],[3,"PageTableEntry"],[3,"PageTableFlags"],[3,"PageTable"],[3,"PageTableIndex"],[3,"PageOffset"],[8,"FrameAllocator"],[8,"FrameDeallocator"],[8,"PortRead"],[8,"PortWrite"],[3,"TaskStateSegment"],[3,"DescriptorTablePointer"],[4,"PrivilegeLevel"],[3,"VirtAddrNotValid"],[3,"PhysAddrNotValid"],[3,"Cr0"],[3,"Cr2"],[3,"Cr3"],[3,"Cr4"],[3,"XCr0"],[3,"MappedPageTable"],[3,"OffsetPageTable"],[3,"RecursivePageTable"],[4,"Size4KiB"],[4,"Size2MiB"],[4,"Size1GiB"],[3,"AddressNotAligned"]]},\
"xmas_elf":{"doc":"","i":[[0,"header","xmas_elf","",null,null],[5,"parse_header","xmas_elf::header","",null,[[],[["result",4],["str",15],["header",3]]]],[17,"MAGIC","","",null,null],[3,"Header","","",null,null],[12,"pt1","","",0,null],[12,"pt2","","",0,null],[3,"HeaderPt1","","",null,null],[12,"magic","","",1,null],[12,"class","","",1,null],[12,"data","","",1,null],[12,"version","","",1,null],[12,"os_abi","","",1,null],[12,"abi_version","","",1,null],[12,"padding","","",1,null],[11,"class","","",1,[[],["class",4]]],[11,"data","","",1,[[],["data",4]]],[11,"version","","",1,[[],["version",4]]],[11,"os_abi","","",1,[[],["osabi",4]]],[4,"HeaderPt2","","",null,null],[13,"Header32","","",2,null],[13,"Header64","","",2,null],[11,"size","","",2,[[],["usize",15]]],[11,"type_","","",2,[[],["type_",3]]],[11,"machine","","",2,[[],["machine_",3]]],[11,"version","","",2,[[],["u32",15]]],[11,"header_size","","",2,[[],["u16",15]]],[11,"entry_point","","",2,[[],["u64",15]]],[11,"ph_offset","","",2,[[],["u64",15]]],[11,"sh_offset","","",2,[[],["u64",15]]],[11,"ph_entry_size","","",2,[[],["u16",15]]],[11,"ph_count","","",2,[[],["u16",15]]],[11,"sh_entry_size","","",2,[[],["u16",15]]],[11,"sh_count","","",2,[[],["u16",15]]],[11,"sh_str_index","","",2,[[],["u16",15]]],[3,"HeaderPt2_","","",null,null],[12,"type_","","",3,null],[12,"machine","","",3,null],[12,"version","","",3,null],[12,"entry_point","","",3,null],[12,"ph_offset","","",3,null],[12,"sh_offset","","",3,null],[12,"flags","","",3,null],[12,"header_size","","",3,null],[12,"ph_entry_size","","",3,null],[12,"ph_count","","",3,null],[12,"sh_entry_size","","",3,null],[12,"sh_count","","",3,null],[12,"sh_str_index","","",3,null],[3,"Class_","","",null,null],[11,"as_class","","",4,[[],["class",4]]],[11,"is_none","","",4,[[],["bool",15]]],[4,"Class","","",null,null],[13,"None","","",5,null],[13,"ThirtyTwo","","",5,null],[13,"SixtyFour","","",5,null],[13,"Other","","",5,null],[11,"is_none","","",5,[[],["bool",15]]],[3,"Data_","","",null,null],[11,"as_data","","",6,[[],["data",4]]],[11,"is_none","","",6,[[],["bool",15]]],[4,"Data","","",null,null],[13,"None","","",7,null],[13,"LittleEndian","","",7,null],[13,"BigEndian","","",7,null],[13,"Other","","",7,null],[11,"is_none","","",7,[[],["bool",15]]],[3,"Version_","","",null,null],[11,"as_version","","",8,[[],["version",4]]],[11,"is_none","","",8,[[],["bool",15]]],[4,"Version","","",null,null],[13,"None","","",9,null],[13,"Current","","",9,null],[13,"Other","","",9,null],[11,"is_none","","",9,[[],["bool",15]]],[3,"OsAbi_","","",null,null],[11,"as_os_abi","","",10,[[],["osabi",4]]],[4,"OsAbi","","",null,null],[13,"SystemV","","",11,null],[13,"HpUx","","",11,null],[13,"NetBSD","","",11,null],[13,"Linux","","",11,null],[13,"Solaris","","",11,null],[13,"Aix","","",11,null],[13,"Irix","","",11,null],[13,"FreeBSD","","",11,null],[13,"OpenBSD","","",11,null],[13,"OpenVMS","","",11,null],[13,"Other","","",11,null],[3,"Type_","","",null,null],[12,"0","","",12,null],[11,"as_type","","",12,[[],["type",4]]],[4,"Type","","",null,null],[13,"None","","",13,null],[13,"Relocatable","","",13,null],[13,"Executable","","",13,null],[13,"SharedObject","","",13,null],[13,"Core","","",13,null],[13,"ProcessorSpecific","","",13,null],[3,"Machine_","","",null,null],[11,"as_machine","","",14,[[],["machine",4]]],[4,"Machine","","",null,null],[13,"None","","",15,null],[13,"Sparc","","",15,null],[13,"X86","","",15,null],[13,"Mips","","",15,null],[13,"PowerPC","","",15,null],[13,"Arm","","",15,null],[13,"SuperH","","",15,null],[13,"Ia64","","",15,null],[13,"X86_64","","",15,null],[13,"AArch64","","",15,null],[13,"BPF","","",15,null],[13,"Other","","",15,null],[5,"sanity_check","","",null,[[["elffile",3]],[["str",15],["result",4]]]],[0,"sections","xmas_elf","",null,null],[5,"parse_section_header","xmas_elf::sections","",null,[[["header",3],["u16",15]],[["sectionheader",4],["str",15],["result",4]]]],[3,"SectionIter","","",null,null],[12,"file","","",16,null],[12,"next_index","","",16,null],[17,"SHN_UNDEF","","",null,null],[17,"SHN_LORESERVE","","",null,null],[17,"SHN_LOPROC","","",null,null],[17,"SHN_HIPROC","","",null,null],[17,"SHN_LOOS","","",null,null],[17,"SHN_HIOS","","",null,null],[17,"SHN_ABS","","",null,null],[17,"SHN_COMMON","","",null,null],[17,"SHN_XINDEX","","",null,null],[17,"SHN_HIRESERVE","","",null,null],[4,"SectionHeader","","",null,null],[13,"Sh32","","",17,null],[13,"Sh64","","",17,null],[11,"get_name","","",17,[[["elffile",3]],[["str",15],["str",15],["result",4]]]],[11,"get_type","","",17,[[],[["result",4],["shtype",4],["str",15]]]],[11,"get_data","","",17,[[["elffile",3]],[["sectiondata",4],["str",15],["result",4]]]],[11,"raw_data","","",17,[[["elffile",3]]]],[11,"flags","","",17,[[],["u64",15]]],[11,"name","","",17,[[],["u32",15]]],[11,"address","","",17,[[],["u64",15]]],[11,"offset","","",17,[[],["u64",15]]],[11,"size","","",17,[[],["u64",15]]],[11,"type_","","",17,[[],["shtype_",3]]],[11,"link","","",17,[[],["u32",15]]],[11,"info","","",17,[[],["u32",15]]],[3,"SectionHeader_","","",null,null],[3,"ShType_","","",null,null],[4,"ShType","","",null,null],[13,"Null","","",18,null],[13,"ProgBits","","",18,null],[13,"SymTab","","",18,null],[13,"StrTab","","",18,null],[13,"Rela","","",18,null],[13,"Hash","","",18,null],[13,"Dynamic","","",18,null],[13,"Note","","",18,null],[13,"NoBits","","",18,null],[13,"Rel","","",18,null],[13,"ShLib","","",18,null],[13,"DynSym","","",18,null],[13,"InitArray","","",18,null],[13,"FiniArray","","",18,null],[13,"PreInitArray","","",18,null],[13,"Group","","",18,null],[13,"SymTabShIndex","","",18,null],[13,"OsSpecific","","",18,null],[13,"ProcessorSpecific","","",18,null],[13,"User","","",18,null],[4,"SectionData","","",null,null],[13,"Empty","","",19,null],[13,"Undefined","","",19,null],[13,"Group","","",19,null],[12,"flags","xmas_elf::sections::SectionData","",20,null],[12,"indicies","","",20,null],[13,"StrArray","xmas_elf::sections","",19,null],[13,"FnArray32","","",19,null],[13,"FnArray64","","",19,null],[13,"SymbolTable32","","",19,null],[13,"SymbolTable64","","",19,null],[13,"DynSymbolTable32","","",19,null],[13,"DynSymbolTable64","","",19,null],[13,"SymTabShIndex","","",19,null],[13,"Note64","","",19,null],[13,"Rela32","","",19,null],[13,"Rela64","","",19,null],[13,"Rel32","","",19,null],[13,"Rel64","","",19,null],[13,"Dynamic32","","",19,null],[13,"Dynamic64","","",19,null],[13,"HashTable","","",19,null],[3,"SectionStrings","","",null,null],[11,"strings","","",19,[[],[["sectionstrings",3],["result",4]]]],[17,"SHT_LOOS","","",null,null],[17,"SHT_HIOS","","",null,null],[17,"SHT_LOPROC","","",null,null],[17,"SHT_HIPROC","","",null,null],[17,"SHT_LOUSER","","",null,null],[17,"SHT_HIUSER","","",null,null],[17,"SHF_WRITE","","",null,null],[17,"SHF_ALLOC","","",null,null],[17,"SHF_EXECINSTR","","",null,null],[17,"SHF_MERGE","","",null,null],[17,"SHF_STRINGS","","",null,null],[17,"SHF_INFO_LINK","","",null,null],[17,"SHF_LINK_ORDER","","",null,null],[17,"SHF_OS_NONCONFORMING","","",null,null],[17,"SHF_GROUP","","",null,null],[17,"SHF_TLS","","",null,null],[17,"SHF_COMPRESSED","","",null,null],[17,"SHF_MASKOS","","",null,null],[17,"SHF_MASKPROC","","",null,null],[3,"CompressionHeader64","","",null,null],[3,"CompressionHeader32","","",null,null],[3,"CompressionType_","","",null,null],[4,"CompressionType","","",null,null],[13,"Zlib","","",21,null],[13,"OsSpecific","","",21,null],[13,"ProcessorSpecific","","",21,null],[17,"COMPRESS_LOOS","","",null,null],[17,"COMPRESS_HIOS","","",null,null],[17,"COMPRESS_LOPROC","","",null,null],[17,"COMPRESS_HIPROC","","",null,null],[17,"GRP_COMDAT","","",null,null],[17,"GRP_MASKOS","","",null,null],[17,"GRP_MASKPROC","","",null,null],[3,"Rela","","",null,null],[3,"Rel","","",null,null],[11,"get_offset","","",22,[[],["u32",15]]],[11,"get_addend","","",22,[[],["u32",15]]],[11,"get_symbol_table_index","","",22,[[],["u32",15]]],[11,"get_type","","",22,[[],["u8",15]]],[11,"get_offset","","",22,[[],["u64",15]]],[11,"get_addend","","",22,[[],["u64",15]]],[11,"get_symbol_table_index","","",22,[[],["u32",15]]],[11,"get_type","","",22,[[],["u32",15]]],[11,"get_offset","","",23,[[],["u32",15]]],[11,"get_symbol_table_index","","",23,[[],["u32",15]]],[11,"get_type","","",23,[[],["u8",15]]],[11,"get_offset","","",23,[[],["u64",15]]],[11,"get_symbol_table_index","","",23,[[],["u32",15]]],[11,"get_type","","",23,[[],["u32",15]]],[3,"NoteHeader","","",null,null],[11,"type_","","",24,[[],["u32",15]]],[11,"name","","",24,[[],["str",15]]],[11,"desc","","",24,[[]]],[5,"sanity_check","","",null,[[["sectionheader",4],["elffile",3]],[["str",15],["result",4]]]],[0,"program","xmas_elf","",null,null],[5,"parse_program_header","xmas_elf::program","",null,[[["header",3],["u16",15]],[["programheader",4],["str",15],["result",4]]]],[3,"ProgramIter","","",null,null],[12,"file","","",25,null],[12,"next_index","","",25,null],[4,"ProgramHeader","","",null,null],[13,"Ph32","","",26,null],[13,"Ph64","","",26,null],[3,"ProgramHeader32","","",null,null],[12,"type_","","",27,null],[12,"offset","","",27,null],[12,"virtual_addr","","",27,null],[12,"physical_addr","","",27,null],[12,"file_size","","",27,null],[12,"mem_size","","",27,null],[12,"flags","","",27,null],[12,"align","","",27,null],[3,"ProgramHeader64","","",null,null],[12,"type_","","",28,null],[12,"flags","","",28,null],[12,"offset","","",28,null],[12,"virtual_addr","","",28,null],[12,"physical_addr","","",28,null],[12,"file_size","","",28,null],[12,"mem_size","","",28,null],[12,"align","","",28,null],[11,"get_type","","",26,[[],[["result",4],["type",4],["str",15]]]],[11,"get_data","","",26,[[["elffile",3]],[["result",4],["segmentdata",4],["str",15]]]],[11,"align","","",26,[[],["u64",15]]],[11,"file_size","","",26,[[],["u64",15]]],[11,"mem_size","","",26,[[],["u64",15]]],[11,"offset","","",26,[[],["u64",15]]],[11,"physical_addr","","",26,[[],["u64",15]]],[11,"virtual_addr","","",26,[[],["u64",15]]],[11,"flags","","",26,[[],["flags",3]]],[11,"get_type","","",27,[[],[["result",4],["type",4],["str",15]]]],[11,"get_data","","",27,[[["elffile",3]],[["result",4],["segmentdata",4],["str",15]]]],[11,"raw_data","","",27,[[["elffile",3]]]],[11,"get_type","","",28,[[],[["result",4],["type",4],["str",15]]]],[11,"get_data","","",28,[[["elffile",3]],[["result",4],["segmentdata",4],["str",15]]]],[11,"raw_data","","",28,[[["elffile",3]]]],[3,"Flags","","",null,null],[12,"0","","",29,null],[11,"is_execute","","",29,[[],["bool",15]]],[11,"is_write","","",29,[[],["bool",15]]],[11,"is_read","","",29,[[],["bool",15]]],[3,"Type_","","",null,null],[4,"Type","","",null,null],[13,"Null","","",30,null],[13,"Load","","",30,null],[13,"Dynamic","","",30,null],[13,"Interp","","",30,null],[13,"Note","","",30,null],[13,"ShLib","","",30,null],[13,"Phdr","","",30,null],[13,"Tls","","",30,null],[13,"GnuRelro","","",30,null],[13,"OsSpecific","","",30,null],[13,"ProcessorSpecific","","",30,null],[4,"SegmentData","","",null,null],[13,"Empty","","",31,null],[13,"Undefined","","",31,null],[13,"Dynamic32","","",31,null],[13,"Dynamic64","","",31,null],[13,"Note64","","",31,null],[17,"TYPE_LOOS","","",null,null],[17,"TYPE_HIOS","","",null,null],[17,"TYPE_LOPROC","","",null,null],[17,"TYPE_HIPROC","","",null,null],[17,"TYPE_GNU_RELRO","","",null,null],[17,"FLAG_X","","",null,null],[17,"FLAG_W","","",null,null],[17,"FLAG_R","","",null,null],[17,"FLAG_MASKOS","","",null,null],[17,"FLAG_MASKPROC","","",null,null],[5,"sanity_check","","",null,[[["programheader",4],["elffile",3]],[["str",15],["result",4]]]],[0,"symbol_table","xmas_elf","",null,null],[3,"Entry32","xmas_elf::symbol_table","",null,null],[3,"Entry64","","",null,null],[3,"DynEntry32","","",null,null],[3,"DynEntry64","","",null,null],[8,"Entry","","",null,null],[10,"name","","",32,[[],["u32",15]]],[10,"info","","",32,[[],["u8",15]]],[10,"other","","",32,[[],["visibility_",3]]],[10,"shndx","","",32,[[],["u16",15]]],[10,"value","","",32,[[],["u64",15]]],[10,"size","","",32,[[],["u64",15]]],[10,"get_name","","",32,[[["elffile",3]],[["str",15],["str",15],["result",4]]]],[11,"get_other","","",32,[[],["visibility",4]]],[11,"get_binding","","",32,[[],[["result",4],["str",15],["binding",4]]]],[11,"get_type","","",32,[[],[["type",4],["str",15],["result",4]]]],[11,"get_section_header","","",32,[[["usize",15],["elffile",3]],[["result",4],["str",15],["sectionheader",4]]]],[3,"Visibility_","","",null,null],[4,"Visibility","","",null,null],[13,"Default","","",33,null],[13,"Internal","","",33,null],[13,"Hidden","","",33,null],[13,"Protected","","",33,null],[11,"as_visibility","","",34,[[],["visibility",4]]],[3,"Binding_","","",null,null],[4,"Binding","","",null,null],[13,"Local","","",35,null],[13,"Global","","",35,null],[13,"Weak","","",35,null],[13,"OsSpecific","","",35,null],[13,"ProcessorSpecific","","",35,null],[11,"as_binding","","",36,[[],[["result",4],["str",15],["binding",4]]]],[3,"Type_","","",null,null],[4,"Type","","",null,null],[13,"NoType","","",37,null],[13,"Object","","",37,null],[13,"Func","","",37,null],[13,"Section","","",37,null],[13,"File","","",37,null],[13,"Common","","",37,null],[13,"Tls","","",37,null],[13,"OsSpecific","","",37,null],[13,"ProcessorSpecific","","",37,null],[11,"as_type","","",38,[[],[["type",4],["str",15],["result",4]]]],[0,"dynamic","xmas_elf","",null,null],[3,"Dynamic","xmas_elf::dynamic","",null,null],[3,"Tag_","","",null,null],[4,"Tag","","",null,null],[13,"Null","","",39,null],[13,"Needed","","",39,null],[13,"PltRelSize","","",39,null],[13,"Pltgot","","",39,null],[13,"Hash","","",39,null],[13,"StrTab","","",39,null],[13,"SymTab","","",39,null],[13,"Rela","","",39,null],[13,"RelaSize","","",39,null],[13,"RelaEnt","","",39,null],[13,"StrSize","","",39,null],[13,"SymEnt","","",39,null],[13,"Init","","",39,null],[13,"Fini","","",39,null],[13,"SoName","","",39,null],[13,"RPath","","",39,null],[13,"Symbolic","","",39,null],[13,"Rel","","",39,null],[13,"RelSize","","",39,null],[13,"RelEnt","","",39,null],[13,"PltRel","","",39,null],[13,"Debug","","",39,null],[13,"TextRel","","",39,null],[13,"JmpRel","","",39,null],[13,"BindNow","","",39,null],[13,"InitArray","","",39,null],[13,"FiniArray","","",39,null],[13,"InitArraySize","","",39,null],[13,"FiniArraySize","","",39,null],[13,"RunPath","","",39,null],[13,"Flags","","",39,null],[13,"PreInitArray","","",39,null],[13,"PreInitArraySize","","",39,null],[13,"SymTabShIndex","","",39,null],[13,"Flags1","","",39,null],[13,"OsSpecific","","",39,null],[13,"ProcessorSpecific","","",39,null],[11,"get_tag","","",40,[[],[["result",4],["tag",4],["str",15]]]],[11,"get_val","","",40,[[],[["result",4],["p32",6],["str",15]]]],[11,"get_ptr","","",40,[[],[["result",4],["p32",6],["str",15]]]],[11,"get_tag","","",40,[[],[["str",15],["result",4],["tag",4]]]],[11,"get_val","","",40,[[],[["result",4],["p64",6],["str",15]]]],[11,"get_ptr","","",40,[[],[["result",4],["p64",6],["str",15]]]],[17,"FLAG_1_NOW","","",null,null],[17,"FLAG_1_GLOBAL","","",null,null],[17,"FLAG_1_GROUP","","",null,null],[17,"FLAG_1_NODELETE","","",null,null],[17,"FLAG_1_LOADFLTR","","",null,null],[17,"FLAG_1_INITFIRST","","",null,null],[17,"FLAG_1_NOOPEN","","",null,null],[17,"FLAG_1_ORIGIN","","",null,null],[17,"FLAG_1_DIRECT","","",null,null],[17,"FLAG_1_TRANS","","",null,null],[17,"FLAG_1_INTERPOSE","","",null,null],[17,"FLAG_1_NODEFLIB","","",null,null],[17,"FLAG_1_NODUMP","","",null,null],[17,"FLAG_1_CONFALT","","",null,null],[17,"FLAG_1_ENDFILTEE","","",null,null],[17,"FLAG_1_DISPRELDNE","","",null,null],[17,"FLAG_1_DISPRELPND","","",null,null],[17,"FLAG_1_NODIRECT","","",null,null],[17,"FLAG_1_IGNMULDEF","","",null,null],[17,"FLAG_1_NOKSYMS","","",null,null],[17,"FLAG_1_NOHDR","","",null,null],[17,"FLAG_1_EDITED","","",null,null],[17,"FLAG_1_NORELOC","","",null,null],[17,"FLAG_1_SYMINTPOSE","","",null,null],[17,"FLAG_1_GLOBAUDIT","","",null,null],[17,"FLAG_1_SINGLETON","","",null,null],[17,"FLAG_1_STUB","","",null,null],[17,"FLAG_1_PIE","","",null,null],[0,"hash","xmas_elf","",null,null],[3,"HashTable","xmas_elf::hash","",null,null],[5,"hash","","",null,[[["str",15]],["u32",15]]],[11,"get_bucket","","",41,[[["u32",15]],["u32",15]]],[11,"get_chain","","",41,[[["u32",15]],["u32",15]]],[11,"lookup","","",41,[[["str",15]],["entry",8]]],[6,"P32","xmas_elf","",null,null],[6,"P64","","",null,null],[3,"ElfFile","","",null,null],[12,"input","","",42,null],[12,"header","","",42,null],[11,"new","","",42,[[],[["result",4],["elffile",3],["str",15]]]],[11,"section_header","","",42,[[["u16",15]],[["sectionheader",4],["str",15],["result",4]]]],[11,"section_iter","","",42,[[],["sectioniter",3]]],[11,"program_header","","",42,[[["u16",15]],[["programheader",4],["str",15],["result",4]]]],[11,"program_iter","","",42,[[],["programiter",3]]],[11,"get_shstr","","",42,[[["u32",15]],[["str",15],["str",15],["result",4]]]],[11,"get_string","","",42,[[["u32",15]],[["str",15],["str",15],["result",4]]]],[11,"get_dyn_string","","",42,[[["u32",15]],[["str",15],["str",15],["result",4]]]],[11,"find_section_by_name","","",42,[[["str",15]],[["sectionheader",4],["option",4]]]],[8,"Extensions","","A trait for things that are common ELF conventions but …",null,null],[10,"get_gnu_buildid","","Parse and return the value of the .note.gnu.build-id …",43,[[],["option",4]]],[10,"get_gnu_debuglink","","Parse and return the value of the .gnu_debuglink section, …",43,[[],["option",4]]],[11,"borrow","xmas_elf::header","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"borrow","xmas_elf::sections","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"into_iter","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"borrow","xmas_elf::program","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"into_iter","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"borrow","xmas_elf::symbol_table","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"borrow","xmas_elf::dynamic","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"borrow","xmas_elf::hash","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"borrow","xmas_elf","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"get_name","xmas_elf::symbol_table","",51,[[["elffile",3]],[["str",15],["str",15],["result",4]]]],[11,"name","","",51,[[],["u32",15]]],[11,"info","","",51,[[],["u8",15]]],[11,"other","","",51,[[],["visibility_",3]]],[11,"shndx","","",51,[[],["u16",15]]],[11,"value","","",51,[[],["u64",15]]],[11,"size","","",51,[[],["u64",15]]],[11,"get_name","","",52,[[["elffile",3]],[["str",15],["str",15],["result",4]]]],[11,"name","","",52,[[],["u32",15]]],[11,"info","","",52,[[],["u8",15]]],[11,"other","","",52,[[],["visibility_",3]]],[11,"shndx","","",52,[[],["u16",15]]],[11,"value","","",52,[[],["u64",15]]],[11,"size","","",52,[[],["u64",15]]],[11,"get_name","","",53,[[["elffile",3]],[["str",15],["str",15],["result",4]]]],[11,"name","","",53,[[],["u32",15]]],[11,"info","","",53,[[],["u8",15]]],[11,"other","","",53,[[],["visibility_",3]]],[11,"shndx","","",53,[[],["u16",15]]],[11,"value","","",53,[[],["u64",15]]],[11,"size","","",53,[[],["u64",15]]],[11,"get_name","","",54,[[["elffile",3]],[["str",15],["str",15],["result",4]]]],[11,"name","","",54,[[],["u32",15]]],[11,"info","","",54,[[],["u8",15]]],[11,"other","","",54,[[],["visibility_",3]]],[11,"shndx","","",54,[[],["u16",15]]],[11,"value","","",54,[[],["u64",15]]],[11,"size","","",54,[[],["u64",15]]],[11,"get_gnu_buildid","xmas_elf","",42,[[],["option",4]]],[11,"get_gnu_debuglink","","",42,[[],["option",4]]],[11,"fmt","xmas_elf::header","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","xmas_elf::sections","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","xmas_elf::program","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","xmas_elf::symbol_table","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","xmas_elf::dynamic","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","xmas_elf::hash","",41,[[["formatter",3]],["result",6]]],[11,"fmt","xmas_elf","",42,[[["formatter",3]],["result",6]]],[11,"fmt","xmas_elf::header","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","xmas_elf::sections","",17,[[["formatter",3]],["result",6]]],[11,"fmt","xmas_elf::program","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","xmas_elf::symbol_table","",32,[[["formatter",3]],["result",6]]],[11,"eq","xmas_elf::header","",4,[[["class_",3]],["bool",15]]],[11,"ne","","",4,[[["class_",3]],["bool",15]]],[11,"eq","","",5,[[["class",4]],["bool",15]]],[11,"ne","","",5,[[["class",4]],["bool",15]]],[11,"eq","","",7,[[["data",4]],["bool",15]]],[11,"ne","","",7,[[["data",4]],["bool",15]]],[11,"eq","","",9,[[["version",4]],["bool",15]]],[11,"ne","","",9,[[["version",4]],["bool",15]]],[11,"eq","","",11,[[["osabi",4]],["bool",15]]],[11,"ne","","",11,[[["osabi",4]],["bool",15]]],[11,"eq","","",13,[[["type",4]],["bool",15]]],[11,"ne","","",13,[[["type",4]],["bool",15]]],[11,"eq","","",15,[[["machine",4]],["bool",15]]],[11,"ne","","",15,[[["machine",4]],["bool",15]]],[11,"eq","xmas_elf::sections","",18,[[["shtype",4]],["bool",15]]],[11,"ne","","",18,[[["shtype",4]],["bool",15]]],[11,"eq","","",21,[[["compressiontype",4]],["bool",15]]],[11,"ne","","",21,[[["compressiontype",4]],["bool",15]]],[11,"eq","xmas_elf::program","",29,[[["flags",3]],["bool",15]]],[11,"ne","","",29,[[["flags",3]],["bool",15]]],[11,"eq","","",30,[[["type",4]],["bool",15]]],[11,"ne","","",30,[[["type",4]],["bool",15]]],[11,"eq","xmas_elf::symbol_table","",35,[[["binding",4]],["bool",15]]],[11,"ne","","",35,[[["binding",4]],["bool",15]]],[11,"eq","","",37,[[["type",4]],["bool",15]]],[11,"ne","","",37,[[["type",4]],["bool",15]]],[11,"eq","xmas_elf::dynamic","",39,[[["tag",4]],["bool",15]]],[11,"ne","","",39,[[["tag",4]],["bool",15]]],[11,"fmt","xmas_elf::program","",29,[[["formatter",3]],["result",6]]],[11,"next","xmas_elf::sections","",16,[[],["option",4]]],[11,"next","","",46,[[],[["str",15],["option",4]]]],[11,"next","xmas_elf::program","",25,[[],["option",4]]],[11,"clone","xmas_elf::header","",0,[[],["header",3]]],[11,"clone","","",1,[[],["headerpt1",3]]],[11,"clone","","",2,[[],["headerpt2",4]]],[11,"clone","","",4,[[],["class_",3]]],[11,"clone","","",5,[[],["class",4]]],[11,"clone","","",6,[[],["data_",3]]],[11,"clone","","",7,[[],["data",4]]],[11,"clone","","",8,[[],["version_",3]]],[11,"clone","","",9,[[],["version",4]]],[11,"clone","","",10,[[],["osabi_",3]]],[11,"clone","","",11,[[],["osabi",4]]],[11,"clone","","",12,[[],["type_",3]]],[11,"clone","","",13,[[],["type",4]]],[11,"clone","","",14,[[],["machine_",3]]],[11,"clone","","",15,[[],["machine",4]]],[11,"clone","xmas_elf::sections","",17,[[],["sectionheader",4]]],[11,"clone","","",45,[[],["shtype_",3]]],[11,"clone","","",18,[[],["shtype",4]]],[11,"clone","","",47,[[],["compressionheader64",3]]],[11,"clone","","",48,[[],["compressionheader32",3]]],[11,"clone","","",49,[[],["compressiontype_",3]]],[11,"clone","","",21,[[],["compressiontype",4]]],[11,"clone","","",24,[[],["noteheader",3]]],[11,"clone","xmas_elf::program","",26,[[],["programheader",4]]],[11,"clone","","",27,[[],["programheader32",3]]],[11,"clone","","",28,[[],["programheader64",3]]],[11,"clone","","",29,[[],["flags",3]]],[11,"clone","","",50,[[],["type_",3]]],[11,"clone","","",30,[[],["type",4]]],[11,"clone","xmas_elf::symbol_table","",34,[[],["visibility_",3]]],[11,"clone","","",33,[[],["visibility",4]]],[11,"clone","","",36,[[],["binding_",3]]],[11,"clone","","",35,[[],["binding",4]]],[11,"clone","","",38,[[],["type_",3]]],[11,"clone","","",37,[[],["type",4]]],[11,"clone","xmas_elf::dynamic","",55,[[],["tag_",3]]],[11,"clone","xmas_elf::hash","",41,[[],["hashtable",3]]],[11,"default","xmas_elf::program","",27,[[],["programheader32",3]]],[11,"default","","",28,[[],["programheader64",3]]],[11,"default","","",29,[[],["flags",3]]],[11,"default","","",50,[[],["type_",3]]]],"p":[[3,"Header"],[3,"HeaderPt1"],[4,"HeaderPt2"],[3,"HeaderPt2_"],[3,"Class_"],[4,"Class"],[3,"Data_"],[4,"Data"],[3,"Version_"],[4,"Version"],[3,"OsAbi_"],[4,"OsAbi"],[3,"Type_"],[4,"Type"],[3,"Machine_"],[4,"Machine"],[3,"SectionIter"],[4,"SectionHeader"],[4,"ShType"],[4,"SectionData"],[13,"Group"],[4,"CompressionType"],[3,"Rela"],[3,"Rel"],[3,"NoteHeader"],[3,"ProgramIter"],[4,"ProgramHeader"],[3,"ProgramHeader32"],[3,"ProgramHeader64"],[3,"Flags"],[4,"Type"],[4,"SegmentData"],[8,"Entry"],[4,"Visibility"],[3,"Visibility_"],[4,"Binding"],[3,"Binding_"],[4,"Type"],[3,"Type_"],[4,"Tag"],[3,"Dynamic"],[3,"HashTable"],[3,"ElfFile"],[8,"Extensions"],[3,"SectionHeader_"],[3,"ShType_"],[3,"SectionStrings"],[3,"CompressionHeader64"],[3,"CompressionHeader32"],[3,"CompressionType_"],[3,"Type_"],[3,"Entry32"],[3,"Entry64"],[3,"DynEntry32"],[3,"DynEntry64"],[3,"Tag_"]]},\
"zero":{"doc":"Functions for reading binary data into Rust data …","i":[[5,"read","zero","Reads a single <code>T</code> from <code>input</code>.",null,[[]]],[5,"read_array","","Read an array of <code>T</code>s from input.",null,[[]]],[5,"read_str","","Read a string from <code>input</code>. The string must be a …",null,[[],["str",15]]],[5,"read_strs_to_null","","Returns an iterator which will return a sequence of …",null,[[],["strreaderiterator",3]]],[8,"Pod","","Implementing this trait means that the concrete type is …",null,null],[5,"read_unsafe","","Reads a <code>T</code> from <code>input</code> with no checks.",null,[[]]],[5,"read_array_unsafe","","Reads an array of <code>T</code>s from <code>input</code> with no checks.",null,[[]]],[5,"read_str_unsafe","","Reads a null-terminated string from <code>input</code> with no checks.",null,[[],["str",15]]],[3,"StrReaderIterator","","Iterates over <code>self.data</code>, yielding strings …",null,null],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"into_iter","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"next","","",0,[[],[["option",4],["str",15]]]],[11,"size_hint","","",0,[[]]],[11,"clone","","",0,[[],["strreaderiterator",3]]]],"p":[[3,"StrReaderIterator"]]},\
"zircon_object":{"doc":"Zircon kernel objects","i":[[0,"debuglog","zircon_object","Objects for Kernel Debuglog.",null,null],[3,"DebugLog","zircon_object::debuglog","Debuglog - Kernel debuglog",null,null],[11,"create","","Create a new <code>DebugLog</code>.",0,[[["u32",15]],["arc",3]]],[11,"read","","Read a log, return the actual read size.",0,[[],["usize",15]]],[11,"write","","Write a log.",0,[[["u32",15],["u64",15],["severity",4],["str",15]]]],[4,"Severity","","Log entry severity. Used for coarse filtering of log …",null,null],[13,"Trace","","",1,null],[13,"Debug","","",1,null],[13,"Info","","",1,null],[13,"Warning","","",1,null],[13,"Error","","",1,null],[13,"Fatal","","",1,null],[17,"DLOG_MAX_LEN","","Max length of Dlog read buffer.",null,null],[0,"dev","zircon_object","Objects for Device Drivers.",null,null],[0,"pci_init_args","zircon_object::dev","<code>sys_pci_init</code> args.",null,null],[3,"PciIrqSwizzleLut","zircon_object::dev::pci_init_args","",null,null],[3,"PciInitArgsIrqs","","",null,null],[12,"global_irq","","",2,null],[12,"level_triggered","","",2,null],[12,"active_high","","",2,null],[12,"padding1","","",2,null],[3,"PciInitArgsHeader","","",null,null],[12,"dev_pin_to_global_irq","","",3,null],[12,"num_irqs","","",3,null],[12,"irqs","","",3,null],[12,"addr_window_count","","",3,null],[3,"PciInitArgsAddrWindows","","",null,null],[12,"base","","",4,null],[12,"size","","",4,null],[12,"bus_start","","",4,null],[12,"bus_end","","",4,null],[12,"cfg_space_type","","",4,null],[12,"has_ecam","","",4,null],[12,"padding1","","",4,null],[17,"PCI_INIT_ARG_MAX_ECAM_WINDOWS","","",null,null],[17,"PCI_INIT_ARG_MAX_SIZE","","",null,null],[3,"BusTransactionInitiator","zircon_object::dev","Bus Transaction Initiator.",null,null],[3,"BtiInfo","","Information of BTI.",null,null],[3,"Interrupt","","Interrupts - Usermode I/O interrupt delivery.",null,null],[3,"InterruptFlags","","Bits for Interrupt.flags.",null,null],[3,"InterruptOptions","","Interrupt bind flags.",null,null],[3,"Iommu","","Iommu refers to DummyIommu in zircon.",null,null],[3,"IommuPerms","","IOMMU permission flags.",null,null],[3,"MmioPcieAddressProvider","","Systems that have memory mapped Config Spaces.",null,null],[3,"PCIeBusDriver","","PCIE Bus Driver.",null,null],[3,"PcieDeviceInfo","","Info returned to dev manager for PCIe devices when …",null,null],[12,"vendor_id","","",5,null],[12,"device_id","","",5,null],[12,"base_class","","",5,null],[12,"sub_class","","",5,null],[12,"program_interface","","",5,null],[12,"revision_id","","",5,null],[12,"bus_id","","",5,null],[12,"dev_id","","",5,null],[12,"func_id","","",5,null],[3,"PcieDeviceKObject","","PCIE Device Entity.",null,null],[3,"PioPcieAddressProvider","","Systems that have PIO mapped Config Spaces.",null,null],[4,"PcieIrqMode","","Enumeration which defines the IRQ modes a PCIe device may …",null,null],[13,"Disabled","","All IRQs are disabled.  0 total IRQs are supported in …",6,null],[13,"Legacy","","Devices may support up to 1 legacy IRQ in total.  …",6,null],[13,"Msi","","Devices may support up to 32 MSI IRQs in total.  IRQs may …",6,null],[13,"MsiX","","Devices may support up to 2048 MSI-X IRQs in total.  IRQs …",6,null],[13,"Count","","",6,null],[5,"pio_config_read","","",null,[[["usize",15],["u8",15]],[["u32",15],["zxresult",6]]]],[5,"pio_config_write","","",null,[[["u32",15],["usize",15],["u8",15]],["zxresult",6]]],[4,"PciAddrSpace","","Type of PCI address space.",null,null],[13,"MMIO","","Memory mapping I/O.",7,null],[13,"PIO","","Port I/O.",7,null],[3,"PciEcamRegion","","ECAM Region.",null,null],[12,"phys_base","","Physical address of the memory mapped config region.",8,null],[12,"size","","Size (in bytes) of the memory mapped config region.",8,null],[12,"bus_start","","Inclusive ID of the first bus controlled by this region.",8,null],[12,"bus_end","","Inclusive ID of the last bus controlled by this region.",8,null],[3,"MappedEcamRegion","","Mapped ECAM Region.",null,null],[17,"PCI_MAX_DEVICES_PER_BUS","","",null,null],[17,"PCI_MAX_FUNCTIONS_PER_DEVICE","","",null,null],[17,"PCI_MAX_LEGACY_IRQ_PINS","","",null,null],[17,"PCI_MAX_FUNCTIONS_PER_BUS","","",null,null],[17,"PCI_MAX_IRQS","","",null,null],[17,"PCI_NO_IRQ_MAPPING","","",null,null],[17,"PCIE_PIO_ADDR_SPACE_MASK","","",null,null],[17,"PCIE_MAX_BUSSES","","",null,null],[17,"PCIE_ECAM_BYTES_PER_BUS","","",null,null],[17,"PCIE_INVALID_VENDOR_ID","","",null,null],[17,"PCI_CFG_SPACE_TYPE_PIO","","",null,null],[17,"PCI_CFG_SPACE_TYPE_MMIO","","",null,null],[17,"PCIE_IRQRET_MASK","","",null,null],[17,"PCIE_MAX_MSI_IRQS","","",null,null],[3,"PinnedMemoryToken","","Pinned Memory Token.",null,null],[4,"ResourceKind","","ResourceKind definition from …",null,null],[13,"MMIO","","",9,null],[13,"IRQ","","",9,null],[13,"IOPORT","","",9,null],[13,"HYPERVISOR","","",9,null],[13,"ROOT","","",9,null],[13,"VMEX","","",9,null],[13,"SMC","","",9,null],[13,"COUNT","","",9,null],[3,"ResourceFlags","","Bits for Resource.flags.",null,null],[3,"Resource","","Address space rights and accounting.",null,null],[3,"ResourceInfo","","Information of a resource.",null,null],[0,"ipc","zircon_object","Objects for IPC.",null,null],[3,"Channel","zircon_object::ipc","Bidirectional interprocess communication",null,null],[3,"MessagePacket","","The message transferred in the channel. See Channel for …",null,null],[12,"data","","The data carried by the message packet",10,null],[12,"handles","","See Channel for details.",10,null],[3,"Fifo","","First-In First-Out inter-process queue.",null,null],[3,"Socket","","Bidirectional streaming IPC transport.",null,null],[3,"SocketFlags","","Signals that waitable kernel objects expose to …",null,null],[3,"SocketInfo","","The information of a socket",null,null],[0,"object","zircon_object","Kernel object basis.",null,null],[6,"HandleValue","zircon_object::object","The value refers to a Handle in user space.",null,null],[17,"INVALID_HANDLE","","Invalid handle value.",null,null],[3,"Handle","","A Handle is how a specific process refers to a specific …",null,null],[12,"object","","The object referred to by the handle.",11,null],[12,"rights","","The handle’s associated rights.",11,null],[3,"HandleBasicInfo","","Information about a handle and the object it refers to.",null,null],[5,"obj_type","","Get an object’s type.",null,[[["arc",3]],["u32",15]]],[3,"HandleInfo","","Information about a handle itself, including its …",null,null],[12,"handle","","The handle’s value in user space.",12,null],[3,"Rights","","Rights are associated with handles and convey privileges …",null,null],[3,"Signal","","Signals that waitable kernel objects expose to …",null,null],[8,"KernelObject","","Common interface of a kernel object.",null,null],[10,"id","","Get object’s KoID.",13,[[],["koid",6]]],[10,"type_name","","Get the name of the type of the kernel object.",13,[[],["str",15]]],[10,"name","","Get object’s name.",13,[[],["string",3]]],[10,"set_name","","Set object’s name.",13,[[["str",15]]]],[10,"signal","","Get the signal status.",13,[[],["signal",3]]],[10,"signal_set","","Assert <code>signal</code>.",13,[[["signal",3]]]],[10,"signal_clear","","Deassert <code>signal</code>.",13,[[["signal",3]]]],[10,"signal_change","","Change signal status: first <code>clear</code> then <code>set</code> indicated bits.",13,[[["signal",3]]]],[10,"add_signal_callback","","Add <code>callback</code> for signal status changes.",13,[[["signalhandler",6]]]],[11,"get_child","","Attempt to find a child of the object with given KoID.",13,[[["koid",6]],[["arc",3],["zxresult",6]]]],[11,"peer","","Attempt to get the object’s peer.",13,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","If the object is related to another (such as the other …",13,[[],["koid",6]]],[11,"allowed_signals","","Get object’s allowed signals.",13,[[],["signal",3]]],[11,"is","","Returns true if the trait object wraps an object of type …",13,[[],["bool",15]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",13,[[["box",3]],[["box",3],["box",3],["result",4]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",13,[[["rc",3]],[["rc",3],["result",4],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",13,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",13,[[],["option",4]]],[11,"downcast_arc","","Returns an <code>Arc</code>-ed object from an <code>Arc</code>-ed trait object if …",13,[[["arc",3]],[["result",4],["arc",3],["arc",3]]]],[3,"KObjectBase","","The base struct of a kernel object.",null,null],[12,"id","","The object’s KoID.",14,null],[11,"new","","Create a new kernel object base.",14,[[]]],[11,"with_signal","","Create a kernel object base with initial <code>signal</code>.",14,[[["signal",3]]]],[11,"with_name","","Create a kernel object base with <code>name</code>.",14,[[["str",15]]]],[11,"with","","Create a kernel object base with both signal and name",14,[[["signal",3],["str",15]]]],[11,"name","","Get object’s name.",14,[[],["string",3]]],[11,"set_name","","Set object’s name.",14,[[["str",15]]]],[11,"signal","","Get the signal status.",14,[[],["signal",3]]],[11,"signal_change","","Change signal status: first <code>clear</code> then <code>set</code> indicated bits.",14,[[["signal",3]]]],[11,"signal_set","","Assert <code>signal</code>.",14,[[["signal",3]]]],[11,"signal_clear","","Deassert <code>signal</code>.",14,[[["signal",3]]]],[11,"add_signal_callback","","Add <code>callback</code> for signal status changes.",14,[[["signalhandler",6]]]],[11,"wait_signal","","Asynchronous wait for one of <code>signal</code>.",13,[[["arc",3],["signal",3]]]],[11,"send_signal_to_port_async","","Once one of the <code>signal</code> asserted, push a packet with <code>key</code> …",13,[[["arc",3],["u64",15],["signal",3],["arc",3]]]],[5,"wait_signal_many","","Asynchronous wait signal for multiple objects.",null,[[]]],[6,"KoID","","The type of kernel object ID.",null,null],[6,"SignalHandler","","The type of kernel object signal handler.",null,null],[3,"DummyObject","","Empty kernel object. Just for test.",null,null],[11,"new","","Create a new <code>DummyObject</code>.",15,[[],["arc",3]]],[0,"signal","zircon_object","Objects for signaling and waiting.",null,null],[3,"Event","zircon_object::signal","Signalable event for concurrent programming",null,null],[3,"EventPair","","Mutually signalable pair of events for concurrent …",null,null],[3,"Futex","","A primitive for creating userspace synchronization tools.",null,null],[3,"PortPacket","","A packet sent through a port.",null,null],[12,"key","","",16,null],[12,"type_","","",16,null],[12,"status","","",16,null],[12,"data","","",16,null],[4,"PacketType","","The type of a packet.",null,null],[13,"User","","",17,null],[13,"SignalOne","","",17,null],[13,"SignalRep","","",17,null],[13,"GuestBell","","",17,null],[13,"GuestMem","","",17,null],[13,"GuestIo","","",17,null],[13,"GuestVcpu","","",17,null],[13,"Interrupt","","",17,null],[13,"PageRequest","","",17,null],[19,"Payload","","The data carried by a packet",null,null],[6,"PacketUser","","",null,null],[3,"PacketSignal","","",null,null],[12,"trigger","","",18,null],[12,"observed","","",18,null],[12,"count","","",18,null],[12,"timestamp","","",18,null],[12,"_reserved1","","",18,null],[3,"PacketGuestBell","","",null,null],[12,"addr","","",19,null],[12,"_reserved0","","",19,null],[12,"_reserved1","","",19,null],[12,"_reserved2","","",19,null],[3,"PacketGuestMem","","",null,null],[12,"addr","","",20,null],[12,"inst_len","","",20,null],[12,"inst_buf","","",20,null],[12,"default_operand_size","","",20,null],[12,"_reserved","","",20,null],[3,"PacketGuestIo","","",null,null],[12,"port","","",21,null],[12,"access_size","","",21,null],[12,"input","","",21,null],[12,"data","","",21,null],[12,"_reserved0","","",21,null],[12,"_reserved1","","",21,null],[12,"_reserved2","","",21,null],[4,"PacketGuestVcpuType","","",null,null],[13,"VcpuInterrupt","","",22,null],[13,"VcpuStartup","","",22,null],[19,"PacketGuestVcpuData","","",null,null],[3,"PacketGuestVcpuInterrupt","","",null,null],[3,"PacketGuestVcpuStartup","","",null,null],[3,"PacketGuestVcpu","","",null,null],[12,"data","","",23,null],[12,"type_","","",23,null],[12,"_padding1","","",23,null],[12,"_reserved","","",23,null],[3,"PacketInterrupt","","",null,null],[12,"timestamp","","",24,null],[12,"_reserved0","","",24,null],[12,"_reserved1","","",24,null],[12,"_reserved2","","",24,null],[3,"PortPacketRepr","","A high-level representation of a packet sent through a …",null,null],[12,"key","","",25,null],[12,"status","","",25,null],[12,"data","","",25,null],[4,"PayloadRepr","","A high-level representation of a packet payload.",null,null],[13,"User","","",26,null],[13,"Signal","","",26,null],[13,"GuestBell","","",26,null],[13,"GuestMem","","",26,null],[13,"GuestIo","","",26,null],[13,"GuestVcpu","","",26,null],[13,"Interrupt","","",26,null],[3,"Port","","Signaling and mailbox primitive",null,null],[3,"PortOptions","","If you need this port to be bound to an interrupt, pass <strong>…",null,null],[3,"Timer","","An object that may be signaled at some point in the future",null,null],[4,"Slack","","Slack specifies how much a timer or event is allowed to …",null,null],[13,"Center","","slack is centered around deadline",27,null],[13,"Early","","slack interval is (deadline - slack, deadline]",27,null],[13,"Late","","slack interval is [deadline, deadline + slack)",27,null],[0,"task","zircon_object","Objects for Task Management.",null,null],[3,"Exceptionate","zircon_object::task","Kernel-owned exception channel endpoint.",null,null],[3,"ExceptionReport","","Data reported to an exception handler for most exceptions.",null,null],[4,"ExceptionType","","Type of exception",null,null],[13,"General","","",28,null],[13,"FatalPageFault","","",28,null],[13,"UndefinedInstruction","","",28,null],[13,"SoftwareBreakpoint","","",28,null],[13,"HardwareBreakpoint","","",28,null],[13,"UnalignedAccess","","",28,null],[13,"Synth","","",28,null],[13,"ThreadStarting","","",28,null],[13,"ThreadExiting","","",28,null],[13,"PolicyError","","",28,null],[13,"ProcessStarting","","",28,null],[3,"ExceptionObject","","The exception object received from the exception channel.",null,null],[3,"Job","","Control a group of processes",null,null],[3,"JobInfo","","Information of a job.",null,null],[3,"JobPolicy","","Security and resource policies of a job.",null,null],[4,"SetPolicyOptions","","Control the effect in the case of conflict between the …",null,null],[13,"Absolute","","Policy is applied for all conditions in policy or the …",29,null],[13,"Relative","","Policy is applied for the conditions not specifically …",29,null],[3,"BasicPolicy","","The policy type.",null,null],[12,"condition","","Condition when the policy is applied.",30,null],[12,"action","","",30,null],[4,"PolicyCondition","","The condition when a policy is applied.",null,null],[13,"BadHandle","","A process under this job is attempting to issue a syscall …",31,null],[13,"WrongObject","","A process under this job is attempting to issue a syscall …",31,null],[13,"VmarWx","","A process under this job is attempting to map an address …",31,null],[13,"NewAny","","A special condition that stands for all of the above …",31,null],[13,"NewVMO","","A process under this job is attempting to create a new vm …",31,null],[13,"NewChannel","","A process under this job is attempting to create a new …",31,null],[13,"NewEvent","","A process under this job is attempting to create a new …",31,null],[13,"NewEventPair","","A process under this job is attempting to create a new …",31,null],[13,"NewPort","","A process under this job is attempting to create a new …",31,null],[13,"NewSocket","","A process under this job is attempting to create a new …",31,null],[13,"NewFIFO","","A process under this job is attempting to create a new …",31,null],[13,"NewTimer","","A process under this job is attempting to create a new …",31,null],[13,"NewProcess","","A process under this job is attempting to create a new …",31,null],[13,"NewProfile","","A process under this job is attempting to create a new …",31,null],[13,"AmbientMarkVMOExec","","A process under this job is attempting to use …",31,null],[4,"PolicyAction","","The action taken when the condition happens specified by …",null,null],[13,"Allow","","Allow condition.",32,null],[13,"Deny","","Prevent condition.",32,null],[13,"AllowException","","Generate an exception via the debug port. An exception …",32,null],[13,"DenyException","","Just like <code>AllowException</code>, but after resuming condition is …",32,null],[13,"Kill","","Terminate the process.",32,null],[3,"TimerSlackPolicy","","Timer slack policy.",null,null],[5,"check_timer_policy","","Check whether the policy is valid.",null,[[["timerslackpolicy",3]],["zxresult",6]]],[3,"Process","","Process abstraction",null,null],[4,"Status","","Status of a process.",null,null],[13,"Init","","Initial state, no thread present in process.",33,null],[13,"Running","","First thread has started and is running.",33,null],[13,"Exited","","Process has exited with the code.",33,null],[3,"ProcessInfo","","Information of a process.",null,null],[12,"return_code","","",34,null],[12,"started","","",34,null],[12,"has_exited","","",34,null],[12,"debugger_attached","","",34,null],[12,"padding1","","",34,null],[3,"SuspendToken","","Suspend the given task.",null,null],[4,"ThreadStateKind","","Possible values for “kind” in zx_thread_read_state …",null,null],[13,"General","","",35,null],[13,"FloatPoint","","",35,null],[13,"Vector","","",35,null],[13,"Debug","","",35,null],[13,"SingleStep","","",35,null],[13,"FS","","",35,null],[13,"GS","","",35,null],[3,"Thread","","Runnable / computation entity",null,null],[3,"ThreadFlag","","Thread flags.",null,null],[6,"ThreadFn","","The type of a new thread function.",null,null],[3,"CurrentThread","","A handle to current thread.",null,null],[8,"IntoResult","","<code>into_result</code> returns <code>Self</code> if the type parameter is already …",null,null],[10,"into_result","","Performs the conversion.",36,[[],["zxresult",6]]],[4,"ThreadState","","The thread state.",null,null],[13,"New","","The thread has been created but it has not started …",37,null],[13,"Running","","The thread is running user code normally.",37,null],[13,"Suspended","","Stopped due to <code>zx_task_suspend()</code>.",37,null],[13,"Blocked","","In a syscall or handling an exception.",37,null],[13,"Dying","","The thread is in the process of being terminated, but it …",37,null],[13,"Dead","","The thread has stopped running.",37,null],[13,"BlockedException","","The thread is stopped in an exception.",37,null],[13,"BlockedSleeping","","The thread is stopped in <code>zx_nanosleep()</code>.",37,null],[13,"BlockedFutex","","The thread is stopped in <code>zx_futex_wait()</code>.",37,null],[13,"BlockedPort","","The thread is stopped in <code>zx_port_wait()</code>.",37,null],[13,"BlockedChannel","","The thread is stopped in <code>zx_channel_call()</code>.",37,null],[13,"BlockedWaitOne","","The thread is stopped in <code>zx_object_wait_one()</code>.",37,null],[13,"BlockedWaitMany","","The thread is stopped in <code>zx_object_wait_many()</code>.",37,null],[13,"BlockedInterrupt","","The thread is stopped in <code>zx_interrupt_wait()</code>.",37,null],[13,"BlockedPager","","Pager.",37,null],[3,"ThreadInfo","","The thread information.",null,null],[8,"Task","","Task (Thread, Process, or Job)",null,null],[10,"kill","","Kill the task. The task do not terminate immediately when …",38,[[]]],[10,"suspend","","Suspend the task. Currently only thread or process …",38,[[]]],[10,"resume","","Resume the task",38,[[]]],[10,"exceptionate","","Get the exceptionate.",38,[[],[["arc",3],["exceptionate",3]]]],[10,"debug_exceptionate","","Get the debug exceptionate.",38,[[],[["arc",3],["exceptionate",3]]]],[17,"TASK_RETCODE_SYSCALL_KILL","","The return code set when a task is killed via …",null,null],[0,"util","zircon_object","Utilities.",null,null],[0,"elf_loader","zircon_object::util","ELF loading of Zircon and Linux.",null,null],[8,"VmarExt","zircon_object::util::elf_loader","Extensional ELF loading methods for <code>VmAddressRegion</code>.",null,null],[10,"load_from_elf","","Create <code>VMObject</code> from all LOAD segments of <code>elf</code> and map …",39,[[["elffile",3]],[["arc",3],["zxresult",6]]]],[10,"map_from_elf","","Same as <code>load_from_elf</code>, but the <code>vmo</code> is an existing one …",39,[[["arc",3],["elffile",3],["vmobject",3]],["zxresult",6]]],[8,"ElfExt","","Extensional ELF loading methods for <code>ElfFile</code>.",null,null],[10,"load_segment_size","","Get total size of all LOAD segments.",40,[[],["usize",15]]],[10,"get_symbol_address","","Get address of the given <code>symbol</code>.",40,[[["str",15]],[["option",4],["u64",15]]]],[10,"get_interpreter","","Get the program interpreter path name.",40,[[],[["result",4],["str",15]]]],[10,"dynsym","","Get the symbol table for dynamic linking (.dynsym …",40,[[],[["result",4],["str",15]]]],[10,"relocate","","Relocate according to the dynamic relocation section …",40,[[["usize",15]],[["str",15],["result",4]]]],[0,"kcounter","zircon_object::util","Kernel counter.",null,null],[3,"KCounter","zircon_object::util::kcounter","Kernel counter.",null,null],[11,"new","","Create a new KCounter.",41,[[]]],[11,"add","","Add a value to the counter.",41,[[["usize",15]]]],[11,"get","","Get the value of counter.",41,[[],["usize",15]]],[3,"KCounterDescriptor","","Kernel counter descriptor.",null,null],[12,"counter","","The counter.",42,null],[12,"name","","The counter’s name.",42,null],[3,"KCounterDescriptorArray","","Kernel counter descriptor array.",null,null],[12,"0","","",43,null],[11,"get","","Get kcounter descriptor array from symbols.",43,[[]]],[0,"vm","zircon_object","Objects for Virtual Memory Management.",null,null],[3,"Stream","zircon_object::vm","A readable, writable, seekable interface to some …",null,null],[4,"SeekOrigin","","Enumeration of possible methods to modify the seek within …",null,null],[13,"Start","","Set the seek offset relative to the start of the stream.",44,null],[13,"Current","","Set the seek offset relative to the current seek offset …",44,null],[13,"End","","Set the seek offset relative to the end of the stream, as …",44,null],[3,"StreamInfo","","Information of a Stream",null,null],[3,"VmarFlags","","Creation flags for VmAddressRegion.",null,null],[3,"VmAddressRegion","","Virtual Memory Address Regions",null,null],[3,"VmarInfo","","Information of a VmAddressRegion.",null,null],[3,"VmMapping","","Virtual Memory Mapping",null,null],[3,"TaskStatsInfo","","Statistics about resources (e.g., memory) used by a task.",null,null],[17,"KERNEL_ASPACE_BASE","","The base of kernel address space In x86 fuchsia this is …",null,null],[17,"KERNEL_ASPACE_SIZE","","The size of kernel address space",null,null],[17,"USER_ASPACE_BASE","","The base of user address space",null,null],[17,"USER_ASPACE_SIZE","","The size of user address space",null,null],[5,"vmo_page_bytes","","The amount of memory committed to VMOs.",null,[[],["usize",15]]],[8,"VMObjectTrait","","Virtual Memory Object Trait",null,null],[10,"read","","Read memory to <code>buf</code> from VMO at <code>offset</code>.",45,[[["usize",15]],["zxresult",6]]],[10,"write","","Write memory from <code>buf</code> to VMO at <code>offset</code>.",45,[[["usize",15]],["zxresult",6]]],[10,"zero","","Resets the range of bytes in the VMO from <code>offset</code> to …",45,[[["usize",15]],["zxresult",6]]],[10,"len","","Get the length of VMO.",45,[[],["usize",15]]],[10,"set_len","","Set the length of VMO.",45,[[["usize",15]],["zxresult",6]]],[10,"commit_page","","Commit a page.",45,[[["usize",15],["mmuflags",3]],[["zxresult",6],["physaddr",6]]]],[10,"commit_pages_with","","Commit pages with an external function f. the vmo is …",45,[[["fnmut",8]],["zxresult",6]]],[10,"commit","","Commit allocating physical memory.",45,[[["usize",15]],["zxresult",6]]],[10,"decommit","","Decommit allocated physical memory.",45,[[["usize",15]],["zxresult",6]]],[10,"create_child","","Create a child VMO.",45,[[["usize",15]],[["zxresult",6],["arc",3]]]],[11,"append_mapping","","Append a mapping to the VMO’s mapping list.",45,[[["weak",3],["vmmapping",3]]]],[11,"remove_mapping","","Remove a mapping from the VMO’s mapping list.",45,[[["weak",3],["vmmapping",3]]]],[10,"complete_info","","Complete the VmoInfo.",45,[[["vmoinfo",3]]]],[10,"cache_policy","","Get the cache policy.",45,[[],["cachepolicy",4]]],[10,"set_cache_policy","","Set the cache policy.",45,[[["cachepolicy",4]],["zxresult",6]]],[10,"committed_pages_in_range","","Count committed pages of the VMO.",45,[[["usize",15]],["usize",15]]],[11,"pin","","Pin the given range of the VMO.",45,[[["usize",15]],["zxresult",6]]],[11,"unpin","","Unpin the given range of the VMO.",45,[[["usize",15]],["zxresult",6]]],[11,"is_contiguous","","Returns true if the object is backed by a contiguous …",45,[[],["bool",15]]],[11,"is_paged","","Returns true if the object is backed by RAM.",45,[[],["bool",15]]],[3,"VmObject","","Virtual memory containers",null,null],[3,"VmoInfo","","Describes a VMO.",null,null],[12,"flags","","Flags.",46,null],[12,"rights","","If <code>flags & ZX_INFO_VMO_VIA_HANDLE</code>, the handle rights. …",46,null],[3,"VmoInfoFlags","","Values used by ZX_INFO_PROCESS_VMOS.",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",47,null],[13,"Uncached","","",47,null],[13,"UncachedDevice","","",47,null],[13,"WriteCombining","","",47,null],[3,"MMUFlags","","",null,null],[6,"PhysAddr","","Physical Address",null,null],[6,"VirtAddr","","Virtual Address",null,null],[6,"DevVAddr","","Device Address",null,null],[17,"PAGE_SIZE","","Size of a page",null,null],[17,"PAGE_SIZE_LOG2","","log2(PAGE_SIZE)",null,null],[5,"page_aligned","","Check whether <code>x</code> is a multiple of <code>PAGE_SIZE</code>.",null,[[["usize",15]],["bool",15]]],[5,"check_aligned","","Check whether <code>x</code> is a multiple of <code>align</code>.",null,[[["usize",15]],["bool",15]]],[5,"pages","","How many pages the <code>size</code> needs. To avoid overflow and pass …",null,[[["usize",15]],["usize",15]]],[5,"ceil","","How many <code>align</code> the <code>x</code> needs.",null,[[["usize",15]],["usize",15]]],[5,"roundup_pages","","Round up <code>size</code> to a multiple of <code>PAGE_SIZE</code>.",null,[[["usize",15]],["usize",15]]],[5,"round_down_pages","","Round down <code>size</code> to a multiple of <code>PAGE_SIZE</code>.",null,[[["usize",15]],["usize",15]]],[3,"KERNEL_ASPACE","","Kernel address space.",null,null],[5,"kernel_allocate_physical","","Allocate memory in kernel address space at given physical …",null,[[["usize",15],["physaddr",6],["mmuflags",3],["cachepolicy",4]],[["virtaddr",6],["zxresult",6]]]],[6,"ZxResult","zircon_object","The type returned by kernel objects methods.",null,null],[4,"ZxError","","Zircon statuses are signed 32 bit integers. The space of …",null,null],[13,"OK","","Success.",48,null],[13,"INTERNAL","","The system encountered an otherwise unspecified error …",48,null],[13,"NOT_SUPPORTED","","The operation is not implemented, supported, or enabled.",48,null],[13,"NO_RESOURCES","","The system was not able to allocate some resource needed …",48,null],[13,"NO_MEMORY","","The system was not able to allocate memory needed for the …",48,null],[13,"INTERNAL_INTR_RETRY","","The system call was interrupted, but should be retried.  …",48,null],[13,"INVALID_ARGS","","an argument is invalid, ex. null pointer",48,null],[13,"BAD_HANDLE","","A specified handle value does not refer to a handle.",48,null],[13,"WRONG_TYPE","","The subject of the operation is the wrong type to perform …",48,null],[13,"BAD_SYSCALL","","The specified syscall number is invalid.",48,null],[13,"OUT_OF_RANGE","","An argument is outside the valid range for this operation.",48,null],[13,"BUFFER_TOO_SMALL","","A caller provided buffer is too small for this operation.",48,null],[13,"BAD_STATE","","operation failed because the current state of the object …",48,null],[13,"TIMED_OUT","","The time limit for the operation elapsed before the …",48,null],[13,"SHOULD_WAIT","","The operation cannot be performed currently but …",48,null],[13,"CANCELED","","The in-progress operation (e.g. a wait) has been canceled.",48,null],[13,"PEER_CLOSED","","The operation failed because the remote end of the …",48,null],[13,"NOT_FOUND","","The requested entity is not found.",48,null],[13,"ALREADY_EXISTS","","An object with the specified identifier already exists. …",48,null],[13,"ALREADY_BOUND","","The operation failed because the named entity is already …",48,null],[13,"UNAVAILABLE","","The subject of the operation is currently unable to …",48,null],[13,"ACCESS_DENIED","","The caller did not have permission to perform the …",48,null],[13,"IO","","Otherwise unspecified error occurred during I/O.",48,null],[13,"IO_REFUSED","","The entity the I/O operation is being performed on …",48,null],[13,"IO_DATA_INTEGRITY","","The data in the operation failed an integrity check and …",48,null],[13,"IO_DATA_LOSS","","The data in the operation is currently unavailable and …",48,null],[13,"IO_NOT_PRESENT","","The device is no longer available (has been unplugged …",48,null],[13,"IO_OVERRUN","","More data was received from the device than expected. …",48,null],[13,"IO_MISSED_DEADLINE","","An operation did not complete within the required …",48,null],[13,"IO_INVALID","","The data in the operation is invalid parameter or is out …",48,null],[13,"BAD_PATH","","Path name is too long.",48,null],[13,"NOT_DIR","","Object is not a directory or does not support directory …",48,null],[13,"NOT_FILE","","Object is not a regular file.",48,null],[13,"FILE_BIG","","This operation would cause a file to exceed a …",48,null],[13,"NO_SPACE","","Filesystem or device space is exhausted.",48,null],[13,"NOT_EMPTY","","Directory is not empty.",48,null],[13,"STOP","","Do not call again. Example: A notification callback will …",48,null],[13,"NEXT","","Advance to the next item. Example: A notification …",48,null],[13,"ASYNC","","Ownership of the item has moved to an asynchronous worker.",48,null],[13,"PROTOCOL_NOT_SUPPORTED","","Specified protocol is not supported.",48,null],[13,"ADDRESS_UNREACHABLE","","Host is unreachable.",48,null],[13,"ADDRESS_IN_USE","","Address is being used by someone else.",48,null],[13,"NOT_CONNECTED","","Socket is not connected.",48,null],[13,"CONNECTION_REFUSED","","Remote peer rejected the connection.",48,null],[13,"CONNECTION_RESET","","Connection was reset.",48,null],[13,"CONNECTION_ABORTED","","Connection was aborted.",48,null],[14,"impl_kobject","","Macro to auto implement <code>KernelObject</code> trait.",null,null],[14,"define_count_helper","","Define a pair of kcounter (create, destroy), and a helper …",null,null],[14,"kcounter","","Define a new KCounter.",null,null],[11,"borrow","zircon_object::debuglog","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","zircon_object::dev","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_any","","",49,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"into_any_arc","","",49,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_any","","",50,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"into_any_arc","","",50,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_any","","",51,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"into_any_arc","","",51,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"get_hash","","",52,[[],["u64",15]]],[11,"into_any","","",52,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"into_any_arc","","",52,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"get_hash","","",53,[[],["u64",15]]],[11,"into_any","","",53,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"into_any_arc","","",53,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_any","","",54,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"into_any_arc","","",54,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"get_hash","","",55,[[],["u64",15]]],[11,"into_any","","",55,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_any","","",56,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any_arc","","",56,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_any","","",57,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any_arc","","",57,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_any","","",58,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any_arc","","",58,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"into_any","","",5,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_any","","",59,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"into_any_arc","","",59,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"into_any","","",6,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","zircon_object::dev::pci_init_args","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"into_any","","",60,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"into_any_arc","","",60,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any","","",2,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","zircon_object::dev","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_any","","",61,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"into_any_arc","","",61,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_any","","",62,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"into_any_arc","","",62,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"into_any","","",9,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"get_hash","","",63,[[],["u64",15]]],[11,"into_any","","",63,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"into_any_arc","","",63,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_any","","",64,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"into_any_arc","","",64,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_any","","",65,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",65,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"into_any_arc","","",65,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","zircon_object","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"into_any","","",48,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"into_any_arc","","",48,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","zircon_object::ipc","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_any","","",66,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",66,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",66,[[],["any",8]]],[11,"as_any_mut","","",66,[[],["any",8]]],[11,"into_any_arc","","",66,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any","","",10,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_any","","",67,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",67,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",67,[[],["any",8]]],[11,"as_any_mut","","",67,[[],["any",8]]],[11,"into_any_arc","","",67,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_any","","",68,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",68,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",68,[[],["any",8]]],[11,"as_any_mut","","",68,[[],["any",8]]],[11,"into_any_arc","","",68,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"get_hash","","",69,[[],["u64",15]]],[11,"into_any","","",69,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",69,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",69,[[],["any",8]]],[11,"as_any_mut","","",69,[[],["any",8]]],[11,"into_any_arc","","",69,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_any","","",70,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",70,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",70,[[],["any",8]]],[11,"as_any_mut","","",70,[[],["any",8]]],[11,"into_any_arc","","",70,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","zircon_object::object","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"into_any","","",11,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_any","","",71,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",71,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"into_any_arc","","",71,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"get_hash","","",72,[[],["u64",15]]],[11,"into_any","","",72,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",72,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"into_any_arc","","",72,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"get_hash","","",73,[[],["u64",15]]],[11,"into_any","","",73,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",73,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",73,[[],["any",8]]],[11,"as_any_mut","","",73,[[],["any",8]]],[11,"into_any_arc","","",73,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","zircon_object::signal","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_any","","",74,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",74,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"into_any_arc","","",74,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_any","","",75,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",75,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"into_any_arc","","",75,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_any","","",76,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",76,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"into_any_arc","","",76,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"into_any","","",17,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_any","","",77,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",77,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"into_any_arc","","",77,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"into_any","","",18,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"into_any","","",19,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"into_any","","",20,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"into_any","","",21,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"into_any","","",22,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"into_any","","",78,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",78,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",78,[[],["any",8]]],[11,"as_any_mut","","",78,[[],["any",8]]],[11,"into_any_arc","","",78,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"into_any","","",79,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",79,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",79,[[],["any",8]]],[11,"as_any_mut","","",79,[[],["any",8]]],[11,"into_any_arc","","",79,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"into_any","","",80,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",80,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",80,[[],["any",8]]],[11,"as_any_mut","","",80,[[],["any",8]]],[11,"into_any_arc","","",80,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"into_any","","",23,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"into_any","","",24,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any_arc","","",24,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"into_any","","",25,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"into_any","","",26,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_any","","",81,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",81,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",81,[[],["any",8]]],[11,"as_any_mut","","",81,[[],["any",8]]],[11,"into_any_arc","","",81,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"get_hash","","",82,[[],["u64",15]]],[11,"into_any","","",82,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",82,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",82,[[],["any",8]]],[11,"as_any_mut","","",82,[[],["any",8]]],[11,"into_any_arc","","",82,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_any","","",83,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",83,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",83,[[],["any",8]]],[11,"as_any_mut","","",83,[[],["any",8]]],[11,"into_any_arc","","",83,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"into_any","","",27,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","zircon_object::task","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_any","","",84,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",84,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",84,[[],["any",8]]],[11,"as_any_mut","","",84,[[],["any",8]]],[11,"into_any_arc","","",84,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"into_any","","",85,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",85,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",85,[[],["any",8]]],[11,"as_any_mut","","",85,[[],["any",8]]],[11,"into_any_arc","","",85,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"into_any","","",28,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any_arc","","",28,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_any","","",86,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",86,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",86,[[],["any",8]]],[11,"as_any_mut","","",86,[[],["any",8]]],[11,"into_any_arc","","",86,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_any","","",87,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",87,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",87,[[],["any",8]]],[11,"as_any_mut","","",87,[[],["any",8]]],[11,"into_any_arc","","",87,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_any","","",88,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",88,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",88,[[],["any",8]]],[11,"as_any_mut","","",88,[[],["any",8]]],[11,"into_any_arc","","",88,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"into_any","","",89,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",89,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",89,[[],["any",8]]],[11,"as_any_mut","","",89,[[],["any",8]]],[11,"into_any_arc","","",89,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"into_any","","",29,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"into_any","","",30,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"into_any","","",31,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"into_any","","",32,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any_arc","","",32,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"into_any","","",90,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",90,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",90,[[],["any",8]]],[11,"as_any_mut","","",90,[[],["any",8]]],[11,"into_any_arc","","",90,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_any","","",91,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",91,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",91,[[],["any",8]]],[11,"as_any_mut","","",91,[[],["any",8]]],[11,"into_any_arc","","",91,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"into_any","","",33,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"into_any_arc","","",33,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_any","","",34,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"into_any","","",92,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",92,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",92,[[],["any",8]]],[11,"as_any_mut","","",92,[[],["any",8]]],[11,"into_any_arc","","",92,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"into_any","","",35,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"into_any","","",93,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",93,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",93,[[],["any",8]]],[11,"as_any_mut","","",93,[[],["any",8]]],[11,"into_any_arc","","",93,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"get_hash","","",94,[[],["u64",15]]],[11,"into_any","","",94,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",94,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",94,[[],["any",8]]],[11,"as_any_mut","","",94,[[],["any",8]]],[11,"into_any_arc","","",94,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_any","","",95,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",95,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",95,[[],["any",8]]],[11,"as_any_mut","","",95,[[],["any",8]]],[11,"into_any_arc","","",95,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"into_any","","",37,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"into_any","","",96,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",96,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",96,[[],["any",8]]],[11,"as_any_mut","","",96,[[],["any",8]]],[11,"into_any_arc","","",96,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","zircon_object::util::kcounter","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_any","","",41,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"into_any_arc","","",41,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_any","","",42,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"into_any_arc","","",42,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_any","","",43,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"into_any_arc","","",43,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","zircon_object::vm","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"into_any","","",97,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",97,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",97,[[],["any",8]]],[11,"as_any_mut","","",97,[[],["any",8]]],[11,"into_any_arc","","",97,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_any","","",44,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"into_any_arc","","",44,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"into_any","","",98,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",98,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",98,[[],["any",8]]],[11,"as_any_mut","","",98,[[],["any",8]]],[11,"into_any_arc","","",98,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"get_hash","","",99,[[],["u64",15]]],[11,"into_any","","",99,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",99,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",99,[[],["any",8]]],[11,"as_any_mut","","",99,[[],["any",8]]],[11,"into_any_arc","","",99,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"into_any","","",100,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",100,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",100,[[],["any",8]]],[11,"as_any_mut","","",100,[[],["any",8]]],[11,"into_any_arc","","",100,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"into_any","","",101,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",101,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",101,[[],["any",8]]],[11,"as_any_mut","","",101,[[],["any",8]]],[11,"into_any_arc","","",101,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_any","","",102,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",102,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",102,[[],["any",8]]],[11,"as_any_mut","","",102,[[],["any",8]]],[11,"into_any_arc","","",102,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"into_any","","",103,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",103,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",103,[[],["any",8]]],[11,"as_any_mut","","",103,[[],["any",8]]],[11,"into_any_arc","","",103,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"into_any","","",104,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",104,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",104,[[],["any",8]]],[11,"as_any_mut","","",104,[[],["any",8]]],[11,"into_any_arc","","",104,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_any","","",46,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"into_any_arc","","",46,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"get_hash","","",105,[[],["u64",15]]],[11,"into_any","","",105,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",105,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",105,[[],["any",8]]],[11,"as_any_mut","","",105,[[],["any",8]]],[11,"into_any_arc","","",105,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"into_any","","",47,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"into_any_arc","","",47,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"get_hash","","",106,[[],["u64",15]]],[11,"into_any","","",106,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",106,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",106,[[],["any",8]]],[11,"as_any_mut","","",106,[[],["any",8]]],[11,"into_any_arc","","",106,[[["arc",3]],[["any",8],["arc",3]]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"into_any","","",107,[[["global",3],["box",3]],[["any",8],["box",3],["global",3]]]],[11,"into_any_rc","","",107,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",107,[[],["any",8]]],[11,"as_any_mut","","",107,[[],["any",8]]],[11,"into_any_arc","","",107,[[["arc",3]],[["any",8],["arc",3]]]],[11,"clone","","",106,[[],["mmuflags",3]]],[11,"clone","","",47,[[],["cachepolicy",4]]],[11,"fmt","","",106,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",106,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",106,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitor_assign","","Adds the set of flags.",106,[[["mmuflags",3]]]],[11,"sub","","Returns the set difference of the two sets of flags.",106,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",106,[[["mmuflags",3]]]],[11,"try_from","","",47,[[["u32",15]],[["u32",15],["result",4],["cachepolicy",4]]]],[11,"bitor","","Returns the union of the two sets of flags.",106,[[["mmuflags",3]],["mmuflags",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",106,[[["mmuflags",3]]]],[11,"eq","","",106,[[["mmuflags",3]],["bool",15]]],[11,"ne","","",106,[[["mmuflags",3]],["bool",15]]],[11,"eq","","",47,[[["cachepolicy",4]],["bool",15]]],[11,"fmt","","",106,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",106,[[["mmuflags",3]]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",106,[[["mmuflags",3]],["mmuflags",3]]],[11,"hash","","",106,[[]]],[11,"not","","Returns the complement of this set of flags.",106,[[],["mmuflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",106,[[["mmuflags",3]],["mmuflags",3]]],[11,"extend","","",106,[[]]],[11,"from_iter","","",106,[[],["mmuflags",3]]],[11,"partial_cmp","","",106,[[["mmuflags",3]],[["ordering",4],["option",4]]]],[11,"cmp","","",106,[[["mmuflags",3]],["ordering",4]]],[11,"fmt","","",106,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"id","zircon_object::debuglog","",0,[[],["koid",6]]],[11,"type_name","","",0,[[],["str",15]]],[11,"name","","",0,[[],["string",3]]],[11,"set_name","","",0,[[["str",15]]]],[11,"signal","","",0,[[],["signal",3]]],[11,"signal_set","","",0,[[["signal",3]]]],[11,"signal_clear","","",0,[[["signal",3]]]],[11,"signal_change","","",0,[[["signal",3]]]],[11,"add_signal_callback","","",0,[[["signalhandler",6]]]],[11,"id","zircon_object::dev","",49,[[],["koid",6]]],[11,"type_name","","",49,[[],["str",15]]],[11,"name","","",49,[[],["string",3]]],[11,"set_name","","",49,[[["str",15]]]],[11,"signal","","",49,[[],["signal",3]]],[11,"signal_set","","",49,[[["signal",3]]]],[11,"signal_clear","","",49,[[["signal",3]]]],[11,"signal_change","","",49,[[["signal",3]]]],[11,"add_signal_callback","","",49,[[["signalhandler",6]]]],[11,"id","","",51,[[],["koid",6]]],[11,"type_name","","",51,[[],["str",15]]],[11,"name","","",51,[[],["string",3]]],[11,"set_name","","",51,[[["str",15]]]],[11,"signal","","",51,[[],["signal",3]]],[11,"signal_set","","",51,[[["signal",3]]]],[11,"signal_clear","","",51,[[["signal",3]]]],[11,"signal_change","","",51,[[["signal",3]]]],[11,"add_signal_callback","","",51,[[["signalhandler",6]]]],[11,"id","","",54,[[],["koid",6]]],[11,"type_name","","",54,[[],["str",15]]],[11,"name","","",54,[[],["string",3]]],[11,"set_name","","",54,[[["str",15]]]],[11,"signal","","",54,[[],["signal",3]]],[11,"signal_set","","",54,[[["signal",3]]]],[11,"signal_clear","","",54,[[["signal",3]]]],[11,"signal_change","","",54,[[["signal",3]]]],[11,"add_signal_callback","","",54,[[["signalhandler",6]]]],[11,"id","","",59,[[],["koid",6]]],[11,"type_name","","",59,[[],["str",15]]],[11,"name","","",59,[[],["string",3]]],[11,"set_name","","",59,[[["str",15]]]],[11,"signal","","",59,[[],["signal",3]]],[11,"signal_set","","",59,[[["signal",3]]]],[11,"signal_clear","","",59,[[["signal",3]]]],[11,"signal_change","","",59,[[["signal",3]]]],[11,"add_signal_callback","","",59,[[["signalhandler",6]]]],[11,"id","","",62,[[],["koid",6]]],[11,"type_name","","",62,[[],["str",15]]],[11,"name","","",62,[[],["string",3]]],[11,"set_name","","",62,[[["str",15]]]],[11,"signal","","",62,[[],["signal",3]]],[11,"signal_set","","",62,[[["signal",3]]]],[11,"signal_clear","","",62,[[["signal",3]]]],[11,"signal_change","","",62,[[["signal",3]]]],[11,"add_signal_callback","","",62,[[["signalhandler",6]]]],[11,"id","","",64,[[],["koid",6]]],[11,"type_name","","",64,[[],["str",15]]],[11,"name","","",64,[[],["string",3]]],[11,"set_name","","",64,[[["str",15]]]],[11,"signal","","",64,[[],["signal",3]]],[11,"signal_set","","",64,[[["signal",3]]]],[11,"signal_clear","","",64,[[["signal",3]]]],[11,"signal_change","","",64,[[["signal",3]]]],[11,"add_signal_callback","","",64,[[["signalhandler",6]]]],[11,"id","zircon_object::ipc","",66,[[],["koid",6]]],[11,"type_name","","",66,[[],["str",15]]],[11,"name","","",66,[[],["string",3]]],[11,"set_name","","",66,[[["str",15]]]],[11,"signal","","",66,[[],["signal",3]]],[11,"signal_set","","",66,[[["signal",3]]]],[11,"signal_clear","","",66,[[["signal",3]]]],[11,"signal_change","","",66,[[["signal",3]]]],[11,"add_signal_callback","","",66,[[["signalhandler",6]]]],[11,"peer","","",66,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",66,[[],["koid",6]]],[11,"id","","",67,[[],["koid",6]]],[11,"type_name","","",67,[[],["str",15]]],[11,"name","","",67,[[],["string",3]]],[11,"set_name","","",67,[[["str",15]]]],[11,"signal","","",67,[[],["signal",3]]],[11,"signal_set","","",67,[[["signal",3]]]],[11,"signal_clear","","",67,[[["signal",3]]]],[11,"signal_change","","",67,[[["signal",3]]]],[11,"add_signal_callback","","",67,[[["signalhandler",6]]]],[11,"peer","","",67,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",67,[[],["koid",6]]],[11,"id","","",68,[[],["koid",6]]],[11,"type_name","","",68,[[],["str",15]]],[11,"name","","",68,[[],["string",3]]],[11,"set_name","","",68,[[["str",15]]]],[11,"signal","","",68,[[],["signal",3]]],[11,"signal_set","","",68,[[["signal",3]]]],[11,"signal_clear","","",68,[[["signal",3]]]],[11,"signal_change","","",68,[[["signal",3]]]],[11,"add_signal_callback","","",68,[[["signalhandler",6]]]],[11,"peer","","",68,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",68,[[],["koid",6]]],[11,"id","zircon_object::object","",15,[[],["koid",6]]],[11,"type_name","","",15,[[],["str",15]]],[11,"name","","",15,[[],["string",3]]],[11,"set_name","","",15,[[["str",15]]]],[11,"signal","","",15,[[],["signal",3]]],[11,"signal_set","","",15,[[["signal",3]]]],[11,"signal_clear","","",15,[[["signal",3]]]],[11,"signal_change","","",15,[[["signal",3]]]],[11,"add_signal_callback","","",15,[[["signalhandler",6]]]],[11,"id","zircon_object::signal","",74,[[],["koid",6]]],[11,"type_name","","",74,[[],["str",15]]],[11,"name","","",74,[[],["string",3]]],[11,"set_name","","",74,[[["str",15]]]],[11,"signal","","",74,[[],["signal",3]]],[11,"signal_set","","",74,[[["signal",3]]]],[11,"signal_clear","","",74,[[["signal",3]]]],[11,"signal_change","","",74,[[["signal",3]]]],[11,"add_signal_callback","","",74,[[["signalhandler",6]]]],[11,"allowed_signals","","",74,[[],["signal",3]]],[11,"id","","",75,[[],["koid",6]]],[11,"type_name","","",75,[[],["str",15]]],[11,"name","","",75,[[],["string",3]]],[11,"set_name","","",75,[[["str",15]]]],[11,"signal","","",75,[[],["signal",3]]],[11,"signal_set","","",75,[[["signal",3]]]],[11,"signal_clear","","",75,[[["signal",3]]]],[11,"signal_change","","",75,[[["signal",3]]]],[11,"add_signal_callback","","",75,[[["signalhandler",6]]]],[11,"allowed_signals","","",75,[[],["signal",3]]],[11,"peer","","",75,[[],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",75,[[],["koid",6]]],[11,"id","","",76,[[],["koid",6]]],[11,"type_name","","",76,[[],["str",15]]],[11,"name","","",76,[[],["string",3]]],[11,"set_name","","",76,[[["str",15]]]],[11,"signal","","",76,[[],["signal",3]]],[11,"signal_set","","",76,[[["signal",3]]]],[11,"signal_clear","","",76,[[["signal",3]]]],[11,"signal_change","","",76,[[["signal",3]]]],[11,"add_signal_callback","","",76,[[["signalhandler",6]]]],[11,"id","","",81,[[],["koid",6]]],[11,"type_name","","",81,[[],["str",15]]],[11,"name","","",81,[[],["string",3]]],[11,"set_name","","",81,[[["str",15]]]],[11,"signal","","",81,[[],["signal",3]]],[11,"signal_set","","",81,[[["signal",3]]]],[11,"signal_clear","","",81,[[["signal",3]]]],[11,"signal_change","","",81,[[["signal",3]]]],[11,"add_signal_callback","","",81,[[["signalhandler",6]]]],[11,"id","","",83,[[],["koid",6]]],[11,"type_name","","",83,[[],["str",15]]],[11,"name","","",83,[[],["string",3]]],[11,"set_name","","",83,[[["str",15]]]],[11,"signal","","",83,[[],["signal",3]]],[11,"signal_set","","",83,[[["signal",3]]]],[11,"signal_clear","","",83,[[["signal",3]]]],[11,"signal_change","","",83,[[["signal",3]]]],[11,"add_signal_callback","","",83,[[["signalhandler",6]]]],[11,"id","zircon_object::task","",86,[[],["koid",6]]],[11,"type_name","","",86,[[],["str",15]]],[11,"name","","",86,[[],["string",3]]],[11,"set_name","","",86,[[["str",15]]]],[11,"signal","","",86,[[],["signal",3]]],[11,"signal_set","","",86,[[["signal",3]]]],[11,"signal_clear","","",86,[[["signal",3]]]],[11,"signal_change","","",86,[[["signal",3]]]],[11,"add_signal_callback","","",86,[[["signalhandler",6]]]],[11,"id","","",87,[[],["koid",6]]],[11,"type_name","","",87,[[],["str",15]]],[11,"name","","",87,[[],["string",3]]],[11,"set_name","","",87,[[["str",15]]]],[11,"signal","","",87,[[],["signal",3]]],[11,"signal_set","","",87,[[["signal",3]]]],[11,"signal_clear","","",87,[[["signal",3]]]],[11,"signal_change","","",87,[[["signal",3]]]],[11,"add_signal_callback","","",87,[[["signalhandler",6]]]],[11,"get_child","","",87,[[["koid",6]],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",87,[[],["koid",6]]],[11,"id","","",91,[[],["koid",6]]],[11,"type_name","","",91,[[],["str",15]]],[11,"name","","",91,[[],["string",3]]],[11,"set_name","","",91,[[["str",15]]]],[11,"signal","","",91,[[],["signal",3]]],[11,"signal_set","","",91,[[["signal",3]]]],[11,"signal_clear","","",91,[[["signal",3]]]],[11,"signal_change","","",91,[[["signal",3]]]],[11,"add_signal_callback","","",91,[[["signalhandler",6]]]],[11,"get_child","","",91,[[["koid",6]],[["arc",3],["zxresult",6]]]],[11,"related_koid","","",91,[[],["koid",6]]],[11,"id","","",92,[[],["koid",6]]],[11,"type_name","","",92,[[],["str",15]]],[11,"name","","",92,[[],["string",3]]],[11,"set_name","","",92,[[["str",15]]]],[11,"signal","","",92,[[],["signal",3]]],[11,"signal_set","","",92,[[["signal",3]]]],[11,"signal_clear","","",92,[[["signal",3]]]],[11,"signal_change","","",92,[[["signal",3]]]],[11,"add_signal_callback","","",92,[[["signalhandler",6]]]],[11,"id","","",93,[[],["koid",6]]],[11,"type_name","","",93,[[],["str",15]]],[11,"name","","",93,[[],["string",3]]],[11,"set_name","","",93,[[["str",15]]]],[11,"signal","","",93,[[],["signal",3]]],[11,"signal_set","","",93,[[["signal",3]]]],[11,"signal_clear","","",93,[[["signal",3]]]],[11,"signal_change","","",93,[[["signal",3]]]],[11,"add_signal_callback","","",93,[[["signalhandler",6]]]],[11,"related_koid","","",93,[[],["koid",6]]],[11,"id","zircon_object::vm","",97,[[],["koid",6]]],[11,"type_name","","",97,[[],["str",15]]],[11,"name","","",97,[[],["string",3]]],[11,"set_name","","",97,[[["str",15]]]],[11,"signal","","",97,[[],["signal",3]]],[11,"signal_set","","",97,[[["signal",3]]]],[11,"signal_clear","","",97,[[["signal",3]]]],[11,"signal_change","","",97,[[["signal",3]]]],[11,"add_signal_callback","","",97,[[["signalhandler",6]]]],[11,"id","","",100,[[],["koid",6]]],[11,"type_name","","",100,[[],["str",15]]],[11,"name","","",100,[[],["string",3]]],[11,"set_name","","",100,[[["str",15]]]],[11,"signal","","",100,[[],["signal",3]]],[11,"signal_set","","",100,[[["signal",3]]]],[11,"signal_clear","","",100,[[["signal",3]]]],[11,"signal_change","","",100,[[["signal",3]]]],[11,"add_signal_callback","","",100,[[["signalhandler",6]]]],[11,"id","","",104,[[],["koid",6]]],[11,"type_name","","",104,[[],["str",15]]],[11,"name","","",104,[[],["string",3]]],[11,"set_name","","",104,[[["str",15]]]],[11,"signal","","",104,[[],["signal",3]]],[11,"signal_set","","",104,[[["signal",3]]]],[11,"signal_clear","","",104,[[["signal",3]]]],[11,"signal_change","","",104,[[["signal",3]]]],[11,"add_signal_callback","","",104,[[["signalhandler",6]]]],[11,"into_result","zircon_object","",108,[[],["zxresult",6]]],[11,"kill","zircon_object::task","Kill the job. The job do not terminate immediately when …",87,[[]]],[11,"suspend","","",87,[[]]],[11,"resume","","",87,[[]]],[11,"exceptionate","","",87,[[],[["arc",3],["exceptionate",3]]]],[11,"debug_exceptionate","","",87,[[],[["arc",3],["exceptionate",3]]]],[11,"kill","","",91,[[]]],[11,"suspend","","",91,[[]]],[11,"resume","","",91,[[]]],[11,"exceptionate","","",91,[[],[["arc",3],["exceptionate",3]]]],[11,"debug_exceptionate","","",91,[[],[["arc",3],["exceptionate",3]]]],[11,"kill","","",93,[[]]],[11,"suspend","","",93,[[]]],[11,"resume","","",93,[[]]],[11,"exceptionate","","",93,[[],[["arc",3],["exceptionate",3]]]],[11,"debug_exceptionate","","",93,[[],[["arc",3],["exceptionate",3]]]],[11,"load_from_elf","zircon_object::vm","",100,[[["elffile",3]],[["arc",3],["zxresult",6]]]],[11,"map_from_elf","","",100,[[["arc",3],["elffile",3],["vmobject",3]],["zxresult",6]]],[11,"deref","zircon_object::task","",95,[[]]],[11,"deref","zircon_object::vm","",104,[[]]],[11,"deref","","",107,[[],["arc",3]]],[11,"fmt","zircon_object::debuglog","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev::pci_init_args","",4,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","zircon_object","",48,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","zircon_object::signal","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::util::kcounter","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","zircon_object::vm","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"sub","zircon_object::dev","Returns the set difference of the two sets of flags.",52,[[["interruptflags",3]],["interruptflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",53,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",55,[[["iommuperms",3]],["iommuperms",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",63,[[["resourceflags",3]],["resourceflags",3]]],[11,"sub","zircon_object::ipc","Returns the set difference of the two sets of flags.",69,[[["socketflags",3]],["socketflags",3]]],[11,"sub","zircon_object::object","Returns the set difference of the two sets of flags.",72,[[["rights",3]],["rights",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",73,[[["signal",3]],["signal",3]]],[11,"sub","zircon_object::signal","Returns the set difference of the two sets of flags.",82,[[["portoptions",3]],["portoptions",3]]],[11,"sub","zircon_object::task","Returns the set difference of the two sets of flags.",94,[[["threadflag",3]],["threadflag",3]]],[11,"sub","zircon_object::vm","Returns the set difference of the two sets of flags.",99,[[["vmarflags",3]],["vmarflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",105,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"eq","zircon_object::dev","",52,[[["interruptflags",3]],["bool",15]]],[11,"ne","","",52,[[["interruptflags",3]],["bool",15]]],[11,"eq","","",53,[[["interruptoptions",3]],["bool",15]]],[11,"ne","","",53,[[["interruptoptions",3]],["bool",15]]],[11,"eq","","",55,[[["iommuperms",3]],["bool",15]]],[11,"ne","","",55,[[["iommuperms",3]],["bool",15]]],[11,"eq","","",6,[[["pcieirqmode",4]],["bool",15]]],[11,"eq","","",7,[[["pciaddrspace",4]],["bool",15]]],[11,"eq","","",9,[[["resourcekind",4]],["bool",15]]],[11,"eq","","",63,[[["resourceflags",3]],["bool",15]]],[11,"ne","","",63,[[["resourceflags",3]],["bool",15]]],[11,"eq","zircon_object","",48,[[["zxerror",4]],["bool",15]]],[11,"eq","zircon_object::ipc","",69,[[["socketflags",3]],["bool",15]]],[11,"ne","","",69,[[["socketflags",3]],["bool",15]]],[11,"eq","","",70,[[["socketinfo",3]],["bool",15]]],[11,"ne","","",70,[[["socketinfo",3]],["bool",15]]],[11,"eq","zircon_object::object","",72,[[["rights",3]],["bool",15]]],[11,"ne","","",72,[[["rights",3]],["bool",15]]],[11,"eq","","",73,[[["signal",3]],["bool",15]]],[11,"ne","","",73,[[["signal",3]],["bool",15]]],[11,"eq","zircon_object::signal","",17,[[["packettype",4]],["bool",15]]],[11,"eq","","",18,[[["packetsignal",3]],["bool",15]]],[11,"ne","","",18,[[["packetsignal",3]],["bool",15]]],[11,"eq","","",19,[[["packetguestbell",3]],["bool",15]]],[11,"ne","","",19,[[["packetguestbell",3]],["bool",15]]],[11,"eq","","",20,[[["packetguestmem",3]],["bool",15]]],[11,"ne","","",20,[[["packetguestmem",3]],["bool",15]]],[11,"eq","","",21,[[["packetguestio",3]],["bool",15]]],[11,"ne","","",21,[[["packetguestio",3]],["bool",15]]],[11,"eq","","",22,[[["packetguestvcputype",4]],["bool",15]]],[11,"eq","","",79,[[["packetguestvcpuinterrupt",3]],["bool",15]]],[11,"ne","","",79,[[["packetguestvcpuinterrupt",3]],["bool",15]]],[11,"eq","","",80,[[["packetguestvcpustartup",3]],["bool",15]]],[11,"ne","","",80,[[["packetguestvcpustartup",3]],["bool",15]]],[11,"eq","","",24,[[["packetinterrupt",3]],["bool",15]]],[11,"ne","","",24,[[["packetinterrupt",3]],["bool",15]]],[11,"eq","","",25,[[["portpacketrepr",3]],["bool",15]]],[11,"ne","","",25,[[["portpacketrepr",3]],["bool",15]]],[11,"eq","","",26,[[["payloadrepr",4]],["bool",15]]],[11,"ne","","",26,[[["payloadrepr",4]],["bool",15]]],[11,"eq","","",23,[[],["bool",15]]],[11,"eq","","",82,[[["portoptions",3]],["bool",15]]],[11,"ne","","",82,[[["portoptions",3]],["bool",15]]],[11,"eq","zircon_object::task","",28,[[["exceptiontype",4]],["bool",15]]],[11,"eq","","",32,[[["policyaction",4]],["bool",15]]],[11,"eq","","",33,[[["status",4]],["bool",15]]],[11,"ne","","",33,[[["status",4]],["bool",15]]],[11,"eq","","",94,[[["threadflag",3]],["bool",15]]],[11,"ne","","",94,[[["threadflag",3]],["bool",15]]],[11,"eq","","",37,[[["threadstate",4]],["bool",15]]],[11,"eq","zircon_object::vm","",99,[[["vmarflags",3]],["bool",15]]],[11,"ne","","",99,[[["vmarflags",3]],["bool",15]]],[11,"eq","","",105,[[["vmoinfoflags",3]],["bool",15]]],[11,"ne","","",105,[[["vmoinfoflags",3]],["bool",15]]],[11,"cmp","zircon_object::dev","",52,[[["interruptflags",3]],["ordering",4]]],[11,"cmp","","",53,[[["interruptoptions",3]],["ordering",4]]],[11,"cmp","","",55,[[["iommuperms",3]],["ordering",4]]],[11,"cmp","","",63,[[["resourceflags",3]],["ordering",4]]],[11,"cmp","zircon_object::ipc","",69,[[["socketflags",3]],["ordering",4]]],[11,"cmp","zircon_object::object","",72,[[["rights",3]],["ordering",4]]],[11,"cmp","","",73,[[["signal",3]],["ordering",4]]],[11,"cmp","zircon_object::signal","",82,[[["portoptions",3]],["ordering",4]]],[11,"cmp","zircon_object::task","",94,[[["threadflag",3]],["ordering",4]]],[11,"cmp","zircon_object::vm","",99,[[["vmarflags",3]],["ordering",4]]],[11,"cmp","","",105,[[["vmoinfoflags",3]],["ordering",4]]],[11,"partial_cmp","zircon_object::dev","",52,[[["interruptflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",53,[[["interruptoptions",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",55,[[["iommuperms",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",63,[[["resourceflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","zircon_object::ipc","",69,[[["socketflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","zircon_object::object","",72,[[["rights",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",73,[[["signal",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","zircon_object::signal","",82,[[["portoptions",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","zircon_object::task","",94,[[["threadflag",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","zircon_object::vm","",99,[[["vmarflags",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",105,[[["vmoinfoflags",3]],[["ordering",4],["option",4]]]],[11,"sub_assign","zircon_object::dev","Disables all flags enabled in the set.",52,[[["interruptflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",53,[[["interruptoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",55,[[["iommuperms",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",63,[[["resourceflags",3]]]],[11,"sub_assign","zircon_object::ipc","Disables all flags enabled in the set.",69,[[["socketflags",3]]]],[11,"sub_assign","zircon_object::object","Disables all flags enabled in the set.",72,[[["rights",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",73,[[["signal",3]]]],[11,"sub_assign","zircon_object::signal","Disables all flags enabled in the set.",82,[[["portoptions",3]]]],[11,"sub_assign","zircon_object::task","Disables all flags enabled in the set.",94,[[["threadflag",3]]]],[11,"sub_assign","zircon_object::vm","Disables all flags enabled in the set.",99,[[["vmarflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",105,[[["vmoinfoflags",3]]]],[11,"not","zircon_object::dev","Returns the complement of this set of flags.",52,[[],["interruptflags",3]]],[11,"not","","Returns the complement of this set of flags.",53,[[],["interruptoptions",3]]],[11,"not","","Returns the complement of this set of flags.",55,[[],["iommuperms",3]]],[11,"not","","Returns the complement of this set of flags.",63,[[],["resourceflags",3]]],[11,"not","zircon_object::ipc","Returns the complement of this set of flags.",69,[[],["socketflags",3]]],[11,"not","zircon_object::object","Returns the complement of this set of flags.",72,[[],["rights",3]]],[11,"not","","Returns the complement of this set of flags.",73,[[],["signal",3]]],[11,"not","zircon_object::signal","Returns the complement of this set of flags.",82,[[],["portoptions",3]]],[11,"not","zircon_object::task","Returns the complement of this set of flags.",94,[[],["threadflag",3]]],[11,"not","zircon_object::vm","Returns the complement of this set of flags.",99,[[],["vmarflags",3]]],[11,"not","","Returns the complement of this set of flags.",105,[[],["vmoinfoflags",3]]],[11,"bitand","zircon_object::dev","Returns the intersection between the two sets of flags.",52,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",53,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",55,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",63,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitand","zircon_object::ipc","Returns the intersection between the two sets of flags.",69,[[["socketflags",3]],["socketflags",3]]],[11,"bitand","zircon_object::object","Returns the intersection between the two sets of flags.",72,[[["rights",3]],["rights",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",73,[[["signal",3]],["signal",3]]],[11,"bitand","zircon_object::signal","Returns the intersection between the two sets of flags.",82,[[["portoptions",3]],["portoptions",3]]],[11,"bitand","zircon_object::task","Returns the intersection between the two sets of flags.",94,[[["threadflag",3]],["threadflag",3]]],[11,"bitand","zircon_object::vm","Returns the intersection between the two sets of flags.",99,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",105,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitor","zircon_object::dev","Returns the union of the two sets of flags.",52,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",53,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",55,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitor","","Returns the union of the two sets of flags.",63,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitor","zircon_object::ipc","Returns the union of the two sets of flags.",69,[[["socketflags",3]],["socketflags",3]]],[11,"bitor","zircon_object::object","Returns the union of the two sets of flags.",72,[[["rights",3]],["rights",3]]],[11,"bitor","","Returns the union of the two sets of flags.",73,[[["signal",3]],["signal",3]]],[11,"bitor","zircon_object::signal","Returns the union of the two sets of flags.",82,[[["portoptions",3]],["portoptions",3]]],[11,"bitor","zircon_object::task","Returns the union of the two sets of flags.",94,[[["threadflag",3]],["threadflag",3]]],[11,"bitor","zircon_object::vm","Returns the union of the two sets of flags.",99,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",105,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitxor","zircon_object::dev","Returns the left flags, but with all the right flags …",52,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",53,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",55,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",63,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitxor","zircon_object::ipc","Returns the left flags, but with all the right flags …",69,[[["socketflags",3]],["socketflags",3]]],[11,"bitxor","zircon_object::object","Returns the left flags, but with all the right flags …",72,[[["rights",3]],["rights",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",73,[[["signal",3]],["signal",3]]],[11,"bitxor","zircon_object::signal","Returns the left flags, but with all the right flags …",82,[[["portoptions",3]],["portoptions",3]]],[11,"bitxor","zircon_object::task","Returns the left flags, but with all the right flags …",94,[[["threadflag",3]],["threadflag",3]]],[11,"bitxor","zircon_object::vm","Returns the left flags, but with all the right flags …",99,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",105,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitand_assign","zircon_object::dev","Disables all flags disabled in the set.",52,[[["interruptflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",53,[[["interruptoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",55,[[["iommuperms",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",63,[[["resourceflags",3]]]],[11,"bitand_assign","zircon_object::ipc","Disables all flags disabled in the set.",69,[[["socketflags",3]]]],[11,"bitand_assign","zircon_object::object","Disables all flags disabled in the set.",72,[[["rights",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",73,[[["signal",3]]]],[11,"bitand_assign","zircon_object::signal","Disables all flags disabled in the set.",82,[[["portoptions",3]]]],[11,"bitand_assign","zircon_object::task","Disables all flags disabled in the set.",94,[[["threadflag",3]]]],[11,"bitand_assign","zircon_object::vm","Disables all flags disabled in the set.",99,[[["vmarflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",105,[[["vmoinfoflags",3]]]],[11,"bitor_assign","zircon_object::dev","Adds the set of flags.",52,[[["interruptflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",53,[[["interruptoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",55,[[["iommuperms",3]]]],[11,"bitor_assign","","Adds the set of flags.",63,[[["resourceflags",3]]]],[11,"bitor_assign","zircon_object::ipc","Adds the set of flags.",69,[[["socketflags",3]]]],[11,"bitor_assign","zircon_object::object","Adds the set of flags.",72,[[["rights",3]]]],[11,"bitor_assign","","Adds the set of flags.",73,[[["signal",3]]]],[11,"bitor_assign","zircon_object::signal","Adds the set of flags.",82,[[["portoptions",3]]]],[11,"bitor_assign","zircon_object::task","Adds the set of flags.",94,[[["threadflag",3]]]],[11,"bitor_assign","zircon_object::vm","Adds the set of flags.",99,[[["vmarflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",105,[[["vmoinfoflags",3]]]],[11,"bitxor_assign","zircon_object::dev","Toggles the set of flags.",52,[[["interruptflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",53,[[["interruptoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",55,[[["iommuperms",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",63,[[["resourceflags",3]]]],[11,"bitxor_assign","zircon_object::ipc","Toggles the set of flags.",69,[[["socketflags",3]]]],[11,"bitxor_assign","zircon_object::object","Toggles the set of flags.",72,[[["rights",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",73,[[["signal",3]]]],[11,"bitxor_assign","zircon_object::signal","Toggles the set of flags.",82,[[["portoptions",3]]]],[11,"bitxor_assign","zircon_object::task","Toggles the set of flags.",94,[[["threadflag",3]]]],[11,"bitxor_assign","zircon_object::vm","Toggles the set of flags.",99,[[["vmarflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",105,[[["vmoinfoflags",3]]]],[11,"drop","zircon_object::dev","",51,[[]]],[11,"drop","","",62,[[]]],[11,"drop","zircon_object::ipc","",66,[[]]],[11,"drop","","",67,[[]]],[11,"drop","","",68,[[]]],[11,"drop","zircon_object::signal","",75,[[]]],[11,"drop","zircon_object::task","",86,[[]]],[11,"drop","","",87,[[]]],[11,"drop","","",92,[[]]],[11,"drop","","Terminate the current running thread.",95,[[]]],[11,"drop","zircon_object::vm","",102,[[]]],[11,"drop","","",104,[[]]],[11,"hash","zircon_object::dev","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",55,[[]]],[11,"hash","","",63,[[]]],[11,"hash","zircon_object::ipc","",69,[[]]],[11,"hash","zircon_object::object","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","zircon_object::signal","",82,[[]]],[11,"hash","zircon_object::task","",94,[[]]],[11,"hash","zircon_object::vm","",99,[[]]],[11,"hash","","",105,[[]]],[11,"try_from","zircon_object::dev","",6,[[["u32",15]],[["result",4],["u32",15]]]],[11,"try_from","","",9,[[["u32",15]],[["result",4],["u32",15]]]],[11,"try_from","zircon_object::object","",72,[[["u32",15]],["zxresult",6]]],[11,"try_from","zircon_object::task","",35,[[["u32",15]],[["result",4],["u32",15]]]],[11,"try_from","zircon_object::vm","",44,[[["usize",15]],[["result",4],["usize",15]]]],[11,"from_iter","zircon_object::dev","",52,[[["intoiterator",8]],["interruptflags",3]]],[11,"from_iter","","",53,[[["intoiterator",8]],["interruptoptions",3]]],[11,"from_iter","","",55,[[["intoiterator",8]],["iommuperms",3]]],[11,"from_iter","","",63,[[["intoiterator",8]],["resourceflags",3]]],[11,"from_iter","zircon_object::ipc","",69,[[["intoiterator",8]],["socketflags",3]]],[11,"from_iter","zircon_object::object","",72,[[["intoiterator",8]],["rights",3]]],[11,"from_iter","","",73,[[["intoiterator",8]],["signal",3]]],[11,"from_iter","zircon_object::signal","",82,[[["intoiterator",8]],["portoptions",3]]],[11,"from_iter","zircon_object::task","",94,[[["intoiterator",8]],["threadflag",3]]],[11,"from_iter","zircon_object::vm","",99,[[["intoiterator",8]],["vmarflags",3]]],[11,"from_iter","","",105,[[["intoiterator",8]],["vmoinfoflags",3]]],[11,"from","zircon_object","",48,[[["error",4]]]],[11,"from","zircon_object::signal","",16,[[["portpacketrepr",3]]]],[11,"from","","",25,[[["portpacket",3]]]],[11,"fmt","zircon_object::dev","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",69,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",82,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",94,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",69,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",82,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",94,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",69,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",82,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",94,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",69,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",82,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",94,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"extend","zircon_object::dev","",52,[[["intoiterator",8]]]],[11,"extend","","",53,[[["intoiterator",8]]]],[11,"extend","","",55,[[["intoiterator",8]]]],[11,"extend","","",63,[[["intoiterator",8]]]],[11,"extend","zircon_object::ipc","",69,[[["intoiterator",8]]]],[11,"extend","zircon_object::object","",72,[[["intoiterator",8]]]],[11,"extend","","",73,[[["intoiterator",8]]]],[11,"extend","zircon_object::signal","",82,[[["intoiterator",8]]]],[11,"extend","zircon_object::task","",94,[[["intoiterator",8]]]],[11,"extend","zircon_object::vm","",99,[[["intoiterator",8]]]],[11,"extend","","",105,[[["intoiterator",8]]]],[11,"clone","zircon_object::dev","",52,[[],["interruptflags",3]]],[11,"clone","","",53,[[],["interruptoptions",3]]],[11,"clone","","",55,[[],["iommuperms",3]]],[11,"clone","","",5,[[],["pciedeviceinfo",3]]],[11,"clone","","",6,[[],["pcieirqmode",4]]],[11,"clone","zircon_object::dev::pci_init_args","",60,[[],["pciirqswizzlelut",3]]],[11,"clone","zircon_object::dev","",9,[[],["resourcekind",4]]],[11,"clone","","",63,[[],["resourceflags",3]]],[11,"clone","zircon_object","",48,[[],["zxerror",4]]],[11,"clone","zircon_object::ipc","",69,[[],["socketflags",3]]],[11,"clone","zircon_object::object","",11,[[],["handle",3]]],[11,"clone","","",72,[[],["rights",3]]],[11,"clone","","",73,[[],["signal",3]]],[11,"clone","zircon_object::signal","",17,[[],["packettype",4]]],[11,"clone","","",18,[[],["packetsignal",3]]],[11,"clone","","",19,[[],["packetguestbell",3]]],[11,"clone","","",20,[[],["packetguestmem",3]]],[11,"clone","","",21,[[],["packetguestio",3]]],[11,"clone","","",22,[[],["packetguestvcputype",4]]],[11,"clone","","",78,[[],["packetguestvcpudata",19]]],[11,"clone","","",79,[[],["packetguestvcpuinterrupt",3]]],[11,"clone","","",80,[[],["packetguestvcpustartup",3]]],[11,"clone","","",23,[[],["packetguestvcpu",3]]],[11,"clone","","",24,[[],["packetinterrupt",3]]],[11,"clone","","",25,[[],["portpacketrepr",3]]],[11,"clone","","",26,[[],["payloadrepr",4]]],[11,"clone","","",82,[[],["portoptions",3]]],[11,"clone","","",27,[[],["slack",4]]],[11,"clone","zircon_object::task","",85,[[],["exceptionreport",3]]],[11,"clone","","",28,[[],["exceptiontype",4]]],[11,"clone","","",89,[[],["jobpolicy",3]]],[11,"clone","","",29,[[],["setpolicyoptions",4]]],[11,"clone","","",30,[[],["basicpolicy",3]]],[11,"clone","","",31,[[],["policycondition",4]]],[11,"clone","","",32,[[],["policyaction",4]]],[11,"clone","","",90,[[],["timerslackpolicy",3]]],[11,"clone","","",33,[[],["status",4]]],[11,"clone","","",35,[[],["threadstatekind",4]]],[11,"clone","","",94,[[],["threadflag",3]]],[11,"clone","","",37,[[],["threadstate",4]]],[11,"clone","zircon_object::vm","",99,[[],["vmarflags",3]]],[11,"clone","","",105,[[],["vmoinfoflags",3]]],[11,"default","zircon_object::dev","",50,[[],["btiinfo",3]]],[11,"default","","",57,[[],["mmiopcieaddressprovider",3]]],[11,"default","","",58,[[],["piopcieaddressprovider",3]]],[11,"default","","",6,[[]]],[11,"default","","",65,[[],["resourceinfo",3]]],[11,"default","zircon_object::ipc","",10,[[],["messagepacket",3]]],[11,"default","","",69,[[],["socketflags",3]]],[11,"default","zircon_object::object","",71,[[],["handlebasicinfo",3]]],[11,"default","","",12,[[],["handleinfo",3]]],[11,"default","","",72,[[],["rights",3]]],[11,"default","","",73,[[],["signal",3]]],[11,"default","","",14,[[]]],[11,"default","zircon_object::signal","",19,[[],["packetguestbell",3]]],[11,"default","","",20,[[],["packetguestmem",3]]],[11,"default","","",21,[[],["packetguestio",3]]],[11,"default","zircon_object::task","",88,[[],["jobinfo",3]]],[11,"default","","",89,[[],["jobpolicy",3]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[],["processinfo",3]]],[11,"default","","",94,[[],["threadflag",3]]],[11,"default","","",37,[[]]],[11,"default","zircon_object::vm","",98,[[],["streaminfo",3]]],[11,"default","","",103,[[],["taskstatsinfo",3]]],[11,"default","","",46,[[],["vmoinfo",3]]],[11,"default","","",105,[[],["vmoinfoflags",3]]],[11,"initialize","","",107,[[]]],[11,"create","zircon_object::dev","Create a new bus transaction initiator.",49,[[["arc",3],["iommu",3],["u64",15]],["arc",3]]],[11,"get_info","","Get information of BTI.",49,[[],["btiinfo",3]]],[11,"pin","","Pin memory and grant access to it to the BTI.",49,[[["arc",3],["usize",15],["vmobject",3],["arc",3],["iommuperms",3]],[["zxresult",6],["arc",3]]]],[11,"release_quarantine","","Releases all quarantined PMTs.",49,[[]]],[11,"new_virtual","","Create a new virtual interrupt.",51,[[],["arc",3]]],[11,"new_physical","","Create a new physical interrupt.",51,[[["usize",15],["interruptoptions",3]],[["arc",3],["zxresult",6]]]],[11,"new_pci","","Create a new PCI interrupt.",51,[[["u32",15],["arc",3],["ipcinode",8],["bool",15]],[["arc",3],["zxresult",6]]]],[11,"bind","","Bind the interrupt object to a port.",51,[[["arc",3],["u64",15]],["zxresult",6]]],[11,"unbind","","Unbind the interrupt object from a port.",51,[[["arc",3]],["zxresult",6]]],[11,"trigger","","Triggers a virtual interrupt object.",51,[[["i64",15]],["zxresult",6]]],[11,"ack","","Acknowledge the interrupt and re-arm it.",51,[[],["zxresult",6]]],[11,"destroy","","Destroy the interrupt.",51,[[],["zxresult",6]]],[11,"wait","","Wait until the interrupt is triggered.",51,[[["arc",3]]]],[18,"VIRTUAL","","The interrupt is virtual.",52,null],[18,"UNMASK_PREWAIT","","The interrupt should be unmasked before waiting on the …",52,null],[18,"UNMASK_PREWAIT_UNLOCKED","","The same as <strong>INTERRUPT_UNMASK_PREWAIT</strong> except release the …",52,null],[18,"MASK_POSTWAIT","","The interrupt should be masked following waiting.",52,null],[11,"empty","","Returns an empty set of flags",52,[[],["interruptflags",3]]],[11,"all","","Returns the set containing all flags.",52,[[],["interruptflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",52,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",52,[[["u32",15]],[["interruptflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",52,[[["u32",15]],["interruptflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",52,[[["u32",15]],["interruptflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",52,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",52,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",52,[[["interruptflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",52,[[["interruptflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",52,[[["interruptflags",3]]]],[11,"remove","","Removes the specified flags in-place.",52,[[["interruptflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",52,[[["interruptflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",52,[[["interruptflags",3],["bool",15]]]],[18,"REMAP_IRQ","","Remap interrupt request(IRQ).",53,null],[18,"MODE_DEFAULT","","Default mode.",53,null],[18,"MODE_EDGE_LOW","","Falling edge triggered.",53,null],[18,"MODE_EDGE_HIGH","","Rising edge triggered.",53,null],[18,"MODE_LEVEL_LOW","","Low level triggered.",53,null],[18,"MODE_LEVEL_HIGH","","High level triggered.",53,null],[18,"MODE_EDGE_BOTH","","Falling/rising edge triggered.",53,null],[18,"VIRTUAL","","Virtual interrupt.",53,null],[11,"empty","","Returns an empty set of flags",53,[[],["interruptoptions",3]]],[11,"all","","Returns the set containing all flags.",53,[[],["interruptoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",53,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",53,[[["u32",15]],[["interruptoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",53,[[["u32",15]],["interruptoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",53,[[["u32",15]],["interruptoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",53,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",53,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",53,[[["interruptoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",53,[[["interruptoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",53,[[["interruptoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",53,[[["interruptoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",53,[[["interruptoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",53,[[["interruptoptions",3],["bool",15]]]],[11,"to_mode","","Extract the mode bits.",53,[[]]],[11,"create","","Create a new <code>IOMMU</code>.",54,[[],["arc",3]]],[11,"is_valid_bus_txn_id","","Check if a <code>bus_txn_id</code> is valid for this IOMMU.",54,[[],["bool",15]]],[11,"minimum_contiguity","","Returns the number of bytes that Map() can guarantee, …",54,[[],["usize",15]]],[11,"aspace_size","","The number of bytes in the address space (UINT64_MAX if …",54,[[],["usize",15]]],[11,"map","","Grant a device access to the range of pages given by […",54,[[["usize",15],["vmobject",3],["arc",3],["iommuperms",3]],["zxresult",6]]],[11,"map_contiguous","","Same as <code>map</code>, but with additional guarantee that this will …",54,[[["usize",15],["vmobject",3],["arc",3],["iommuperms",3]],["zxresult",6]]],[18,"PERM_READ","","Read Permission.",55,null],[18,"PERM_WRITE","","Write Permission.",55,null],[18,"PERM_EXECUTE","","Execute Permission.",55,null],[11,"empty","","Returns an empty set of flags",55,[[],["iommuperms",3]]],[11,"all","","Returns the set containing all flags.",55,[[],["iommuperms",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",55,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",55,[[["u32",15]],[["iommuperms",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",55,[[["u32",15]],["iommuperms",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",55,[[["u32",15]],["iommuperms",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",55,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",55,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",55,[[["iommuperms",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",55,[[["iommuperms",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",55,[[["iommuperms",3]]]],[11,"remove","","Removes the specified flags in-place.",55,[[["iommuperms",3]]]],[11,"toggle","","Toggles the specified flags in-place.",55,[[["iommuperms",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",55,[[["bool",15],["iommuperms",3]]]],[11,"add_bus_region","","Add bus region.",56,[[["pciaddrspace",4],["u64",15]],["zxresult",6]]],[11,"sub_bus_region","","Subtract bus region.",56,[[["pciaddrspace",4],["u64",15]],["zxresult",6]]],[11,"set_address_translation_provider","","A PcieAddressProvider translates a BDF address to an …",56,[[["arc",3],["pcieaddressprovider",8]],["zxresult",6]]],[11,"add_root","","Add a root bus to the driver and attempt to scan it for …",56,[[["usize",15],["pciirqswizzlelut",3]],["zxresult",6]]],[11,"start_bus_driver","","Start the bus driver.",56,[[],["zxresult",6]]],[11,"get_nth_device","","Get the “Nth” device.",56,[[["usize",15]],["zxresult",6]]],[11,"get_config","","Get a device’s config.",56,[[["usize",15]],["option",4]]],[11,"link_device_to_upstream","","Link a device to an upstream node.",56,[[["ipcinode",8],["arc",3],["weak",3]]]],[11,"find_legacy_irq_handler","","Find the legacy IRQ handler.",56,[[["u32",15]],[["arc",3],["zxresult",6]]]],[11,"add_ecam","","Add a ECAM region.",57,[[["pciecamregion",3]],["zxresult",6]]],[11,"new","","Create a new PcieDeviceKObject.",59,[[["ipcinode",8],["arc",3]],[["arc",3],["pciedevicekobject",3]]]],[11,"get_bar","","Get PcieBarInfo.",59,[[["u32",15]],[["zxresult",6],["pciebarinfo",3]]]],[11,"map_interrupt","","Map the interrupt to the IRQ.",59,[[["i32",15]],[["arc",3],["zxresult",6]]]],[11,"enable_mmio","","Enable MMIO.",59,[[],["zxresult",6]]],[11,"enable_pio","","Enable PIO.",59,[[],["zxresult",6]]],[11,"enable_master","","Enable bus mastering.",59,[[["bool",15]],["zxresult",6]]],[11,"get_irq_mode_capabilities","","Check whether <code>mode</code> is capable PCI device’s IRQ modes.",59,[[["pcieirqmode",4]],[["pcieirqmodecaps",3],["zxresult",6]]]],[11,"set_irq_mode","","Set IRQ mode.",59,[[["u32",15],["pcieirqmode",4]],["zxresult",6]]],[11,"config_read","","Read the device’s config.",59,[[["usize",15]],[["u32",15],["zxresult",6]]]],[11,"config_write","","Write the device’s config.",59,[[["usize",15],["u32",15]],["zxresult",6]]],[11,"configure_interrupt","zircon_object::dev::pci_init_args","",3,[[],["zxresult",6]]],[11,"encode_addrs","zircon_object::dev","Encode the mapped addresses.",62,[[["bool",15]],[["vec",3],["zxresult",6]]]],[11,"unpin","","Unpin pages and revoke device access to them.",62,[[]]],[18,"EXCLUSIVE","","Exclusive resource.",63,null],[11,"empty","","Returns an empty set of flags",63,[[],["resourceflags",3]]],[11,"all","","Returns the set containing all flags.",63,[[],["resourceflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",63,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",63,[[["u32",15]],[["option",4],["resourceflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",63,[[["u32",15]],["resourceflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",63,[[["u32",15]],["resourceflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",63,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",63,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",63,[[["resourceflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",63,[[["resourceflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",63,[[["resourceflags",3]]]],[11,"remove","","Removes the specified flags in-place.",63,[[["resourceflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",63,[[["resourceflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",63,[[["bool",15],["resourceflags",3]]]],[11,"create","","Create a new <code>Resource</code>.",64,[[["usize",15],["resourcekind",4],["resourceflags",3],["str",15]],["arc",3]]],[11,"validate","","Validate the resource is the given kind or it is the root …",64,[[["resourcekind",4]],["zxresult",6]]],[11,"validate_ranged_resource","","Validate the resource is the given kind or it is the root …",64,[[["usize",15],["resourcekind",4]],["zxresult",6]]],[11,"check_exclusive","","Returns <code>Err(ZxError::INVALID_ARGS)</code> if the resource is not …",64,[[["resourceflags",3]],["zxresult",6]]],[11,"get_info","","Get information of the resource.",64,[[],["resourceinfo",3]]],[11,"create","zircon_object::ipc","Create a channel and return a pair of its endpoints",66,[[]]],[11,"check_and_read","","Read a packet from the channel if check is ok, otherwise …",66,[[],[["zxresult",6],["messagepacket",3]]]],[11,"read","","Read a packet from the channel",66,[[],[["zxresult",6],["messagepacket",3]]]],[11,"write","","Write a packet to the channel",66,[[["messagepacket",3]],["zxresult",6]]],[11,"call","","Send a message to a channel and await a reply.",66,[[["arc",3],["messagepacket",3]]]],[11,"set_txid","","Set txid (the first 4 bytes)",10,[[["u32",15]]]],[11,"get_txid","","Get txid (the first 4 bytes)",10,[[],["u32",15]]],[11,"create","","Create a FIFO.",67,[[["usize",15]]]],[11,"write","","Write data to the FIFO.",67,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"read","","Read data from the FIFO.",67,[[["usize",15]],[["usize",15],["zxresult",6]]]],[18,"SHUTDOWN_WRITE","","Via this option to <code>socket_shutdown()</code>, one end of the …",69,null],[18,"SHUTDOWN_READ","","Via this option to <code>socket_shutdown()</code>, one end of the …",69,null],[18,"SHUTDOWN_MASK","","Valid flags of <code>socket_shutdown()</code>.",69,null],[18,"DATAGRAM","","Create a datagram socket. See <code>read</code> and <code>write</code> for details.",69,null],[18,"CREATE_MASK","","Valid flags of <code>socket_create()</code>.",69,null],[18,"SOCKET_PEEK","","Leave the message in the socket.",69,null],[11,"empty","","Returns an empty set of flags",69,[[],["socketflags",3]]],[11,"all","","Returns the set containing all flags.",69,[[],["socketflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",69,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",69,[[["u32",15]],[["option",4],["socketflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",69,[[["u32",15]],["socketflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",69,[[["u32",15]],["socketflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",69,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",69,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",69,[[["socketflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",69,[[["socketflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",69,[[["socketflags",3]]]],[11,"remove","","Removes the specified flags in-place.",69,[[["socketflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",69,[[["socketflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",69,[[["bool",15],["socketflags",3]]]],[11,"create","","Create a socket.",68,[[["u32",15]],["zxresult",6]]],[11,"write","","Write data to the socket. If successful, the number of …",68,[[],[["usize",15],["zxresult",6]]]],[11,"read","","Read data from the socket. If successful, the number of …",68,[[["bool",15]],[["usize",15],["zxresult",6]]]],[11,"get_info","","Get information of the socket.",68,[[],["socketinfo",3]]],[11,"shutdown","","Prevent reading or writing.",68,[[["bool",15]],["zxresult",6]]],[11,"set_read_threshold","","Set the read threshold of the socket.",68,[[["usize",15]],["zxresult",6]]],[11,"set_write_threshold","","Set the write threshold of the socket.",68,[[["usize",15]],["zxresult",6]]],[11,"get_rx_tx_threshold","","Get the read and write thresholds of the socket.",68,[[]]],[11,"new","zircon_object::object","Create a new handle referring to the given object with …",11,[[["rights",3],["arc",3],["kernelobject",8]]]],[11,"get_info","","Get information about the provided handle and the object …",11,[[],["handlebasicinfo",3]]],[11,"get_handle_info","","Get information about the handle itself.",11,[[],["handleinfo",3]]],[18,"DUPLICATE","","Allows handle duplication via <code>zx_handle_duplicate()</code>.",72,null],[18,"TRANSFER","","Allows handle transfer via <code>zx_channel_write()</code>.",72,null],[18,"READ","","Allows reading of data from containers (channels, …",72,null],[18,"WRITE","","Allows writing of data to containers (channels, sockets, …",72,null],[18,"EXECUTE","","Allows mapping as executable if <code>Rights::MAP</code> is also …",72,null],[18,"MAP","","Allows mapping of a VM object into an address space.",72,null],[18,"GET_PROPERTY","","Allows property inspection via <code>zx_object_get_property()</code>.",72,null],[18,"SET_PROPERTY","","Allows property modification via <code>zx_object_set_property()</code>.",72,null],[18,"ENUMERATE","","Allows enumerating child objects via <code>zx_object_get_info()</code> …",72,null],[18,"DESTROY","","Allows termination of task objects via <code>zx_task_kill()</code>.",72,null],[18,"SET_POLICY","","Allows policy modification via <code>zx_job_set_policy()</code>.",72,null],[18,"GET_POLICY","","Allows policy inspection via <code>zx_job_get_policy()</code>.",72,null],[18,"SIGNAL","","Allows use of <code>zx_object_signal()</code>.",72,null],[18,"SIGNAL_PEER","","Allows use of <code>zx_object_signal_peer()</code>.",72,null],[18,"WAIT","","Allows use of <code>zx_object_wait_one()</code>, <code>zx_object_wait_many()</code>…",72,null],[18,"INSPECT","","Allows inspection via <code>zx_object_get_info()</code>.",72,null],[18,"MANAGE_JOB","","Allows creation of processes, subjobs, etc.",72,null],[18,"MANAGE_PROCESS","","Allows creation of threads, etc.",72,null],[18,"MANAGE_THREAD","","Allows suspending/resuming threads, etc.",72,null],[18,"APPLY_PROFILE","","Not used.",72,null],[18,"SAME_RIGHTS","","Used to duplicate a handle with the same rights.",72,null],[18,"BASIC","","TRANSFER | DUPLICATE | WAIT | INSPECT",72,null],[18,"IO","","READ ｜ WRITE",72,null],[18,"PROPERTY","","GET_PROPERTY ｜ SET_PROPERTY",72,null],[18,"POLICY","","GET_POLICY ｜ SET_POLICY",72,null],[18,"DEFAULT_CHANNEL","","BASIC & !Self::DUPLICATE | IO | SIGNAL | SIGNAL_PEER",72,null],[18,"DEFAULT_PROCESS","","BASIC | IO | PROPERTY | ENUMERATE | DESTROY | SIGNAL | …",72,null],[18,"DEFAULT_THREAD","","BASIC | IO | PROPERTY | DESTROY | SIGNAL | MANAGE_THREAD",72,null],[18,"DEFAULT_VMO","","BASIC | IO | PROPERTY | MAP | SIGNAL",72,null],[18,"DEFAULT_VMAR","","BASIC | WAIT",72,null],[18,"DEFAULT_JOB","","BASIC | IO | PROPERTY | POLICY | ENUMERATE | DESTROY | …",72,null],[18,"DEFAULT_RESOURCE","","TRANSFER | DUPLICATE | WRITE | INSPECT",72,null],[18,"DEFAULT_DEBUGLOG","","BASIC | WRITE | SIGNAL",72,null],[18,"DEFAULT_SUSPEND_TOKEN","","TRANSFER | INSPECT",72,null],[18,"DEFAULT_PORT","","(BASIC & !WAIT) | IO",72,null],[18,"DEFAULT_TIMER","","BASIC | WRITE | SIGNAL",72,null],[18,"DEFAULT_EVENT","","BASIC | SIGNAL",72,null],[18,"DEFAULT_EVENTPAIR","","BASIC | SIGNAL ｜ SIGNAL_PEER",72,null],[18,"DEFAULT_FIFO","","BASIC | IO | SIGNAL | SIGNAL_PEER",72,null],[18,"DEFAULT_SOCKET","","BASIC | IO | PROPERTY | SIGNAL | SIGNAL_PEER",72,null],[18,"DEFAULT_STREAM","","BASIC | PROPERTY | SIGNAL",72,null],[18,"DEFAULT_BTI","","(BASIC & !WAIT) | IO | MAP",72,null],[18,"DEFAULT_INTERRUPT","","BASIC | IO | SIGNAL",72,null],[18,"DEFAULT_DEVICE","","BASIC | IO",72,null],[18,"DEFAULT_PCI_INTERRUPT","","BASIC | IO | SIGNAL",72,null],[18,"DEFAULT_EXCEPTION","","TRANSFER | PROPERTY | INSPECT",72,null],[18,"DEFAULT_GUEST","","TRANSFER | DUPLICATE | WRITE | INSPECT | MANAGE_PROCESS",72,null],[18,"DEFAULT_VCPU","","BASIC | IO | EXECUTE | SIGNAL",72,null],[11,"empty","","Returns an empty set of flags",72,[[],["rights",3]]],[11,"all","","Returns the set containing all flags.",72,[[],["rights",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",72,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",72,[[["u32",15]],[["option",4],["rights",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",72,[[["u32",15]],["rights",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",72,[[["u32",15]],["rights",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",72,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",72,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",72,[[["rights",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",72,[[["rights",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",72,[[["rights",3]]]],[11,"remove","","Removes the specified flags in-place.",72,[[["rights",3]]]],[11,"toggle","","Toggles the specified flags in-place.",72,[[["rights",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",72,[[["rights",3],["bool",15]]]],[18,"READABLE","","",73,null],[18,"WRITABLE","","",73,null],[18,"PEER_CLOSED","","",73,null],[18,"SIGNALED","","",73,null],[18,"HANDLE_CLOSED","","",73,null],[18,"KERNEL_ALL","","",73,null],[18,"USER_ALL","","",73,null],[18,"CLOCK_STARTED","","",73,null],[18,"SOCKET_PEER_WRITE_DISABLED","","",73,null],[18,"SOCKET_WRITE_DISABLED","","",73,null],[18,"SOCKET_CONTROL_READABLE","","",73,null],[18,"SOCKET_CONTROL_WRITABLE","","",73,null],[18,"SCOEKT_ACCEPT","","",73,null],[18,"SOCKET_SHARE","","",73,null],[18,"SOCKET_READ_THRESHOLD","","",73,null],[18,"SOCKET_WRITE_THRESHOLD","","",73,null],[18,"TASK_TERMINATED","","",73,null],[18,"JOB_TERMINATED","","",73,null],[18,"JOB_NO_JOBS","","",73,null],[18,"JOB_NO_PROCESSES","","",73,null],[18,"PROCESS_TERMINATED","","",73,null],[18,"THREAD_TERMINATED","","",73,null],[18,"THREAD_RUNNING","","",73,null],[18,"THREAD_SUSPENDED","","",73,null],[18,"VMO_ZERO_CHILDREN","","",73,null],[18,"INTERRUPT_SIGNAL","","",73,null],[18,"SIGCHLD","","",73,null],[18,"USER_SIGNAL_0","","",73,null],[18,"USER_SIGNAL_1","","",73,null],[18,"USER_SIGNAL_2","","",73,null],[18,"USER_SIGNAL_3","","",73,null],[18,"USER_SIGNAL_4","","",73,null],[18,"USER_SIGNAL_5","","",73,null],[18,"USER_SIGNAL_6","","",73,null],[18,"USER_SIGNAL_7","","",73,null],[11,"empty","","Returns an empty set of flags",73,[[],["signal",3]]],[11,"all","","Returns the set containing all flags.",73,[[],["signal",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",73,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",73,[[["u32",15]],[["signal",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",73,[[["u32",15]],["signal",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",73,[[["u32",15]],["signal",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",73,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",73,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",73,[[["signal",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",73,[[["signal",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",73,[[["signal",3]]]],[11,"remove","","Removes the specified flags in-place.",73,[[["signal",3]]]],[11,"toggle","","Toggles the specified flags in-place.",73,[[["signal",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",73,[[["bool",15],["signal",3]]]],[11,"verify_user_signal","","Verify whether <code>number</code> only sets the bits specified in …",73,[[["u32",15],["signal",3]],[["zxresult",6],["signal",3]]]],[11,"new","zircon_object::signal","Create a new <code>Event</code>.",74,[[],["arc",3]]],[11,"create","","Create a pair of event.",75,[[]]],[11,"peer","","Get the peer event.",75,[[],[["arc",3],["zxresult",6]]]],[11,"new","","Create a new Futex.",76,[[["atomici32",3]],["arc",3]]],[11,"wait","","Wait on a futex.",76,[[["arc",3],["i32",15]]]],[11,"wake","","Wake some number of threads waiting on a futex.",76,[[["usize",15]],["usize",15]]],[11,"owner","","Get the owner of the futex.",76,[[],[["arc",3],["option",4]]]],[11,"wait_with_owner","","Wait on a futex.",76,[[["arc",3],["i32",15],["arc",3],["option",4]]]],[11,"wake_single_owner","","Wake exactly one thread from the futex wait queue.",76,[[]]],[11,"requeue","","Requeuing is a generalization of waking.",76,[[["usize",15],["arc",3],["i32",15],["arc",3],["option",4]],["zxresult",6]]],[11,"new","","Create a new <code>Port</code>.",81,[[["u32",15]],[["arc",3],["zxresult",6]]]],[11,"push","","Push a <code>packet</code> into the port.",81,[[]]],[11,"push_user","","Push a <code>User</code> type <code>packet</code> into the port.",81,[[],["zxresult",6]]],[11,"wait","","Asynchronous wait until at least one packet is available, …",81,[[["arc",3]]]],[11,"can_bind_to_interrupt","","Check whether the port can be bound to an interrupt.",81,[[],["bool",15]]],[18,"BIND_TO_INTERUPT","","Allow this port to be bound to an interrupt.",82,null],[11,"empty","","Returns an empty set of flags",82,[[],["portoptions",3]]],[11,"all","","Returns the set containing all flags.",82,[[],["portoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",82,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",82,[[["u32",15]],[["portoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",82,[[["u32",15]],["portoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",82,[[["u32",15]],["portoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",82,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",82,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",82,[[["portoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",82,[[["portoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",82,[[["portoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",82,[[["portoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",82,[[["portoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",82,[[["bool",15],["portoptions",3]]]],[11,"new","","Create a new <code>Timer</code>.",83,[[],["arc",3]]],[11,"with_slack","","Create a new <code>Timer</code> with slack.",83,[[["slack",4]],["arc",3]]],[11,"one_shot","","Create a one-shot timer.",83,[[["duration",3]],["arc",3]]],[11,"set","","Starts a one-shot timer that will fire when <code>deadline</code> …",83,[[["arc",3],["duration",3]]]],[11,"cancel","","Cancel the pending timer started by <code>set</code>.",83,[[]]],[11,"create_channel","zircon_object::task","Create an exception channel endpoint for user.",84,[[["rights",3]],[["zxresult",6],["arc",3]]]],[11,"is_synth","","Is the exception type generated by kernel instead of the …",28,[[],["bool",15]]],[11,"get_thread_handle","","Create a handle for the exception’s thread.",86,[[],["handle",3]]],[11,"get_process_handle","","Create a handle for the exception’s process.",86,[[],[["handle",3],["zxresult",6]]]],[11,"state","","Get whether closing the exception handle will finish …",86,[[],["u32",15]]],[11,"set_state","","Set whether closing the exception handle will finish …",86,[[["u32",15]],["zxresult",6]]],[11,"strategy","","Get whether the debugger gets a ‘second chance’ at …",86,[[],["u32",15]]],[11,"set_strategy","","Set whether the debugger gets a ‘second chance’ at …",86,[[["u32",15]],["zxresult",6]]],[11,"root","","Create the root job.",87,[[],["arc",3]]],[11,"create_child","","Create a new child job object.",87,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"policy","","Get the policy of the job.",87,[[],["jobpolicy",3]]],[11,"parent","","Get the parent job.",87,[[],[["arc",3],["option",4]]]],[11,"set_policy_basic","","Sets one or more security and/or resource policies to an …",87,[[["setpolicyoptions",4]],["zxresult",6]]],[11,"set_policy_timer_slack","","Sets timer slack policy to an empty job.",87,[[["timerslackpolicy",3]],["zxresult",6]]],[11,"get_info","","Get information of this job.",87,[[],["jobinfo",3]]],[11,"check_root_job","","Check whether this job is root job.",87,[[],["zxresult",6]]],[11,"process_ids","","Get KoIDs of Processes.",87,[[],[["koid",6],["vec",3]]]],[11,"children_ids","","Get KoIDs of children Jobs.",87,[[],[["koid",6],["vec",3]]]],[11,"is_empty","","Return true if this job has no processes and no child …",87,[[],["bool",15]]],[11,"get_action","","Get the action of a policy <code>condition</code>.",89,[[["policycondition",4]],[["option",4],["policyaction",4]]]],[11,"apply","","Apply a basic policy.",89,[[["basicpolicy",3]]]],[11,"merge","","Merge the policy with <code>parent</code>’s.",89,[[]]],[11,"create","","Create a new process in the <code>job</code>.",91,[[["str",15],["arc",3]],[["arc",3],["zxresult",6]]]],[11,"create_with_ext","","Create a new process with extension info.",91,[[["str",15],["arc",3]],[["arc",3],["zxresult",6]]]],[11,"start","","Start the first thread in the process.",91,[[["usize",15],["threadfn",6],["arc",3],["handle",3],["option",4]],["zxresult",6]]],[11,"exit","","Exit current process with <code>retcode</code>. The process do not …",91,[[["i64",15]]]],[11,"check_policy","","Check whether <code>condition</code> is allowed in the parent job’s …",91,[[["policycondition",4]],["zxresult",6]]],[11,"set_critical_at_job","","Set a process as critical to the job.",91,[[["bool",15],["arc",3]],["zxresult",6]]],[11,"status","","Get process status.",91,[[],["status",4]]],[11,"ext","","Get the extension.",91,[[],["box",3]]],[11,"vmar","","Get the <code>VmAddressRegion</code> of the process.",91,[[],[["vmaddressregion",3],["arc",3]]]],[11,"job","","Get the job of the process.",91,[[],[["arc",3],["job",3]]]],[11,"add_handle","","Add a handle to the process",91,[[["handle",3]],["handlevalue",6]]],[11,"add_handles","","Add all handles to the process",91,[[["handle",3],["vec",3]],[["handlevalue",6],["vec",3]]]],[11,"remove_handle","","Remove a handle from the process",91,[[["handlevalue",6]],[["handle",3],["zxresult",6]]]],[11,"remove_handles","","Remove all handles from the process.",91,[[],[["zxresult",6],["vec",3]]]],[11,"remove_object","","Remove a handle referring to a kernel object of the given …",91,[[["handlevalue",6]],[["zxresult",6],["arc",3]]]],[11,"get_futex","","Get a futex from the process",91,[[["atomici32",3]],[["arc",3],["futex",3]]]],[11,"dup_handle_operating_rights","","Duplicate a handle with new <code>rights</code>, return the new handle …",91,[[["handlevalue",6]],[["handlevalue",6],["zxresult",6]]]],[11,"get_object_with_rights","","Get the kernel object corresponding to this <code>handle_value</code>, …",91,[[["rights",3],["handlevalue",6]],[["zxresult",6],["arc",3]]]],[11,"get_object_and_rights","","Get the kernel object corresponding to this <code>handle_value</code> …",91,[[["handlevalue",6]],["zxresult",6]]],[11,"get_dyn_object_with_rights","","Get the kernel object corresponding to this <code>handle_value</code>, …",91,[[["rights",3],["handlevalue",6]],[["arc",3],["zxresult",6]]]],[11,"get_dyn_object_and_rights","","Get the kernel object corresponding to this <code>handle_value</code> …",91,[[["handlevalue",6]],["zxresult",6]]],[11,"get_object","","Get the kernel object corresponding to this <code>handle_value</code>",91,[[["handlevalue",6]],[["zxresult",6],["arc",3]]]],[11,"get_handle_info","","Get the handle’s information corresponding to …",91,[[["handlevalue",6]],[["zxresult",6],["handlebasicinfo",3]]]],[11,"get_info","","Get information of this process.",91,[[],["processinfo",3]]],[11,"set_debug_addr","","Set the debug address.",91,[[["usize",15]]]],[11,"get_debug_addr","","Get the debug address.",91,[[],["usize",15]]],[11,"set_dyn_break_on_load","","Set the address where the dynamic loader will issue a …",91,[[["usize",15]]]],[11,"get_dyn_break_on_load","","Get the address where the dynamic loader will issue a …",91,[[],["usize",15]]],[11,"get_cancel_token","","Get an one-shot <code>Receiver</code> for receiving cancel message of …",91,[[["handlevalue",6]],[["zxresult",6],["receiver",3]]]],[11,"thread_ids","","Get KoIDs of Threads.",91,[[],[["koid",6],["vec",3]]]],[11,"wait_for_exit","","Wait for process exit and get return code.",91,[[["arc",3]]]],[11,"create","","Create a <code>SuspendToken</code> which can suspend the given task.",92,[[["arc",3]],["arc",3]]],[18,"VCPU","","The thread currently has a VCPU.",94,null],[11,"empty","","Returns an empty set of flags",94,[[],["threadflag",3]]],[11,"all","","Returns the set containing all flags.",94,[[],["threadflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",94,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",94,[[["usize",15]],[["threadflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",94,[[["usize",15]],["threadflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",94,[[["usize",15]],["threadflag",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",94,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",94,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",94,[[["threadflag",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",94,[[["threadflag",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",94,[[["threadflag",3]]]],[11,"remove","","Removes the specified flags in-place.",94,[[["threadflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",94,[[["threadflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",94,[[["bool",15],["threadflag",3]]]],[11,"create","","Create a new thread.",93,[[["str",15],["arc",3]],[["arc",3],["zxresult",6]]]],[11,"create_with_ext","","Create a new thread with extension info.",93,[[["str",15],["arc",3]],[["arc",3],["zxresult",6]]]],[11,"proc","","Get the process.",93,[[],["arc",3]]],[11,"ext","","Get the extension info.",93,[[],["box",3]]],[11,"start","","Start execution on the thread.",93,[[["arc",3],["usize",15],["threadfn",6]],["zxresult",6]]],[11,"start_with_regs","","Start execution with given registers.",93,[[["arc",3],["generalregs",3],["threadfn",6]],["zxresult",6]]],[11,"read_state","","Read one aspect of thread state.",93,[[["threadstatekind",4]],[["usize",15],["zxresult",6]]]],[11,"write_state","","Write one aspect of thread state.",93,[[["threadstatekind",4]],["zxresult",6]]],[11,"get_thread_info","","Get the thread’s information.",93,[[],["threadinfo",3]]],[11,"get_thread_exception_info","","Get the thread’s exception report.",93,[[],[["exceptionreport",3],["zxresult",6]]]],[11,"state","","Get the thread state.",93,[[],["threadstate",4]]],[11,"time_add","","Add the parameter to the time this thread has run on cpu.",93,[[["u128",15]]]],[11,"get_time","","Get the time this thread has run on cpu.",93,[[],["u64",15]]],[11,"is_first_thread","","Whether this thread is the first thread of a process.",93,[[],["bool",15]]],[11,"flags","","Get the thread’s flags.",93,[[],["threadflag",3]]],[11,"update_flags","","Apply <code>f</code> to the thread’s flags.",93,[[]]],[11,"set_fsbase","","Set the thread local fsbase register on x86_64.",93,[[["usize",15]],["zxresult",6]]],[11,"set_gsbase","","Set the thread local gsbase register on x86_64.",93,[[["usize",15]],["zxresult",6]]],[11,"exit","","Exit the current thread.",95,[[]]],[11,"wait_for_run","","Wait until the thread is ready to run (not suspended), …",95,[[]]],[11,"end_running","","The thread ends running and takes back the context.",95,[[["box",3],["usercontext",3]]]],[11,"with_context","","Access saved context of current thread.",95,[[]]],[11,"blocking_run","","Run async future and change state while blocking.",95,[[["option",4],["duration",3],["receiver",3],["threadstate",4]]]],[11,"handle_exception","","Create an exception on this thread and wait for the …",95,[[["exceptiontype",4]]]],[11,"create","zircon_object::vm","Create a stream from a VMO",97,[[["usize",15],["u32",15],["vmobject",3],["arc",3]],["arc",3]]],[11,"read","","Read data from the stream at the current seek offset",97,[[],[["usize",15],["zxresult",6]]]],[11,"read_at","","Read data from the stream at a given offset",97,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"write","","write data to the stream at the current seek offset or …",97,[[["bool",15]],[["usize",15],["zxresult",6]]]],[11,"write_at","","Write data to the stream at a given offset",97,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"seek","","Modify the current seek offset of the stream",97,[[["seekorigin",4],["isize",15]],[["usize",15],["zxresult",6]]]],[11,"get_info","","Get information of the socket.",97,[[],["streaminfo",3]]],[18,"COMPACT","","When randomly allocating subregions, reduce sprawl by …",99,null],[18,"SPECIFIC","","Request that the new region be at the specified offset in …",99,null],[18,"SPECIFIC_OVERWRITE","","Like SPECIFIC, but permits overwriting existing mappings. …",99,null],[18,"CAN_MAP_SPECIFIC","","Allow VmMappings to be created inside the new region with …",99,null],[18,"CAN_MAP_READ","","Allow VmMappings to be created inside the region with …",99,null],[18,"CAN_MAP_WRITE","","Allow VmMappings to be created inside the region with …",99,null],[18,"CAN_MAP_EXECUTE","","Allow VmMappings to be created inside the region with …",99,null],[18,"REQUIRE_NON_RESIZABLE","","Require that VMO backing the mapping is non-resizable.",99,null],[18,"ALLOW_FAULTS","","Treat the offset as an upper limit when allocating a VMO …",99,null],[18,"CAN_MAP_RXW","","Allow VmMappings to be created inside the region with …",99,null],[18,"ROOT_FLAGS","","Creation flags for root VmAddressRegion",99,null],[11,"empty","","Returns an empty set of flags",99,[[],["vmarflags",3]]],[11,"all","","Returns the set containing all flags.",99,[[],["vmarflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",99,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",99,[[["u32",15]],[["vmarflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",99,[[["u32",15]],["vmarflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",99,[[["u32",15]],["vmarflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",99,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",99,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",99,[[["vmarflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",99,[[["vmarflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",99,[[["vmarflags",3]]]],[11,"remove","","Removes the specified flags in-place.",99,[[["vmarflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",99,[[["vmarflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",99,[[["vmarflags",3],["bool",15]]]],[11,"new_root","","Create a new root VMAR.",100,[[],["arc",3]]],[11,"new_kernel","","Create a kernel root VMAR.",100,[[],["arc",3]]],[11,"allocate_at","","Create a child VMAR at the <code>offset</code>.",100,[[["arc",3],["usize",15],["vmarflags",3]],[["arc",3],["zxresult",6]]]],[11,"allocate","","Create a child VMAR with optional <code>offset</code>.",100,[[["arc",3],["usize",15],["vmarflags",3],["option",4]],[["arc",3],["zxresult",6]]]],[11,"map_at","","Map the <code>vmo</code> into this VMAR at given <code>offset</code>.",100,[[["usize",15],["vmobject",3],["mmuflags",3],["arc",3]],[["virtaddr",6],["zxresult",6]]]],[11,"map","","Map the <code>vmo</code> into this VMAR.",100,[[["usize",15],["vmobject",3],["mmuflags",3],["arc",3],["option",4]],[["virtaddr",6],["zxresult",6]]]],[11,"map_ext","","Map the <code>vmo</code> into this VMAR.",100,[[["usize",15],["vmobject",3],["mmuflags",3],["arc",3],["option",4],["bool",15]],[["virtaddr",6],["zxresult",6]]]],[11,"unmap","","Unmaps all VMO mappings and destroys all sub-regions …",100,[[["usize",15],["virtaddr",6]],["zxresult",6]]],[11,"protect","","Change protections on a subset of the region of memory in …",100,[[["usize",15],["mmuflags",3]],["zxresult",6]]],[11,"destroy","","Unmap all mappings within the VMAR, and destroy all …",100,[[["arc",3]],["zxresult",6]]],[11,"clear","","Unmap all mappings and destroy all sub-regions of VMAR.",100,[[],["zxresult",6]]],[11,"table_phys","","Get physical address of the underlying page table.",100,[[],["physaddr",6]]],[11,"addr","","Get start address of this VMAR.",100,[[],["usize",15]]],[11,"is_dead","","Whether this VMAR is dead.",100,[[],["bool",15]]],[11,"is_alive","","Whether this VMAR is alive.",100,[[],["bool",15]]],[11,"get_info","","Get information of this VmAddressRegion",100,[[],["vmarinfo",3]]],[11,"get_flags","","Get VmarFlags of this VMAR.",100,[[],["vmarflags",3]]],[11,"dump","","Dump all mappings recursively.",100,[[]]],[11,"vdso_base_addr","","Get base address of vdso.",100,[[],[["usize",15],["option",4]]]],[11,"handle_page_fault","","Handle page fault happened on this VMAR.",100,[[["mmuflags",3],["virtaddr",6]],["zxresult",6]]],[11,"fork_from","","Clone the entire address space and VMOs from source VMAR. …",100,[[["arc",3]],["zxresult",6]]],[11,"get_task_stats","","Returns statistics about memory used by a task.",100,[[],["taskstatsinfo",3]]],[11,"read_memory","","Read from address space.",100,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"write_memory","","Write to address space.",100,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"find_mapping","","Find mapping of vaddr",100,[[["usize",15]],[["option",4],["arc",3]]]],[11,"get_flags","","Get MMUFlags of this VmMapping.",102,[[["usize",15]],[["zxresult",6],["mmuflags",3]]]],[11,"append_mapping","","Append a mapping to the VMO’s mapping list.",45,[[["weak",3],["vmmapping",3]]]],[11,"remove_mapping","","Remove a mapping from the VMO’s mapping list.",45,[[["weak",3],["vmmapping",3]]]],[11,"pin","","Pin the given range of the VMO.",45,[[["usize",15]],["zxresult",6]]],[11,"unpin","","Unpin the given range of the VMO.",45,[[["usize",15]],["zxresult",6]]],[11,"is_contiguous","","Returns true if the object is backed by a contiguous …",45,[[],["bool",15]]],[11,"is_paged","","Returns true if the object is backed by RAM.",45,[[],["bool",15]]],[11,"new_paged","","Create a new VMO backing on physical memory allocated in …",104,[[["usize",15]],["arc",3]]],[11,"new_paged_with_resizable","","Create a new VMO, which can be resizable, backing on …",104,[[["bool",15],["usize",15]],["arc",3]]],[11,"new_physical","","Create a new VMO representing a piece of contiguous …",104,[[["usize",15],["physaddr",6]],["arc",3]]],[11,"new_contiguous","","Create a VM object referring to a specific contiguous …",104,[[["usize",15]],[["arc",3],["zxresult",6]]]],[11,"create_child","","Create a child VMO.",104,[[["arc",3],["usize",15],["bool",15]],[["arc",3],["zxresult",6]]]],[11,"create_slice","","Create a child slice as an VMO",104,[[["arc",3],["usize",15]],[["arc",3],["zxresult",6]]]],[11,"set_len","","Set the length of this VMO if resizable.",104,[[["usize",15]],["zxresult",6]]],[11,"set_content_size_and_resize","","Set the size of the content stored in the VMO in bytes, …",104,[[["usize",15]],[["usize",15],["zxresult",6]]]],[11,"content_size","","Get the size of the content stored in the VMO in bytes.",104,[[],["usize",15]]],[11,"set_content_size","","Get the size of the content stored in the VMO in bytes.",104,[[["usize",15]],["zxresult",6]]],[11,"get_info","","Get information of this VMO.",104,[[],["vmoinfo",3]]],[11,"set_cache_policy","","Set the cache policy.",104,[[["cachepolicy",4]],["zxresult",6]]],[11,"append_mapping","","Append a mapping to the VMO’s mapping list.",104,[[["weak",3],["vmmapping",3]]]],[11,"remove_mapping","","Remove a mapping from the VMO’s mapping list.",104,[[["weak",3],["vmmapping",3]]]],[11,"share_count","","Returns an estimate of the number of unique VmAspaces …",104,[[],["usize",15]]],[11,"is_resizable","","Returns true if the object size can be changed.",104,[[],["bool",15]]],[11,"is_contiguous","","Returns true if the object is backed by a contiguous …",104,[[],["bool",15]]],[18,"TYPE_PHYSICAL","","The VMO points to a physical address range, and does not …",105,null],[18,"TYPE_PAGED","","The VMO is backed by RAM, consuming memory. Mutually …",105,null],[18,"RESIZABLE","","The VMO is resizable.",105,null],[18,"IS_COW_CLONE","","The VMO is a child, and is a copy-on-write clone.",105,null],[18,"VIA_HANDLE","","When reading a list of VMOs pointed to by a process, …",105,null],[18,"VIA_MAPPING","","When reading a list of VMOs pointed to by a process, …",105,null],[18,"PAGER_BACKED","","The VMO is a pager owned VMO created by …",105,null],[18,"CONTIGUOUS","","The VMO is contiguous.",105,null],[11,"empty","","Returns an empty set of flags",105,[[],["vmoinfoflags",3]]],[11,"all","","Returns the set containing all flags.",105,[[],["vmoinfoflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",105,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",105,[[["u32",15]],[["vmoinfoflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",105,[[["u32",15]],["vmoinfoflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",105,[[["u32",15]],["vmoinfoflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",105,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",105,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",105,[[["vmoinfoflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",105,[[["vmoinfoflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",105,[[["vmoinfoflags",3]]]],[11,"remove","","Removes the specified flags in-place.",105,[[["vmoinfoflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",105,[[["vmoinfoflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",105,[[["bool",15],["vmoinfoflags",3]]]],[18,"CACHE_1","","",106,null],[18,"CACHE_2","","",106,null],[18,"READ","","",106,null],[18,"WRITE","","",106,null],[18,"EXECUTE","","",106,null],[18,"USER","","",106,null],[18,"RXW","","",106,null],[11,"empty","","Returns an empty set of flags",106,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",106,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",106,[[],["usize",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",106,[[["usize",15]],[["option",4],["mmuflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",106,[[["usize",15]],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",106,[[["usize",15]],["mmuflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",106,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",106,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",106,[[["mmuflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",106,[[["mmuflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",106,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",106,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",106,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",106,[[["bool",15],["mmuflags",3]]]]],"p":[[3,"DebugLog"],[4,"Severity"],[3,"PciInitArgsIrqs"],[3,"PciInitArgsHeader"],[3,"PciInitArgsAddrWindows"],[3,"PcieDeviceInfo"],[4,"PcieIrqMode"],[4,"PciAddrSpace"],[3,"PciEcamRegion"],[4,"ResourceKind"],[3,"MessagePacket"],[3,"Handle"],[3,"HandleInfo"],[8,"KernelObject"],[3,"KObjectBase"],[3,"DummyObject"],[3,"PortPacket"],[4,"PacketType"],[3,"PacketSignal"],[3,"PacketGuestBell"],[3,"PacketGuestMem"],[3,"PacketGuestIo"],[4,"PacketGuestVcpuType"],[3,"PacketGuestVcpu"],[3,"PacketInterrupt"],[3,"PortPacketRepr"],[4,"PayloadRepr"],[4,"Slack"],[4,"ExceptionType"],[4,"SetPolicyOptions"],[3,"BasicPolicy"],[4,"PolicyCondition"],[4,"PolicyAction"],[4,"Status"],[3,"ProcessInfo"],[4,"ThreadStateKind"],[8,"IntoResult"],[4,"ThreadState"],[8,"Task"],[8,"VmarExt"],[8,"ElfExt"],[3,"KCounter"],[3,"KCounterDescriptor"],[3,"KCounterDescriptorArray"],[4,"SeekOrigin"],[8,"VMObjectTrait"],[3,"VmoInfo"],[4,"CachePolicy"],[4,"ZxError"],[3,"BusTransactionInitiator"],[3,"BtiInfo"],[3,"Interrupt"],[3,"InterruptFlags"],[3,"InterruptOptions"],[3,"Iommu"],[3,"IommuPerms"],[3,"PCIeBusDriver"],[3,"MmioPcieAddressProvider"],[3,"PioPcieAddressProvider"],[3,"PcieDeviceKObject"],[3,"PciIrqSwizzleLut"],[3,"MappedEcamRegion"],[3,"PinnedMemoryToken"],[3,"ResourceFlags"],[3,"Resource"],[3,"ResourceInfo"],[3,"Channel"],[3,"Fifo"],[3,"Socket"],[3,"SocketFlags"],[3,"SocketInfo"],[3,"HandleBasicInfo"],[3,"Rights"],[3,"Signal"],[3,"Event"],[3,"EventPair"],[3,"Futex"],[19,"Payload"],[19,"PacketGuestVcpuData"],[3,"PacketGuestVcpuInterrupt"],[3,"PacketGuestVcpuStartup"],[3,"Port"],[3,"PortOptions"],[3,"Timer"],[3,"Exceptionate"],[3,"ExceptionReport"],[3,"ExceptionObject"],[3,"Job"],[3,"JobInfo"],[3,"JobPolicy"],[3,"TimerSlackPolicy"],[3,"Process"],[3,"SuspendToken"],[3,"Thread"],[3,"ThreadFlag"],[3,"CurrentThread"],[3,"ThreadInfo"],[3,"Stream"],[3,"StreamInfo"],[3,"VmarFlags"],[3,"VmAddressRegion"],[3,"VmarInfo"],[3,"VmMapping"],[3,"TaskStatsInfo"],[3,"VmObject"],[3,"VmoInfoFlags"],[3,"MMUFlags"],[3,"KERNEL_ASPACE"],[6,"ZxResult"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);